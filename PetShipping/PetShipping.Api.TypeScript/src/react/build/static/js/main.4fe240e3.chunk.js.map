{"version":3,"sources":["constants.tsx","components/dashboard.tsx","components/header.tsx","api/models.ts","components/airline/airlineViewModel.tsx","components/airline/airlineMapper.tsx","components/airline/airlineCreateForm.tsx","components/airline/airlineDetailForm.tsx","components/airline/airlineEditForm.tsx","components/airline/airlineSearchForm.tsx","components/handler/handlerViewModel.tsx","components/airTransport/airTransportViewModel.tsx","components/airTransport/airTransportMapper.tsx","components/airTransport/airTransportCreateForm.tsx","components/airTransport/airTransportDetailForm.tsx","components/airTransport/airTransportEditForm.tsx","components/airTransport/airTransportSearchForm.tsx","components/species/speciesViewModel.tsx","components/breed/breedViewModel.tsx","components/breed/breedMapper.tsx","components/breed/breedCreateForm.tsx","components/pet/petViewModel.tsx","components/pet/petMapper.tsx","components/shared/petTable.tsx","components/breed/breedDetailForm.tsx","components/breed/breedEditForm.tsx","components/breed/breedSearchForm.tsx","components/country/countryViewModel.tsx","components/country/countryMapper.tsx","components/country/countryCreateForm.tsx","components/countryRequirement/countryRequirementViewModel.tsx","components/countryRequirement/countryRequirementMapper.tsx","components/shared/countryRequirementTable.tsx","components/destination/destinationViewModel.tsx","components/destination/destinationMapper.tsx","components/shared/destinationTable.tsx","components/country/countryDetailForm.tsx","components/country/countryEditForm.tsx","components/country/countrySearchForm.tsx","components/countryRequirement/countryRequirementCreateForm.tsx","components/countryRequirement/countryRequirementDetailForm.tsx","components/countryRequirement/countryRequirementEditForm.tsx","components/countryRequirement/countryRequirementSearchForm.tsx","components/customer/customerViewModel.tsx","components/customer/customerMapper.tsx","components/customer/customerCreateForm.tsx","components/employee/employeeViewModel.tsx","components/customerCommunication/customerCommunicationViewModel.tsx","components/customerCommunication/customerCommunicationMapper.tsx","components/shared/customerCommunicationTable.tsx","components/customer/customerDetailForm.tsx","components/customer/customerEditForm.tsx","components/customer/customerSearchForm.tsx","components/customerCommunication/customerCommunicationCreateForm.tsx","components/customerCommunication/customerCommunicationDetailForm.tsx","components/customerCommunication/customerCommunicationEditForm.tsx","components/customerCommunication/customerCommunicationSearchForm.tsx","components/destination/destinationCreateForm.tsx","components/pipelineStepStatus/pipelineStepStatusViewModel.tsx","components/pipelineStep/pipelineStepViewModel.tsx","components/pipelineStepDestination/pipelineStepDestinationViewModel.tsx","components/pipelineStepDestination/pipelineStepDestinationMapper.tsx","components/shared/pipelineStepDestinationTable.tsx","components/destination/destinationDetailForm.tsx","components/destination/destinationEditForm.tsx","components/destination/destinationSearchForm.tsx","components/employee/employeeMapper.tsx","components/employee/employeeCreateForm.tsx","components/pipelineStep/pipelineStepMapper.tsx","components/shared/pipelineStepTable.tsx","components/pipelineStepNote/pipelineStepNoteViewModel.tsx","components/pipelineStepNote/pipelineStepNoteMapper.tsx","components/shared/pipelineStepNoteTable.tsx","components/employee/employeeDetailForm.tsx","components/employee/employeeEditForm.tsx","components/employee/employeeSearchForm.tsx","components/handler/handlerMapper.tsx","components/handler/handlerCreateForm.tsx","components/shared/airTransportTable.tsx","components/handlerPipelineStep/handlerPipelineStepViewModel.tsx","components/handlerPipelineStep/handlerPipelineStepMapper.tsx","components/shared/handlerPipelineStepTable.tsx","components/otherTransport/otherTransportViewModel.tsx","components/otherTransport/otherTransportMapper.tsx","components/shared/otherTransportTable.tsx","components/handler/handlerDetailForm.tsx","components/handler/handlerEditForm.tsx","components/handler/handlerSearchForm.tsx","components/handlerPipelineStep/handlerPipelineStepCreateForm.tsx","components/handlerPipelineStep/handlerPipelineStepDetailForm.tsx","components/handlerPipelineStep/handlerPipelineStepEditForm.tsx","components/handlerPipelineStep/handlerPipelineStepSearchForm.tsx","components/otherTransport/otherTransportCreateForm.tsx","components/otherTransport/otherTransportDetailForm.tsx","components/otherTransport/otherTransportEditForm.tsx","components/otherTransport/otherTransportSearchForm.tsx","components/pet/petCreateForm.tsx","components/sale/saleViewModel.tsx","components/sale/saleMapper.tsx","components/shared/saleTable.tsx","components/pet/petDetailForm.tsx","components/pet/petEditForm.tsx","components/pet/petSearchForm.tsx","components/pipelineStatus/pipelineStatusViewModel.tsx","components/pipeline/pipelineViewModel.tsx","components/pipeline/pipelineMapper.tsx","components/pipeline/pipelineCreateForm.tsx","components/pipeline/pipelineDetailForm.tsx","components/pipeline/pipelineEditForm.tsx","components/pipeline/pipelineSearchForm.tsx","components/pipelineStatus/pipelineStatusMapper.tsx","components/pipelineStatus/pipelineStatusCreateForm.tsx","components/shared/pipelineTable.tsx","components/pipelineStatus/pipelineStatusDetailForm.tsx","components/pipelineStatus/pipelineStatusEditForm.tsx","components/pipelineStatus/pipelineStatusSearchForm.tsx","components/pipelineStep/pipelineStepCreateForm.tsx","components/pipelineStepStepRequirement/pipelineStepStepRequirementViewModel.tsx","components/pipelineStepStepRequirement/pipelineStepStepRequirementMapper.tsx","components/shared/pipelineStepStepRequirementTable.tsx","components/pipelineStep/pipelineStepDetailForm.tsx","components/pipelineStep/pipelineStepEditForm.tsx","components/pipelineStep/pipelineStepSearchForm.tsx","components/pipelineStepDestination/pipelineStepDestinationCreateForm.tsx","components/pipelineStepDestination/pipelineStepDestinationDetailForm.tsx","components/pipelineStepDestination/pipelineStepDestinationEditForm.tsx","components/pipelineStepDestination/pipelineStepDestinationSearchForm.tsx","components/pipelineStepNote/pipelineStepNoteCreateForm.tsx","components/pipelineStepNote/pipelineStepNoteDetailForm.tsx","components/pipelineStepNote/pipelineStepNoteEditForm.tsx","components/pipelineStepNote/pipelineStepNoteSearchForm.tsx","components/pipelineStepStatus/pipelineStepStatusMapper.tsx","components/pipelineStepStatus/pipelineStepStatusCreateForm.tsx","components/pipelineStepStatus/pipelineStepStatusDetailForm.tsx","components/pipelineStepStatus/pipelineStepStatusEditForm.tsx","components/pipelineStepStatus/pipelineStepStatusSearchForm.tsx","components/pipelineStepStepRequirement/pipelineStepStepRequirementCreateForm.tsx","components/pipelineStepStepRequirement/pipelineStepStepRequirementDetailForm.tsx","components/pipelineStepStepRequirement/pipelineStepStepRequirementEditForm.tsx","components/pipelineStepStepRequirement/pipelineStepStepRequirementSearchForm.tsx","components/sale/saleCreateForm.tsx","components/sale/saleDetailForm.tsx","components/sale/saleEditForm.tsx","components/sale/saleSearchForm.tsx","components/species/speciesMapper.tsx","components/species/speciesCreateForm.tsx","components/shared/breedTable.tsx","components/species/speciesDetailForm.tsx","components/species/speciesEditForm.tsx","components/species/speciesSearchForm.tsx","router.tsx","index.tsx"],"names":["Constants","Object","classCallCheck","this","BaseEndpoint","process","ApiEndpoint","ApiHealthEndpoint","SwaggerEndpoint","ClientRoutes","Airlines","AirTransports","Breeds","Countries","CountryRequirements","Customers","CustomerCommunications","Destinations","Employees","Handlers","HandlerPipelineSteps","OtherTransports","Pets","Pipelines","PipelineStatus","PipelineSteps","PipelineStepDestinations","PipelineStepNotes","PipelineStepStatus","PipelineStepStepRequirements","Sales","Species","ApiRoutes","Dashboard","state","connected","connecting","_this2","setState","objectSpread","axios","get","headers","Content-Type","then","resp","console","log","error","testConnection","alert","react","es_alert","message","type","target","href","React","Header","Layout","Content","Footer","Sider","wrapperHeader","Menu","SubMenu","Component","displayName","_React$Component","WrapperHeaderComponent","_getPrototypeOf2","_this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","collapsed","onCollapse","inherits","createClass","key","value","layout","style","minHeight","collapsible","className","menu","theme","defaultSelectedKeys","mode","MenuItem_default","a","onClick","icon","Link","to","background","padding","margin","props","textAlign","AirlineClientRequestModel","id","name","AirTransportClientRequestModel","airlineId","flightNumber","handlerId","handlerIdEntity","handlerIdNavigation","landDate","pipelineStepId","takeoffDate","undefined","BreedClientRequestModel","speciesId","speciesIdEntity","speciesIdNavigation","CountryClientRequestModel","CountryRequirementClientRequestModel","countryId","countryIdEntity","countryIdNavigation","detail","CustomerClientRequestModel","email","firstName","lastName","note","phone","CustomerCommunicationClientRequestModel","customerId","customerIdEntity","customerIdNavigation","dateCreated","employeeId","employeeIdEntity","employeeIdNavigation","DestinationClientRequestModel","order","EmployeeClientRequestModel","isSalesPerson","isShipper","HandlerClientRequestModel","HandlerPipelineStepClientRequestModel","pipelineStepIdEntity","pipelineStepIdNavigation","OtherTransportClientRequestModel","PetClientRequestModel","breedId","breedIdEntity","breedIdNavigation","clientId","weight","PipelineClientRequestModel","pipelineStatusId","pipelineStatusIdEntity","pipelineStatusIdNavigation","saleId","PipelineStatusClientRequestModel","PipelineStepClientRequestModel","pipelineStepStatusId","pipelineStepStatusIdEntity","pipelineStepStatusIdNavigation","shipperId","shipperIdEntity","shipperIdNavigation","PipelineStepDestinationClientRequestModel","destinationId","destinationIdEntity","destinationIdNavigation","PipelineStepNoteClientRequestModel","PipelineStepStatusClientRequestModel","PipelineStepStepRequirementClientRequestModel","requirementMet","SaleClientRequestModel","amount","cutomerId","petId","petIdEntity","petIdNavigation","saleDate","salesPersonId","SpeciesClientRequestModel","AirlineViewModel","String","AirlineMapper","dto","response","setProperties","model","Api","AirlineCreateComponent","loading","loaded","errorOccurred","errorMessage","submitted","handleSubmit","e","preventDefault","form","validateFields","err","values","submit","mapper","post","mapViewModelToApiRequest","data","mapApiResponseToViewModel","record","_this$props$form","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","react_default","createElement","spin","size","es_form","onSubmit","Item","htmlFor","rules","required","max","input","placeholder","es_button","htmlType","WrappedAirlineCreateComponent","Form","create","AirlineDetailComponent","history","push","match","params","_this3","float","handleEditClick","WrappedAirlineDetailComponent","AirlineEditComponent","put","setFieldsValue","WrappedAirlineEditComponent","AirlineSearchComponent","deleteSubmitted","deleteSuccess","deleteResponse","records","filteredRecords","searchValue","loadRecords","row","delete","currentTarget","query","searchEndpoint","viewModels","forEach","x","_this4","errorResponse","marginBottom","es_row","col","span","onChange","handleSearchChanged","handleCreateClick","es","columns","accessor","Cell","original","handleDetailClick","handleDeleteClick","WrappedAirlineSearchComponent","HandlerViewModel","AirTransportViewModel","moment","AirTransportMapper","AirTransportCreateComponent","date_picker","format","WrappedAirTransportCreateComponent","AirTransportDetailComponent","toDisplay","WrappedAirTransportDetailComponent","AirTransportEditComponent","WrappedAirTransportEditComponent","AirTransportSearchComponent","WrappedAirTransportSearchComponent","SpeciesViewModel","BreedViewModel","BreedMapper","BreedCreateComponent","WrappedBreedCreateComponent","PetViewModel","PetMapper","PetTableComponent","apiRoute","pets","defaultPageSize","BreedDetailComponent","petTable_PetTableComponent","WrappedBreedDetailComponent","BreedEditComponent","WrappedBreedEditComponent","BreedSearchComponent","WrappedBreedSearchComponent","CountryViewModel","CountryMapper","CountryCreateComponent","WrappedCountryCreateComponent","CountryRequirementViewModel","CountryRequirementMapper","CountryRequirementTableComponent","countryRequirements","DestinationViewModel","DestinationMapper","DestinationTableComponent","destinations","CountryDetailComponent","countryRequirementTable_CountryRequirementTableComponent","destinationTable_DestinationTableComponent","WrappedCountryDetailComponent","CountryEditComponent","WrappedCountryEditComponent","CountrySearchComponent","WrappedCountrySearchComponent","CountryRequirementCreateComponent","WrappedCountryRequirementCreateComponent","CountryRequirementDetailComponent","WrappedCountryRequirementDetailComponent","CountryRequirementEditComponent","WrappedCountryRequirementEditComponent","CountryRequirementSearchComponent","WrappedCountryRequirementSearchComponent","CustomerViewModel","CustomerMapper","CustomerCreateComponent","input_number","WrappedCustomerCreateComponent","EmployeeViewModel","CustomerCommunicationViewModel","CustomerCommunicationMapper","CustomerCommunicationTableComponent","customerCommunications","CustomerDetailComponent","customerCommunicationTable_CustomerCommunicationTableComponent","WrappedCustomerDetailComponent","CustomerEditComponent","WrappedCustomerEditComponent","CustomerSearchComponent","WrappedCustomerSearchComponent","CustomerCommunicationCreateComponent","WrappedCustomerCommunicationCreateComponent","CustomerCommunicationDetailComponent","WrappedCustomerCommunicationDetailComponent","CustomerCommunicationEditComponent","WrappedCustomerCommunicationEditComponent","CustomerCommunicationSearchComponent","WrappedCustomerCommunicationSearchComponent","DestinationCreateComponent","WrappedDestinationCreateComponent","PipelineStepStatusViewModel","PipelineStepViewModel","PipelineStepDestinationViewModel","PipelineStepDestinationMapper","PipelineStepDestinationTableComponent","pipelineStepDestinations","DestinationDetailComponent","pipelineStepDestinationTable_PipelineStepDestinationTableComponent","WrappedDestinationDetailComponent","DestinationEditComponent","WrappedDestinationEditComponent","DestinationSearchComponent","WrappedDestinationSearchComponent","EmployeeMapper","EmployeeCreateComponent","valuePropName","es_switch","WrappedEmployeeCreateComponent","PipelineStepMapper","PipelineStepTableComponent","pipelineSteps","PipelineStepNoteViewModel","PipelineStepNoteMapper","PipelineStepNoteTableComponent","pipelineStepNotes","EmployeeDetailComponent","pipelineStepTable_PipelineStepTableComponent","pipelineStepNoteTable_PipelineStepNoteTableComponent","WrappedEmployeeDetailComponent","EmployeeEditComponent","WrappedEmployeeEditComponent","EmployeeSearchComponent","WrappedEmployeeSearchComponent","HandlerMapper","HandlerCreateComponent","WrappedHandlerCreateComponent","AirTransportTableComponent","airTransports","HandlerPipelineStepViewModel","HandlerPipelineStepMapper","HandlerPipelineStepTableComponent","handlerPipelineSteps","OtherTransportViewModel","OtherTransportMapper","OtherTransportTableComponent","otherTransports","HandlerDetailComponent","airTransportTable_AirTransportTableComponent","handlerPipelineStepTable_HandlerPipelineStepTableComponent","otherTransportTable_OtherTransportTableComponent","WrappedHandlerDetailComponent","HandlerEditComponent","WrappedHandlerEditComponent","HandlerSearchComponent","WrappedHandlerSearchComponent","HandlerPipelineStepCreateComponent","WrappedHandlerPipelineStepCreateComponent","HandlerPipelineStepDetailComponent","WrappedHandlerPipelineStepDetailComponent","HandlerPipelineStepEditComponent","WrappedHandlerPipelineStepEditComponent","HandlerPipelineStepSearchComponent","WrappedHandlerPipelineStepSearchComponent","OtherTransportCreateComponent","WrappedOtherTransportCreateComponent","OtherTransportDetailComponent","WrappedOtherTransportDetailComponent","OtherTransportEditComponent","WrappedOtherTransportEditComponent","OtherTransportSearchComponent","WrappedOtherTransportSearchComponent","PetCreateComponent","WrappedPetCreateComponent","SaleViewModel","SaleMapper","SaleTableComponent","sales","PetDetailComponent","saleTable_SaleTableComponent","WrappedPetDetailComponent","PetEditComponent","WrappedPetEditComponent","PetSearchComponent","WrappedPetSearchComponent","PipelineStatusViewModel","PipelineViewModel","PipelineMapper","PipelineCreateComponent","WrappedPipelineCreateComponent","PipelineDetailComponent","WrappedPipelineDetailComponent","PipelineEditComponent","WrappedPipelineEditComponent","PipelineSearchComponent","WrappedPipelineSearchComponent","PipelineStatusMapper","PipelineStatusCreateComponent","WrappedPipelineStatusCreateComponent","PipelineTableComponent","pipelines","PipelineStatusDetailComponent","pipelineTable_PipelineTableComponent","WrappedPipelineStatusDetailComponent","PipelineStatusEditComponent","WrappedPipelineStatusEditComponent","PipelineStatusSearchComponent","WrappedPipelineStatusSearchComponent","PipelineStepCreateComponent","WrappedPipelineStepCreateComponent","PipelineStepStepRequirementViewModel","details","PipelineStepStepRequirementMapper","PipelineStepStepRequirementTableComponent","pipelineStepStepRequirements","PipelineStepDetailComponent","pipelineStepStepRequirementTable_PipelineStepStepRequirementTableComponent","WrappedPipelineStepDetailComponent","PipelineStepEditComponent","WrappedPipelineStepEditComponent","PipelineStepSearchComponent","WrappedPipelineStepSearchComponent","PipelineStepDestinationCreateComponent","WrappedPipelineStepDestinationCreateComponent","PipelineStepDestinationDetailComponent","WrappedPipelineStepDestinationDetailComponent","PipelineStepDestinationEditComponent","WrappedPipelineStepDestinationEditComponent","PipelineStepDestinationSearchComponent","WrappedPipelineStepDestinationSearchComponent","PipelineStepNoteCreateComponent","WrappedPipelineStepNoteCreateComponent","PipelineStepNoteDetailComponent","WrappedPipelineStepNoteDetailComponent","PipelineStepNoteEditComponent","WrappedPipelineStepNoteEditComponent","PipelineStepNoteSearchComponent","WrappedPipelineStepNoteSearchComponent","PipelineStepStatusMapper","PipelineStepStatusCreateComponent","WrappedPipelineStepStatusCreateComponent","PipelineStepStatusDetailComponent","WrappedPipelineStepStatusDetailComponent","PipelineStepStatusEditComponent","WrappedPipelineStepStatusEditComponent","PipelineStepStatusSearchComponent","WrappedPipelineStepStatusSearchComponent","PipelineStepStepRequirementCreateComponent","WrappedPipelineStepStepRequirementCreateComponent","PipelineStepStepRequirementDetailComponent","WrappedPipelineStepStepRequirementDetailComponent","PipelineStepStepRequirementEditComponent","WrappedPipelineStepStepRequirementEditComponent","PipelineStepStepRequirementSearchComponent","WrappedPipelineStepStepRequirementSearchComponent","SaleCreateComponent","WrappedSaleCreateComponent","SaleDetailComponent","WrappedSaleDetailComponent","SaleEditComponent","WrappedSaleEditComponent","SaleSearchComponent","WrappedSaleSearchComponent","SpeciesMapper","SpeciesCreateComponent","WrappedSpeciesCreateComponent","BreedTableComponent","breeds","SpeciesDetailComponent","breedTable_BreedTableComponent","WrappedSpeciesDetailComponent","SpeciesEditComponent","WrappedSpeciesEditComponent","SpeciesSearchComponent","WrappedSpeciesSearchComponent","config","issuer","redirectUri","scope","ReactDOM","render","URLSearchParams","location","search","BrowserRouter","dist","client_id","redirect_uri","path","component","Switch","Route","exact","document","getElementById"],"mappings":"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","file":"static/js/main.4fe240e3.chunk.js","sourcesContent":["export class Constants {\r\n   static readonly BaseEndpoint = process.env.REACT_APP_API_URL;\r\n   static readonly ApiEndpoint = Constants.BaseEndpoint + 'api/';\r\n   static readonly ApiHealthEndpoint = Constants.ApiEndpoint + 'apiHealth';\r\n   static readonly SwaggerEndpoint = Constants.BaseEndpoint + 'swagger';\r\n}\r\n\r\nexport class ClientRoutes {\r\nstatic readonly Airlines = '/airlines';\t\t\r\nstatic readonly AirTransports = '/airtransports';\t\t\r\nstatic readonly Breeds = '/breeds';\t\t\r\nstatic readonly Countries = '/countries';\t\t\r\nstatic readonly CountryRequirements = '/countryrequirements';\t\t\r\nstatic readonly Customers = '/customers';\t\t\r\nstatic readonly CustomerCommunications = '/customercommunications';\t\t\r\nstatic readonly Destinations = '/destinations';\t\t\r\nstatic readonly Employees = '/employees';\t\t\r\nstatic readonly Handlers = '/handlers';\t\t\r\nstatic readonly HandlerPipelineSteps = '/handlerpipelinesteps';\t\t\r\nstatic readonly OtherTransports = '/othertransports';\t\t\r\nstatic readonly Pets = '/pets';\t\t\r\nstatic readonly Pipelines = '/pipelines';\t\t\r\nstatic readonly PipelineStatus = '/pipelinestatus';\t\t\r\nstatic readonly PipelineSteps = '/pipelinesteps';\t\t\r\nstatic readonly PipelineStepDestinations = '/pipelinestepdestinations';\t\t\r\nstatic readonly PipelineStepNotes = '/pipelinestepnotes';\t\t\r\nstatic readonly PipelineStepStatus = '/pipelinestepstatus';\t\t\r\nstatic readonly PipelineStepStepRequirements = '/pipelinestepsteprequirements';\t\t\r\nstatic readonly Sales = '/sales';\t\t\r\nstatic readonly Species = '/species';\t\t\r\n}\r\n\r\nexport class ApiRoutes {\r\nstatic readonly Airlines = 'airlines';\t\t\r\nstatic readonly AirTransports = 'airtransports';\t\t\r\nstatic readonly Breeds = 'breeds';\t\t\r\nstatic readonly Countries = 'countries';\t\t\r\nstatic readonly CountryRequirements = 'countryrequirements';\t\t\r\nstatic readonly Customers = 'customers';\t\t\r\nstatic readonly CustomerCommunications = 'customercommunications';\t\t\r\nstatic readonly Destinations = 'destinations';\t\t\r\nstatic readonly Employees = 'employees';\t\t\r\nstatic readonly Handlers = 'handlers';\t\t\r\nstatic readonly HandlerPipelineSteps = 'handlerpipelinesteps';\t\t\r\nstatic readonly OtherTransports = 'othertransports';\t\t\r\nstatic readonly Pets = 'pets';\t\t\r\nstatic readonly Pipelines = 'pipelines';\t\t\r\nstatic readonly PipelineStatus = 'pipelinestatus';\t\t\r\nstatic readonly PipelineSteps = 'pipelinesteps';\t\t\r\nstatic readonly PipelineStepDestinations = 'pipelinestepdestinations';\t\t\r\nstatic readonly PipelineStepNotes = 'pipelinestepnotes';\t\t\r\nstatic readonly PipelineStepStatus = 'pipelinestepstatus';\t\t\r\nstatic readonly PipelineStepStepRequirements = 'pipelinestepsteprequirements';\t\t\r\nstatic readonly Sales = 'sales';\t\t\r\nstatic readonly Species = 'species';\t\t\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>dd20111409c45efe24558d0231696031</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { Constants } from '../constants';\r\nimport { Alert } from 'antd'\r\n\r\ninterface DashboardComponentProps{\r\n}\r\n\r\ninterface DashboardComponentState{\r\n  connected:boolean;\r\n  connecting:boolean;\r\n}\r\n\r\nexport default class Dashboard extends React.Component<DashboardComponentProps, DashboardComponentState>  {\r\n  \r\n  state = ({connected:false, connecting:false});\r\n\r\n  testConnection() {\r\n    this.setState({...this.state,connecting:true});\r\n\r\n    axios.get(Constants.ApiHealthEndpoint, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(\r\n      resp => {\r\n        console.log(resp);\r\n        this.setState({connecting:false, connected:true});\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.setState({connecting:false, connected:false});\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n     this.testConnection();\r\n  }\r\n\r\n  render() {\r\n      let alert:JSX.Element = <div></div>;\r\n      if(this.state.connecting){\r\n        alert = <Alert message='Connecting...' type='info' />;\r\n      }\r\n      else if(this.state.connected){\r\n        alert = <Alert message='Connected...' type='success' />;\r\n      }\r\n      else {\r\n        alert = <Alert message='Unable to connect to API...' type='warning' />;\r\n      }\r\n\r\n      return <div>\r\n        {alert}\r\n        <br />\r\n        <div>API Health Endpoint : <a target='_blank' href={Constants.ApiHealthEndpoint}>{Constants.ApiHealthEndpoint}</a></div>\r\n        <div>Swagger Endpoint : <a target='_blank' href={Constants.SwaggerEndpoint}>{Constants.SwaggerEndpoint}</a></div>\r\n      </div>;\r\n  }\r\n}","import * as React from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\r\nimport MenuItem from '../../node_modules/antd/lib/menu/MenuItem';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { ClientRoutes, Constants } from '../constants';\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\ninterface WrapperHeaderProps {}\r\n\r\ninterface WrapperHeaderState {\r\n  collapsed: boolean;\r\n}\r\nexport const wrapperHeader = (Component: React.ComponentClass<any> | React.SFC<any>,\r\ndisplayName:string) => {\r\n  class WrapperHeaderComponent extends React.Component<WrapperHeaderProps & RouteComponentProps, WrapperHeaderState> {\r\n    state = { collapsed: true };\r\n\r\n    onCollapse = () => {\r\n      this.setState({ ...this.state, collapsed: !this.state.collapsed });\r\n    };\r\n    render() {\r\n      return (\r\n        <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}\r\n          >\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n               <MenuItem\r\n                key=\"Home\"\r\n\t\t\t\tonClick={() =>  {this.setState({...this.state, collapsed:true})}}\r\n              >\r\n                <Icon type=\"home\" />\r\n                <span>Home</span>\r\n                <Link to={'/'}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t   \t\t\t   <MenuItem\r\n                key=\"airline\"\r\n              >\r\n\t\t\t  <Icon type=\"pie-chart\" />\r\n              <span>Airlines</span>\r\n              <Link to={ClientRoutes.Airlines}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"airTransport\"\r\n              >\r\n\t\t\t  <Icon type=\"rise\" />\r\n              <span>AirTransports</span>\r\n              <Link to={ClientRoutes.AirTransports}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"breed\"\r\n              >\r\n\t\t\t  <Icon type=\"bars\" />\r\n              <span>Breeds</span>\r\n              <Link to={ClientRoutes.Breeds}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"country\"\r\n              >\r\n\t\t\t  <Icon type=\"cloud\" />\r\n              <span>Countries</span>\r\n              <Link to={ClientRoutes.Countries}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"countryRequirement\"\r\n              >\r\n\t\t\t  <Icon type=\"code\" />\r\n              <span>CountryRequirements</span>\r\n              <Link to={ClientRoutes.CountryRequirements}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"customer\"\r\n              >\r\n\t\t\t  <Icon type=\"smile\" />\r\n              <span>Customers</span>\r\n              <Link to={ClientRoutes.Customers}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"customerCommunication\"\r\n              >\r\n\t\t\t  <Icon type=\"laptop\" />\r\n              <span>CustomerCommunications</span>\r\n              <Link to={ClientRoutes.CustomerCommunications}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"destination\"\r\n              >\r\n\t\t\t  <Icon type=\"mobile\" />\r\n              <span>Destinations</span>\r\n              <Link to={ClientRoutes.Destinations}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"employee\"\r\n              >\r\n\t\t\t  <Icon type=\"paper-clip\" />\r\n              <span>Employees</span>\r\n              <Link to={ClientRoutes.Employees}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"handler\"\r\n              >\r\n\t\t\t  <Icon type=\"setting\" />\r\n              <span>Handlers</span>\r\n              <Link to={ClientRoutes.Handlers}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"handlerPipelineStep\"\r\n              >\r\n\t\t\t  <Icon type=\"user\" />\r\n              <span>HandlerPipelineSteps</span>\r\n              <Link to={ClientRoutes.HandlerPipelineSteps}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"otherTransport\"\r\n              >\r\n\t\t\t  <Icon type=\"home\" />\r\n              <span>OtherTransports</span>\r\n              <Link to={ClientRoutes.OtherTransports}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"pet\"\r\n              >\r\n\t\t\t  <Icon type=\"camera\" />\r\n              <span>Pets</span>\r\n              <Link to={ClientRoutes.Pets}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"pipeline\"\r\n              >\r\n\t\t\t  <Icon type=\"like\" />\r\n              <span>Pipelines</span>\r\n              <Link to={ClientRoutes.Pipelines}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"pipelineStatus\"\r\n              >\r\n\t\t\t  <Icon type=\"bulb\" />\r\n              <span>PipelineStatus</span>\r\n              <Link to={ClientRoutes.PipelineStatus}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"pipelineStep\"\r\n              >\r\n\t\t\t  <Icon type=\"tool\" />\r\n              <span>PipelineSteps</span>\r\n              <Link to={ClientRoutes.PipelineSteps}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"pipelineStepDestination\"\r\n              >\r\n\t\t\t  <Icon type=\"coffee\" />\r\n              <span>PipelineStepDestinations</span>\r\n              <Link to={ClientRoutes.PipelineStepDestinations}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"pipelineStepNote\"\r\n              >\r\n\t\t\t  <Icon type=\"experiment\" />\r\n              <span>PipelineStepNotes</span>\r\n              <Link to={ClientRoutes.PipelineStepNotes}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"pipelineStepStatus\"\r\n              >\r\n\t\t\t  <Icon type=\"security-scan\" />\r\n              <span>PipelineStepStatus</span>\r\n              <Link to={ClientRoutes.PipelineStepStatus}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"pipelineStepStepRequirement\"\r\n              >\r\n\t\t\t  <Icon type=\"thunderbolt\" />\r\n              <span>PipelineStepStepRequirements</span>\r\n              <Link to={ClientRoutes.PipelineStepStepRequirements}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"sale\"\r\n              >\r\n\t\t\t  <Icon type=\"gateway\" />\r\n              <span>Sales</span>\r\n              <Link to={ClientRoutes.Sales}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\t\t\t   <MenuItem\r\n                key=\"species\"\r\n              >\r\n\t\t\t  <Icon type=\"shopping\" />\r\n              <span>Species</span>\r\n              <Link to={ClientRoutes.Species}></Link>\r\n              </MenuItem>\r\n\r\n\t\t\t\t\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n            <Header style={{ background: '#fff', padding: 0 }} />\r\n            <Content style={{ margin: '0 16px' }}>\r\n            <h2>{displayName}</h2>\r\n\t\t\t  <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\r\n                <Component {...this.props} />\r\n              </div>\r\n            </Content>\r\n            <Footer style={{ textAlign: 'center' }}>Footer</Footer>\r\n          </Layout>\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n  return WrapperHeaderComponent;\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>2992d0da07001df65cbbcfd216bd5f0e</Hash>\r\n</Codenesium>*/","export class AirlineClientRequestModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class AirlineClientResponseModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class AirTransportClientRequestModel {\r\n\t\t\t\tairlineId:number;\r\nflightNumber:string;\r\nhandlerId:number;\r\nhandlerIdEntity : string;\r\nhandlerIdNavigation? : HandlerClientResponseModel;\r\nid:number;\r\nlandDate:any;\r\npipelineStepId:number;\r\ntakeoffDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.airlineId = 0;\r\nthis.flightNumber = '';\r\nthis.handlerId = 0;\r\nthis.handlerIdEntity = '';\r\nthis.handlerIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.landDate = undefined;\r\nthis.pipelineStepId = 0;\r\nthis.takeoffDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(airlineId : number,flightNumber : string,handlerId : number,id : number,landDate : any,pipelineStepId : number,takeoffDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.airlineId = airlineId;\r\nthis.flightNumber = flightNumber;\r\nthis.handlerId = handlerId;\r\nthis.id = id;\r\nthis.landDate = landDate;\r\nthis.pipelineStepId = pipelineStepId;\r\nthis.takeoffDate = takeoffDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class AirTransportClientResponseModel {\r\n\t\t\t\tairlineId:number;\r\nflightNumber:string;\r\nhandlerId:number;\r\nhandlerIdEntity : string;\r\nhandlerIdNavigation? : HandlerClientResponseModel;\r\nid:number;\r\nlandDate:any;\r\npipelineStepId:number;\r\ntakeoffDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.airlineId = 0;\r\nthis.flightNumber = '';\r\nthis.handlerId = 0;\r\nthis.handlerIdEntity = '';\r\nthis.handlerIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.landDate = undefined;\r\nthis.pipelineStepId = 0;\r\nthis.takeoffDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(airlineId : number,flightNumber : string,handlerId : number,id : number,landDate : any,pipelineStepId : number,takeoffDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.airlineId = airlineId;\r\nthis.flightNumber = flightNumber;\r\nthis.handlerId = handlerId;\r\nthis.id = id;\r\nthis.landDate = landDate;\r\nthis.pipelineStepId = pipelineStepId;\r\nthis.takeoffDate = takeoffDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class BreedClientRequestModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\nspeciesId:number;\r\nspeciesIdEntity : string;\r\nspeciesIdNavigation? : SpeciesClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\nthis.speciesId = 0;\r\nthis.speciesIdEntity = '';\r\nthis.speciesIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string,speciesId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\nthis.speciesId = speciesId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class BreedClientResponseModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\nspeciesId:number;\r\nspeciesIdEntity : string;\r\nspeciesIdNavigation? : SpeciesClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\nthis.speciesId = 0;\r\nthis.speciesIdEntity = '';\r\nthis.speciesIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string,speciesId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\nthis.speciesId = speciesId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CountryClientRequestModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CountryClientResponseModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CountryRequirementClientRequestModel {\r\n\t\t\t\tcountryId:number;\r\ncountryIdEntity : string;\r\ncountryIdNavigation? : CountryClientResponseModel;\r\ndetail:string;\r\nid:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryId = 0;\r\nthis.countryIdEntity = '';\r\nthis.countryIdNavigation = undefined;\r\nthis.detail = '';\r\nthis.id = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryId : number,detail : string,id : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryId = countryId;\r\nthis.detail = detail;\r\nthis.id = id;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CountryRequirementClientResponseModel {\r\n\t\t\t\tcountryId:number;\r\ncountryIdEntity : string;\r\ncountryIdNavigation? : CountryClientResponseModel;\r\ndetail:string;\r\nid:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryId = 0;\r\nthis.countryIdEntity = '';\r\nthis.countryIdNavigation = undefined;\r\nthis.detail = '';\r\nthis.id = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryId : number,detail : string,id : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryId = countryId;\r\nthis.detail = detail;\r\nthis.id = id;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CustomerClientRequestModel {\r\n\t\t\t\temail:string;\r\nfirstName:string;\r\nid:number;\r\nlastName:string;\r\nnote:string;\r\nphone:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.email = '';\r\nthis.firstName = '';\r\nthis.id = 0;\r\nthis.lastName = '';\r\nthis.note = '';\r\nthis.phone = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(email : string,firstName : string,id : number,lastName : string,note : string,phone : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.email = email;\r\nthis.firstName = firstName;\r\nthis.id = id;\r\nthis.lastName = lastName;\r\nthis.note = note;\r\nthis.phone = phone;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CustomerClientResponseModel {\r\n\t\t\t\temail:string;\r\nfirstName:string;\r\nid:number;\r\nlastName:string;\r\nnote:string;\r\nphone:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.email = '';\r\nthis.firstName = '';\r\nthis.id = 0;\r\nthis.lastName = '';\r\nthis.note = '';\r\nthis.phone = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(email : string,firstName : string,id : number,lastName : string,note : string,phone : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.email = email;\r\nthis.firstName = firstName;\r\nthis.id = id;\r\nthis.lastName = lastName;\r\nthis.note = note;\r\nthis.phone = phone;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CustomerCommunicationClientRequestModel {\r\n\t\t\t\tcustomerId:number;\r\ncustomerIdEntity : string;\r\ncustomerIdNavigation? : CustomerClientResponseModel;\r\ndateCreated:any;\r\nemployeeId:number;\r\nemployeeIdEntity : string;\r\nemployeeIdNavigation? : EmployeeClientResponseModel;\r\nid:number;\r\nnote:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.customerId = 0;\r\nthis.customerIdEntity = '';\r\nthis.customerIdNavigation = undefined;\r\nthis.dateCreated = undefined;\r\nthis.employeeId = 0;\r\nthis.employeeIdEntity = '';\r\nthis.employeeIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.note = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(customerId : number,dateCreated : any,employeeId : number,id : number,note : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.customerId = customerId;\r\nthis.dateCreated = dateCreated;\r\nthis.employeeId = employeeId;\r\nthis.id = id;\r\nthis.note = note;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CustomerCommunicationClientResponseModel {\r\n\t\t\t\tcustomerId:number;\r\ncustomerIdEntity : string;\r\ncustomerIdNavigation? : CustomerClientResponseModel;\r\ndateCreated:any;\r\nemployeeId:number;\r\nemployeeIdEntity : string;\r\nemployeeIdNavigation? : EmployeeClientResponseModel;\r\nid:number;\r\nnote:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.customerId = 0;\r\nthis.customerIdEntity = '';\r\nthis.customerIdNavigation = undefined;\r\nthis.dateCreated = undefined;\r\nthis.employeeId = 0;\r\nthis.employeeIdEntity = '';\r\nthis.employeeIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.note = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(customerId : number,dateCreated : any,employeeId : number,id : number,note : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.customerId = customerId;\r\nthis.dateCreated = dateCreated;\r\nthis.employeeId = employeeId;\r\nthis.id = id;\r\nthis.note = note;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class DestinationClientRequestModel {\r\n\t\t\t\tcountryId:number;\r\ncountryIdEntity : string;\r\ncountryIdNavigation? : CountryClientResponseModel;\r\nid:number;\r\nname:string;\r\norder:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryId = 0;\r\nthis.countryIdEntity = '';\r\nthis.countryIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.name = '';\r\nthis.order = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryId : number,id : number,name : string,order : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryId = countryId;\r\nthis.id = id;\r\nthis.name = name;\r\nthis.order = order;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class DestinationClientResponseModel {\r\n\t\t\t\tcountryId:number;\r\ncountryIdEntity : string;\r\ncountryIdNavigation? : CountryClientResponseModel;\r\nid:number;\r\nname:string;\r\norder:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryId = 0;\r\nthis.countryIdEntity = '';\r\nthis.countryIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.name = '';\r\nthis.order = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryId : number,id : number,name : string,order : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryId = countryId;\r\nthis.id = id;\r\nthis.name = name;\r\nthis.order = order;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class EmployeeClientRequestModel {\r\n\t\t\t\tfirstName:string;\r\nid:number;\r\nisSalesPerson:boolean;\r\nisShipper:boolean;\r\nlastName:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.firstName = '';\r\nthis.id = 0;\r\nthis.isSalesPerson = false;\r\nthis.isShipper = false;\r\nthis.lastName = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(firstName : string,id : number,isSalesPerson : boolean,isShipper : boolean,lastName : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.firstName = firstName;\r\nthis.id = id;\r\nthis.isSalesPerson = isSalesPerson;\r\nthis.isShipper = isShipper;\r\nthis.lastName = lastName;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class EmployeeClientResponseModel {\r\n\t\t\t\tfirstName:string;\r\nid:number;\r\nisSalesPerson:boolean;\r\nisShipper:boolean;\r\nlastName:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.firstName = '';\r\nthis.id = 0;\r\nthis.isSalesPerson = false;\r\nthis.isShipper = false;\r\nthis.lastName = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(firstName : string,id : number,isSalesPerson : boolean,isShipper : boolean,lastName : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.firstName = firstName;\r\nthis.id = id;\r\nthis.isSalesPerson = isSalesPerson;\r\nthis.isShipper = isShipper;\r\nthis.lastName = lastName;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class HandlerClientRequestModel {\r\n\t\t\t\tcountryId:number;\r\nemail:string;\r\nfirstName:string;\r\nid:number;\r\nlastName:string;\r\nphone:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryId = 0;\r\nthis.email = '';\r\nthis.firstName = '';\r\nthis.id = 0;\r\nthis.lastName = '';\r\nthis.phone = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryId : number,email : string,firstName : string,id : number,lastName : string,phone : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryId = countryId;\r\nthis.email = email;\r\nthis.firstName = firstName;\r\nthis.id = id;\r\nthis.lastName = lastName;\r\nthis.phone = phone;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class HandlerClientResponseModel {\r\n\t\t\t\tcountryId:number;\r\nemail:string;\r\nfirstName:string;\r\nid:number;\r\nlastName:string;\r\nphone:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryId = 0;\r\nthis.email = '';\r\nthis.firstName = '';\r\nthis.id = 0;\r\nthis.lastName = '';\r\nthis.phone = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryId : number,email : string,firstName : string,id : number,lastName : string,phone : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryId = countryId;\r\nthis.email = email;\r\nthis.firstName = firstName;\r\nthis.id = id;\r\nthis.lastName = lastName;\r\nthis.phone = phone;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class HandlerPipelineStepClientRequestModel {\r\n\t\t\t\thandlerId:number;\r\nhandlerIdEntity : string;\r\nhandlerIdNavigation? : HandlerClientResponseModel;\r\nid:number;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.handlerId = 0;\r\nthis.handlerIdEntity = '';\r\nthis.handlerIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(handlerId : number,id : number,pipelineStepId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.handlerId = handlerId;\r\nthis.id = id;\r\nthis.pipelineStepId = pipelineStepId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class HandlerPipelineStepClientResponseModel {\r\n\t\t\t\thandlerId:number;\r\nhandlerIdEntity : string;\r\nhandlerIdNavigation? : HandlerClientResponseModel;\r\nid:number;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.handlerId = 0;\r\nthis.handlerIdEntity = '';\r\nthis.handlerIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(handlerId : number,id : number,pipelineStepId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.handlerId = handlerId;\r\nthis.id = id;\r\nthis.pipelineStepId = pipelineStepId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class OtherTransportClientRequestModel {\r\n\t\t\t\thandlerId:number;\r\nhandlerIdEntity : string;\r\nhandlerIdNavigation? : HandlerClientResponseModel;\r\nid:number;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.handlerId = 0;\r\nthis.handlerIdEntity = '';\r\nthis.handlerIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(handlerId : number,id : number,pipelineStepId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.handlerId = handlerId;\r\nthis.id = id;\r\nthis.pipelineStepId = pipelineStepId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class OtherTransportClientResponseModel {\r\n\t\t\t\thandlerId:number;\r\nhandlerIdEntity : string;\r\nhandlerIdNavigation? : HandlerClientResponseModel;\r\nid:number;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.handlerId = 0;\r\nthis.handlerIdEntity = '';\r\nthis.handlerIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(handlerId : number,id : number,pipelineStepId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.handlerId = handlerId;\r\nthis.id = id;\r\nthis.pipelineStepId = pipelineStepId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PetClientRequestModel {\r\n\t\t\t\tbreedId:number;\r\nbreedIdEntity : string;\r\nbreedIdNavigation? : BreedClientResponseModel;\r\nclientId:number;\r\nid:number;\r\nname:string;\r\nweight:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.breedId = 0;\r\nthis.breedIdEntity = '';\r\nthis.breedIdNavigation = undefined;\r\nthis.clientId = 0;\r\nthis.id = 0;\r\nthis.name = '';\r\nthis.weight = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(breedId : number,clientId : number,id : number,name : string,weight : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.breedId = breedId;\r\nthis.clientId = clientId;\r\nthis.id = id;\r\nthis.name = name;\r\nthis.weight = weight;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PetClientResponseModel {\r\n\t\t\t\tbreedId:number;\r\nbreedIdEntity : string;\r\nbreedIdNavigation? : BreedClientResponseModel;\r\nclientId:number;\r\nid:number;\r\nname:string;\r\nweight:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.breedId = 0;\r\nthis.breedIdEntity = '';\r\nthis.breedIdNavigation = undefined;\r\nthis.clientId = 0;\r\nthis.id = 0;\r\nthis.name = '';\r\nthis.weight = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(breedId : number,clientId : number,id : number,name : string,weight : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.breedId = breedId;\r\nthis.clientId = clientId;\r\nthis.id = id;\r\nthis.name = name;\r\nthis.weight = weight;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PipelineClientRequestModel {\r\n\t\t\t\tid:number;\r\npipelineStatusId:number;\r\npipelineStatusIdEntity : string;\r\npipelineStatusIdNavigation? : PipelineStatusClientResponseModel;\r\nsaleId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.pipelineStatusId = 0;\r\nthis.pipelineStatusIdEntity = '';\r\nthis.pipelineStatusIdNavigation = undefined;\r\nthis.saleId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,pipelineStatusId : number,saleId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.pipelineStatusId = pipelineStatusId;\r\nthis.saleId = saleId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PipelineClientResponseModel {\r\n\t\t\t\tid:number;\r\npipelineStatusId:number;\r\npipelineStatusIdEntity : string;\r\npipelineStatusIdNavigation? : PipelineStatusClientResponseModel;\r\nsaleId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.pipelineStatusId = 0;\r\nthis.pipelineStatusIdEntity = '';\r\nthis.pipelineStatusIdNavigation = undefined;\r\nthis.saleId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,pipelineStatusId : number,saleId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.pipelineStatusId = pipelineStatusId;\r\nthis.saleId = saleId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PipelineStatusClientRequestModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PipelineStatusClientResponseModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PipelineStepClientRequestModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\npipelineStepStatusId:number;\r\npipelineStepStatusIdEntity : string;\r\npipelineStepStatusIdNavigation? : PipelineStepStatusClientResponseModel;\r\nshipperId:number;\r\nshipperIdEntity : string;\r\nshipperIdNavigation? : EmployeeClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\nthis.pipelineStepStatusId = 0;\r\nthis.pipelineStepStatusIdEntity = '';\r\nthis.pipelineStepStatusIdNavigation = undefined;\r\nthis.shipperId = 0;\r\nthis.shipperIdEntity = '';\r\nthis.shipperIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string,pipelineStepStatusId : number,shipperId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\nthis.pipelineStepStatusId = pipelineStepStatusId;\r\nthis.shipperId = shipperId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PipelineStepClientResponseModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\npipelineStepStatusId:number;\r\npipelineStepStatusIdEntity : string;\r\npipelineStepStatusIdNavigation? : PipelineStepStatusClientResponseModel;\r\nshipperId:number;\r\nshipperIdEntity : string;\r\nshipperIdNavigation? : EmployeeClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\nthis.pipelineStepStatusId = 0;\r\nthis.pipelineStepStatusIdEntity = '';\r\nthis.pipelineStepStatusIdNavigation = undefined;\r\nthis.shipperId = 0;\r\nthis.shipperIdEntity = '';\r\nthis.shipperIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string,pipelineStepStatusId : number,shipperId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\nthis.pipelineStepStatusId = pipelineStepStatusId;\r\nthis.shipperId = shipperId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PipelineStepDestinationClientRequestModel {\r\n\t\t\t\tdestinationId:number;\r\ndestinationIdEntity : string;\r\ndestinationIdNavigation? : DestinationClientResponseModel;\r\nid:number;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.destinationId = 0;\r\nthis.destinationIdEntity = '';\r\nthis.destinationIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(destinationId : number,id : number,pipelineStepId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.destinationId = destinationId;\r\nthis.id = id;\r\nthis.pipelineStepId = pipelineStepId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PipelineStepDestinationClientResponseModel {\r\n\t\t\t\tdestinationId:number;\r\ndestinationIdEntity : string;\r\ndestinationIdNavigation? : DestinationClientResponseModel;\r\nid:number;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.destinationId = 0;\r\nthis.destinationIdEntity = '';\r\nthis.destinationIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(destinationId : number,id : number,pipelineStepId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.destinationId = destinationId;\r\nthis.id = id;\r\nthis.pipelineStepId = pipelineStepId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PipelineStepNoteClientRequestModel {\r\n\t\t\t\temployeeId:number;\r\nemployeeIdEntity : string;\r\nemployeeIdNavigation? : EmployeeClientResponseModel;\r\nid:number;\r\nnote:string;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.employeeId = 0;\r\nthis.employeeIdEntity = '';\r\nthis.employeeIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.note = '';\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(employeeId : number,id : number,note : string,pipelineStepId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.employeeId = employeeId;\r\nthis.id = id;\r\nthis.note = note;\r\nthis.pipelineStepId = pipelineStepId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PipelineStepNoteClientResponseModel {\r\n\t\t\t\temployeeId:number;\r\nemployeeIdEntity : string;\r\nemployeeIdNavigation? : EmployeeClientResponseModel;\r\nid:number;\r\nnote:string;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.employeeId = 0;\r\nthis.employeeIdEntity = '';\r\nthis.employeeIdNavigation = undefined;\r\nthis.id = 0;\r\nthis.note = '';\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(employeeId : number,id : number,note : string,pipelineStepId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.employeeId = employeeId;\r\nthis.id = id;\r\nthis.note = note;\r\nthis.pipelineStepId = pipelineStepId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PipelineStepStatusClientRequestModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PipelineStepStatusClientResponseModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PipelineStepStepRequirementClientRequestModel {\r\n\t\t\t\tdetail:string;\r\nid:number;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\nrequirementMet:boolean;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.detail = '';\r\nthis.id = 0;\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\nthis.requirementMet = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(detail : string,id : number,pipelineStepId : number,requirementMet : boolean) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.detail = detail;\r\nthis.id = id;\r\nthis.pipelineStepId = pipelineStepId;\r\nthis.requirementMet = requirementMet;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PipelineStepStepRequirementClientResponseModel {\r\n\t\t\t\tdetail:string;\r\nid:number;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepClientResponseModel;\r\nrequirementMet:boolean;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.detail = '';\r\nthis.id = 0;\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = undefined;\r\nthis.requirementMet = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(detail : string,id : number,pipelineStepId : number,requirementMet : boolean) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.detail = detail;\r\nthis.id = id;\r\nthis.pipelineStepId = pipelineStepId;\r\nthis.requirementMet = requirementMet;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class SaleClientRequestModel {\r\n\t\t\t\tamount:number;\r\ncutomerId:number;\r\nid:number;\r\nnote:string;\r\npetId:number;\r\npetIdEntity : string;\r\npetIdNavigation? : PetClientResponseModel;\r\nsaleDate:any;\r\nsalesPersonId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.amount = 0;\r\nthis.cutomerId = 0;\r\nthis.id = 0;\r\nthis.note = '';\r\nthis.petId = 0;\r\nthis.petIdEntity = '';\r\nthis.petIdNavigation = undefined;\r\nthis.saleDate = undefined;\r\nthis.salesPersonId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(amount : number,cutomerId : number,id : number,note : string,petId : number,saleDate : any,salesPersonId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.amount = amount;\r\nthis.cutomerId = cutomerId;\r\nthis.id = id;\r\nthis.note = note;\r\nthis.petId = petId;\r\nthis.saleDate = saleDate;\r\nthis.salesPersonId = salesPersonId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class SaleClientResponseModel {\r\n\t\t\t\tamount:number;\r\ncutomerId:number;\r\nid:number;\r\nnote:string;\r\npetId:number;\r\npetIdEntity : string;\r\npetIdNavigation? : PetClientResponseModel;\r\nsaleDate:any;\r\nsalesPersonId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.amount = 0;\r\nthis.cutomerId = 0;\r\nthis.id = 0;\r\nthis.note = '';\r\nthis.petId = 0;\r\nthis.petIdEntity = '';\r\nthis.petIdNavigation = undefined;\r\nthis.saleDate = undefined;\r\nthis.salesPersonId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(amount : number,cutomerId : number,id : number,note : string,petId : number,saleDate : any,salesPersonId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.amount = amount;\r\nthis.cutomerId = cutomerId;\r\nthis.id = id;\r\nthis.note = note;\r\nthis.petId = petId;\r\nthis.saleDate = saleDate;\r\nthis.salesPersonId = salesPersonId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class SpeciesClientRequestModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class SpeciesClientResponseModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n/*<Codenesium>\r\n    <Hash>dc0d8e9a095e122793882252518b794d</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\n\r\nexport default class AirlineViewModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.id);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0bf922f607c4153ff716e157c70dc33e</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport AirlineViewModel from './airlineViewModel';\r\nexport default class AirlineMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.AirlineClientResponseModel\r\n  ): AirlineViewModel {\r\n    let response = new AirlineViewModel();\r\n    response.setProperties(dto.id, dto.name);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: AirlineViewModel\r\n  ): Api.AirlineClientRequestModel {\r\n    let response = new Api.AirlineClientRequestModel();\r\n    response.setProperties(model.id, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>db8a229c1cf8d514c63639b379ae43e1</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport AirlineMapper from './airlineMapper';\r\nimport AirlineViewModel from './airlineViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface AirlineCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface AirlineCreateComponentState {\r\n  model?: AirlineViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass AirlineCreateComponent extends React.Component<\r\n  AirlineCreateComponentProps,\r\n  AirlineCreateComponentState\r\n> {\r\n  state = {\r\n    model: new AirlineViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as AirlineViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:AirlineViewModel) =>\r\n  {  \r\n    let mapper = new AirlineMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Airlines,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.AirlineClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedAirlineCreateComponent = Form.create({ name: 'Airline Create' })(AirlineCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>7d3edac26fb2da2f2319ef3684d7195b</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport AirlineMapper from './airlineMapper';\r\nimport AirlineViewModel from './airlineViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface AirlineDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface AirlineDetailComponentState {\r\n  model?: AirlineViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass AirlineDetailComponent extends React.Component<\r\n  AirlineDetailComponentProps,\r\n  AirlineDetailComponentState\r\n> {\r\n  state = {\r\n    model: new AirlineViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.Airlines + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Airlines +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AirlineClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new AirlineMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div>\r\n              <h3>name</h3>\r\n              <p>{String(this.state.model!.name)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedAirlineDetailComponent = Form.create({\r\n  name: 'Airline Detail',\r\n})(AirlineDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2e5561ccab31148a3e4acd3445cdc8ef</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport AirlineMapper from './airlineMapper';\r\nimport AirlineViewModel from './airlineViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\ninterface AirlineEditComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface AirlineEditComponentState {\r\n  model?: AirlineViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass AirlineEditComponent extends React.Component<\r\n  AirlineEditComponentProps,\r\n  AirlineEditComponentState\r\n> {\r\n  state = {\r\n    model: new AirlineViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n    componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Airlines +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AirlineClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new AirlineMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n\t\t  this.props.form.setFieldsValue(mapper.mapApiResponseToViewModel(response));\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n }\r\n \r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as AirlineViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:AirlineViewModel) =>\r\n  {  \r\n    let mapper = new AirlineMapper();\r\n     axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Airlines + '/' + this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.AirlineClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedAirlineEditComponent = Form.create({ name: 'Airline Edit' })(AirlineEditComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>00960a0d427e0ee17b0c56e4cd171669</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport AirlineMapper from './airlineMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport AirlineViewModel from './airlineViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface AirlineSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface AirlineSearchComponentState {\r\n  records: Array<AirlineViewModel>;\r\n  filteredRecords: Array<AirlineViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class AirlineSearchComponent extends React.Component<\r\n  AirlineSearchComponentProps,\r\n  AirlineSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<AirlineViewModel>(),\r\n    filteredRecords: new Array<AirlineViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: AirlineViewModel) {\r\n    this.props.history.push(ClientRoutes.Airlines + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: AirlineViewModel) {\r\n    this.props.history.push(ClientRoutes.Airlines + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Airlines + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.AirlineClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Airlines + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.Airlines + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.AirlineClientResponseModel>;\r\n          let viewModels: Array<AirlineViewModel> = [];\r\n          let mapper = new AirlineMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<AirlineViewModel>(),\r\n            filteredRecords: new Array<AirlineViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Airlines',\r\n                columns: [\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as AirlineViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as AirlineViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as AirlineViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedAirlineSearchComponent = Form.create({\r\n  name: 'Airline Search',\r\n})(AirlineSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>cb6bb1b897987e91bee93a07f44739e3</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\n\r\nexport default class HandlerViewModel {\r\n  countryId: number;\r\n  email: string;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n  phone: string;\r\n\r\n  constructor() {\r\n    this.countryId = 0;\r\n    this.email = '';\r\n    this.firstName = '';\r\n    this.id = 0;\r\n    this.lastName = '';\r\n    this.phone = '';\r\n  }\r\n\r\n  setProperties(\r\n    countryId: number,\r\n    email: string,\r\n    firstName: string,\r\n    id: number,\r\n    lastName: string,\r\n    phone: string\r\n  ): void {\r\n    this.countryId = countryId;\r\n    this.email = email;\r\n    this.firstName = firstName;\r\n    this.id = id;\r\n    this.lastName = lastName;\r\n    this.phone = phone;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.countryId);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>172e381891d80e04725225862eb16796</Hash>\r\n</Codenesium>*/","import moment from 'moment'\r\nimport HandlerViewModel from '../handler/handlerViewModel'\r\n\t\r\n\r\nexport default class AirTransportViewModel {\r\n    airlineId:number;\r\nflightNumber:string;\r\nhandlerId:number;\r\nhandlerIdEntity : string;\r\nhandlerIdNavigation? : HandlerViewModel;\r\nid:number;\r\nlandDate:any;\r\npipelineStepId:number;\r\ntakeoffDate:any;\r\n\r\n    constructor() {\r\n\t\tthis.airlineId = 0;\r\nthis.flightNumber = '';\r\nthis.handlerId = 0;\r\nthis.handlerIdEntity = '';\r\nthis.handlerIdNavigation = new HandlerViewModel();\r\nthis.id = 0;\r\nthis.landDate = undefined;\r\nthis.pipelineStepId = 0;\r\nthis.takeoffDate = undefined;\r\n\r\n    }\r\n\r\n\tsetProperties(airlineId : number,flightNumber : string,handlerId : number,id : number,landDate : any,pipelineStepId : number,takeoffDate : any) : void\r\n\t{\r\n\t\tthis.airlineId = airlineId;\r\nthis.flightNumber = flightNumber;\r\nthis.handlerId = handlerId;\r\nthis.id = id;\r\nthis.landDate = moment(landDate,'YYYY-MM-DD');\r\nthis.pipelineStepId = pipelineStepId;\r\nthis.takeoffDate = moment(takeoffDate,'YYYY-MM-DD');\r\n\r\n\t}\r\n\r\n\ttoDisplay() : string\r\n\t{\r\n\t\treturn String(this.airlineId);\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>7c99d12c883d4536a4e869cd8187e7c3</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport AirTransportViewModel from './airTransportViewModel';\r\nimport HandlerViewModel from '../handler/handlerViewModel';\r\nexport default class AirTransportMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.AirTransportClientResponseModel\r\n  ): AirTransportViewModel {\r\n    let response = new AirTransportViewModel();\r\n    response.setProperties(\r\n      dto.airlineId,\r\n      dto.flightNumber,\r\n      dto.handlerId,\r\n      dto.id,\r\n      dto.landDate,\r\n      dto.pipelineStepId,\r\n      dto.takeoffDate\r\n    );\r\n\r\n    if (dto.handlerIdNavigation != null) {\r\n      response.handlerIdNavigation = new HandlerViewModel();\r\n      response.handlerIdNavigation.setProperties(\r\n        dto.handlerIdNavigation.countryId,\r\n        dto.handlerIdNavigation.email,\r\n        dto.handlerIdNavigation.firstName,\r\n        dto.handlerIdNavigation.id,\r\n        dto.handlerIdNavigation.lastName,\r\n        dto.handlerIdNavigation.phone\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: AirTransportViewModel\r\n  ): Api.AirTransportClientRequestModel {\r\n    let response = new Api.AirTransportClientRequestModel();\r\n    response.setProperties(\r\n      model.airlineId,\r\n      model.flightNumber,\r\n      model.handlerId,\r\n      model.id,\r\n      model.landDate,\r\n      model.pipelineStepId,\r\n      model.takeoffDate\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>81cae6a0bb4b50f0e6dd71d125801992</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport AirTransportMapper from './airTransportMapper';\r\nimport AirTransportViewModel from './airTransportViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { HandlerSelectComponent } from '../shared/handlerSelect'\r\n\t\r\ninterface AirTransportCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface AirTransportCreateComponentState {\r\n  model?: AirTransportViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass AirTransportCreateComponent extends React.Component<\r\n  AirTransportCreateComponentProps,\r\n  AirTransportCreateComponentState\r\n> {\r\n  state = {\r\n    model: new AirTransportViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as AirTransportViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:AirTransportViewModel) =>\r\n  {  \r\n    let mapper = new AirTransportMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.AirTransports,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.AirTransportClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='airlineId'>airlineId</label>\r\n              <br />             \r\n              {getFieldDecorator('airlineId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"airlineId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='flightNumber'>flightNumber</label>\r\n              <br />             \r\n              {getFieldDecorator('flightNumber', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 12, message: 'Exceeds max length of 12' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"flightNumber\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='handlerId'>handlerId</label>\r\n              <br />             \r\n              {getFieldDecorator('handlerId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"handlerId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='landDate'>landDate</label>\r\n              <br />             \r\n              {getFieldDecorator('landDate', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <DatePicker format={'YYYY-MM-DD'} placeholder={\"landDate\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='pipelineStepId'>pipelineStepId</label>\r\n              <br />             \r\n              {getFieldDecorator('pipelineStepId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"pipelineStepId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='takeoffDate'>takeoffDate</label>\r\n              <br />             \r\n              {getFieldDecorator('takeoffDate', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <DatePicker format={'YYYY-MM-DD'} placeholder={\"takeoffDate\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedAirTransportCreateComponent = Form.create({ name: 'AirTransport Create' })(AirTransportCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>845287272e423d21210bc11a19066e8b</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport AirTransportMapper from './airTransportMapper';\r\nimport AirTransportViewModel from './airTransportViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface AirTransportDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface AirTransportDetailComponentState {\r\n  model?: AirTransportViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass AirTransportDetailComponent extends React.Component<\r\n  AirTransportDetailComponentProps,\r\n  AirTransportDetailComponentState\r\n> {\r\n  state = {\r\n    model: new AirTransportViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.AirTransports + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.AirTransports +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AirTransportClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new AirTransportMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div>\r\n              <h3>airlineId</h3>\r\n              <p>{String(this.state.model!.airlineId)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>flightNumber</h3>\r\n              <p>{String(this.state.model!.flightNumber)}</p>\r\n            </div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>handlerId</h3>\r\n              <p>\r\n                {String(this.state.model!.handlerIdNavigation!.toDisplay())}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h3>landDate</h3>\r\n              <p>{String(this.state.model!.landDate)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>pipelineStepId</h3>\r\n              <p>{String(this.state.model!.pipelineStepId)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>takeoffDate</h3>\r\n              <p>{String(this.state.model!.takeoffDate)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedAirTransportDetailComponent = Form.create({\r\n  name: 'AirTransport Detail',\r\n})(AirTransportDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>a63dc3d5cb2f1fa0829eba4364a21c2b</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport AirTransportMapper from './airTransportMapper';\r\nimport AirTransportViewModel from './airTransportViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { HandlerSelectComponent } from '../shared/handlerSelect';\r\ninterface AirTransportEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface AirTransportEditComponentState {\r\n  model?: AirTransportViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass AirTransportEditComponent extends React.Component<\r\n  AirTransportEditComponentProps,\r\n  AirTransportEditComponentState\r\n> {\r\n  state = {\r\n    model: new AirTransportViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.AirTransports +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AirTransportClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new AirTransportMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as AirTransportViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: AirTransportViewModel) => {\r\n    let mapper = new AirTransportMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.AirTransports +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.AirTransportClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"airlineId\">airlineId</label>\r\n            <br />\r\n            {getFieldDecorator('airlineId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'airlineId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"flightNumber\">flightNumber</label>\r\n            <br />\r\n            {getFieldDecorator('flightNumber', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 12, message: 'Exceeds max length of 12' },\r\n              ],\r\n            })(<Input placeholder={'flightNumber'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"handlerId\">handlerId</label>\r\n            <br />\r\n            {getFieldDecorator('handlerId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'handlerId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"landDate\">landDate</label>\r\n            <br />\r\n            {getFieldDecorator('landDate', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<DatePicker format={'YYYY-MM-DD'} placeholder={'landDate'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"takeoffDate\">takeoffDate</label>\r\n            <br />\r\n            {getFieldDecorator('takeoffDate', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(\r\n              <DatePicker format={'YYYY-MM-DD'} placeholder={'takeoffDate'} />\r\n            )}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedAirTransportEditComponent = Form.create({\r\n  name: 'AirTransport Edit',\r\n})(AirTransportEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e5ca1328ddf3aa51df14496966a5b383</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport AirTransportMapper from './airTransportMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport AirTransportViewModel from './airTransportViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface AirTransportSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface AirTransportSearchComponentState\r\n{\r\n    records:Array<AirTransportViewModel>;\r\n    filteredRecords:Array<AirTransportViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class AirTransportSearchComponent extends React.Component<AirTransportSearchComponentProps, AirTransportSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<AirTransportViewModel>(), filteredRecords:new Array<AirTransportViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:AirTransportViewModel) {\r\n         this.props.history.push(ClientRoutes.AirTransports + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:AirTransportViewModel) {\r\n         this.props.history.push(ClientRoutes.AirTransports + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.AirTransports + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.AirTransportClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.AirTransports + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.AirTransports + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.AirTransportClientResponseModel>;\r\n\t\t    let viewModels : Array<AirTransportViewModel> = [];\r\n\t\t\tlet mapper = new AirTransportMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<AirTransportViewModel>(), filteredRecords:new Array<AirTransportViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'AirTransports',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'AirlineId',\r\n                      accessor: 'airlineId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.airlineId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'FlightNumber',\r\n                      accessor: 'flightNumber',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.flightNumber)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'HandlerId',\r\n                      accessor: 'handlerId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Handlers + '/' + props.original.handlerId); }}>\r\n                          {String(\r\n                            props.original.handlerIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'LandDate',\r\n                      accessor: 'landDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.landDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'PipelineStepId',\r\n                      accessor: 'pipelineStepId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.pipelineStepId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'TakeoffDate',\r\n                      accessor: 'takeoffDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.takeoffDate)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as AirTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as AirTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as AirTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedAirTransportSearchComponent = Form.create({ name: 'AirTransport Search' })(AirTransportSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>4c35a8cdc094e11f6c2c02f82d1d3552</Hash>\r\n</Codenesium>*/","import moment from 'moment'\r\n\r\n\r\nexport default class SpeciesViewModel {\r\n    id:number;\r\nname:string;\r\n\r\n    constructor() {\r\n\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n    }\r\n\r\n\tsetProperties(id : number,name : string) : void\r\n\t{\r\n\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t}\r\n\r\n\ttoDisplay() : string\r\n\t{\r\n\t\treturn String(this.id);\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>f97f66238a7f59653006f4758e92e8a3</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport SpeciesViewModel from '../species/speciesViewModel';\r\n\r\nexport default class BreedViewModel {\r\n  id: number;\r\n  name: string;\r\n  speciesId: number;\r\n  speciesIdEntity: string;\r\n  speciesIdNavigation?: SpeciesViewModel;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n    this.speciesId = 0;\r\n    this.speciesIdEntity = '';\r\n    this.speciesIdNavigation = new SpeciesViewModel();\r\n  }\r\n\r\n  setProperties(id: number, name: string, speciesId: number): void {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.speciesId = speciesId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.id);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ee26bb69d41fbffa31744abbcd673f02</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport BreedViewModel from  './breedViewModel';\r\n\timport SpeciesViewModel from '../species/speciesViewModel'\r\n\texport default class BreedMapper {\r\n    \r\n\tmapApiResponseToViewModel(dto: Api.BreedClientResponseModel) : BreedViewModel \r\n\t{\r\n\t\tlet response = new BreedViewModel();\r\n\t\tresponse.setProperties(dto.id,dto.name,dto.speciesId);\r\n\t\t\r\n\t\t\t\t\t\tif(dto.speciesIdNavigation != null)\r\n\t\t\t\t{\r\n\t\t\t\t  response.speciesIdNavigation = new SpeciesViewModel();\r\n\t\t\t\t  response.speciesIdNavigation.setProperties(\r\n\t\t\t\t  dto.speciesIdNavigation.id,dto.speciesIdNavigation.name\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tmapViewModelToApiRequest(model: BreedViewModel) : Api.BreedClientRequestModel\r\n\t{\r\n\t\tlet response = new Api.BreedClientRequestModel();\r\n\t\tresponse.setProperties(model.id,model.name,model.speciesId);\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>a044b66e0a760f9ef720b3e9b47bb599</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport BreedMapper from './breedMapper';\r\nimport BreedViewModel from './breedViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { SpeciesSelectComponent } from '../shared/speciesSelect'\r\n\t\r\ninterface BreedCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface BreedCreateComponentState {\r\n  model?: BreedViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass BreedCreateComponent extends React.Component<\r\n  BreedCreateComponentProps,\r\n  BreedCreateComponentState\r\n> {\r\n  state = {\r\n    model: new BreedViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as BreedViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:BreedViewModel) =>\r\n  {  \r\n    let mapper = new BreedMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Breeds,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.BreedClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='speciesId'>speciesId</label>\r\n              <br />             \r\n              {getFieldDecorator('speciesId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"speciesId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedBreedCreateComponent = Form.create({ name: 'Breed Create' })(BreedCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>b55a997e22a58b3a2965d7cf678809b4</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport BreedViewModel from '../breed/breedViewModel';\r\n\r\nexport default class PetViewModel {\r\n  breedId: number;\r\n  breedIdEntity: string;\r\n  breedIdNavigation?: BreedViewModel;\r\n  clientId: number;\r\n  id: number;\r\n  name: string;\r\n  weight: number;\r\n\r\n  constructor() {\r\n    this.breedId = 0;\r\n    this.breedIdEntity = '';\r\n    this.breedIdNavigation = new BreedViewModel();\r\n    this.clientId = 0;\r\n    this.id = 0;\r\n    this.name = '';\r\n    this.weight = 0;\r\n  }\r\n\r\n  setProperties(\r\n    breedId: number,\r\n    clientId: number,\r\n    id: number,\r\n    name: string,\r\n    weight: number\r\n  ): void {\r\n    this.breedId = breedId;\r\n    this.clientId = clientId;\r\n    this.id = id;\r\n    this.name = name;\r\n    this.weight = weight;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.breedId);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>243b732372cf1c351ca88ea505887301</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PetViewModel from './petViewModel';\r\nimport BreedViewModel from '../breed/breedViewModel';\r\nexport default class PetMapper {\r\n  mapApiResponseToViewModel(dto: Api.PetClientResponseModel): PetViewModel {\r\n    let response = new PetViewModel();\r\n    response.setProperties(\r\n      dto.breedId,\r\n      dto.clientId,\r\n      dto.id,\r\n      dto.name,\r\n      dto.weight\r\n    );\r\n\r\n    if (dto.breedIdNavigation != null) {\r\n      response.breedIdNavigation = new BreedViewModel();\r\n      response.breedIdNavigation.setProperties(\r\n        dto.breedIdNavigation.id,\r\n        dto.breedIdNavigation.name,\r\n        dto.breedIdNavigation.speciesId\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: PetViewModel): Api.PetClientRequestModel {\r\n    let response = new Api.PetClientRequestModel();\r\n    response.setProperties(\r\n      model.breedId,\r\n      model.clientId,\r\n      model.id,\r\n      model.name,\r\n      model.weight\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5aca30b8f0ae43480bbb12700f03ef35</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PetMapper from '../pet/petMapper';\r\nimport PetViewModel from '../pet/petViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface PetTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PetTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<PetViewModel>;\r\n}\r\n\r\nexport class PetTableComponent extends React.Component<\r\n  PetTableComponentProps,\r\n  PetTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: PetViewModel) {\r\n    this.props.history.push(ClientRoutes.Pets + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: PetViewModel) {\r\n    this.props.history.push(ClientRoutes.Pets + '/' + row.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PetClientResponseModel>;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PetMapper();\r\n\r\n          let pets: Array<PetViewModel> = [];\r\n\r\n          response.forEach(x => {\r\n            pets.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: pets,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'Pets',\r\n                columns: [\r\n                  {\r\n                    Header: 'BreedId',\r\n                    accessor: 'breedId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Breeds + '/' + props.original.breedId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(props.original.breedIdNavigation.toDisplay())}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ClientId',\r\n                    accessor: 'clientId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.clientId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Weight',\r\n                    accessor: 'weight',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.weight)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PetViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PetViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8b644c66dbca89d72a01f9487c73e81b</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport BreedMapper from './breedMapper';\r\nimport BreedViewModel from './breedViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport {PetTableComponent} from '../shared/petTable'\r\n\t\r\n\r\n\r\n\r\ninterface BreedDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface BreedDetailComponentState {\r\n  model?: BreedViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass BreedDetailComponent extends React.Component<\r\nBreedDetailComponentProps,\r\nBreedDetailComponentState\r\n> {\r\n  state = {\r\n    model: new BreedViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: ''\r\n  };\r\n\r\n  handleEditClick(e:any) {\r\n    this.props.history.push(ClientRoutes.Breeds + '/edit/' + this.state.model!.id);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Breeds +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.BreedClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new BreedMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } \r\n  \r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n\t\t<Button \r\n\t\t\tstyle={{'float':'right'}}\r\n\t\t\ttype=\"primary\" \r\n\t\t\tonClick={(e:any) => {\r\n\t\t\t\tthis.handleEditClick(e)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n             <i className=\"fas fa-edit\" />\r\n\t\t  </Button>\r\n\t\t  <div>\r\n\t\t\t\t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>id</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.id)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>name</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.name)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div style={{\"marginBottom\":\"10px\"}}>\r\n\t\t\t\t\t\t\t<h3>speciesId</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.speciesIdNavigation!.toDisplay())}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t  </div>\r\n          {message}\r\n\t\t <div>\r\n            <h3>Pets</h3>\r\n            <PetTableComponent \r\n\t\t\tid={this.state.model!.id} \r\n\t\t\thistory={this.props.history} \r\n\t\t\tmatch={this.props.match} \r\n\t\t\tapiRoute={Constants.ApiEndpoint + ApiRoutes.Breeds + '/' + this.state.model!.id + '/' + ApiRoutes.Pets}\r\n\t\t\t/>\r\n         </div>\r\n\t\r\n\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedBreedDetailComponent = Form.create({ name: 'Breed Detail' })(\r\n  BreedDetailComponent\r\n);\r\n\r\n/*<Codenesium>\r\n    <Hash>ff2b58de8072fd196f04d2d62659f22c</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport BreedMapper from './breedMapper';\r\nimport BreedViewModel from './breedViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { SpeciesSelectComponent } from '../shared/speciesSelect';\r\ninterface BreedEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface BreedEditComponentState {\r\n  model?: BreedViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass BreedEditComponent extends React.Component<\r\n  BreedEditComponentProps,\r\n  BreedEditComponentState\r\n> {\r\n  state = {\r\n    model: new BreedViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Breeds +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.BreedClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new BreedMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as BreedViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: BreedViewModel) => {\r\n    let mapper = new BreedMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Breeds + '/' + this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.BreedClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"name\">name</label>\r\n            <br />\r\n            {getFieldDecorator('name', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'name'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"speciesId\">speciesId</label>\r\n            <br />\r\n            {getFieldDecorator('speciesId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'speciesId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedBreedEditComponent = Form.create({ name: 'Breed Edit' })(\r\n  BreedEditComponent\r\n);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f2824391fb224e013411e953cb1c425e</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport BreedMapper from './breedMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport BreedViewModel from './breedViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface BreedSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface BreedSearchComponentState {\r\n  records: Array<BreedViewModel>;\r\n  filteredRecords: Array<BreedViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class BreedSearchComponent extends React.Component<\r\n  BreedSearchComponentProps,\r\n  BreedSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<BreedViewModel>(),\r\n    filteredRecords: new Array<BreedViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: BreedViewModel) {\r\n    this.props.history.push(ClientRoutes.Breeds + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: BreedViewModel) {\r\n    this.props.history.push(ClientRoutes.Breeds + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Breeds + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.BreedClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Breeds + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.Breeds + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.BreedClientResponseModel>;\r\n          let viewModels: Array<BreedViewModel> = [];\r\n          let mapper = new BreedMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<BreedViewModel>(),\r\n            filteredRecords: new Array<BreedViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Breeds',\r\n                columns: [\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SpeciesId',\r\n                    accessor: 'speciesId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Species +\r\n                                '/' +\r\n                                props.original.speciesId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.speciesIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as BreedViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as BreedViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as BreedViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedBreedSearchComponent = Form.create({\r\n  name: 'Breed Search',\r\n})(BreedSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c0ae3d02ac8a05e2fa675e5a7f5feff7</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\n\r\nexport default class CountryViewModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.id);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5289b5a75904a46170b9241101aaa460</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CountryViewModel from './countryViewModel';\r\nexport default class CountryMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CountryClientResponseModel\r\n  ): CountryViewModel {\r\n    let response = new CountryViewModel();\r\n    response.setProperties(dto.id, dto.name);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CountryViewModel\r\n  ): Api.CountryClientRequestModel {\r\n    let response = new Api.CountryClientRequestModel();\r\n    response.setProperties(model.id, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5920496c85f48426a084955246b14241</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CountryMapper from './countryMapper';\r\nimport CountryViewModel from './countryViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface CountryCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface CountryCreateComponentState {\r\n  model?: CountryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass CountryCreateComponent extends React.Component<\r\n  CountryCreateComponentProps,\r\n  CountryCreateComponentState\r\n> {\r\n  state = {\r\n    model: new CountryViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as CountryViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:CountryViewModel) =>\r\n  {  \r\n    let mapper = new CountryMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Countries,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CountryClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCountryCreateComponent = Form.create({ name: 'Country Create' })(CountryCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>2c02820fc1d6636dee6226aa1dc22aab</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport CountryViewModel from '../country/countryViewModel';\r\n\r\nexport default class CountryRequirementViewModel {\r\n  countryId: number;\r\n  countryIdEntity: string;\r\n  countryIdNavigation?: CountryViewModel;\r\n  detail: string;\r\n  id: number;\r\n\r\n  constructor() {\r\n    this.countryId = 0;\r\n    this.countryIdEntity = '';\r\n    this.countryIdNavigation = new CountryViewModel();\r\n    this.detail = '';\r\n    this.id = 0;\r\n  }\r\n\r\n  setProperties(countryId: number, detail: string, id: number): void {\r\n    this.countryId = countryId;\r\n    this.detail = detail;\r\n    this.id = id;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.countryId);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ca06c1dda4f5b33a9420ced445b93ee7</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CountryRequirementViewModel from './countryRequirementViewModel';\r\nimport CountryViewModel from '../country/countryViewModel';\r\nexport default class CountryRequirementMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CountryRequirementClientResponseModel\r\n  ): CountryRequirementViewModel {\r\n    let response = new CountryRequirementViewModel();\r\n    response.setProperties(dto.countryId, dto.detail, dto.id);\r\n\r\n    if (dto.countryIdNavigation != null) {\r\n      response.countryIdNavigation = new CountryViewModel();\r\n      response.countryIdNavigation.setProperties(\r\n        dto.countryIdNavigation.id,\r\n        dto.countryIdNavigation.name\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CountryRequirementViewModel\r\n  ): Api.CountryRequirementClientRequestModel {\r\n    let response = new Api.CountryRequirementClientRequestModel();\r\n    response.setProperties(model.countryId, model.detail, model.id);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5aa6394858e26d09d6658b33b773e924</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CountryRequirementMapper from '../countryRequirement/countryRequirementMapper';\r\nimport CountryRequirementViewModel from '../countryRequirement/countryRequirementViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface CountryRequirementTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CountryRequirementTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<CountryRequirementViewModel>;\r\n}\r\n\r\nexport class CountryRequirementTableComponent extends React.Component<\r\n  CountryRequirementTableComponentProps,\r\n  CountryRequirementTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: CountryRequirementViewModel) {\r\n    this.props.history.push(\r\n      ClientRoutes.CountryRequirements + '/edit/' + row.id\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: CountryRequirementViewModel) {\r\n    this.props.history.push(ClientRoutes.CountryRequirements + '/' + row.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.CountryRequirementClientResponseModel\r\n          >;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CountryRequirementMapper();\r\n\r\n          let countryRequirements: Array<CountryRequirementViewModel> = [];\r\n\r\n          response.forEach(x => {\r\n            countryRequirements.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: countryRequirements,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'CountryRequirements',\r\n                columns: [\r\n                  {\r\n                    Header: 'CountryId',\r\n                    accessor: 'countryId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Countries +\r\n                                '/' +\r\n                                props.original.countryId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.countryIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Details',\r\n                    accessor: 'detail',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.detail)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as CountryRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as CountryRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e86e18d91313477264fe7b29c25405f1</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport CountryViewModel from '../country/countryViewModel';\r\n\r\nexport default class DestinationViewModel {\r\n  countryId: number;\r\n  countryIdEntity: string;\r\n  countryIdNavigation?: CountryViewModel;\r\n  id: number;\r\n  name: string;\r\n  order: number;\r\n\r\n  constructor() {\r\n    this.countryId = 0;\r\n    this.countryIdEntity = '';\r\n    this.countryIdNavigation = new CountryViewModel();\r\n    this.id = 0;\r\n    this.name = '';\r\n    this.order = 0;\r\n  }\r\n\r\n  setProperties(\r\n    countryId: number,\r\n    id: number,\r\n    name: string,\r\n    order: number\r\n  ): void {\r\n    this.countryId = countryId;\r\n    this.id = id;\r\n    this.name = name;\r\n    this.order = order;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.countryId);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>657f3de7160e58a5d6a5fe8260590e64</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport DestinationViewModel from './destinationViewModel';\r\nimport CountryViewModel from '../country/countryViewModel';\r\nexport default class DestinationMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.DestinationClientResponseModel\r\n  ): DestinationViewModel {\r\n    let response = new DestinationViewModel();\r\n    response.setProperties(dto.countryId, dto.id, dto.name, dto.order);\r\n\r\n    if (dto.countryIdNavigation != null) {\r\n      response.countryIdNavigation = new CountryViewModel();\r\n      response.countryIdNavigation.setProperties(\r\n        dto.countryIdNavigation.id,\r\n        dto.countryIdNavigation.name\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: DestinationViewModel\r\n  ): Api.DestinationClientRequestModel {\r\n    let response = new Api.DestinationClientRequestModel();\r\n    response.setProperties(model.countryId, model.id, model.name, model.order);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c46cecabb3bfea879110f783df3973f3</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport DestinationMapper from '../destination/destinationMapper';\r\nimport DestinationViewModel from '../destination/destinationViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface DestinationTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface DestinationTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<DestinationViewModel>;\r\n}\r\n\r\nexport class DestinationTableComponent extends React.Component<\r\n  DestinationTableComponentProps,\r\n  DestinationTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: DestinationViewModel) {\r\n    this.props.history.push(ClientRoutes.Destinations + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: DestinationViewModel) {\r\n    this.props.history.push(ClientRoutes.Destinations + '/' + row.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.DestinationClientResponseModel>;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new DestinationMapper();\r\n\r\n          let destinations: Array<DestinationViewModel> = [];\r\n\r\n          response.forEach(x => {\r\n            destinations.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: destinations,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'Destinations',\r\n                columns: [\r\n                  {\r\n                    Header: 'CountryId',\r\n                    accessor: 'countryId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Countries +\r\n                                '/' +\r\n                                props.original.countryId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.countryIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Order',\r\n                    accessor: 'order',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.order)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as DestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as DestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>36e35cf42ef8f7d1bb32ce93e7bc52b8</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CountryMapper from './countryMapper';\r\nimport CountryViewModel from './countryViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { CountryRequirementTableComponent } from '../shared/countryRequirementTable';\r\nimport { DestinationTableComponent } from '../shared/destinationTable';\r\n\r\ninterface CountryDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CountryDetailComponentState {\r\n  model?: CountryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass CountryDetailComponent extends React.Component<\r\n  CountryDetailComponentProps,\r\n  CountryDetailComponentState\r\n> {\r\n  state = {\r\n    model: new CountryViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.Countries + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Countries +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CountryClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CountryMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div>\r\n              <h3>name</h3>\r\n              <p>{String(this.state.model!.name)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n          <div>\r\n            <h3>CountryRequirements</h3>\r\n            <CountryRequirementTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.Countries +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.CountryRequirements\r\n              }\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>Destinations</h3>\r\n            <DestinationTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.Countries +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.Destinations\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCountryDetailComponent = Form.create({\r\n  name: 'Country Detail',\r\n})(CountryDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e633ba8cbef35f2919e273f4d4d7b8f3</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CountryMapper from './countryMapper';\r\nimport CountryViewModel from './countryViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\ninterface CountryEditComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface CountryEditComponentState {\r\n  model?: CountryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass CountryEditComponent extends React.Component<\r\n  CountryEditComponentProps,\r\n  CountryEditComponentState\r\n> {\r\n  state = {\r\n    model: new CountryViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n    componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Countries +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CountryClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CountryMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n\t\t  this.props.form.setFieldsValue(mapper.mapApiResponseToViewModel(response));\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n }\r\n \r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as CountryViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:CountryViewModel) =>\r\n  {  \r\n    let mapper = new CountryMapper();\r\n     axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Countries + '/' + this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CountryClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCountryEditComponent = Form.create({ name: 'Country Edit' })(CountryEditComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>75d8df65aed7bf4c76488ed37fa48a44</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CountryMapper from './countryMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport CountryViewModel from './countryViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface CountrySearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CountrySearchComponentState {\r\n  records: Array<CountryViewModel>;\r\n  filteredRecords: Array<CountryViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class CountrySearchComponent extends React.Component<\r\n  CountrySearchComponentProps,\r\n  CountrySearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<CountryViewModel>(),\r\n    filteredRecords: new Array<CountryViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: CountryViewModel) {\r\n    this.props.history.push(ClientRoutes.Countries + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: CountryViewModel) {\r\n    this.props.history.push(ClientRoutes.Countries + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Countries + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.CountryClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Countries + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.Countries + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.CountryClientResponseModel>;\r\n          let viewModels: Array<CountryViewModel> = [];\r\n          let mapper = new CountryMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<CountryViewModel>(),\r\n            filteredRecords: new Array<CountryViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Countries',\r\n                columns: [\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as CountryViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as CountryViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as CountryViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCountrySearchComponent = Form.create({\r\n  name: 'Country Search',\r\n})(CountrySearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>40c8a28b85526233944fa67009fa55f1</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CountryRequirementMapper from './countryRequirementMapper';\r\nimport CountryRequirementViewModel from './countryRequirementViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { CountrySelectComponent } from '../shared/countrySelect';\r\n\r\ninterface CountryRequirementCreateComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CountryRequirementCreateComponentState {\r\n  model?: CountryRequirementViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass CountryRequirementCreateComponent extends React.Component<\r\n  CountryRequirementCreateComponentProps,\r\n  CountryRequirementCreateComponentState\r\n> {\r\n  state = {\r\n    model: new CountryRequirementViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as CountryRequirementViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: CountryRequirementViewModel) => {\r\n    let mapper = new CountryRequirementMapper();\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.CountryRequirements,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CountryRequirementClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"countryId\">countryId</label>\r\n            <br />\r\n            {getFieldDecorator('countryId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'countryId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"detail\">details</label>\r\n            <br />\r\n            {getFieldDecorator('detail', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'details'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCountryRequirementCreateComponent = Form.create({\r\n  name: 'CountryRequirement Create',\r\n})(CountryRequirementCreateComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2cd2ae9a3edba94bfcb43331ce5ed4ab</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CountryRequirementMapper from './countryRequirementMapper';\r\nimport CountryRequirementViewModel from './countryRequirementViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface CountryRequirementDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CountryRequirementDetailComponentState {\r\n  model?: CountryRequirementViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass CountryRequirementDetailComponent extends React.Component<\r\n  CountryRequirementDetailComponentProps,\r\n  CountryRequirementDetailComponentState\r\n> {\r\n  state = {\r\n    model: new CountryRequirementViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.CountryRequirements + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.CountryRequirements +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CountryRequirementClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CountryRequirementMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>countryId</h3>\r\n              <p>\r\n                {String(this.state.model!.countryIdNavigation!.toDisplay())}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h3>details</h3>\r\n              <p>{String(this.state.model!.detail)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCountryRequirementDetailComponent = Form.create({\r\n  name: 'CountryRequirement Detail',\r\n})(CountryRequirementDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f88a5eb55ddf400ba248fb8149869e7e</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CountryRequirementMapper from './countryRequirementMapper';\r\nimport CountryRequirementViewModel from './countryRequirementViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { CountrySelectComponent } from '../shared/countrySelect';\r\ninterface CountryRequirementEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CountryRequirementEditComponentState {\r\n  model?: CountryRequirementViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass CountryRequirementEditComponent extends React.Component<\r\n  CountryRequirementEditComponentProps,\r\n  CountryRequirementEditComponentState\r\n> {\r\n  state = {\r\n    model: new CountryRequirementViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.CountryRequirements +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CountryRequirementClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CountryRequirementMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as CountryRequirementViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: CountryRequirementViewModel) => {\r\n    let mapper = new CountryRequirementMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.CountryRequirements +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CountryRequirementClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"countryId\">countryId</label>\r\n            <br />\r\n            {getFieldDecorator('countryId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'countryId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"detail\">details</label>\r\n            <br />\r\n            {getFieldDecorator('detail', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'details'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCountryRequirementEditComponent = Form.create({\r\n  name: 'CountryRequirement Edit',\r\n})(CountryRequirementEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>00336051bbc612d6d01c63ad4aa99a44</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CountryRequirementMapper from './countryRequirementMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport CountryRequirementViewModel from './countryRequirementViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface CountryRequirementSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface CountryRequirementSearchComponentState\r\n{\r\n    records:Array<CountryRequirementViewModel>;\r\n    filteredRecords:Array<CountryRequirementViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class CountryRequirementSearchComponent extends React.Component<CountryRequirementSearchComponentProps, CountryRequirementSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<CountryRequirementViewModel>(), filteredRecords:new Array<CountryRequirementViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:CountryRequirementViewModel) {\r\n         this.props.history.push(ClientRoutes.CountryRequirements + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:CountryRequirementViewModel) {\r\n         this.props.history.push(ClientRoutes.CountryRequirements + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.CountryRequirements + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.CountryRequirementClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.CountryRequirements + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.CountryRequirements + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.CountryRequirementClientResponseModel>;\r\n\t\t    let viewModels : Array<CountryRequirementViewModel> = [];\r\n\t\t\tlet mapper = new CountryRequirementMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<CountryRequirementViewModel>(), filteredRecords:new Array<CountryRequirementViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'CountryRequirements',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'CountryId',\r\n                      accessor: 'countryId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Countries + '/' + props.original.countryId); }}>\r\n                          {String(\r\n                            props.original.countryIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'Details',\r\n                      accessor: 'detail',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.detail)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as CountryRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as CountryRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as CountryRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedCountryRequirementSearchComponent = Form.create({ name: 'CountryRequirement Search' })(CountryRequirementSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>949b5b4d74427683ff8519de39698d1f</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\n\r\nexport default class CustomerViewModel {\r\n  email: string;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n  note: string;\r\n  phone: string;\r\n\r\n  constructor() {\r\n    this.email = '';\r\n    this.firstName = '';\r\n    this.id = 0;\r\n    this.lastName = '';\r\n    this.note = '';\r\n    this.phone = '';\r\n  }\r\n\r\n  setProperties(\r\n    email: string,\r\n    firstName: string,\r\n    id: number,\r\n    lastName: string,\r\n    note: string,\r\n    phone: string\r\n  ): void {\r\n    this.email = email;\r\n    this.firstName = firstName;\r\n    this.id = id;\r\n    this.lastName = lastName;\r\n    this.note = note;\r\n    this.phone = phone;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.email);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8cbf4d7a31141f6e95aaf6bdf559f3b0</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CustomerViewModel from  './customerViewModel';\r\nexport default class CustomerMapper {\r\n    \r\n\tmapApiResponseToViewModel(dto: Api.CustomerClientResponseModel) : CustomerViewModel \r\n\t{\r\n\t\tlet response = new CustomerViewModel();\r\n\t\tresponse.setProperties(dto.email,dto.firstName,dto.id,dto.lastName,dto.note,dto.phone);\r\n\t\t\r\n\t\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tmapViewModelToApiRequest(model: CustomerViewModel) : Api.CustomerClientRequestModel\r\n\t{\r\n\t\tlet response = new Api.CustomerClientRequestModel();\r\n\t\tresponse.setProperties(model.email,model.firstName,model.id,model.lastName,model.note,model.phone);\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>3635440f79daf1b37935dfa59a15bf5c</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CustomerMapper from './customerMapper';\r\nimport CustomerViewModel from './customerViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface CustomerCreateComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CustomerCreateComponentState {\r\n  model?: CustomerViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass CustomerCreateComponent extends React.Component<\r\n  CustomerCreateComponentProps,\r\n  CustomerCreateComponentState\r\n> {\r\n  state = {\r\n    model: new CustomerViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as CustomerViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: CustomerViewModel) => {\r\n    let mapper = new CustomerMapper();\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Customers,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CustomerClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"email\">email</label>\r\n            <br />\r\n            {getFieldDecorator('email', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'email'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"firstName\">firstName</label>\r\n            <br />\r\n            {getFieldDecorator('firstName', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'firstName'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"note\">notes</label>\r\n            <br />\r\n            {getFieldDecorator('note', {\r\n              rules: [],\r\n            })(<Input placeholder={'notes'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"phone\">phone</label>\r\n            <br />\r\n            {getFieldDecorator('phone', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 10, message: 'Exceeds max length of 10' },\r\n              ],\r\n            })(<InputNumber placeholder={'phone'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCustomerCreateComponent = Form.create({\r\n  name: 'Customer Create',\r\n})(CustomerCreateComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8093103d232d3b1c4f0e0e91b63a0548</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\n\r\nexport default class EmployeeViewModel {\r\n  firstName: string;\r\n  id: number;\r\n  isSalesPerson: boolean;\r\n  isShipper: boolean;\r\n  lastName: string;\r\n\r\n  constructor() {\r\n    this.firstName = '';\r\n    this.id = 0;\r\n    this.isSalesPerson = false;\r\n    this.isShipper = false;\r\n    this.lastName = '';\r\n  }\r\n\r\n  setProperties(\r\n    firstName: string,\r\n    id: number,\r\n    isSalesPerson: boolean,\r\n    isShipper: boolean,\r\n    lastName: string\r\n  ): void {\r\n    this.firstName = firstName;\r\n    this.id = id;\r\n    this.isSalesPerson = isSalesPerson;\r\n    this.isShipper = isShipper;\r\n    this.lastName = lastName;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.firstName);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bc756d1a7fcaa32642ea7494fe024177</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport CustomerViewModel from '../customer/customerViewModel';\r\nimport EmployeeViewModel from '../employee/employeeViewModel';\r\n\r\nexport default class CustomerCommunicationViewModel {\r\n  customerId: number;\r\n  customerIdEntity: string;\r\n  customerIdNavigation?: CustomerViewModel;\r\n  dateCreated: any;\r\n  employeeId: number;\r\n  employeeIdEntity: string;\r\n  employeeIdNavigation?: EmployeeViewModel;\r\n  id: number;\r\n  note: string;\r\n\r\n  constructor() {\r\n    this.customerId = 0;\r\n    this.customerIdEntity = '';\r\n    this.customerIdNavigation = new CustomerViewModel();\r\n    this.dateCreated = undefined;\r\n    this.employeeId = 0;\r\n    this.employeeIdEntity = '';\r\n    this.employeeIdNavigation = new EmployeeViewModel();\r\n    this.id = 0;\r\n    this.note = '';\r\n  }\r\n\r\n  setProperties(\r\n    customerId: number,\r\n    dateCreated: any,\r\n    employeeId: number,\r\n    id: number,\r\n    note: string\r\n  ): void {\r\n    this.customerId = customerId;\r\n    this.dateCreated = moment(dateCreated, 'YYYY-MM-DD');\r\n    this.employeeId = employeeId;\r\n    this.id = id;\r\n    this.note = note;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.customerId);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>90763c140305407710ba3edf9c2df41b</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CustomerCommunicationViewModel from './customerCommunicationViewModel';\r\nimport CustomerViewModel from '../customer/customerViewModel';\r\nimport EmployeeViewModel from '../employee/employeeViewModel';\r\nexport default class CustomerCommunicationMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CustomerCommunicationClientResponseModel\r\n  ): CustomerCommunicationViewModel {\r\n    let response = new CustomerCommunicationViewModel();\r\n    response.setProperties(\r\n      dto.customerId,\r\n      dto.dateCreated,\r\n      dto.employeeId,\r\n      dto.id,\r\n      dto.note\r\n    );\r\n\r\n    if (dto.customerIdNavigation != null) {\r\n      response.customerIdNavigation = new CustomerViewModel();\r\n      response.customerIdNavigation.setProperties(\r\n        dto.customerIdNavigation.email,\r\n        dto.customerIdNavigation.firstName,\r\n        dto.customerIdNavigation.id,\r\n        dto.customerIdNavigation.lastName,\r\n        dto.customerIdNavigation.note,\r\n        dto.customerIdNavigation.phone\r\n      );\r\n    }\r\n    if (dto.employeeIdNavigation != null) {\r\n      response.employeeIdNavigation = new EmployeeViewModel();\r\n      response.employeeIdNavigation.setProperties(\r\n        dto.employeeIdNavigation.firstName,\r\n        dto.employeeIdNavigation.id,\r\n        dto.employeeIdNavigation.isSalesPerson,\r\n        dto.employeeIdNavigation.isShipper,\r\n        dto.employeeIdNavigation.lastName\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CustomerCommunicationViewModel\r\n  ): Api.CustomerCommunicationClientRequestModel {\r\n    let response = new Api.CustomerCommunicationClientRequestModel();\r\n    response.setProperties(\r\n      model.customerId,\r\n      model.dateCreated,\r\n      model.employeeId,\r\n      model.id,\r\n      model.note\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e5b8808ffd405f5eeddcca0c9ac92734</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CustomerCommunicationMapper from '../customerCommunication/customerCommunicationMapper';\r\nimport CustomerCommunicationViewModel from '../customerCommunication/customerCommunicationViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface CustomerCommunicationTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CustomerCommunicationTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<CustomerCommunicationViewModel>;\r\n}\r\n\r\nexport class CustomerCommunicationTableComponent extends React.Component<\r\n  CustomerCommunicationTableComponentProps,\r\n  CustomerCommunicationTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: CustomerCommunicationViewModel) {\r\n    this.props.history.push(\r\n      ClientRoutes.CustomerCommunications + '/edit/' + row.id\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: CustomerCommunicationViewModel) {\r\n    this.props.history.push(ClientRoutes.CustomerCommunications + '/' + row.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.CustomerCommunicationClientResponseModel\r\n          >;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CustomerCommunicationMapper();\r\n\r\n          let customerCommunications: Array<\r\n            CustomerCommunicationViewModel\r\n          > = [];\r\n\r\n          response.forEach(x => {\r\n            customerCommunications.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: customerCommunications,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'CustomerCommunications',\r\n                columns: [\r\n                  {\r\n                    Header: 'CustomerId',\r\n                    accessor: 'customerId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Customers +\r\n                                '/' +\r\n                                props.original.customerId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.customerIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'DateCreated',\r\n                    accessor: 'dateCreated',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.dateCreated)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'EmployeeId',\r\n                    accessor: 'employeeId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Employees +\r\n                                '/' +\r\n                                props.original.employeeId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.employeeIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Notes',\r\n                    accessor: 'note',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.note)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as CustomerCommunicationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as CustomerCommunicationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>de1516208940d2e008ccefb85158441b</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CustomerMapper from './customerMapper';\r\nimport CustomerViewModel from './customerViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport {CustomerCommunicationTableComponent} from '../shared/customerCommunicationTable'\r\n\t\r\n\r\n\r\n\r\ninterface CustomerDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CustomerDetailComponentState {\r\n  model?: CustomerViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass CustomerDetailComponent extends React.Component<\r\nCustomerDetailComponentProps,\r\nCustomerDetailComponentState\r\n> {\r\n  state = {\r\n    model: new CustomerViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: ''\r\n  };\r\n\r\n  handleEditClick(e:any) {\r\n    this.props.history.push(ClientRoutes.Customers + '/edit/' + this.state.model!.id);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Customers +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CustomerClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CustomerMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } \r\n  \r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n\t\t<Button \r\n\t\t\tstyle={{'float':'right'}}\r\n\t\t\ttype=\"primary\" \r\n\t\t\tonClick={(e:any) => {\r\n\t\t\t\tthis.handleEditClick(e)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n             <i className=\"fas fa-edit\" />\r\n\t\t  </Button>\r\n\t\t  <div>\r\n\t\t\t\t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>email</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.email)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>firstName</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.firstName)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>notes</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.note)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>phone</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.phone)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t  </div>\r\n          {message}\r\n\t\t <div>\r\n            <h3>CustomerCommunications</h3>\r\n            <CustomerCommunicationTableComponent \r\n\t\t\tid={this.state.model!.id} \r\n\t\t\thistory={this.props.history} \r\n\t\t\tmatch={this.props.match} \r\n\t\t\tapiRoute={Constants.ApiEndpoint + ApiRoutes.Customers + '/' + this.state.model!.id + '/' + ApiRoutes.CustomerCommunications}\r\n\t\t\t/>\r\n         </div>\r\n\t\r\n\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCustomerDetailComponent = Form.create({ name: 'Customer Detail' })(\r\n  CustomerDetailComponent\r\n);\r\n\r\n/*<Codenesium>\r\n    <Hash>d07fce84b7ce09840a5e57ae80effd85</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CustomerMapper from './customerMapper';\r\nimport CustomerViewModel from './customerViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\ninterface CustomerEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CustomerEditComponentState {\r\n  model?: CustomerViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass CustomerEditComponent extends React.Component<\r\n  CustomerEditComponentProps,\r\n  CustomerEditComponentState\r\n> {\r\n  state = {\r\n    model: new CustomerViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Customers +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CustomerClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CustomerMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as CustomerViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: CustomerViewModel) => {\r\n    let mapper = new CustomerMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Customers +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CustomerClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"email\">email</label>\r\n            <br />\r\n            {getFieldDecorator('email', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'email'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"firstName\">firstName</label>\r\n            <br />\r\n            {getFieldDecorator('firstName', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'firstName'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"note\">notes</label>\r\n            <br />\r\n            {getFieldDecorator('note', {\r\n              rules: [],\r\n            })(<Input placeholder={'notes'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"phone\">phone</label>\r\n            <br />\r\n            {getFieldDecorator('phone', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 10, message: 'Exceeds max length of 10' },\r\n              ],\r\n            })(<InputNumber placeholder={'phone'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCustomerEditComponent = Form.create({\r\n  name: 'Customer Edit',\r\n})(CustomerEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4e6a62fa57a154fed441c95884d8199b</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CustomerMapper from './customerMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport CustomerViewModel from './customerViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface CustomerSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CustomerSearchComponentState {\r\n  records: Array<CustomerViewModel>;\r\n  filteredRecords: Array<CustomerViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class CustomerSearchComponent extends React.Component<\r\n  CustomerSearchComponentProps,\r\n  CustomerSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<CustomerViewModel>(),\r\n    filteredRecords: new Array<CustomerViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: CustomerViewModel) {\r\n    this.props.history.push(ClientRoutes.Customers + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: CustomerViewModel) {\r\n    this.props.history.push(ClientRoutes.Customers + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Customers + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.CustomerClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Customers + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.Customers + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.CustomerClientResponseModel>;\r\n          let viewModels: Array<CustomerViewModel> = [];\r\n          let mapper = new CustomerMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<CustomerViewModel>(),\r\n            filteredRecords: new Array<CustomerViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Customers',\r\n                columns: [\r\n                  {\r\n                    Header: 'Email',\r\n                    accessor: 'email',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.email)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FirstName',\r\n                    accessor: 'firstName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.firstName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Notes',\r\n                    accessor: 'note',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.note)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Phone',\r\n                    accessor: 'phone',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.phone)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as CustomerViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as CustomerViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as CustomerViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCustomerSearchComponent = Form.create({\r\n  name: 'Customer Search',\r\n})(CustomerSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2aa1a4ec86619bbeda8f1993e9a9ed1f</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CustomerCommunicationMapper from './customerCommunicationMapper';\r\nimport CustomerCommunicationViewModel from './customerCommunicationViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { CustomerSelectComponent } from '../shared/customerSelect'\r\n\timport { EmployeeSelectComponent } from '../shared/employeeSelect'\r\n\t\r\ninterface CustomerCommunicationCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface CustomerCommunicationCreateComponentState {\r\n  model?: CustomerCommunicationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass CustomerCommunicationCreateComponent extends React.Component<\r\n  CustomerCommunicationCreateComponentProps,\r\n  CustomerCommunicationCreateComponentState\r\n> {\r\n  state = {\r\n    model: new CustomerCommunicationViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as CustomerCommunicationViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:CustomerCommunicationViewModel) =>\r\n  {  \r\n    let mapper = new CustomerCommunicationMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.CustomerCommunications,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CustomerCommunicationClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='customerId'>customerId</label>\r\n              <br />             \r\n              {getFieldDecorator('customerId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"customerId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='dateCreated'>dateCreated</label>\r\n              <br />             \r\n              {getFieldDecorator('dateCreated', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <DatePicker format={'YYYY-MM-DD'} placeholder={\"dateCreated\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='employeeId'>employeeId</label>\r\n              <br />             \r\n              {getFieldDecorator('employeeId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"employeeId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='note'>notes</label>\r\n              <br />             \r\n              {getFieldDecorator('note', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"notes\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCustomerCommunicationCreateComponent = Form.create({ name: 'CustomerCommunication Create' })(CustomerCommunicationCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>db3502b5c3d9b741e5e8e9d222691d25</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CustomerCommunicationMapper from './customerCommunicationMapper';\r\nimport CustomerCommunicationViewModel from './customerCommunicationViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface CustomerCommunicationDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface CustomerCommunicationDetailComponentState {\r\n  model?: CustomerCommunicationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass CustomerCommunicationDetailComponent extends React.Component<\r\n  CustomerCommunicationDetailComponentProps,\r\n  CustomerCommunicationDetailComponentState\r\n> {\r\n  state = {\r\n    model: new CustomerCommunicationViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.CustomerCommunications + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.CustomerCommunications +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CustomerCommunicationClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CustomerCommunicationMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>customerId</h3>\r\n              <p>\r\n                {String(this.state.model!.customerIdNavigation!.toDisplay())}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h3>dateCreated</h3>\r\n              <p>{String(this.state.model!.dateCreated)}</p>\r\n            </div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>employeeId</h3>\r\n              <p>\r\n                {String(this.state.model!.employeeIdNavigation!.toDisplay())}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h3>notes</h3>\r\n              <p>{String(this.state.model!.note)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCustomerCommunicationDetailComponent = Form.create({\r\n  name: 'CustomerCommunication Detail',\r\n})(CustomerCommunicationDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5a7a55cba073279e79daf9ef71942aa8</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport CustomerCommunicationMapper from './customerCommunicationMapper';\r\nimport CustomerCommunicationViewModel from './customerCommunicationViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { CustomerSelectComponent } from '../shared/customerSelect'\r\n\timport { EmployeeSelectComponent } from '../shared/employeeSelect'\r\n\tinterface CustomerCommunicationEditComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface CustomerCommunicationEditComponentState {\r\n  model?: CustomerCommunicationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass CustomerCommunicationEditComponent extends React.Component<\r\n  CustomerCommunicationEditComponentProps,\r\n  CustomerCommunicationEditComponentState\r\n> {\r\n  state = {\r\n    model: new CustomerCommunicationViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n    componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.CustomerCommunications +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CustomerCommunicationClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CustomerCommunicationMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n\t\t  this.props.form.setFieldsValue(mapper.mapApiResponseToViewModel(response));\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n }\r\n \r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as CustomerCommunicationViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:CustomerCommunicationViewModel) =>\r\n  {  \r\n    let mapper = new CustomerCommunicationMapper();\r\n     axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.CustomerCommunications + '/' + this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CustomerCommunicationClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='customerId'>customerId</label>\r\n              <br />             \r\n              {getFieldDecorator('customerId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"customerId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='dateCreated'>dateCreated</label>\r\n              <br />             \r\n              {getFieldDecorator('dateCreated', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <DatePicker format={'YYYY-MM-DD'} placeholder={\"dateCreated\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='employeeId'>employeeId</label>\r\n              <br />             \r\n              {getFieldDecorator('employeeId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"employeeId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='note'>notes</label>\r\n              <br />             \r\n              {getFieldDecorator('note', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"notes\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedCustomerCommunicationEditComponent = Form.create({ name: 'CustomerCommunication Edit' })(CustomerCommunicationEditComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>e454bea96f66437f18d6886e0d33023f</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CustomerCommunicationMapper from './customerCommunicationMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport CustomerCommunicationViewModel from './customerCommunicationViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface CustomerCommunicationSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface CustomerCommunicationSearchComponentState\r\n{\r\n    records:Array<CustomerCommunicationViewModel>;\r\n    filteredRecords:Array<CustomerCommunicationViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class CustomerCommunicationSearchComponent extends React.Component<CustomerCommunicationSearchComponentProps, CustomerCommunicationSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<CustomerCommunicationViewModel>(), filteredRecords:new Array<CustomerCommunicationViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:CustomerCommunicationViewModel) {\r\n         this.props.history.push(ClientRoutes.CustomerCommunications + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:CustomerCommunicationViewModel) {\r\n         this.props.history.push(ClientRoutes.CustomerCommunications + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.CustomerCommunications + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.CustomerCommunicationClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.CustomerCommunications + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.CustomerCommunications + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.CustomerCommunicationClientResponseModel>;\r\n\t\t    let viewModels : Array<CustomerCommunicationViewModel> = [];\r\n\t\t\tlet mapper = new CustomerCommunicationMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<CustomerCommunicationViewModel>(), filteredRecords:new Array<CustomerCommunicationViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'CustomerCommunications',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'CustomerId',\r\n                      accessor: 'customerId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Customers + '/' + props.original.customerId); }}>\r\n                          {String(\r\n                            props.original.customerIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'DateCreated',\r\n                      accessor: 'dateCreated',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.dateCreated)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'EmployeeId',\r\n                      accessor: 'employeeId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Employees + '/' + props.original.employeeId); }}>\r\n                          {String(\r\n                            props.original.employeeIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'Notes',\r\n                      accessor: 'note',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.note)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as CustomerCommunicationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as CustomerCommunicationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as CustomerCommunicationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedCustomerCommunicationSearchComponent = Form.create({ name: 'CustomerCommunication Search' })(CustomerCommunicationSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>91a73ae4d819826854327ae2e38f29fb</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport DestinationMapper from './destinationMapper';\r\nimport DestinationViewModel from './destinationViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { CountrySelectComponent } from '../shared/countrySelect'\r\n\t\r\ninterface DestinationCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface DestinationCreateComponentState {\r\n  model?: DestinationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass DestinationCreateComponent extends React.Component<\r\n  DestinationCreateComponentProps,\r\n  DestinationCreateComponentState\r\n> {\r\n  state = {\r\n    model: new DestinationViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as DestinationViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:DestinationViewModel) =>\r\n  {  \r\n    let mapper = new DestinationMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Destinations,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.DestinationClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='countryId'>countryId</label>\r\n              <br />             \r\n              {getFieldDecorator('countryId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"countryId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='order'>order</label>\r\n              <br />             \r\n              {getFieldDecorator('order', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <InputNumber placeholder={\"order\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedDestinationCreateComponent = Form.create({ name: 'Destination Create' })(DestinationCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>4e42f847f3acb5991a06729a8ce6a2b2</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\n\r\nexport default class PipelineStepStatusViewModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>20ad70562111cbd7d14624eaab1ffbb5</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport PipelineStepStatusViewModel from '../pipelineStepStatus/pipelineStepStatusViewModel';\r\nimport EmployeeViewModel from '../employee/employeeViewModel';\r\n\r\nexport default class PipelineStepViewModel {\r\n  id: number;\r\n  name: string;\r\n  pipelineStepStatusId: number;\r\n  pipelineStepStatusIdEntity: string;\r\n  pipelineStepStatusIdNavigation?: PipelineStepStatusViewModel;\r\n  shipperId: number;\r\n  shipperIdEntity: string;\r\n  shipperIdNavigation?: EmployeeViewModel;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n    this.pipelineStepStatusId = 0;\r\n    this.pipelineStepStatusIdEntity = '';\r\n    this.pipelineStepStatusIdNavigation = new PipelineStepStatusViewModel();\r\n    this.shipperId = 0;\r\n    this.shipperIdEntity = '';\r\n    this.shipperIdNavigation = new EmployeeViewModel();\r\n  }\r\n\r\n  setProperties(\r\n    id: number,\r\n    name: string,\r\n    pipelineStepStatusId: number,\r\n    shipperId: number\r\n  ): void {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.pipelineStepStatusId = pipelineStepStatusId;\r\n    this.shipperId = shipperId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.id);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d0a7180877936f423762f60ee420e097</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport DestinationViewModel from '../destination/destinationViewModel';\r\nimport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel';\r\n\r\nexport default class PipelineStepDestinationViewModel {\r\n  destinationId: number;\r\n  destinationIdEntity: string;\r\n  destinationIdNavigation?: DestinationViewModel;\r\n  id: number;\r\n  pipelineStepId: number;\r\n  pipelineStepIdEntity: string;\r\n  pipelineStepIdNavigation?: PipelineStepViewModel;\r\n\r\n  constructor() {\r\n    this.destinationId = 0;\r\n    this.destinationIdEntity = '';\r\n    this.destinationIdNavigation = new DestinationViewModel();\r\n    this.id = 0;\r\n    this.pipelineStepId = 0;\r\n    this.pipelineStepIdEntity = '';\r\n    this.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n  }\r\n\r\n  setProperties(\r\n    destinationId: number,\r\n    id: number,\r\n    pipelineStepId: number\r\n  ): void {\r\n    this.destinationId = destinationId;\r\n    this.id = id;\r\n    this.pipelineStepId = pipelineStepId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.destinationId);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7c3a44f41d9efff83c3c8bf6b80d8c07</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PipelineStepDestinationViewModel from './pipelineStepDestinationViewModel';\r\nimport DestinationViewModel from '../destination/destinationViewModel';\r\nimport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel';\r\nexport default class PipelineStepDestinationMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PipelineStepDestinationClientResponseModel\r\n  ): PipelineStepDestinationViewModel {\r\n    let response = new PipelineStepDestinationViewModel();\r\n    response.setProperties(dto.destinationId, dto.id, dto.pipelineStepId);\r\n\r\n    if (dto.destinationIdNavigation != null) {\r\n      response.destinationIdNavigation = new DestinationViewModel();\r\n      response.destinationIdNavigation.setProperties(\r\n        dto.destinationIdNavigation.countryId,\r\n        dto.destinationIdNavigation.id,\r\n        dto.destinationIdNavigation.name,\r\n        dto.destinationIdNavigation.order\r\n      );\r\n    }\r\n    if (dto.pipelineStepIdNavigation != null) {\r\n      response.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n      response.pipelineStepIdNavigation.setProperties(\r\n        dto.pipelineStepIdNavigation.id,\r\n        dto.pipelineStepIdNavigation.name,\r\n        dto.pipelineStepIdNavigation.pipelineStepStatusId,\r\n        dto.pipelineStepIdNavigation.shipperId\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PipelineStepDestinationViewModel\r\n  ): Api.PipelineStepDestinationClientRequestModel {\r\n    let response = new Api.PipelineStepDestinationClientRequestModel();\r\n    response.setProperties(model.destinationId, model.id, model.pipelineStepId);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5b15eb9743cac12a24297b90874c519a</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepDestinationMapper from '../pipelineStepDestination/pipelineStepDestinationMapper';\r\nimport PipelineStepDestinationViewModel from '../pipelineStepDestination/pipelineStepDestinationViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface PipelineStepDestinationTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepDestinationTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<PipelineStepDestinationViewModel>;\r\n}\r\n\r\nexport class PipelineStepDestinationTableComponent extends React.Component<\r\n  PipelineStepDestinationTableComponentProps,\r\n  PipelineStepDestinationTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: PipelineStepDestinationViewModel) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineStepDestinations + '/edit/' + row.id\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: PipelineStepDestinationViewModel) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineStepDestinations + '/' + row.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.PipelineStepDestinationClientResponseModel\r\n          >;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepDestinationMapper();\r\n\r\n          let pipelineStepDestinations: Array<\r\n            PipelineStepDestinationViewModel\r\n          > = [];\r\n\r\n          response.forEach(x => {\r\n            pipelineStepDestinations.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: pipelineStepDestinations,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'PipelineStepDestinations',\r\n                columns: [\r\n                  {\r\n                    Header: 'DestinationId',\r\n                    accessor: 'destinationId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Destinations +\r\n                                '/' +\r\n                                props.original.destinationId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.destinationIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PipelineStepId',\r\n                    accessor: 'pipelineStepId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.PipelineSteps +\r\n                                '/' +\r\n                                props.original.pipelineStepId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStepDestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStepDestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c0eebd3358ac46957cc00e2c5854d91b</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport DestinationMapper from './destinationMapper';\r\nimport DestinationViewModel from './destinationViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport {PipelineStepDestinationTableComponent} from '../shared/pipelineStepDestinationTable'\r\n\t\r\n\r\n\r\n\r\ninterface DestinationDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface DestinationDetailComponentState {\r\n  model?: DestinationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass DestinationDetailComponent extends React.Component<\r\nDestinationDetailComponentProps,\r\nDestinationDetailComponentState\r\n> {\r\n  state = {\r\n    model: new DestinationViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: ''\r\n  };\r\n\r\n  handleEditClick(e:any) {\r\n    this.props.history.push(ClientRoutes.Destinations + '/edit/' + this.state.model!.id);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Destinations +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.DestinationClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new DestinationMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } \r\n  \r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n\t\t<Button \r\n\t\t\tstyle={{'float':'right'}}\r\n\t\t\ttype=\"primary\" \r\n\t\t\tonClick={(e:any) => {\r\n\t\t\t\tthis.handleEditClick(e)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n             <i className=\"fas fa-edit\" />\r\n\t\t  </Button>\r\n\t\t  <div>\r\n\t\t\t\t\t\t\t\t\t <div style={{\"marginBottom\":\"10px\"}}>\r\n\t\t\t\t\t\t\t<h3>countryId</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.countryIdNavigation!.toDisplay())}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>name</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.name)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>order</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.order)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t  </div>\r\n          {message}\r\n\t\t <div>\r\n            <h3>PipelineStepDestinations</h3>\r\n            <PipelineStepDestinationTableComponent \r\n\t\t\tid={this.state.model!.id} \r\n\t\t\thistory={this.props.history} \r\n\t\t\tmatch={this.props.match} \r\n\t\t\tapiRoute={Constants.ApiEndpoint + ApiRoutes.Destinations + '/' + this.state.model!.id + '/' + ApiRoutes.PipelineStepDestinations}\r\n\t\t\t/>\r\n         </div>\r\n\t\r\n\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedDestinationDetailComponent = Form.create({ name: 'Destination Detail' })(\r\n  DestinationDetailComponent\r\n);\r\n\r\n/*<Codenesium>\r\n    <Hash>670b769fb9547328af8edd0c212133b8</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport DestinationMapper from './destinationMapper';\r\nimport DestinationViewModel from './destinationViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { CountrySelectComponent } from '../shared/countrySelect';\r\ninterface DestinationEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface DestinationEditComponentState {\r\n  model?: DestinationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass DestinationEditComponent extends React.Component<\r\n  DestinationEditComponentProps,\r\n  DestinationEditComponentState\r\n> {\r\n  state = {\r\n    model: new DestinationViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Destinations +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.DestinationClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new DestinationMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as DestinationViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: DestinationViewModel) => {\r\n    let mapper = new DestinationMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Destinations +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.DestinationClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"countryId\">countryId</label>\r\n            <br />\r\n            {getFieldDecorator('countryId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'countryId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"name\">name</label>\r\n            <br />\r\n            {getFieldDecorator('name', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'name'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"order\">order</label>\r\n            <br />\r\n            {getFieldDecorator('order', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<InputNumber placeholder={'order'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedDestinationEditComponent = Form.create({\r\n  name: 'Destination Edit',\r\n})(DestinationEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>578c2b928a52346ffd45498e1b592436</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport DestinationMapper from './destinationMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport DestinationViewModel from './destinationViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface DestinationSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface DestinationSearchComponentState\r\n{\r\n    records:Array<DestinationViewModel>;\r\n    filteredRecords:Array<DestinationViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class DestinationSearchComponent extends React.Component<DestinationSearchComponentProps, DestinationSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<DestinationViewModel>(), filteredRecords:new Array<DestinationViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:DestinationViewModel) {\r\n         this.props.history.push(ClientRoutes.Destinations + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:DestinationViewModel) {\r\n         this.props.history.push(ClientRoutes.Destinations + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.Destinations + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.DestinationClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.Destinations + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Destinations + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.DestinationClientResponseModel>;\r\n\t\t    let viewModels : Array<DestinationViewModel> = [];\r\n\t\t\tlet mapper = new DestinationMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<DestinationViewModel>(), filteredRecords:new Array<DestinationViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'Destinations',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'CountryId',\r\n                      accessor: 'countryId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Countries + '/' + props.original.countryId); }}>\r\n                          {String(\r\n                            props.original.countryIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'Name',\r\n                      accessor: 'name',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Order',\r\n                      accessor: 'order',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.order)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as DestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as DestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as DestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedDestinationSearchComponent = Form.create({ name: 'Destination Search' })(DestinationSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>c605b89a7c748333b7d2cac10a7905a5</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport EmployeeViewModel from './employeeViewModel';\r\nexport default class EmployeeMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.EmployeeClientResponseModel\r\n  ): EmployeeViewModel {\r\n    let response = new EmployeeViewModel();\r\n    response.setProperties(\r\n      dto.firstName,\r\n      dto.id,\r\n      dto.isSalesPerson,\r\n      dto.isShipper,\r\n      dto.lastName\r\n    );\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: EmployeeViewModel\r\n  ): Api.EmployeeClientRequestModel {\r\n    let response = new Api.EmployeeClientRequestModel();\r\n    response.setProperties(\r\n      model.firstName,\r\n      model.id,\r\n      model.isSalesPerson,\r\n      model.isShipper,\r\n      model.lastName\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6a4c7668ffcdfef40a0dc6216f67bf50</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport EmployeeMapper from './employeeMapper';\r\nimport EmployeeViewModel from './employeeViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface EmployeeCreateComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface EmployeeCreateComponentState {\r\n  model?: EmployeeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass EmployeeCreateComponent extends React.Component<\r\n  EmployeeCreateComponentProps,\r\n  EmployeeCreateComponentState\r\n> {\r\n  state = {\r\n    model: new EmployeeViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as EmployeeViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: EmployeeViewModel) => {\r\n    let mapper = new EmployeeMapper();\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Employees,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.EmployeeClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"firstName\">firstName</label>\r\n            <br />\r\n            {getFieldDecorator('firstName', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'firstName'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"isSalesPerson\">isSalesPerson</label>\r\n            <br />\r\n            {getFieldDecorator('isSalesPerson', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n              valuePropName: 'checked',\r\n            })(<Switch />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"isShipper\">isShipper</label>\r\n            <br />\r\n            {getFieldDecorator('isShipper', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n              valuePropName: 'checked',\r\n            })(<Switch />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"lastName\">lastName</label>\r\n            <br />\r\n            {getFieldDecorator('lastName', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'lastName'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedEmployeeCreateComponent = Form.create({\r\n  name: 'Employee Create',\r\n})(EmployeeCreateComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>772dbce6e6047d620ceafa9831ee1f59</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PipelineStepViewModel from './pipelineStepViewModel';\r\nimport PipelineStepStatusViewModel from '../pipelineStepStatus/pipelineStepStatusViewModel';\r\nimport EmployeeViewModel from '../employee/employeeViewModel';\r\nexport default class PipelineStepMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PipelineStepClientResponseModel\r\n  ): PipelineStepViewModel {\r\n    let response = new PipelineStepViewModel();\r\n    response.setProperties(\r\n      dto.id,\r\n      dto.name,\r\n      dto.pipelineStepStatusId,\r\n      dto.shipperId\r\n    );\r\n\r\n    if (dto.pipelineStepStatusIdNavigation != null) {\r\n      response.pipelineStepStatusIdNavigation = new PipelineStepStatusViewModel();\r\n      response.pipelineStepStatusIdNavigation.setProperties(\r\n        dto.pipelineStepStatusIdNavigation.id,\r\n        dto.pipelineStepStatusIdNavigation.name\r\n      );\r\n    }\r\n    if (dto.shipperIdNavigation != null) {\r\n      response.shipperIdNavigation = new EmployeeViewModel();\r\n      response.shipperIdNavigation.setProperties(\r\n        dto.shipperIdNavigation.firstName,\r\n        dto.shipperIdNavigation.id,\r\n        dto.shipperIdNavigation.isSalesPerson,\r\n        dto.shipperIdNavigation.isShipper,\r\n        dto.shipperIdNavigation.lastName\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PipelineStepViewModel\r\n  ): Api.PipelineStepClientRequestModel {\r\n    let response = new Api.PipelineStepClientRequestModel();\r\n    response.setProperties(\r\n      model.id,\r\n      model.name,\r\n      model.pipelineStepStatusId,\r\n      model.shipperId\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>eae456c41cc4dfc1b079eb577304dfbd</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepMapper from '../pipelineStep/pipelineStepMapper';\r\nimport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface PipelineStepTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<PipelineStepViewModel>;\r\n}\r\n\r\nexport class PipelineStepTableComponent extends React.Component<\r\n  PipelineStepTableComponentProps,\r\n  PipelineStepTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: PipelineStepViewModel) {\r\n    this.props.history.push(ClientRoutes.PipelineSteps + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: PipelineStepViewModel) {\r\n    this.props.history.push(ClientRoutes.PipelineSteps + '/' + row.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.PipelineStepClientResponseModel\r\n          >;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepMapper();\r\n\r\n          let pipelineSteps: Array<PipelineStepViewModel> = [];\r\n\r\n          response.forEach(x => {\r\n            pipelineSteps.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: pipelineSteps,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'PipelineSteps',\r\n                columns: [\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PipelineStepStatusId',\r\n                    accessor: 'pipelineStepStatusId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.PipelineStepStatus +\r\n                                '/' +\r\n                                props.original.pipelineStepStatusId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.pipelineStepStatusIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShipperId',\r\n                    accessor: 'shipperId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Employees +\r\n                                '/' +\r\n                                props.original.shipperId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.shipperIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>dc43f89da542be5405c44d8b3897cc19</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport EmployeeViewModel from '../employee/employeeViewModel';\r\nimport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel';\r\n\r\nexport default class PipelineStepNoteViewModel {\r\n  employeeId: number;\r\n  employeeIdEntity: string;\r\n  employeeIdNavigation?: EmployeeViewModel;\r\n  id: number;\r\n  note: string;\r\n  pipelineStepId: number;\r\n  pipelineStepIdEntity: string;\r\n  pipelineStepIdNavigation?: PipelineStepViewModel;\r\n\r\n  constructor() {\r\n    this.employeeId = 0;\r\n    this.employeeIdEntity = '';\r\n    this.employeeIdNavigation = new EmployeeViewModel();\r\n    this.id = 0;\r\n    this.note = '';\r\n    this.pipelineStepId = 0;\r\n    this.pipelineStepIdEntity = '';\r\n    this.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n  }\r\n\r\n  setProperties(\r\n    employeeId: number,\r\n    id: number,\r\n    note: string,\r\n    pipelineStepId: number\r\n  ): void {\r\n    this.employeeId = employeeId;\r\n    this.id = id;\r\n    this.note = note;\r\n    this.pipelineStepId = pipelineStepId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.employeeId);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c0ac4bd43cbfc09b707cf05f5f478059</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PipelineStepNoteViewModel from './pipelineStepNoteViewModel';\r\nimport EmployeeViewModel from '../employee/employeeViewModel';\r\nimport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel';\r\nexport default class PipelineStepNoteMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PipelineStepNoteClientResponseModel\r\n  ): PipelineStepNoteViewModel {\r\n    let response = new PipelineStepNoteViewModel();\r\n    response.setProperties(\r\n      dto.employeeId,\r\n      dto.id,\r\n      dto.note,\r\n      dto.pipelineStepId\r\n    );\r\n\r\n    if (dto.employeeIdNavigation != null) {\r\n      response.employeeIdNavigation = new EmployeeViewModel();\r\n      response.employeeIdNavigation.setProperties(\r\n        dto.employeeIdNavigation.firstName,\r\n        dto.employeeIdNavigation.id,\r\n        dto.employeeIdNavigation.isSalesPerson,\r\n        dto.employeeIdNavigation.isShipper,\r\n        dto.employeeIdNavigation.lastName\r\n      );\r\n    }\r\n    if (dto.pipelineStepIdNavigation != null) {\r\n      response.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n      response.pipelineStepIdNavigation.setProperties(\r\n        dto.pipelineStepIdNavigation.id,\r\n        dto.pipelineStepIdNavigation.name,\r\n        dto.pipelineStepIdNavigation.pipelineStepStatusId,\r\n        dto.pipelineStepIdNavigation.shipperId\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PipelineStepNoteViewModel\r\n  ): Api.PipelineStepNoteClientRequestModel {\r\n    let response = new Api.PipelineStepNoteClientRequestModel();\r\n    response.setProperties(\r\n      model.employeeId,\r\n      model.id,\r\n      model.note,\r\n      model.pipelineStepId\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bc565c439c9580cf09dce112613baa98</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepNoteMapper from '../pipelineStepNote/pipelineStepNoteMapper';\r\nimport PipelineStepNoteViewModel from '../pipelineStepNote/pipelineStepNoteViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from \"react-table\";\r\n\r\ninterface PipelineStepNoteTableComponentProps {\r\n  id:number,\r\n  apiRoute:string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepNoteTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords : Array<PipelineStepNoteViewModel>;\r\n}\r\n\r\nexport class  PipelineStepNoteTableComponent extends React.Component<\r\nPipelineStepNoteTableComponentProps,\r\nPipelineStepNoteTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords:[]\r\n  };\r\n\r\nhandleEditClick(e:any, row: PipelineStepNoteViewModel) {\r\n  this.props.history.push(ClientRoutes.PipelineStepNotes + '/edit/' + row.id);\r\n}\r\n\r\nhandleDetailClick(e:any, row: PipelineStepNoteViewModel) {\r\n  this.props.history.push(ClientRoutes.PipelineStepNotes + '/' + row.id);\r\n}\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PipelineStepNoteClientResponseModel>;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepNoteMapper();\r\n          \r\n          let pipelineStepNotes:Array<PipelineStepNoteViewModel> = [];\r\n\r\n          response.forEach(x =>\r\n          {\r\n              pipelineStepNotes.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: pipelineStepNotes,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n\tlet message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n       return <Spin size=\"large\" />;\r\n    }\r\n\telse if (this.state.errorOccurred) {\r\n\t  return <Alert message={this.state.errorMessage} type='error' />;\r\n\t}\r\n\t else if (this.state.loaded) {\r\n      return (\r\n\t  <div>\r\n\t\t{message}\r\n         <ReactTable \r\n                data={this.state.filteredRecords}\r\n\t\t\t\tdefaultPageSize={10}\r\n                columns={[{\r\n                    Header: 'PipelineStepNotes',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'EmployeeId',\r\n                      accessor: 'employeeId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Employees + '/' + props.original.employeeId); }}>\r\n                          {String(\r\n                            props.original.employeeIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'PipelineStepId',\r\n                      accessor: 'pipelineStepId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.PipelineSteps + '/' + props.original.pipelineStepId); }}>\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStepNoteViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStepNoteViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n\t\t\t</div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>9bb7e2c2cafcca7d3e1468959ff6cefe</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport EmployeeMapper from './employeeMapper';\r\nimport EmployeeViewModel from './employeeViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport {CustomerCommunicationTableComponent} from '../shared/customerCommunicationTable'\r\n\timport {PipelineStepTableComponent} from '../shared/pipelineStepTable'\r\n\timport {PipelineStepNoteTableComponent} from '../shared/pipelineStepNoteTable'\r\n\t\r\n\r\n\r\n\r\ninterface EmployeeDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface EmployeeDetailComponentState {\r\n  model?: EmployeeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass EmployeeDetailComponent extends React.Component<\r\nEmployeeDetailComponentProps,\r\nEmployeeDetailComponentState\r\n> {\r\n  state = {\r\n    model: new EmployeeViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: ''\r\n  };\r\n\r\n  handleEditClick(e:any) {\r\n    this.props.history.push(ClientRoutes.Employees + '/edit/' + this.state.model!.id);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Employees +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.EmployeeClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new EmployeeMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } \r\n  \r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n\t\t<Button \r\n\t\t\tstyle={{'float':'right'}}\r\n\t\t\ttype=\"primary\" \r\n\t\t\tonClick={(e:any) => {\r\n\t\t\t\tthis.handleEditClick(e)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n             <i className=\"fas fa-edit\" />\r\n\t\t  </Button>\r\n\t\t  <div>\r\n\t\t\t\t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>firstName</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.firstName)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>isSalesPerson</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.isSalesPerson)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>isShipper</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.isShipper)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>lastName</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.lastName)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t  </div>\r\n          {message}\r\n\t\t <div>\r\n            <h3>CustomerCommunications</h3>\r\n            <CustomerCommunicationTableComponent \r\n\t\t\tid={this.state.model!.id} \r\n\t\t\thistory={this.props.history} \r\n\t\t\tmatch={this.props.match} \r\n\t\t\tapiRoute={Constants.ApiEndpoint + ApiRoutes.Employees + '/' + this.state.model!.id + '/' + ApiRoutes.CustomerCommunications}\r\n\t\t\t/>\r\n         </div>\r\n\t\t\t <div>\r\n            <h3>PipelineSteps</h3>\r\n            <PipelineStepTableComponent \r\n\t\t\tid={this.state.model!.id} \r\n\t\t\thistory={this.props.history} \r\n\t\t\tmatch={this.props.match} \r\n\t\t\tapiRoute={Constants.ApiEndpoint + ApiRoutes.Employees + '/' + this.state.model!.id + '/' + ApiRoutes.PipelineSteps}\r\n\t\t\t/>\r\n         </div>\r\n\t\t\t <div>\r\n            <h3>PipelineStepNotes</h3>\r\n            <PipelineStepNoteTableComponent \r\n\t\t\tid={this.state.model!.id} \r\n\t\t\thistory={this.props.history} \r\n\t\t\tmatch={this.props.match} \r\n\t\t\tapiRoute={Constants.ApiEndpoint + ApiRoutes.Employees + '/' + this.state.model!.id + '/' + ApiRoutes.PipelineStepNotes}\r\n\t\t\t/>\r\n         </div>\r\n\t\r\n\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedEmployeeDetailComponent = Form.create({ name: 'Employee Detail' })(\r\n  EmployeeDetailComponent\r\n);\r\n\r\n/*<Codenesium>\r\n    <Hash>aa43183c7c4e5b74de14356fc0838ca0</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport EmployeeMapper from './employeeMapper';\r\nimport EmployeeViewModel from './employeeViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\ninterface EmployeeEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface EmployeeEditComponentState {\r\n  model?: EmployeeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass EmployeeEditComponent extends React.Component<\r\n  EmployeeEditComponentProps,\r\n  EmployeeEditComponentState\r\n> {\r\n  state = {\r\n    model: new EmployeeViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Employees +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.EmployeeClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new EmployeeMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as EmployeeViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: EmployeeViewModel) => {\r\n    let mapper = new EmployeeMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Employees +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.EmployeeClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"firstName\">firstName</label>\r\n            <br />\r\n            {getFieldDecorator('firstName', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'firstName'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"isSalesPerson\">isSalesPerson</label>\r\n            <br />\r\n            {getFieldDecorator('isSalesPerson', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n              valuePropName: 'checked',\r\n            })(<Switch />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"isShipper\">isShipper</label>\r\n            <br />\r\n            {getFieldDecorator('isShipper', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n              valuePropName: 'checked',\r\n            })(<Switch />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"lastName\">lastName</label>\r\n            <br />\r\n            {getFieldDecorator('lastName', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'lastName'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedEmployeeEditComponent = Form.create({\r\n  name: 'Employee Edit',\r\n})(EmployeeEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>50c9960bd44aabedc6312082fd90dde7</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport EmployeeMapper from './employeeMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport EmployeeViewModel from './employeeViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface EmployeeSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface EmployeeSearchComponentState {\r\n  records: Array<EmployeeViewModel>;\r\n  filteredRecords: Array<EmployeeViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class EmployeeSearchComponent extends React.Component<\r\n  EmployeeSearchComponentProps,\r\n  EmployeeSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<EmployeeViewModel>(),\r\n    filteredRecords: new Array<EmployeeViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: EmployeeViewModel) {\r\n    this.props.history.push(ClientRoutes.Employees + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: EmployeeViewModel) {\r\n    this.props.history.push(ClientRoutes.Employees + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Employees + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.EmployeeClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Employees + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.Employees + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.EmployeeClientResponseModel>;\r\n          let viewModels: Array<EmployeeViewModel> = [];\r\n          let mapper = new EmployeeMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<EmployeeViewModel>(),\r\n            filteredRecords: new Array<EmployeeViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Employees',\r\n                columns: [\r\n                  {\r\n                    Header: 'FirstName',\r\n                    accessor: 'firstName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.firstName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'IsSalesPerson',\r\n                    accessor: 'isSalesPerson',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.isSalesPerson)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'IsShipper',\r\n                    accessor: 'isShipper',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.isShipper)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'LastName',\r\n                    accessor: 'lastName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.lastName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as EmployeeViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as EmployeeViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as EmployeeViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedEmployeeSearchComponent = Form.create({\r\n  name: 'Employee Search',\r\n})(EmployeeSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2e76e814d0c68388678cef5c8c1f186c</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport HandlerViewModel from './handlerViewModel';\r\nexport default class HandlerMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.HandlerClientResponseModel\r\n  ): HandlerViewModel {\r\n    let response = new HandlerViewModel();\r\n    response.setProperties(\r\n      dto.countryId,\r\n      dto.email,\r\n      dto.firstName,\r\n      dto.id,\r\n      dto.lastName,\r\n      dto.phone\r\n    );\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: HandlerViewModel\r\n  ): Api.HandlerClientRequestModel {\r\n    let response = new Api.HandlerClientRequestModel();\r\n    response.setProperties(\r\n      model.countryId,\r\n      model.email,\r\n      model.firstName,\r\n      model.id,\r\n      model.lastName,\r\n      model.phone\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1e899c240fe0557fcc47ff7aa292c957</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport HandlerMapper from './handlerMapper';\r\nimport HandlerViewModel from './handlerViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface HandlerCreateComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface HandlerCreateComponentState {\r\n  model?: HandlerViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass HandlerCreateComponent extends React.Component<\r\n  HandlerCreateComponentProps,\r\n  HandlerCreateComponentState\r\n> {\r\n  state = {\r\n    model: new HandlerViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as HandlerViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: HandlerViewModel) => {\r\n    let mapper = new HandlerMapper();\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Handlers,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.HandlerClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"countryId\">countryId</label>\r\n            <br />\r\n            {getFieldDecorator('countryId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'countryId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"email\">email</label>\r\n            <br />\r\n            {getFieldDecorator('email', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'email'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"firstName\">firstName</label>\r\n            <br />\r\n            {getFieldDecorator('firstName', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'firstName'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"lastName\">lastName</label>\r\n            <br />\r\n            {getFieldDecorator('lastName', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'lastName'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"phone\">phone</label>\r\n            <br />\r\n            {getFieldDecorator('phone', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 10, message: 'Exceeds max length of 10' },\r\n              ],\r\n            })(<InputNumber placeholder={'phone'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedHandlerCreateComponent = Form.create({\r\n  name: 'Handler Create',\r\n})(HandlerCreateComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c7dcc52bd6b5b548712c7561c28bdb8e</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport AirTransportMapper from '../airTransport/airTransportMapper';\r\nimport AirTransportViewModel from '../airTransport/airTransportViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface AirTransportTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface AirTransportTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<AirTransportViewModel>;\r\n}\r\n\r\nexport class AirTransportTableComponent extends React.Component<\r\n  AirTransportTableComponentProps,\r\n  AirTransportTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: AirTransportViewModel) {\r\n    this.props.history.push(ClientRoutes.AirTransports + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: AirTransportViewModel) {\r\n    this.props.history.push(ClientRoutes.AirTransports + '/' + row.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.AirTransportClientResponseModel\r\n          >;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new AirTransportMapper();\r\n\r\n          let airTransports: Array<AirTransportViewModel> = [];\r\n\r\n          response.forEach(x => {\r\n            airTransports.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: airTransports,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'AirTransports',\r\n                columns: [\r\n                  {\r\n                    Header: 'AirlineId',\r\n                    accessor: 'airlineId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.airlineId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FlightNumber',\r\n                    accessor: 'flightNumber',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.flightNumber)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'HandlerId',\r\n                    accessor: 'handlerId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Handlers +\r\n                                '/' +\r\n                                props.original.handlerId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.handlerIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'LandDate',\r\n                    accessor: 'landDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.landDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PipelineStepId',\r\n                    accessor: 'pipelineStepId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.pipelineStepId)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TakeoffDate',\r\n                    accessor: 'takeoffDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.takeoffDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as AirTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as AirTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1e5ed1c718061af6483624f4b7d66e87</Hash>\r\n</Codenesium>*/","import moment from 'moment'\r\nimport HandlerViewModel from '../handler/handlerViewModel'\r\n\timport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel'\r\n\t\r\n\r\nexport default class HandlerPipelineStepViewModel {\r\n    handlerId:number;\r\nhandlerIdEntity : string;\r\nhandlerIdNavigation? : HandlerViewModel;\r\nid:number;\r\npipelineStepId:number;\r\npipelineStepIdEntity : string;\r\npipelineStepIdNavigation? : PipelineStepViewModel;\r\n\r\n    constructor() {\r\n\t\tthis.handlerId = 0;\r\nthis.handlerIdEntity = '';\r\nthis.handlerIdNavigation = new HandlerViewModel();\r\nthis.id = 0;\r\nthis.pipelineStepId = 0;\r\nthis.pipelineStepIdEntity = '';\r\nthis.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n\r\n    }\r\n\r\n\tsetProperties(handlerId : number,id : number,pipelineStepId : number) : void\r\n\t{\r\n\t\tthis.handlerId = handlerId;\r\nthis.id = id;\r\nthis.pipelineStepId = pipelineStepId;\r\n\r\n\t}\r\n\r\n\ttoDisplay() : string\r\n\t{\r\n\t\treturn String(this.handlerId);\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>12c00cfae2f650782c61e88574d5d9dc</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport HandlerPipelineStepViewModel from './handlerPipelineStepViewModel';\r\nimport HandlerViewModel from '../handler/handlerViewModel';\r\nimport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel';\r\nexport default class HandlerPipelineStepMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.HandlerPipelineStepClientResponseModel\r\n  ): HandlerPipelineStepViewModel {\r\n    let response = new HandlerPipelineStepViewModel();\r\n    response.setProperties(dto.handlerId, dto.id, dto.pipelineStepId);\r\n\r\n    if (dto.handlerIdNavigation != null) {\r\n      response.handlerIdNavigation = new HandlerViewModel();\r\n      response.handlerIdNavigation.setProperties(\r\n        dto.handlerIdNavigation.countryId,\r\n        dto.handlerIdNavigation.email,\r\n        dto.handlerIdNavigation.firstName,\r\n        dto.handlerIdNavigation.id,\r\n        dto.handlerIdNavigation.lastName,\r\n        dto.handlerIdNavigation.phone\r\n      );\r\n    }\r\n    if (dto.pipelineStepIdNavigation != null) {\r\n      response.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n      response.pipelineStepIdNavigation.setProperties(\r\n        dto.pipelineStepIdNavigation.id,\r\n        dto.pipelineStepIdNavigation.name,\r\n        dto.pipelineStepIdNavigation.pipelineStepStatusId,\r\n        dto.pipelineStepIdNavigation.shipperId\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: HandlerPipelineStepViewModel\r\n  ): Api.HandlerPipelineStepClientRequestModel {\r\n    let response = new Api.HandlerPipelineStepClientRequestModel();\r\n    response.setProperties(model.handlerId, model.id, model.pipelineStepId);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e7532bc9742a6b78ae39319c4a51875a</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport HandlerPipelineStepMapper from '../handlerPipelineStep/handlerPipelineStepMapper';\r\nimport HandlerPipelineStepViewModel from '../handlerPipelineStep/handlerPipelineStepViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface HandlerPipelineStepTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface HandlerPipelineStepTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<HandlerPipelineStepViewModel>;\r\n}\r\n\r\nexport class HandlerPipelineStepTableComponent extends React.Component<\r\n  HandlerPipelineStepTableComponentProps,\r\n  HandlerPipelineStepTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: HandlerPipelineStepViewModel) {\r\n    this.props.history.push(\r\n      ClientRoutes.HandlerPipelineSteps + '/edit/' + row.id\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: HandlerPipelineStepViewModel) {\r\n    this.props.history.push(ClientRoutes.HandlerPipelineSteps + '/' + row.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.HandlerPipelineStepClientResponseModel\r\n          >;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new HandlerPipelineStepMapper();\r\n\r\n          let handlerPipelineSteps: Array<HandlerPipelineStepViewModel> = [];\r\n\r\n          response.forEach(x => {\r\n            handlerPipelineSteps.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: handlerPipelineSteps,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'HandlerPipelineSteps',\r\n                columns: [\r\n                  {\r\n                    Header: 'HandlerId',\r\n                    accessor: 'handlerId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Handlers +\r\n                                '/' +\r\n                                props.original.handlerId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.handlerIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PipelineStepId',\r\n                    accessor: 'pipelineStepId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.PipelineSteps +\r\n                                '/' +\r\n                                props.original.pipelineStepId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as HandlerPipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as HandlerPipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ad0331288b4dadd9d12eac47efefe06f</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport HandlerViewModel from '../handler/handlerViewModel';\r\nimport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel';\r\n\r\nexport default class OtherTransportViewModel {\r\n  handlerId: number;\r\n  handlerIdEntity: string;\r\n  handlerIdNavigation?: HandlerViewModel;\r\n  id: number;\r\n  pipelineStepId: number;\r\n  pipelineStepIdEntity: string;\r\n  pipelineStepIdNavigation?: PipelineStepViewModel;\r\n\r\n  constructor() {\r\n    this.handlerId = 0;\r\n    this.handlerIdEntity = '';\r\n    this.handlerIdNavigation = new HandlerViewModel();\r\n    this.id = 0;\r\n    this.pipelineStepId = 0;\r\n    this.pipelineStepIdEntity = '';\r\n    this.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n  }\r\n\r\n  setProperties(handlerId: number, id: number, pipelineStepId: number): void {\r\n    this.handlerId = handlerId;\r\n    this.id = id;\r\n    this.pipelineStepId = pipelineStepId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.handlerId);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ece08724b098ae3e2f79881ef2fe9900</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport OtherTransportViewModel from  './otherTransportViewModel';\r\n\timport HandlerViewModel from '../handler/handlerViewModel'\r\n\t\timport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel'\r\n\texport default class OtherTransportMapper {\r\n    \r\n\tmapApiResponseToViewModel(dto: Api.OtherTransportClientResponseModel) : OtherTransportViewModel \r\n\t{\r\n\t\tlet response = new OtherTransportViewModel();\r\n\t\tresponse.setProperties(dto.handlerId,dto.id,dto.pipelineStepId);\r\n\t\t\r\n\t\t\t\t\t\tif(dto.handlerIdNavigation != null)\r\n\t\t\t\t{\r\n\t\t\t\t  response.handlerIdNavigation = new HandlerViewModel();\r\n\t\t\t\t  response.handlerIdNavigation.setProperties(\r\n\t\t\t\t  dto.handlerIdNavigation.countryId,dto.handlerIdNavigation.email,dto.handlerIdNavigation.firstName,dto.handlerIdNavigation.id,dto.handlerIdNavigation.lastName,dto.handlerIdNavigation.phone\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\tif(dto.pipelineStepIdNavigation != null)\r\n\t\t\t\t{\r\n\t\t\t\t  response.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n\t\t\t\t  response.pipelineStepIdNavigation.setProperties(\r\n\t\t\t\t  dto.pipelineStepIdNavigation.id,dto.pipelineStepIdNavigation.name,dto.pipelineStepIdNavigation.pipelineStepStatusId,dto.pipelineStepIdNavigation.shipperId\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tmapViewModelToApiRequest(model: OtherTransportViewModel) : Api.OtherTransportClientRequestModel\r\n\t{\r\n\t\tlet response = new Api.OtherTransportClientRequestModel();\r\n\t\tresponse.setProperties(model.handlerId,model.id,model.pipelineStepId);\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>6f7af7308762af93fac539284ab3b710</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport OtherTransportMapper from '../otherTransport/otherTransportMapper';\r\nimport OtherTransportViewModel from '../otherTransport/otherTransportViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from \"react-table\";\r\n\r\ninterface OtherTransportTableComponentProps {\r\n  id:number,\r\n  apiRoute:string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface OtherTransportTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords : Array<OtherTransportViewModel>;\r\n}\r\n\r\nexport class  OtherTransportTableComponent extends React.Component<\r\nOtherTransportTableComponentProps,\r\nOtherTransportTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords:[]\r\n  };\r\n\r\nhandleEditClick(e:any, row: OtherTransportViewModel) {\r\n  this.props.history.push(ClientRoutes.OtherTransports + '/edit/' + row.id);\r\n}\r\n\r\nhandleDetailClick(e:any, row: OtherTransportViewModel) {\r\n  this.props.history.push(ClientRoutes.OtherTransports + '/' + row.id);\r\n}\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.OtherTransportClientResponseModel>;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new OtherTransportMapper();\r\n          \r\n          let otherTransports:Array<OtherTransportViewModel> = [];\r\n\r\n          response.forEach(x =>\r\n          {\r\n              otherTransports.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: otherTransports,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n\tlet message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n       return <Spin size=\"large\" />;\r\n    }\r\n\telse if (this.state.errorOccurred) {\r\n\t  return <Alert message={this.state.errorMessage} type='error' />;\r\n\t}\r\n\t else if (this.state.loaded) {\r\n      return (\r\n\t  <div>\r\n\t\t{message}\r\n         <ReactTable \r\n                data={this.state.filteredRecords}\r\n\t\t\t\tdefaultPageSize={10}\r\n                columns={[{\r\n                    Header: 'OtherTransports',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'HandlerId',\r\n                      accessor: 'handlerId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Handlers + '/' + props.original.handlerId); }}>\r\n                          {String(\r\n                            props.original.handlerIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'PipelineStepId',\r\n                      accessor: 'pipelineStepId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.PipelineSteps + '/' + props.original.pipelineStepId); }}>\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as OtherTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as OtherTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n\t\t\t</div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>3b6588124e0f5a8b61e90d4639eeb5c0</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport HandlerMapper from './handlerMapper';\r\nimport HandlerViewModel from './handlerViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { AirTransportTableComponent } from '../shared/airTransportTable';\r\nimport { HandlerPipelineStepTableComponent } from '../shared/handlerPipelineStepTable';\r\nimport { OtherTransportTableComponent } from '../shared/otherTransportTable';\r\n\r\ninterface HandlerDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface HandlerDetailComponentState {\r\n  model?: HandlerViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass HandlerDetailComponent extends React.Component<\r\n  HandlerDetailComponentProps,\r\n  HandlerDetailComponentState\r\n> {\r\n  state = {\r\n    model: new HandlerViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.Handlers + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Handlers +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.HandlerClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new HandlerMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div>\r\n              <h3>countryId</h3>\r\n              <p>{String(this.state.model!.countryId)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>email</h3>\r\n              <p>{String(this.state.model!.email)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>firstName</h3>\r\n              <p>{String(this.state.model!.firstName)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>lastName</h3>\r\n              <p>{String(this.state.model!.lastName)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>phone</h3>\r\n              <p>{String(this.state.model!.phone)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n          <div>\r\n            <h3>AirTransports</h3>\r\n            <AirTransportTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.Handlers +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.AirTransports\r\n              }\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>HandlerPipelineSteps</h3>\r\n            <HandlerPipelineStepTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.Handlers +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.HandlerPipelineSteps\r\n              }\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>OtherTransports</h3>\r\n            <OtherTransportTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.Handlers +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.OtherTransports\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedHandlerDetailComponent = Form.create({\r\n  name: 'Handler Detail',\r\n})(HandlerDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>dca1050086b3698e0e625ef8e911a493</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport HandlerMapper from './handlerMapper';\r\nimport HandlerViewModel from './handlerViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\ninterface HandlerEditComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface HandlerEditComponentState {\r\n  model?: HandlerViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass HandlerEditComponent extends React.Component<\r\n  HandlerEditComponentProps,\r\n  HandlerEditComponentState\r\n> {\r\n  state = {\r\n    model: new HandlerViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n    componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Handlers +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.HandlerClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new HandlerMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n\t\t  this.props.form.setFieldsValue(mapper.mapApiResponseToViewModel(response));\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n }\r\n \r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as HandlerViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:HandlerViewModel) =>\r\n  {  \r\n    let mapper = new HandlerMapper();\r\n     axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Handlers + '/' + this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.HandlerClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='countryId'>countryId</label>\r\n              <br />             \r\n              {getFieldDecorator('countryId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"countryId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='email'>email</label>\r\n              <br />             \r\n              {getFieldDecorator('email', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"email\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='firstName'>firstName</label>\r\n              <br />             \r\n              {getFieldDecorator('firstName', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"firstName\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='lastName'>lastName</label>\r\n              <br />             \r\n              {getFieldDecorator('lastName', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"lastName\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='phone'>phone</label>\r\n              <br />             \r\n              {getFieldDecorator('phone', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 10, message: 'Exceeds max length of 10' },\r\n],\r\n              \r\n              })\r\n              ( <InputNumber placeholder={\"phone\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedHandlerEditComponent = Form.create({ name: 'Handler Edit' })(HandlerEditComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>5aa38c3bb3aeaff9c0891815404c82c5</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport HandlerMapper from './handlerMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport HandlerViewModel from './handlerViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface HandlerSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface HandlerSearchComponentState {\r\n  records: Array<HandlerViewModel>;\r\n  filteredRecords: Array<HandlerViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class HandlerSearchComponent extends React.Component<\r\n  HandlerSearchComponentProps,\r\n  HandlerSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<HandlerViewModel>(),\r\n    filteredRecords: new Array<HandlerViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: HandlerViewModel) {\r\n    this.props.history.push(ClientRoutes.Handlers + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: HandlerViewModel) {\r\n    this.props.history.push(ClientRoutes.Handlers + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Handlers + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.HandlerClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Handlers + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.Handlers + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.HandlerClientResponseModel>;\r\n          let viewModels: Array<HandlerViewModel> = [];\r\n          let mapper = new HandlerMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<HandlerViewModel>(),\r\n            filteredRecords: new Array<HandlerViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Handlers',\r\n                columns: [\r\n                  {\r\n                    Header: 'CountryId',\r\n                    accessor: 'countryId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.countryId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Email',\r\n                    accessor: 'email',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.email)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FirstName',\r\n                    accessor: 'firstName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.firstName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'LastName',\r\n                    accessor: 'lastName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.lastName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Phone',\r\n                    accessor: 'phone',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.phone)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as HandlerViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as HandlerViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as HandlerViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedHandlerSearchComponent = Form.create({\r\n  name: 'Handler Search',\r\n})(HandlerSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>86766c9c2cf158a2ecfbfd3d16878bdd</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport HandlerPipelineStepMapper from './handlerPipelineStepMapper';\r\nimport HandlerPipelineStepViewModel from './handlerPipelineStepViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { HandlerSelectComponent } from '../shared/handlerSelect';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect';\r\n\r\ninterface HandlerPipelineStepCreateComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface HandlerPipelineStepCreateComponentState {\r\n  model?: HandlerPipelineStepViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass HandlerPipelineStepCreateComponent extends React.Component<\r\n  HandlerPipelineStepCreateComponentProps,\r\n  HandlerPipelineStepCreateComponentState\r\n> {\r\n  state = {\r\n    model: new HandlerPipelineStepViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as HandlerPipelineStepViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: HandlerPipelineStepViewModel) => {\r\n    let mapper = new HandlerPipelineStepMapper();\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.HandlerPipelineSteps,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.HandlerPipelineStepClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"handlerId\">handlerId</label>\r\n            <br />\r\n            {getFieldDecorator('handlerId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'handlerId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedHandlerPipelineStepCreateComponent = Form.create({\r\n  name: 'HandlerPipelineStep Create',\r\n})(HandlerPipelineStepCreateComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b52f38f61945f4e09f8963561f930a95</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport HandlerPipelineStepMapper from './handlerPipelineStepMapper';\r\nimport HandlerPipelineStepViewModel from './handlerPipelineStepViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface HandlerPipelineStepDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface HandlerPipelineStepDetailComponentState {\r\n  model?: HandlerPipelineStepViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass HandlerPipelineStepDetailComponent extends React.Component<\r\n  HandlerPipelineStepDetailComponentProps,\r\n  HandlerPipelineStepDetailComponentState\r\n> {\r\n  state = {\r\n    model: new HandlerPipelineStepViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.HandlerPipelineSteps + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.HandlerPipelineSteps +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.HandlerPipelineStepClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new HandlerPipelineStepMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>handlerId</h3>\r\n              <p>\r\n                {String(this.state.model!.handlerIdNavigation!.toDisplay())}\r\n              </p>\r\n            </div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>pipelineStepId</h3>\r\n              <p>\r\n                {String(\r\n                  this.state.model!.pipelineStepIdNavigation!.toDisplay()\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedHandlerPipelineStepDetailComponent = Form.create({\r\n  name: 'HandlerPipelineStep Detail',\r\n})(HandlerPipelineStepDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bb4b28819705fd8b0a4ecf20a8ebd1cc</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport HandlerPipelineStepMapper from './handlerPipelineStepMapper';\r\nimport HandlerPipelineStepViewModel from './handlerPipelineStepViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { HandlerSelectComponent } from '../shared/handlerSelect';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect';\r\ninterface HandlerPipelineStepEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface HandlerPipelineStepEditComponentState {\r\n  model?: HandlerPipelineStepViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass HandlerPipelineStepEditComponent extends React.Component<\r\n  HandlerPipelineStepEditComponentProps,\r\n  HandlerPipelineStepEditComponentState\r\n> {\r\n  state = {\r\n    model: new HandlerPipelineStepViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.HandlerPipelineSteps +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.HandlerPipelineStepClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new HandlerPipelineStepMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as HandlerPipelineStepViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: HandlerPipelineStepViewModel) => {\r\n    let mapper = new HandlerPipelineStepMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.HandlerPipelineSteps +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.HandlerPipelineStepClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"handlerId\">handlerId</label>\r\n            <br />\r\n            {getFieldDecorator('handlerId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'handlerId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedHandlerPipelineStepEditComponent = Form.create({\r\n  name: 'HandlerPipelineStep Edit',\r\n})(HandlerPipelineStepEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>54d64ea4ca421aa1ac8c69ccecc38626</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport HandlerPipelineStepMapper from './handlerPipelineStepMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport HandlerPipelineStepViewModel from './handlerPipelineStepViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface HandlerPipelineStepSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface HandlerPipelineStepSearchComponentState\r\n{\r\n    records:Array<HandlerPipelineStepViewModel>;\r\n    filteredRecords:Array<HandlerPipelineStepViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class HandlerPipelineStepSearchComponent extends React.Component<HandlerPipelineStepSearchComponentProps, HandlerPipelineStepSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<HandlerPipelineStepViewModel>(), filteredRecords:new Array<HandlerPipelineStepViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:HandlerPipelineStepViewModel) {\r\n         this.props.history.push(ClientRoutes.HandlerPipelineSteps + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:HandlerPipelineStepViewModel) {\r\n         this.props.history.push(ClientRoutes.HandlerPipelineSteps + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.HandlerPipelineSteps + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.HandlerPipelineStepClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.HandlerPipelineSteps + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.HandlerPipelineSteps + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.HandlerPipelineStepClientResponseModel>;\r\n\t\t    let viewModels : Array<HandlerPipelineStepViewModel> = [];\r\n\t\t\tlet mapper = new HandlerPipelineStepMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<HandlerPipelineStepViewModel>(), filteredRecords:new Array<HandlerPipelineStepViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'HandlerPipelineSteps',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'HandlerId',\r\n                      accessor: 'handlerId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Handlers + '/' + props.original.handlerId); }}>\r\n                          {String(\r\n                            props.original.handlerIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'PipelineStepId',\r\n                      accessor: 'pipelineStepId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.PipelineSteps + '/' + props.original.pipelineStepId); }}>\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as HandlerPipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as HandlerPipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as HandlerPipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedHandlerPipelineStepSearchComponent = Form.create({ name: 'HandlerPipelineStep Search' })(HandlerPipelineStepSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>a79205fe8606d3c91d9c81f36e267273</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport OtherTransportMapper from './otherTransportMapper';\r\nimport OtherTransportViewModel from './otherTransportViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { HandlerSelectComponent } from '../shared/handlerSelect';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect';\r\n\r\ninterface OtherTransportCreateComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface OtherTransportCreateComponentState {\r\n  model?: OtherTransportViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass OtherTransportCreateComponent extends React.Component<\r\n  OtherTransportCreateComponentProps,\r\n  OtherTransportCreateComponentState\r\n> {\r\n  state = {\r\n    model: new OtherTransportViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as OtherTransportViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: OtherTransportViewModel) => {\r\n    let mapper = new OtherTransportMapper();\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.OtherTransports,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.OtherTransportClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"handlerId\">handlerId</label>\r\n            <br />\r\n            {getFieldDecorator('handlerId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'handlerId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedOtherTransportCreateComponent = Form.create({\r\n  name: 'OtherTransport Create',\r\n})(OtherTransportCreateComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c54a2cd86b25f73d93e6697c6ddab116</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport OtherTransportMapper from './otherTransportMapper';\r\nimport OtherTransportViewModel from './otherTransportViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\n\r\n\r\n\r\ninterface OtherTransportDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface OtherTransportDetailComponentState {\r\n  model?: OtherTransportViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass OtherTransportDetailComponent extends React.Component<\r\nOtherTransportDetailComponentProps,\r\nOtherTransportDetailComponentState\r\n> {\r\n  state = {\r\n    model: new OtherTransportViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: ''\r\n  };\r\n\r\n  handleEditClick(e:any) {\r\n    this.props.history.push(ClientRoutes.OtherTransports + '/edit/' + this.state.model!.id);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.OtherTransports +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.OtherTransportClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new OtherTransportMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } \r\n  \r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n\t\t<Button \r\n\t\t\tstyle={{'float':'right'}}\r\n\t\t\ttype=\"primary\" \r\n\t\t\tonClick={(e:any) => {\r\n\t\t\t\tthis.handleEditClick(e)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n             <i className=\"fas fa-edit\" />\r\n\t\t  </Button>\r\n\t\t  <div>\r\n\t\t\t\t\t\t\t\t\t <div style={{\"marginBottom\":\"10px\"}}>\r\n\t\t\t\t\t\t\t<h3>handlerId</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.handlerIdNavigation!.toDisplay())}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div style={{\"marginBottom\":\"10px\"}}>\r\n\t\t\t\t\t\t\t<h3>pipelineStepId</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.pipelineStepIdNavigation!.toDisplay())}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t  </div>\r\n          {message}\r\n\r\n\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedOtherTransportDetailComponent = Form.create({ name: 'OtherTransport Detail' })(\r\n  OtherTransportDetailComponent\r\n);\r\n\r\n/*<Codenesium>\r\n    <Hash>66008f97861763fa70a329d79b3f70d2</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport OtherTransportMapper from './otherTransportMapper';\r\nimport OtherTransportViewModel from './otherTransportViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { HandlerSelectComponent } from '../shared/handlerSelect';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect';\r\ninterface OtherTransportEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface OtherTransportEditComponentState {\r\n  model?: OtherTransportViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass OtherTransportEditComponent extends React.Component<\r\n  OtherTransportEditComponentProps,\r\n  OtherTransportEditComponentState\r\n> {\r\n  state = {\r\n    model: new OtherTransportViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.OtherTransports +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.OtherTransportClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new OtherTransportMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as OtherTransportViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: OtherTransportViewModel) => {\r\n    let mapper = new OtherTransportMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.OtherTransports +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.OtherTransportClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"handlerId\">handlerId</label>\r\n            <br />\r\n            {getFieldDecorator('handlerId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'handlerId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedOtherTransportEditComponent = Form.create({\r\n  name: 'OtherTransport Edit',\r\n})(OtherTransportEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9223f9777a2bb796be7f1b518a0ac0c7</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport OtherTransportMapper from './otherTransportMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport OtherTransportViewModel from './otherTransportViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface OtherTransportSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface OtherTransportSearchComponentState {\r\n  records: Array<OtherTransportViewModel>;\r\n  filteredRecords: Array<OtherTransportViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class OtherTransportSearchComponent extends React.Component<\r\n  OtherTransportSearchComponentProps,\r\n  OtherTransportSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<OtherTransportViewModel>(),\r\n    filteredRecords: new Array<OtherTransportViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: OtherTransportViewModel) {\r\n    this.props.history.push(ClientRoutes.OtherTransports + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: OtherTransportViewModel) {\r\n    this.props.history.push(ClientRoutes.OtherTransports + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.OtherTransports + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.OtherTransportClientResponseModel) {\r\n    axios\r\n      .delete(\r\n        Constants.ApiEndpoint + ApiRoutes.OtherTransports + '/' + row.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.OtherTransports + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.OtherTransportClientResponseModel\r\n          >;\r\n          let viewModels: Array<OtherTransportViewModel> = [];\r\n          let mapper = new OtherTransportMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<OtherTransportViewModel>(),\r\n            filteredRecords: new Array<OtherTransportViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'OtherTransports',\r\n                columns: [\r\n                  {\r\n                    Header: 'HandlerId',\r\n                    accessor: 'handlerId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Handlers +\r\n                                '/' +\r\n                                props.original.handlerId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.handlerIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PipelineStepId',\r\n                    accessor: 'pipelineStepId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.PipelineSteps +\r\n                                '/' +\r\n                                props.original.pipelineStepId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as OtherTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as OtherTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as OtherTransportViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedOtherTransportSearchComponent = Form.create({\r\n  name: 'OtherTransport Search',\r\n})(OtherTransportSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1dcfffb3de5a2efa46fac7576e0d24d4</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PetMapper from './petMapper';\r\nimport PetViewModel from './petViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { BreedSelectComponent } from '../shared/breedSelect'\r\n\t\r\ninterface PetCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface PetCreateComponentState {\r\n  model?: PetViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass PetCreateComponent extends React.Component<\r\n  PetCreateComponentProps,\r\n  PetCreateComponentState\r\n> {\r\n  state = {\r\n    model: new PetViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as PetViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:PetViewModel) =>\r\n  {  \r\n    let mapper = new PetMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Pets,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PetClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='breedId'>breedId</label>\r\n              <br />             \r\n              {getFieldDecorator('breedId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"breedId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='clientId'>clientId</label>\r\n              <br />             \r\n              {getFieldDecorator('clientId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"clientId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='weight'>weight</label>\r\n              <br />             \r\n              {getFieldDecorator('weight', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"weight\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPetCreateComponent = Form.create({ name: 'Pet Create' })(PetCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>e3c2dbb436d660a7893d89c49cacf436</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport PetViewModel from '../pet/petViewModel';\r\n\r\nexport default class SaleViewModel {\r\n  amount: number;\r\n  cutomerId: number;\r\n  id: number;\r\n  note: string;\r\n  petId: number;\r\n  petIdEntity: string;\r\n  petIdNavigation?: PetViewModel;\r\n  saleDate: any;\r\n  salesPersonId: number;\r\n\r\n  constructor() {\r\n    this.amount = 0;\r\n    this.cutomerId = 0;\r\n    this.id = 0;\r\n    this.note = '';\r\n    this.petId = 0;\r\n    this.petIdEntity = '';\r\n    this.petIdNavigation = new PetViewModel();\r\n    this.saleDate = undefined;\r\n    this.salesPersonId = 0;\r\n  }\r\n\r\n  setProperties(\r\n    amount: number,\r\n    cutomerId: number,\r\n    id: number,\r\n    note: string,\r\n    petId: number,\r\n    saleDate: any,\r\n    salesPersonId: number\r\n  ): void {\r\n    this.amount = amount;\r\n    this.cutomerId = cutomerId;\r\n    this.id = id;\r\n    this.note = note;\r\n    this.petId = petId;\r\n    this.saleDate = moment(saleDate, 'YYYY-MM-DD');\r\n    this.salesPersonId = salesPersonId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.amount);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0ae466fd0c22e2e1c5578a1d5d2f7ed7</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SaleViewModel from './saleViewModel';\r\nimport PetViewModel from '../pet/petViewModel';\r\nexport default class SaleMapper {\r\n  mapApiResponseToViewModel(dto: Api.SaleClientResponseModel): SaleViewModel {\r\n    let response = new SaleViewModel();\r\n    response.setProperties(\r\n      dto.amount,\r\n      dto.cutomerId,\r\n      dto.id,\r\n      dto.note,\r\n      dto.petId,\r\n      dto.saleDate,\r\n      dto.salesPersonId\r\n    );\r\n\r\n    if (dto.petIdNavigation != null) {\r\n      response.petIdNavigation = new PetViewModel();\r\n      response.petIdNavigation.setProperties(\r\n        dto.petIdNavigation.breedId,\r\n        dto.petIdNavigation.clientId,\r\n        dto.petIdNavigation.id,\r\n        dto.petIdNavigation.name,\r\n        dto.petIdNavigation.weight\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: SaleViewModel): Api.SaleClientRequestModel {\r\n    let response = new Api.SaleClientRequestModel();\r\n    response.setProperties(\r\n      model.amount,\r\n      model.cutomerId,\r\n      model.id,\r\n      model.note,\r\n      model.petId,\r\n      model.saleDate,\r\n      model.salesPersonId\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8c47edbbcf5beb61e7eda321e8d906b5</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport SaleMapper from '../sale/saleMapper';\r\nimport SaleViewModel from '../sale/saleViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface SaleTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface SaleTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<SaleViewModel>;\r\n}\r\n\r\nexport class SaleTableComponent extends React.Component<\r\n  SaleTableComponentProps,\r\n  SaleTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: SaleViewModel) {\r\n    this.props.history.push(ClientRoutes.Sales + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: SaleViewModel) {\r\n    this.props.history.push(ClientRoutes.Sales + '/' + row.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.SaleClientResponseModel>;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SaleMapper();\r\n\r\n          let sales: Array<SaleViewModel> = [];\r\n\r\n          response.forEach(x => {\r\n            sales.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: sales,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'Sales',\r\n                columns: [\r\n                  {\r\n                    Header: 'Amount',\r\n                    accessor: 'amount',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.amount)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CutomerId',\r\n                    accessor: 'cutomerId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.cutomerId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Note',\r\n                    accessor: 'note',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.note)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PetId',\r\n                    accessor: 'petId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Pets + '/' + props.original.petId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(props.original.petIdNavigation.toDisplay())}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SaleDate',\r\n                    accessor: 'saleDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.saleDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesPersonId',\r\n                    accessor: 'salesPersonId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.salesPersonId)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as SaleViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as SaleViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c303ef50b3d9e9e047ea838e29c9c70a</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PetMapper from './petMapper';\r\nimport PetViewModel from './petViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { SaleTableComponent } from '../shared/saleTable';\r\n\r\ninterface PetDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PetDetailComponentState {\r\n  model?: PetViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass PetDetailComponent extends React.Component<\r\n  PetDetailComponentProps,\r\n  PetDetailComponentState\r\n> {\r\n  state = {\r\n    model: new PetViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.Pets + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Pets +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PetClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PetMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>breedId</h3>\r\n              <p>{String(this.state.model!.breedIdNavigation!.toDisplay())}</p>\r\n            </div>\r\n            <div>\r\n              <h3>clientId</h3>\r\n              <p>{String(this.state.model!.clientId)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>name</h3>\r\n              <p>{String(this.state.model!.name)}</p>\r\n            </div>\r\n            <div>\r\n              <h3>weight</h3>\r\n              <p>{String(this.state.model!.weight)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n          <div>\r\n            <h3>Sales</h3>\r\n            <SaleTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.Pets +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.Sales\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPetDetailComponent = Form.create({ name: 'Pet Detail' })(\r\n  PetDetailComponent\r\n);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>fc50a57676160772db5f32e4e4129363</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PetMapper from './petMapper';\r\nimport PetViewModel from './petViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { BreedSelectComponent } from '../shared/breedSelect'\r\n\tinterface PetEditComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface PetEditComponentState {\r\n  model?: PetViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass PetEditComponent extends React.Component<\r\n  PetEditComponentProps,\r\n  PetEditComponentState\r\n> {\r\n  state = {\r\n    model: new PetViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n    componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Pets +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PetClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PetMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n\t\t  this.props.form.setFieldsValue(mapper.mapApiResponseToViewModel(response));\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n }\r\n \r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as PetViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:PetViewModel) =>\r\n  {  \r\n    let mapper = new PetMapper();\r\n     axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Pets + '/' + this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PetClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='breedId'>breedId</label>\r\n              <br />             \r\n              {getFieldDecorator('breedId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"breedId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='clientId'>clientId</label>\r\n              <br />             \r\n              {getFieldDecorator('clientId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"clientId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='weight'>weight</label>\r\n              <br />             \r\n              {getFieldDecorator('weight', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"weight\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPetEditComponent = Form.create({ name: 'Pet Edit' })(PetEditComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>2cf29db6bfa72f374017a518cdf577cf</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PetMapper from './petMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport PetViewModel from './petViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PetSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface PetSearchComponentState\r\n{\r\n    records:Array<PetViewModel>;\r\n    filteredRecords:Array<PetViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class PetSearchComponent extends React.Component<PetSearchComponentProps, PetSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<PetViewModel>(), filteredRecords:new Array<PetViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:PetViewModel) {\r\n         this.props.history.push(ClientRoutes.Pets + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:PetViewModel) {\r\n         this.props.history.push(ClientRoutes.Pets + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.Pets + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.PetClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.Pets + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Pets + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.PetClientResponseModel>;\r\n\t\t    let viewModels : Array<PetViewModel> = [];\r\n\t\t\tlet mapper = new PetMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<PetViewModel>(), filteredRecords:new Array<PetViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'Pets',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'BreedId',\r\n                      accessor: 'breedId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Breeds + '/' + props.original.breedId); }}>\r\n                          {String(\r\n                            props.original.breedIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'ClientId',\r\n                      accessor: 'clientId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.clientId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Name',\r\n                      accessor: 'name',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Weight',\r\n                      accessor: 'weight',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.weight)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PetViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PetViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as PetViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedPetSearchComponent = Form.create({ name: 'Pet Search' })(PetSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>99e070de3918b8c9927f59662518f074</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\n\r\nexport default class PipelineStatusViewModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>455668d08dd81371b40344509aaae75d</Hash>\r\n</Codenesium>*/","import moment from 'moment'\r\nimport PipelineStatusViewModel from '../pipelineStatus/pipelineStatusViewModel'\r\n\t\r\n\r\nexport default class PipelineViewModel {\r\n    id:number;\r\npipelineStatusId:number;\r\npipelineStatusIdEntity : string;\r\npipelineStatusIdNavigation? : PipelineStatusViewModel;\r\nsaleId:number;\r\n\r\n    constructor() {\r\n\t\tthis.id = 0;\r\nthis.pipelineStatusId = 0;\r\nthis.pipelineStatusIdEntity = '';\r\nthis.pipelineStatusIdNavigation = new PipelineStatusViewModel();\r\nthis.saleId = 0;\r\n\r\n    }\r\n\r\n\tsetProperties(id : number,pipelineStatusId : number,saleId : number) : void\r\n\t{\r\n\t\tthis.id = id;\r\nthis.pipelineStatusId = pipelineStatusId;\r\nthis.saleId = saleId;\r\n\r\n\t}\r\n\r\n\ttoDisplay() : string\r\n\t{\r\n\t\treturn String(this.id);\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>ed5995188d87ce003f2ab5cac6a64885</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PipelineViewModel from './pipelineViewModel';\r\nimport PipelineStatusViewModel from '../pipelineStatus/pipelineStatusViewModel';\r\nexport default class PipelineMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PipelineClientResponseModel\r\n  ): PipelineViewModel {\r\n    let response = new PipelineViewModel();\r\n    response.setProperties(dto.id, dto.pipelineStatusId, dto.saleId);\r\n\r\n    if (dto.pipelineStatusIdNavigation != null) {\r\n      response.pipelineStatusIdNavigation = new PipelineStatusViewModel();\r\n      response.pipelineStatusIdNavigation.setProperties(\r\n        dto.pipelineStatusIdNavigation.id,\r\n        dto.pipelineStatusIdNavigation.name\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PipelineViewModel\r\n  ): Api.PipelineClientRequestModel {\r\n    let response = new Api.PipelineClientRequestModel();\r\n    response.setProperties(model.id, model.pipelineStatusId, model.saleId);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>36233f33e283a8d69b4c1233bfafef45</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineMapper from './pipelineMapper';\r\nimport PipelineViewModel from './pipelineViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PipelineStatusSelectComponent } from '../shared/pipelineStatusSelect'\r\n\t\r\ninterface PipelineCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface PipelineCreateComponentState {\r\n  model?: PipelineViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass PipelineCreateComponent extends React.Component<\r\n  PipelineCreateComponentProps,\r\n  PipelineCreateComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as PipelineViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:PipelineViewModel) =>\r\n  {  \r\n    let mapper = new PipelineMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Pipelines,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='pipelineStatusId'>pipelineStatusId</label>\r\n              <br />             \r\n              {getFieldDecorator('pipelineStatusId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"pipelineStatusId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='saleId'>saleId</label>\r\n              <br />             \r\n              {getFieldDecorator('saleId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"saleId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineCreateComponent = Form.create({ name: 'Pipeline Create' })(PipelineCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>48e4d4539efb3eb28cd117dec5fb1e22</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineMapper from './pipelineMapper';\r\nimport PipelineViewModel from './pipelineViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineDetailComponentState {\r\n  model?: PipelineViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass PipelineDetailComponent extends React.Component<\r\n  PipelineDetailComponentProps,\r\n  PipelineDetailComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.Pipelines + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Pipelines +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>pipelineStatusId</h3>\r\n              <p>\r\n                {String(\r\n                  this.state.model!.pipelineStatusIdNavigation!.toDisplay()\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h3>saleId</h3>\r\n              <p>{String(this.state.model!.saleId)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineDetailComponent = Form.create({\r\n  name: 'Pipeline Detail',\r\n})(PipelineDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2e125d6f174249b988aa15ff223238c8</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineMapper from './pipelineMapper';\r\nimport PipelineViewModel from './pipelineViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PipelineStatusSelectComponent } from '../shared/pipelineStatusSelect';\r\ninterface PipelineEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineEditComponentState {\r\n  model?: PipelineViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass PipelineEditComponent extends React.Component<\r\n  PipelineEditComponentProps,\r\n  PipelineEditComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Pipelines +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as PipelineViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: PipelineViewModel) => {\r\n    let mapper = new PipelineMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Pipelines +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStatusId\">pipelineStatusId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStatusId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStatusId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"saleId\">saleId</label>\r\n            <br />\r\n            {getFieldDecorator('saleId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'saleId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineEditComponent = Form.create({\r\n  name: 'Pipeline Edit',\r\n})(PipelineEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2c4f25ebc0dafe684752c8e95745d176</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PipelineMapper from './pipelineMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport PipelineViewModel from './pipelineViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface PipelineSearchComponentState\r\n{\r\n    records:Array<PipelineViewModel>;\r\n    filteredRecords:Array<PipelineViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class PipelineSearchComponent extends React.Component<PipelineSearchComponentProps, PipelineSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<PipelineViewModel>(), filteredRecords:new Array<PipelineViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:PipelineViewModel) {\r\n         this.props.history.push(ClientRoutes.Pipelines + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:PipelineViewModel) {\r\n         this.props.history.push(ClientRoutes.Pipelines + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.Pipelines + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.PipelineClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.Pipelines + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Pipelines + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.PipelineClientResponseModel>;\r\n\t\t    let viewModels : Array<PipelineViewModel> = [];\r\n\t\t\tlet mapper = new PipelineMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<PipelineViewModel>(), filteredRecords:new Array<PipelineViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'Pipelines',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'PipelineStatusId',\r\n                      accessor: 'pipelineStatusId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.PipelineStatus + '/' + props.original.pipelineStatusId); }}>\r\n                          {String(\r\n                            props.original.pipelineStatusIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'SaleId',\r\n                      accessor: 'saleId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.saleId)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as PipelineViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedPipelineSearchComponent = Form.create({ name: 'Pipeline Search' })(PipelineSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>e21297d5db3de595211d4da7e76ae4d9</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PipelineStatusViewModel from  './pipelineStatusViewModel';\r\nexport default class PipelineStatusMapper {\r\n    \r\n\tmapApiResponseToViewModel(dto: Api.PipelineStatusClientResponseModel) : PipelineStatusViewModel \r\n\t{\r\n\t\tlet response = new PipelineStatusViewModel();\r\n\t\tresponse.setProperties(dto.id,dto.name);\r\n\t\t\r\n\t\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tmapViewModelToApiRequest(model: PipelineStatusViewModel) : Api.PipelineStatusClientRequestModel\r\n\t{\r\n\t\tlet response = new Api.PipelineStatusClientRequestModel();\r\n\t\tresponse.setProperties(model.id,model.name);\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>938acb8fc99e9960cd3c24064ab4cc12</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStatusMapper from './pipelineStatusMapper';\r\nimport PipelineStatusViewModel from './pipelineStatusViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStatusCreateComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStatusCreateComponentState {\r\n  model?: PipelineStatusViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass PipelineStatusCreateComponent extends React.Component<\r\n  PipelineStatusCreateComponentProps,\r\n  PipelineStatusCreateComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStatusViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStatusViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: PipelineStatusViewModel) => {\r\n    let mapper = new PipelineStatusMapper();\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.PipelineStatus,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStatusClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"name\">name</label>\r\n            <br />\r\n            {getFieldDecorator('name', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'name'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStatusCreateComponent = Form.create({\r\n  name: 'PipelineStatus Create',\r\n})(PipelineStatusCreateComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c446520c9ada2bd9bae974dacb2b2fe8</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineMapper from '../pipeline/pipelineMapper';\r\nimport PipelineViewModel from '../pipeline/pipelineViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface PipelineTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<PipelineViewModel>;\r\n}\r\n\r\nexport class PipelineTableComponent extends React.Component<\r\n  PipelineTableComponentProps,\r\n  PipelineTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: PipelineViewModel) {\r\n    this.props.history.push(ClientRoutes.Pipelines + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: PipelineViewModel) {\r\n    this.props.history.push(ClientRoutes.Pipelines + '/' + row.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PipelineClientResponseModel>;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineMapper();\r\n\r\n          let pipelines: Array<PipelineViewModel> = [];\r\n\r\n          response.forEach(x => {\r\n            pipelines.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: pipelines,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'Pipelines',\r\n                columns: [\r\n                  {\r\n                    Header: 'PipelineStatusId',\r\n                    accessor: 'pipelineStatusId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.PipelineStatus +\r\n                                '/' +\r\n                                props.original.pipelineStatusId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.pipelineStatusIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SaleId',\r\n                    accessor: 'saleId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.saleId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>67df057d3033b596cdcc65fb47bcb8ed</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStatusMapper from './pipelineStatusMapper';\r\nimport PipelineStatusViewModel from './pipelineStatusViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PipelineTableComponent } from '../shared/pipelineTable';\r\n\r\ninterface PipelineStatusDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStatusDetailComponentState {\r\n  model?: PipelineStatusViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass PipelineStatusDetailComponent extends React.Component<\r\n  PipelineStatusDetailComponentProps,\r\n  PipelineStatusDetailComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStatusViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineStatus + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStatus +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStatusClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStatusMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div>\r\n              <h3>name</h3>\r\n              <p>{String(this.state.model!.name)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n          <div>\r\n            <h3>Pipelines</h3>\r\n            <PipelineTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.PipelineStatus +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.Pipelines\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStatusDetailComponent = Form.create({\r\n  name: 'PipelineStatus Detail',\r\n})(PipelineStatusDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>31e63f0b1b3843918a16cb55e547b53b</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStatusMapper from './pipelineStatusMapper';\r\nimport PipelineStatusViewModel from './pipelineStatusViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\ninterface PipelineStatusEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStatusEditComponentState {\r\n  model?: PipelineStatusViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass PipelineStatusEditComponent extends React.Component<\r\n  PipelineStatusEditComponentProps,\r\n  PipelineStatusEditComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStatusViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStatus +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStatusClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStatusMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStatusViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: PipelineStatusViewModel) => {\r\n    let mapper = new PipelineStatusMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStatus +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStatusClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"name\">name</label>\r\n            <br />\r\n            {getFieldDecorator('name', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'name'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStatusEditComponent = Form.create({\r\n  name: 'PipelineStatus Edit',\r\n})(PipelineStatusEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e22861340c39582cc0d4820b8388fb01</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStatusMapper from './pipelineStatusMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport PipelineStatusViewModel from './pipelineStatusViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStatusSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStatusSearchComponentState {\r\n  records: Array<PipelineStatusViewModel>;\r\n  filteredRecords: Array<PipelineStatusViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PipelineStatusSearchComponent extends React.Component<\r\n  PipelineStatusSearchComponentProps,\r\n  PipelineStatusSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<PipelineStatusViewModel>(),\r\n    filteredRecords: new Array<PipelineStatusViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: PipelineStatusViewModel) {\r\n    this.props.history.push(ClientRoutes.PipelineStatus + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: PipelineStatusViewModel) {\r\n    this.props.history.push(ClientRoutes.PipelineStatus + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.PipelineStatus + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PipelineStatusClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.PipelineStatus + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.PipelineStatus + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.PipelineStatusClientResponseModel\r\n          >;\r\n          let viewModels: Array<PipelineStatusViewModel> = [];\r\n          let mapper = new PipelineStatusMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PipelineStatusViewModel>(),\r\n            filteredRecords: new Array<PipelineStatusViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'PipelineStatus',\r\n                columns: [\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStatusViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStatusViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as PipelineStatusViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStatusSearchComponent = Form.create({\r\n  name: 'PipelineStatus Search',\r\n})(PipelineStatusSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e427bca01c44d83b9658f5f2b26ebd47</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepMapper from './pipelineStepMapper';\r\nimport PipelineStepViewModel from './pipelineStepViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PipelineStepStatusSelectComponent } from '../shared/pipelineStepStatusSelect'\r\n\timport { EmployeeSelectComponent } from '../shared/employeeSelect'\r\n\t\r\ninterface PipelineStepCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface PipelineStepCreateComponentState {\r\n  model?: PipelineStepViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass PipelineStepCreateComponent extends React.Component<\r\n  PipelineStepCreateComponentProps,\r\n  PipelineStepCreateComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:PipelineStepViewModel) =>\r\n  {  \r\n    let mapper = new PipelineStepMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.PipelineSteps,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='pipelineStepStatusId'>pipelineStepStatusId</label>\r\n              <br />             \r\n              {getFieldDecorator('pipelineStepStatusId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"pipelineStepStatusId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='shipperId'>shipperId</label>\r\n              <br />             \r\n              {getFieldDecorator('shipperId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"shipperId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepCreateComponent = Form.create({ name: 'PipelineStep Create' })(PipelineStepCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>791eb59f9392004257277e4901536484</Hash>\r\n</Codenesium>*/","import moment from 'moment';\r\nimport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel';\r\n\r\nexport default class PipelineStepStepRequirementViewModel {\r\n  detail: string;\r\n  id: number;\r\n  pipelineStepId: number;\r\n  pipelineStepIdEntity: string;\r\n  pipelineStepIdNavigation?: PipelineStepViewModel;\r\n  requirementMet: boolean;\r\n\r\n  constructor() {\r\n    this.detail = '';\r\n    this.id = 0;\r\n    this.pipelineStepId = 0;\r\n    this.pipelineStepIdEntity = '';\r\n    this.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n    this.requirementMet = false;\r\n  }\r\n\r\n  setProperties(\r\n    detail: string,\r\n    id: number,\r\n    pipelineStepId: number,\r\n    requirementMet: boolean\r\n  ): void {\r\n    this.detail = detail;\r\n    this.id = id;\r\n    this.pipelineStepId = pipelineStepId;\r\n    this.requirementMet = requirementMet;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String(this.details);\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f8a59ac2d1bbaadaa2495f9d49d3fee5</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PipelineStepStepRequirementViewModel from './pipelineStepStepRequirementViewModel';\r\nimport PipelineStepViewModel from '../pipelineStep/pipelineStepViewModel';\r\nexport default class PipelineStepStepRequirementMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PipelineStepStepRequirementClientResponseModel\r\n  ): PipelineStepStepRequirementViewModel {\r\n    let response = new PipelineStepStepRequirementViewModel();\r\n    response.setProperties(\r\n      dto.detail,\r\n      dto.id,\r\n      dto.pipelineStepId,\r\n      dto.requirementMet\r\n    );\r\n\r\n    if (dto.pipelineStepIdNavigation != null) {\r\n      response.pipelineStepIdNavigation = new PipelineStepViewModel();\r\n      response.pipelineStepIdNavigation.setProperties(\r\n        dto.pipelineStepIdNavigation.id,\r\n        dto.pipelineStepIdNavigation.name,\r\n        dto.pipelineStepIdNavigation.pipelineStepStatusId,\r\n        dto.pipelineStepIdNavigation.shipperId\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PipelineStepStepRequirementViewModel\r\n  ): Api.PipelineStepStepRequirementClientRequestModel {\r\n    let response = new Api.PipelineStepStepRequirementClientRequestModel();\r\n    response.setProperties(\r\n      model.detail,\r\n      model.id,\r\n      model.pipelineStepId,\r\n      model.requirementMet\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8ac03505faf35eaf19ceb10dcce20de0</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepStepRequirementMapper from '../pipelineStepStepRequirement/pipelineStepStepRequirementMapper';\r\nimport PipelineStepStepRequirementViewModel from '../pipelineStepStepRequirement/pipelineStepStepRequirementViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from 'react-table';\r\n\r\ninterface PipelineStepStepRequirementTableComponentProps {\r\n  id: number;\r\n  apiRoute: string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepStepRequirementTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords: Array<PipelineStepStepRequirementViewModel>;\r\n}\r\n\r\nexport class PipelineStepStepRequirementTableComponent extends React.Component<\r\n  PipelineStepStepRequirementTableComponentProps,\r\n  PipelineStepStepRequirementTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords: [],\r\n  };\r\n\r\n  handleEditClick(e: any, row: PipelineStepStepRequirementViewModel) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineStepStepRequirements + '/edit/' + row.id\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: PipelineStepStepRequirementViewModel) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineStepStepRequirements + '/' + row.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.PipelineStepStepRequirementClientResponseModel\r\n          >;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepStepRequirementMapper();\r\n\r\n          let pipelineStepStepRequirements: Array<\r\n            PipelineStepStepRequirementViewModel\r\n          > = [];\r\n\r\n          response.forEach(x => {\r\n            pipelineStepStepRequirements.push(\r\n              mapper.mapApiResponseToViewModel(x)\r\n            );\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: pipelineStepStepRequirements,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          {message}\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            defaultPageSize={10}\r\n            columns={[\r\n              {\r\n                Header: 'PipelineStepStepRequirements',\r\n                columns: [\r\n                  {\r\n                    Header: 'Details',\r\n                    accessor: 'detail',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.detail)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PipelineStepId',\r\n                    accessor: 'pipelineStepId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.PipelineSteps +\r\n                                '/' +\r\n                                props.original.pipelineStepId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'RequirementMet',\r\n                    accessor: 'requirementMet',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.requirementMet)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStepStepRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStepStepRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>77a9d0bdaaadeb647311610e3ef265d2</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepMapper from './pipelineStepMapper';\r\nimport PipelineStepViewModel from './pipelineStepViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { HandlerPipelineStepTableComponent } from '../shared/handlerPipelineStepTable';\r\nimport { OtherTransportTableComponent } from '../shared/otherTransportTable';\r\nimport { PipelineStepDestinationTableComponent } from '../shared/pipelineStepDestinationTable';\r\nimport { PipelineStepNoteTableComponent } from '../shared/pipelineStepNoteTable';\r\nimport { PipelineStepStepRequirementTableComponent } from '../shared/pipelineStepStepRequirementTable';\r\n\r\ninterface PipelineStepDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepDetailComponentState {\r\n  model?: PipelineStepViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass PipelineStepDetailComponent extends React.Component<\r\n  PipelineStepDetailComponentProps,\r\n  PipelineStepDetailComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineSteps + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineSteps +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div>\r\n              <h3>name</h3>\r\n              <p>{String(this.state.model!.name)}</p>\r\n            </div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>pipelineStepStatusId</h3>\r\n              <p>\r\n                {String(\r\n                  this.state.model!.pipelineStepStatusIdNavigation!.toDisplay()\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>shipperId</h3>\r\n              <p>\r\n                {String(this.state.model!.shipperIdNavigation!.toDisplay())}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n          <div>\r\n            <h3>HandlerPipelineSteps</h3>\r\n            <HandlerPipelineStepTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.PipelineSteps +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.HandlerPipelineSteps\r\n              }\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>OtherTransports</h3>\r\n            <OtherTransportTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.PipelineSteps +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.OtherTransports\r\n              }\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>PipelineStepDestinations</h3>\r\n            <PipelineStepDestinationTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.PipelineSteps +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.PipelineStepDestinations\r\n              }\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>PipelineStepNotes</h3>\r\n            <PipelineStepNoteTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.PipelineSteps +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.PipelineStepNotes\r\n              }\r\n            />\r\n          </div>\r\n          <div>\r\n            <h3>PipelineStepStepRequirements</h3>\r\n            <PipelineStepStepRequirementTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.PipelineSteps +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.PipelineStepStepRequirements\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepDetailComponent = Form.create({\r\n  name: 'PipelineStep Detail',\r\n})(PipelineStepDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d13bf519a8e724ba83449e0c4d8f1d53</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepMapper from './pipelineStepMapper';\r\nimport PipelineStepViewModel from './pipelineStepViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PipelineStepStatusSelectComponent } from '../shared/pipelineStepStatusSelect';\r\nimport { EmployeeSelectComponent } from '../shared/employeeSelect';\r\ninterface PipelineStepEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepEditComponentState {\r\n  model?: PipelineStepViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass PipelineStepEditComponent extends React.Component<\r\n  PipelineStepEditComponentProps,\r\n  PipelineStepEditComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineSteps +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: PipelineStepViewModel) => {\r\n    let mapper = new PipelineStepMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineSteps +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"name\">name</label>\r\n            <br />\r\n            {getFieldDecorator('name', {\r\n              rules: [\r\n                { required: true, message: 'Required' },\r\n                { max: 128, message: 'Exceeds max length of 128' },\r\n              ],\r\n            })(<Input placeholder={'name'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepStatusId\">pipelineStepStatusId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepStatusId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepStatusId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"shipperId\">shipperId</label>\r\n            <br />\r\n            {getFieldDecorator('shipperId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'shipperId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepEditComponent = Form.create({\r\n  name: 'PipelineStep Edit',\r\n})(PipelineStepEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>44f32a8002f8765014a23a24c1f9d888</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepMapper from './pipelineStepMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport PipelineStepViewModel from './pipelineStepViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStepSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface PipelineStepSearchComponentState\r\n{\r\n    records:Array<PipelineStepViewModel>;\r\n    filteredRecords:Array<PipelineStepViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class PipelineStepSearchComponent extends React.Component<PipelineStepSearchComponentProps, PipelineStepSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<PipelineStepViewModel>(), filteredRecords:new Array<PipelineStepViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:PipelineStepViewModel) {\r\n         this.props.history.push(ClientRoutes.PipelineSteps + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:PipelineStepViewModel) {\r\n         this.props.history.push(ClientRoutes.PipelineSteps + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.PipelineSteps + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.PipelineStepClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.PipelineSteps + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.PipelineSteps + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.PipelineStepClientResponseModel>;\r\n\t\t    let viewModels : Array<PipelineStepViewModel> = [];\r\n\t\t\tlet mapper = new PipelineStepMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<PipelineStepViewModel>(), filteredRecords:new Array<PipelineStepViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'PipelineSteps',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'Name',\r\n                      accessor: 'name',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'PipelineStepStatusId',\r\n                      accessor: 'pipelineStepStatusId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.PipelineStepStatus + '/' + props.original.pipelineStepStatusId); }}>\r\n                          {String(\r\n                            props.original.pipelineStepStatusIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'ShipperId',\r\n                      accessor: 'shipperId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Employees + '/' + props.original.shipperId); }}>\r\n                          {String(\r\n                            props.original.shipperIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as PipelineStepViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedPipelineStepSearchComponent = Form.create({ name: 'PipelineStep Search' })(PipelineStepSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>584fef75f7dd4a59c93e733a0b4e465c</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepDestinationMapper from './pipelineStepDestinationMapper';\r\nimport PipelineStepDestinationViewModel from './pipelineStepDestinationViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { DestinationSelectComponent } from '../shared/destinationSelect';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect';\r\n\r\ninterface PipelineStepDestinationCreateComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepDestinationCreateComponentState {\r\n  model?: PipelineStepDestinationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass PipelineStepDestinationCreateComponent extends React.Component<\r\n  PipelineStepDestinationCreateComponentProps,\r\n  PipelineStepDestinationCreateComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepDestinationViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepDestinationViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: PipelineStepDestinationViewModel) => {\r\n    let mapper = new PipelineStepDestinationMapper();\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.PipelineStepDestinations,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepDestinationClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"destinationId\">destinationId</label>\r\n            <br />\r\n            {getFieldDecorator('destinationId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'destinationId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepDestinationCreateComponent = Form.create({\r\n  name: 'PipelineStepDestination Create',\r\n})(PipelineStepDestinationCreateComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4168f147959675f9108ab679a923b336</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepDestinationMapper from './pipelineStepDestinationMapper';\r\nimport PipelineStepDestinationViewModel from './pipelineStepDestinationViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStepDestinationDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepDestinationDetailComponentState {\r\n  model?: PipelineStepDestinationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass PipelineStepDestinationDetailComponent extends React.Component<\r\n  PipelineStepDestinationDetailComponentProps,\r\n  PipelineStepDestinationDetailComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepDestinationViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineStepDestinations + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepDestinations +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepDestinationClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepDestinationMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>destinationId</h3>\r\n              <p>\r\n                {String(this.state.model!.destinationIdNavigation!.toDisplay())}\r\n              </p>\r\n            </div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>pipelineStepId</h3>\r\n              <p>\r\n                {String(\r\n                  this.state.model!.pipelineStepIdNavigation!.toDisplay()\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepDestinationDetailComponent = Form.create({\r\n  name: 'PipelineStepDestination Detail',\r\n})(PipelineStepDestinationDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ab52e7d7768deffcbd8589af776c5934</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepDestinationMapper from './pipelineStepDestinationMapper';\r\nimport PipelineStepDestinationViewModel from './pipelineStepDestinationViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { DestinationSelectComponent } from '../shared/destinationSelect';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect';\r\ninterface PipelineStepDestinationEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepDestinationEditComponentState {\r\n  model?: PipelineStepDestinationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass PipelineStepDestinationEditComponent extends React.Component<\r\n  PipelineStepDestinationEditComponentProps,\r\n  PipelineStepDestinationEditComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepDestinationViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepDestinations +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepDestinationClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepDestinationMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepDestinationViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: PipelineStepDestinationViewModel) => {\r\n    let mapper = new PipelineStepDestinationMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepDestinations +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepDestinationClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"destinationId\">destinationId</label>\r\n            <br />\r\n            {getFieldDecorator('destinationId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'destinationId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepDestinationEditComponent = Form.create({\r\n  name: 'PipelineStepDestination Edit',\r\n})(PipelineStepDestinationEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>aa93ad27a33e17bc090ebc184cebac33</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepDestinationMapper from './pipelineStepDestinationMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport PipelineStepDestinationViewModel from './pipelineStepDestinationViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStepDestinationSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface PipelineStepDestinationSearchComponentState\r\n{\r\n    records:Array<PipelineStepDestinationViewModel>;\r\n    filteredRecords:Array<PipelineStepDestinationViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class PipelineStepDestinationSearchComponent extends React.Component<PipelineStepDestinationSearchComponentProps, PipelineStepDestinationSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<PipelineStepDestinationViewModel>(), filteredRecords:new Array<PipelineStepDestinationViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:PipelineStepDestinationViewModel) {\r\n         this.props.history.push(ClientRoutes.PipelineStepDestinations + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:PipelineStepDestinationViewModel) {\r\n         this.props.history.push(ClientRoutes.PipelineStepDestinations + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.PipelineStepDestinations + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.PipelineStepDestinationClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.PipelineStepDestinations + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.PipelineStepDestinations + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.PipelineStepDestinationClientResponseModel>;\r\n\t\t    let viewModels : Array<PipelineStepDestinationViewModel> = [];\r\n\t\t\tlet mapper = new PipelineStepDestinationMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<PipelineStepDestinationViewModel>(), filteredRecords:new Array<PipelineStepDestinationViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'PipelineStepDestinations',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'DestinationId',\r\n                      accessor: 'destinationId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Destinations + '/' + props.original.destinationId); }}>\r\n                          {String(\r\n                            props.original.destinationIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'PipelineStepId',\r\n                      accessor: 'pipelineStepId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.PipelineSteps + '/' + props.original.pipelineStepId); }}>\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStepDestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStepDestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as PipelineStepDestinationViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedPipelineStepDestinationSearchComponent = Form.create({ name: 'PipelineStepDestination Search' })(PipelineStepDestinationSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>e89364cc6d99ef1cbb0a698a90acd51f</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepNoteMapper from './pipelineStepNoteMapper';\r\nimport PipelineStepNoteViewModel from './pipelineStepNoteViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { EmployeeSelectComponent } from '../shared/employeeSelect';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect';\r\n\r\ninterface PipelineStepNoteCreateComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepNoteCreateComponentState {\r\n  model?: PipelineStepNoteViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass PipelineStepNoteCreateComponent extends React.Component<\r\n  PipelineStepNoteCreateComponentProps,\r\n  PipelineStepNoteCreateComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepNoteViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepNoteViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: PipelineStepNoteViewModel) => {\r\n    let mapper = new PipelineStepNoteMapper();\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.PipelineStepNotes,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepNoteClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"employeeId\">employeeId</label>\r\n            <br />\r\n            {getFieldDecorator('employeeId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'employeeId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepNoteCreateComponent = Form.create({\r\n  name: 'PipelineStepNote Create',\r\n})(PipelineStepNoteCreateComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4ef8b56dcf00ad60faabbba56a9a57d5</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepNoteMapper from './pipelineStepNoteMapper';\r\nimport PipelineStepNoteViewModel from './pipelineStepNoteViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\n\r\n\r\n\r\ninterface PipelineStepNoteDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepNoteDetailComponentState {\r\n  model?: PipelineStepNoteViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass PipelineStepNoteDetailComponent extends React.Component<\r\nPipelineStepNoteDetailComponentProps,\r\nPipelineStepNoteDetailComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepNoteViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: ''\r\n  };\r\n\r\n  handleEditClick(e:any) {\r\n    this.props.history.push(ClientRoutes.PipelineStepNotes + '/edit/' + this.state.model!.id);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepNotes +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepNoteClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepNoteMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } \r\n  \r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n\t\t<Button \r\n\t\t\tstyle={{'float':'right'}}\r\n\t\t\ttype=\"primary\" \r\n\t\t\tonClick={(e:any) => {\r\n\t\t\t\tthis.handleEditClick(e)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n             <i className=\"fas fa-edit\" />\r\n\t\t  </Button>\r\n\t\t  <div>\r\n\t\t\t\t\t\t\t\t\t <div style={{\"marginBottom\":\"10px\"}}>\r\n\t\t\t\t\t\t\t<h3>employeeId</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.employeeIdNavigation!.toDisplay())}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div style={{\"marginBottom\":\"10px\"}}>\r\n\t\t\t\t\t\t\t<h3>pipelineStepId</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.pipelineStepIdNavigation!.toDisplay())}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t  </div>\r\n          {message}\r\n\r\n\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepNoteDetailComponent = Form.create({ name: 'PipelineStepNote Detail' })(\r\n  PipelineStepNoteDetailComponent\r\n);\r\n\r\n/*<Codenesium>\r\n    <Hash>53df5db1ab8dbe4d521783f2b6484909</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepNoteMapper from './pipelineStepNoteMapper';\r\nimport PipelineStepNoteViewModel from './pipelineStepNoteViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { EmployeeSelectComponent } from '../shared/employeeSelect';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect';\r\ninterface PipelineStepNoteEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepNoteEditComponentState {\r\n  model?: PipelineStepNoteViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass PipelineStepNoteEditComponent extends React.Component<\r\n  PipelineStepNoteEditComponentProps,\r\n  PipelineStepNoteEditComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepNoteViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepNotes +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepNoteClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepNoteMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepNoteViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: PipelineStepNoteViewModel) => {\r\n    let mapper = new PipelineStepNoteMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepNotes +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepNoteClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"employeeId\">employeeId</label>\r\n            <br />\r\n            {getFieldDecorator('employeeId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'employeeId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepNoteEditComponent = Form.create({\r\n  name: 'PipelineStepNote Edit',\r\n})(PipelineStepNoteEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1bc4f8b585413a4264efe26926390bff</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepNoteMapper from './pipelineStepNoteMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport PipelineStepNoteViewModel from './pipelineStepNoteViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStepNoteSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepNoteSearchComponentState {\r\n  records: Array<PipelineStepNoteViewModel>;\r\n  filteredRecords: Array<PipelineStepNoteViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PipelineStepNoteSearchComponent extends React.Component<\r\n  PipelineStepNoteSearchComponentProps,\r\n  PipelineStepNoteSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<PipelineStepNoteViewModel>(),\r\n    filteredRecords: new Array<PipelineStepNoteViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: PipelineStepNoteViewModel) {\r\n    this.props.history.push(ClientRoutes.PipelineStepNotes + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: PipelineStepNoteViewModel) {\r\n    this.props.history.push(ClientRoutes.PipelineStepNotes + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.PipelineStepNotes + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PipelineStepNoteClientResponseModel) {\r\n    axios\r\n      .delete(\r\n        Constants.ApiEndpoint + ApiRoutes.PipelineStepNotes + '/' + row.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.PipelineStepNotes + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.PipelineStepNoteClientResponseModel\r\n          >;\r\n          let viewModels: Array<PipelineStepNoteViewModel> = [];\r\n          let mapper = new PipelineStepNoteMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PipelineStepNoteViewModel>(),\r\n            filteredRecords: new Array<PipelineStepNoteViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'PipelineStepNotes',\r\n                columns: [\r\n                  {\r\n                    Header: 'EmployeeId',\r\n                    accessor: 'employeeId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Employees +\r\n                                '/' +\r\n                                props.original.employeeId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.employeeIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PipelineStepId',\r\n                    accessor: 'pipelineStepId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.PipelineSteps +\r\n                                '/' +\r\n                                props.original.pipelineStepId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStepNoteViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStepNoteViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as PipelineStepNoteViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepNoteSearchComponent = Form.create({\r\n  name: 'PipelineStepNote Search',\r\n})(PipelineStepNoteSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>791b17e343090248742a22db8b73121a</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PipelineStepStatusViewModel from './pipelineStepStatusViewModel';\r\nexport default class PipelineStepStatusMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PipelineStepStatusClientResponseModel\r\n  ): PipelineStepStatusViewModel {\r\n    let response = new PipelineStepStatusViewModel();\r\n    response.setProperties(dto.id, dto.name);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PipelineStepStatusViewModel\r\n  ): Api.PipelineStepStatusClientRequestModel {\r\n    let response = new Api.PipelineStepStatusClientRequestModel();\r\n    response.setProperties(model.id, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>62ef5d272e360db13713ab31951eb801</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepStatusMapper from './pipelineStepStatusMapper';\r\nimport PipelineStepStatusViewModel from './pipelineStepStatusViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStepStatusCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface PipelineStepStatusCreateComponentState {\r\n  model?: PipelineStepStatusViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass PipelineStepStatusCreateComponent extends React.Component<\r\n  PipelineStepStatusCreateComponentProps,\r\n  PipelineStepStatusCreateComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepStatusViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepStatusViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:PipelineStepStatusViewModel) =>\r\n  {  \r\n    let mapper = new PipelineStepStatusMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.PipelineStepStatus,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepStatusClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepStatusCreateComponent = Form.create({ name: 'PipelineStepStatus Create' })(PipelineStepStatusCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>e6891361c6ab48826c788e0c8ac1c637</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepStatusMapper from './pipelineStepStatusMapper';\r\nimport PipelineStepStatusViewModel from './pipelineStepStatusViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PipelineStepTableComponent } from '../shared/pipelineStepTable';\r\n\r\ninterface PipelineStepStatusDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepStatusDetailComponentState {\r\n  model?: PipelineStepStatusViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass PipelineStepStatusDetailComponent extends React.Component<\r\n  PipelineStepStatusDetailComponentProps,\r\n  PipelineStepStatusDetailComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepStatusViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineStepStatus + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepStatus +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepStatusClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepStatusMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div>\r\n              <h3>name</h3>\r\n              <p>{String(this.state.model!.name)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n          <div>\r\n            <h3>PipelineSteps</h3>\r\n            <PipelineStepTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.PipelineStepStatus +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.PipelineSteps\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepStatusDetailComponent = Form.create({\r\n  name: 'PipelineStepStatus Detail',\r\n})(PipelineStepStatusDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>71194f54c884cfc298d7f8fce6199ba5</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepStatusMapper from './pipelineStepStatusMapper';\r\nimport PipelineStepStatusViewModel from './pipelineStepStatusViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\ninterface PipelineStepStatusEditComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface PipelineStepStatusEditComponentState {\r\n  model?: PipelineStepStatusViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass PipelineStepStatusEditComponent extends React.Component<\r\n  PipelineStepStatusEditComponentProps,\r\n  PipelineStepStatusEditComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepStatusViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n    componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepStatus +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepStatusClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepStatusMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n\t\t  this.props.form.setFieldsValue(mapper.mapApiResponseToViewModel(response));\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n }\r\n \r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepStatusViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:PipelineStepStatusViewModel) =>\r\n  {  \r\n    let mapper = new PipelineStepStatusMapper();\r\n     axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.PipelineStepStatus + '/' + this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepStatusClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepStatusEditComponent = Form.create({ name: 'PipelineStepStatus Edit' })(PipelineStepStatusEditComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>094739ea9103691696f68e26edfc97d1</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepStatusMapper from './pipelineStepStatusMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport PipelineStepStatusViewModel from './pipelineStepStatusViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStepStatusSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepStatusSearchComponentState {\r\n  records: Array<PipelineStepStatusViewModel>;\r\n  filteredRecords: Array<PipelineStepStatusViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PipelineStepStatusSearchComponent extends React.Component<\r\n  PipelineStepStatusSearchComponentProps,\r\n  PipelineStepStatusSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<PipelineStepStatusViewModel>(),\r\n    filteredRecords: new Array<PipelineStepStatusViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: PipelineStepStatusViewModel) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineStepStatus + '/edit/' + row.id\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: PipelineStepStatusViewModel) {\r\n    this.props.history.push(ClientRoutes.PipelineStepStatus + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.PipelineStepStatus + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PipelineStepStatusClientResponseModel) {\r\n    axios\r\n      .delete(\r\n        Constants.ApiEndpoint + ApiRoutes.PipelineStepStatus + '/' + row.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.PipelineStepStatus + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.PipelineStepStatusClientResponseModel\r\n          >;\r\n          let viewModels: Array<PipelineStepStatusViewModel> = [];\r\n          let mapper = new PipelineStepStatusMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PipelineStepStatusViewModel>(),\r\n            filteredRecords: new Array<PipelineStepStatusViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'PipelineStepStatus',\r\n                columns: [\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStepStatusViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStepStatusViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as PipelineStepStatusViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepStatusSearchComponent = Form.create({\r\n  name: 'PipelineStepStatus Search',\r\n})(PipelineStepStatusSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>14b5c3fe844f14d81920b97443a8685c</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepStepRequirementMapper from './pipelineStepStepRequirementMapper';\r\nimport PipelineStepStepRequirementViewModel from './pipelineStepStepRequirementViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect'\r\n\t\r\ninterface PipelineStepStepRequirementCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface PipelineStepStepRequirementCreateComponentState {\r\n  model?: PipelineStepStepRequirementViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass PipelineStepStepRequirementCreateComponent extends React.Component<\r\n  PipelineStepStepRequirementCreateComponentProps,\r\n  PipelineStepStepRequirementCreateComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepStepRequirementViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepStepRequirementViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:PipelineStepStepRequirementViewModel) =>\r\n  {  \r\n    let mapper = new PipelineStepStepRequirementMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.PipelineStepStepRequirements,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepStepRequirementClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='detail'>details</label>\r\n              <br />             \r\n              {getFieldDecorator('detail', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"details\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='pipelineStepId'>pipelineStepId</label>\r\n              <br />             \r\n              {getFieldDecorator('pipelineStepId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"pipelineStepId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='requirementMet'>requirementMet</label>\r\n              <br />             \r\n              {getFieldDecorator('requirementMet', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"requirementMet\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepStepRequirementCreateComponent = Form.create({ name: 'PipelineStepStepRequirement Create' })(PipelineStepStepRequirementCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>3e0bf259d254f00999ed925360a055a2</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepStepRequirementMapper from './pipelineStepStepRequirementMapper';\r\nimport PipelineStepStepRequirementViewModel from './pipelineStepStepRequirementViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStepStepRequirementDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepStepRequirementDetailComponentState {\r\n  model?: PipelineStepStepRequirementViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass PipelineStepStepRequirementDetailComponent extends React.Component<\r\n  PipelineStepStepRequirementDetailComponentProps,\r\n  PipelineStepStepRequirementDetailComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepStepRequirementViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.PipelineStepStepRequirements +\r\n        '/edit/' +\r\n        this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepStepRequirements +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepStepRequirementClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepStepRequirementMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div>\r\n              <h3>details</h3>\r\n              <p>{String(this.state.model!.detail)}</p>\r\n            </div>\r\n            <div style={{ marginBottom: '10px' }}>\r\n              <h3>pipelineStepId</h3>\r\n              <p>\r\n                {String(\r\n                  this.state.model!.pipelineStepIdNavigation!.toDisplay()\r\n                )}\r\n              </p>\r\n            </div>\r\n            <div>\r\n              <h3>requirementMet</h3>\r\n              <p>{String(this.state.model!.requirementMet)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepStepRequirementDetailComponent = Form.create({\r\n  name: 'PipelineStepStepRequirement Detail',\r\n})(PipelineStepStepRequirementDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>a28edc795f827fea1462f6f501bf12e6</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepStepRequirementMapper from './pipelineStepStepRequirementMapper';\r\nimport PipelineStepStepRequirementViewModel from './pipelineStepStepRequirementViewModel';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Switch,\r\n  InputNumber,\r\n  DatePicker,\r\n  Spin,\r\n  Alert,\r\n  TimePicker,\r\n} from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PipelineStepSelectComponent } from '../shared/pipelineStepSelect';\r\ninterface PipelineStepStepRequirementEditComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface PipelineStepStepRequirementEditComponentState {\r\n  model?: PipelineStepStepRequirementViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted: boolean;\r\n}\r\n\r\nclass PipelineStepStepRequirementEditComponent extends React.Component<\r\n  PipelineStepStepRequirementEditComponentProps,\r\n  PipelineStepStepRequirementEditComponentState\r\n> {\r\n  state = {\r\n    model: new PipelineStepStepRequirementViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    submitted: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepStepRequirements +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PipelineStepStepRequirementClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PipelineStepStepRequirementMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n          this.props.form.setFieldsValue(\r\n            mapper.mapApiResponseToViewModel(response)\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err: any, values: any) => {\r\n      if (!err) {\r\n        let model = values as PipelineStepStepRequirementViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model: PipelineStepStepRequirementViewModel) => {\r\n    let mapper = new PipelineStepStepRequirementMapper();\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PipelineStepStepRequirements +\r\n          '/' +\r\n          this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PipelineStepStepRequirementClientRequestModel\r\n          >;\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            model: mapper.mapApiResponseToViewModel(response.record!),\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            submitted: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      getFieldDecorator,\r\n      getFieldsError,\r\n      getFieldError,\r\n      isFieldTouched,\r\n    } = this.props.form;\r\n\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.submitted) {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n      } else {\r\n        message = <Alert message=\"Submitted\" type=\"success\" />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            <label htmlFor=\"detail\">details</label>\r\n            <br />\r\n            {getFieldDecorator('detail', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'details'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"pipelineStepId\">pipelineStepId</label>\r\n            <br />\r\n            {getFieldDecorator('pipelineStepId', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'pipelineStepId'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <label htmlFor=\"requirementMet\">requirementMet</label>\r\n            <br />\r\n            {getFieldDecorator('requirementMet', {\r\n              rules: [{ required: true, message: 'Required' }],\r\n            })(<Input placeholder={'requirementMet'} />)}\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n          {message}\r\n        </Form>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedPipelineStepStepRequirementEditComponent = Form.create({\r\n  name: 'PipelineStepStepRequirement Edit',\r\n})(PipelineStepStepRequirementEditComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8b8aa117d57c3236a7cc608a572e3921</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PipelineStepStepRequirementMapper from './pipelineStepStepRequirementMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport PipelineStepStepRequirementViewModel from './pipelineStepStepRequirementViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface PipelineStepStepRequirementSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface PipelineStepStepRequirementSearchComponentState\r\n{\r\n    records:Array<PipelineStepStepRequirementViewModel>;\r\n    filteredRecords:Array<PipelineStepStepRequirementViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class PipelineStepStepRequirementSearchComponent extends React.Component<PipelineStepStepRequirementSearchComponentProps, PipelineStepStepRequirementSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<PipelineStepStepRequirementViewModel>(), filteredRecords:new Array<PipelineStepStepRequirementViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:PipelineStepStepRequirementViewModel) {\r\n         this.props.history.push(ClientRoutes.PipelineStepStepRequirements + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:PipelineStepStepRequirementViewModel) {\r\n         this.props.history.push(ClientRoutes.PipelineStepStepRequirements + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.PipelineStepStepRequirements + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.PipelineStepStepRequirementClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.PipelineStepStepRequirements + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.PipelineStepStepRequirements + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.PipelineStepStepRequirementClientResponseModel>;\r\n\t\t    let viewModels : Array<PipelineStepStepRequirementViewModel> = [];\r\n\t\t\tlet mapper = new PipelineStepStepRequirementMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<PipelineStepStepRequirementViewModel>(), filteredRecords:new Array<PipelineStepStepRequirementViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'PipelineStepStepRequirements',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'Details',\r\n                      accessor: 'detail',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.detail)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'PipelineStepId',\r\n                      accessor: 'pipelineStepId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.PipelineSteps + '/' + props.original.pipelineStepId); }}>\r\n                          {String(\r\n                            props.original.pipelineStepIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'RequirementMet',\r\n                      accessor: 'requirementMet',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.requirementMet)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as PipelineStepStepRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as PipelineStepStepRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as PipelineStepStepRequirementViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedPipelineStepStepRequirementSearchComponent = Form.create({ name: 'PipelineStepStepRequirement Search' })(PipelineStepStepRequirementSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>cc9e0a38e2da521dd4d6ea957e6ee853</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport SaleMapper from './saleMapper';\r\nimport SaleViewModel from './saleViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PetSelectComponent } from '../shared/petSelect'\r\n\t\r\ninterface SaleCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface SaleCreateComponentState {\r\n  model?: SaleViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass SaleCreateComponent extends React.Component<\r\n  SaleCreateComponentProps,\r\n  SaleCreateComponentState\r\n> {\r\n  state = {\r\n    model: new SaleViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as SaleViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:SaleViewModel) =>\r\n  {  \r\n    let mapper = new SaleMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Sales,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SaleClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='amount'>amount</label>\r\n              <br />             \r\n              {getFieldDecorator('amount', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <InputNumber placeholder={\"amount\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='cutomerId'>cutomerId</label>\r\n              <br />             \r\n              {getFieldDecorator('cutomerId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"cutomerId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='note'>note</label>\r\n              <br />             \r\n              {getFieldDecorator('note', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"note\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='petId'>petId</label>\r\n              <br />             \r\n              {getFieldDecorator('petId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"petId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='saleDate'>saleDate</label>\r\n              <br />             \r\n              {getFieldDecorator('saleDate', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <DatePicker format={'YYYY-MM-DD'} placeholder={\"saleDate\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='salesPersonId'>salesPersonId</label>\r\n              <br />             \r\n              {getFieldDecorator('salesPersonId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"salesPersonId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedSaleCreateComponent = Form.create({ name: 'Sale Create' })(SaleCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>c04a1f9a4f2f5c091ef488182e26aa15</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport SaleMapper from './saleMapper';\r\nimport SaleViewModel from './saleViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\n\r\n\r\n\r\ninterface SaleDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface SaleDetailComponentState {\r\n  model?: SaleViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass SaleDetailComponent extends React.Component<\r\nSaleDetailComponentProps,\r\nSaleDetailComponentState\r\n> {\r\n  state = {\r\n    model: new SaleViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: ''\r\n  };\r\n\r\n  handleEditClick(e:any) {\r\n    this.props.history.push(ClientRoutes.Sales + '/edit/' + this.state.model!.id);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Sales +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SaleClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SaleMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } \r\n  \r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n\t\t<Button \r\n\t\t\tstyle={{'float':'right'}}\r\n\t\t\ttype=\"primary\" \r\n\t\t\tonClick={(e:any) => {\r\n\t\t\t\tthis.handleEditClick(e)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n             <i className=\"fas fa-edit\" />\r\n\t\t  </Button>\r\n\t\t  <div>\r\n\t\t\t\t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>amount</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.amount)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>cutomerId</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.cutomerId)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>note</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.note)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div style={{\"marginBottom\":\"10px\"}}>\r\n\t\t\t\t\t\t\t<h3>petId</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.petIdNavigation!.toDisplay())}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>saleDate</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.saleDate)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div>\r\n\t\t\t\t\t\t\t<h3>salesPersonId</h3>\r\n\t\t\t\t\t\t\t<p>{String(this.state.model!.salesPersonId)}</p>\r\n\t\t\t\t\t\t </div>\r\n\t\t\t\t\t   \t\t  </div>\r\n          {message}\r\n\r\n\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedSaleDetailComponent = Form.create({ name: 'Sale Detail' })(\r\n  SaleDetailComponent\r\n);\r\n\r\n/*<Codenesium>\r\n    <Hash>f0ea923756db2b923abac910cce62a81</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport SaleMapper from './saleMapper';\r\nimport SaleViewModel from './saleViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { PetSelectComponent } from '../shared/petSelect'\r\n\tinterface SaleEditComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface SaleEditComponentState {\r\n  model?: SaleViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass SaleEditComponent extends React.Component<\r\n  SaleEditComponentProps,\r\n  SaleEditComponentState\r\n> {\r\n  state = {\r\n    model: new SaleViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n    componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Sales +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SaleClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SaleMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n\t\t  this.props.form.setFieldsValue(mapper.mapApiResponseToViewModel(response));\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n }\r\n \r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as SaleViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:SaleViewModel) =>\r\n  {  \r\n    let mapper = new SaleMapper();\r\n     axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Sales + '/' + this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SaleClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='amount'>amount</label>\r\n              <br />             \r\n              {getFieldDecorator('amount', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <InputNumber placeholder={\"amount\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='cutomerId'>cutomerId</label>\r\n              <br />             \r\n              {getFieldDecorator('cutomerId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"cutomerId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='note'>note</label>\r\n              <br />             \r\n              {getFieldDecorator('note', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"note\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='petId'>petId</label>\r\n              <br />             \r\n              {getFieldDecorator('petId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"petId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='saleDate'>saleDate</label>\r\n              <br />             \r\n              {getFieldDecorator('saleDate', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <DatePicker format={'YYYY-MM-DD'} placeholder={\"saleDate\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\t\t\t<Form.Item>\r\n              <label htmlFor='salesPersonId'>salesPersonId</label>\r\n              <br />             \r\n              {getFieldDecorator('salesPersonId', {\r\n              rules:[{ required: true, message: 'Required' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"salesPersonId\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedSaleEditComponent = Form.create({ name: 'Sale Edit' })(SaleEditComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>3abf42ca246c56cee87ba7a7ecc35d79</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SaleMapper from './saleMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from \"react-table\";\r\nimport SaleViewModel from './saleViewModel';\r\nimport \"react-table/react-table.css\";\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface SaleSearchComponentProps\r\n{\r\n     form:WrappedFormUtils;\r\n\t history:any;\r\n\t match:any;\r\n}\r\n\r\ninterface SaleSearchComponentState\r\n{\r\n    records:Array<SaleViewModel>;\r\n    filteredRecords:Array<SaleViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class SaleSearchComponent extends React.Component<SaleSearchComponentProps, SaleSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<SaleViewModel>(), filteredRecords:new Array<SaleViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:SaleViewModel) {\r\n         this.props.history.push(ClientRoutes.Sales + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:SaleViewModel) {\r\n         this.props.history.push(ClientRoutes.Sales + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.Sales + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.SaleClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.Sales + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Sales + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.SaleClientResponseModel>;\r\n\t\t    let viewModels : Array<SaleViewModel> = [];\r\n\t\t\tlet mapper = new SaleMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<SaleViewModel>(), filteredRecords:new Array<SaleViewModel>(), loading:false, loaded:true, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <Spin size=\"large\" />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <Alert message={this.state.errorMessage} type=\"error\" />\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if (this.state.deleteSubmitted) {\r\n\t\t\t\tif (this.state.deleteSuccess) {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"success\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t} else {\r\n\t\t\t\t  errorResponse = (\r\n\t\t\t\t\t<Alert message={this.state.deleteResponse} type=\"error\" style={{marginBottom:\"25px\"}} />\r\n\t\t\t\t  );\r\n\t\t\t\t}\r\n\t\t\t}\r\n            \r\n\t\t\treturn (\r\n            <div>\r\n            {errorResponse}\r\n            <Row>\r\n\t\t\t\t<Col span={8}></Col>\r\n\t\t\t\t<Col span={8}>   \r\n\t\t\t\t   <Input \r\n\t\t\t\t\tplaceholder={\"Search\"} \r\n\t\t\t\t\tid={\"search\"} \r\n\t\t\t\t\tonChange={(e:any) => {\r\n\t\t\t\t\t  this.handleSearchChanged(e)\r\n\t\t\t\t   }}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col span={8}>  \r\n\t\t\t\t  <Button \r\n\t\t\t\t  style={{'float':'right'}}\r\n\t\t\t\t  type=\"primary\" \r\n\t\t\t\t  onClick={(e:any) => {\r\n                        this.handleCreateClick(e)\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t  >\r\n\t\t\t\t  +\r\n\t\t\t\t  </Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<br />\r\n\t\t\t<br />\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'Sales',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'Amount',\r\n                      accessor: 'amount',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.amount)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'CutomerId',\r\n                      accessor: 'cutomerId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.cutomerId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Note',\r\n                      accessor: 'note',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.note)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'PetId',\r\n                      accessor: 'petId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Pets + '/' + props.original.petId); }}>\r\n                          {String(\r\n                            props.original.petIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },  {\r\n                      Header: 'SaleDate',\r\n                      accessor: 'saleDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.saleDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'SalesPersonId',\r\n                      accessor: 'salesPersonId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.salesPersonId)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as SaleViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as SaleViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as SaleViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\nexport const WrappedSaleSearchComponent = Form.create({ name: 'Sale Search' })(SaleSearchComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>25da7ad404ec1892742d48280256ba35</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SpeciesViewModel from './speciesViewModel';\r\nexport default class SpeciesMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.SpeciesClientResponseModel\r\n  ): SpeciesViewModel {\r\n    let response = new SpeciesViewModel();\r\n    response.setProperties(dto.id, dto.name);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: SpeciesViewModel\r\n  ): Api.SpeciesClientRequestModel {\r\n    let response = new Api.SpeciesClientRequestModel();\r\n    response.setProperties(model.id, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c3eadfbe65e07a5a3b70af9eed03110a</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport SpeciesMapper from './speciesMapper';\r\nimport SpeciesViewModel from './speciesViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface SpeciesCreateComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface SpeciesCreateComponentState {\r\n  model?: SpeciesViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass SpeciesCreateComponent extends React.Component<\r\n  SpeciesCreateComponentProps,\r\n  SpeciesCreateComponentState\r\n> {\r\n  state = {\r\n    model: new SpeciesViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as SpeciesViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:SpeciesViewModel) =>\r\n  {  \r\n    let mapper = new SpeciesMapper();\r\n     axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Species,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SpeciesClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedSpeciesCreateComponent = Form.create({ name: 'Species Create' })(SpeciesCreateComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>72c2a2d640227da81cd4e9d2a4a14763</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport BreedMapper from '../breed/breedMapper';\r\nimport BreedViewModel from '../breed/breedViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport ReactTable from \"react-table\";\r\n\r\ninterface BreedTableComponentProps {\r\n  id:number,\r\n  apiRoute:string;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface BreedTableComponentState {\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  filteredRecords : Array<BreedViewModel>;\r\n}\r\n\r\nexport class  BreedTableComponent extends React.Component<\r\nBreedTableComponentProps,\r\nBreedTableComponentState\r\n> {\r\n  state = {\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n    filteredRecords:[]\r\n  };\r\n\r\nhandleEditClick(e:any, row: BreedViewModel) {\r\n  this.props.history.push(ClientRoutes.Breeds + '/edit/' + row.id);\r\n}\r\n\r\nhandleDetailClick(e:any, row: BreedViewModel) {\r\n  this.props.history.push(ClientRoutes.Breeds + '/' + row.id);\r\n}\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(this.props.apiRoute,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.BreedClientResponseModel>;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new BreedMapper();\r\n          \r\n          let breeds:Array<BreedViewModel> = [];\r\n\r\n          response.forEach(x =>\r\n          {\r\n              breeds.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n          this.setState({\r\n            ...this.state,\r\n            filteredRecords: breeds,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    \r\n\tlet message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n       return <Spin size=\"large\" />;\r\n    }\r\n\telse if (this.state.errorOccurred) {\r\n\t  return <Alert message={this.state.errorMessage} type='error' />;\r\n\t}\r\n\t else if (this.state.loaded) {\r\n      return (\r\n\t  <div>\r\n\t\t{message}\r\n         <ReactTable \r\n                data={this.state.filteredRecords}\r\n\t\t\t\tdefaultPageSize={10}\r\n                columns={[{\r\n                    Header: 'Breeds',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Name',\r\n                      accessor: 'name',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'SpeciesId',\r\n                      accessor: 'speciesId',\r\n                      Cell: (props) => {\r\n                        return <a href='' onClick={(e) => { e.preventDefault(); this.props.history.push(ClientRoutes.Species + '/' + props.original.speciesId); }}>\r\n                          {String(\r\n                            props.original.speciesIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div>\r\n\t\t\t\t\t    <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as BreedViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\" \r\n                          onClick={(e:any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as BreedViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n\t\t\t</div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>68daf5c2beb3dfdf41b8841419124efd</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport SpeciesMapper from './speciesMapper';\r\nimport SpeciesViewModel from './speciesViewModel';\r\nimport { Form, Input, Button, Spin, Alert } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\nimport { BreedTableComponent } from '../shared/breedTable';\r\n\r\ninterface SpeciesDetailComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface SpeciesDetailComponentState {\r\n  model?: SpeciesViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nclass SpeciesDetailComponent extends React.Component<\r\n  SpeciesDetailComponentProps,\r\n  SpeciesDetailComponentState\r\n> {\r\n  state = {\r\n    model: new SpeciesViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  handleEditClick(e: any) {\r\n    this.props.history.push(\r\n      ClientRoutes.Species + '/edit/' + this.state.model!.id\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Species +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SpeciesClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SpeciesMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    let message: JSX.Element = <div />;\r\n    if (this.state.errorOccurred) {\r\n      message = <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <div>\r\n          <Button\r\n            style={{ float: 'right' }}\r\n            type=\"primary\"\r\n            onClick={(e: any) => {\r\n              this.handleEditClick(e);\r\n            }}\r\n          >\r\n            <i className=\"fas fa-edit\" />\r\n          </Button>\r\n          <div>\r\n            <div>\r\n              <h3>name</h3>\r\n              <p>{String(this.state.model!.name)}</p>\r\n            </div>\r\n          </div>\r\n          {message}\r\n          <div>\r\n            <h3>Breeds</h3>\r\n            <BreedTableComponent\r\n              id={this.state.model!.id}\r\n              history={this.props.history}\r\n              match={this.props.match}\r\n              apiRoute={\r\n                Constants.ApiEndpoint +\r\n                ApiRoutes.Species +\r\n                '/' +\r\n                this.state.model!.id +\r\n                '/' +\r\n                ApiRoutes.Breeds\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedSpeciesDetailComponent = Form.create({\r\n  name: 'Species Detail',\r\n})(SpeciesDetailComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>aa9c5afb19f799a13a9c80dceaa40395</Hash>\r\n</Codenesium>*/","import React, { Component, FormEvent } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/apiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport * as Api from '../../api/models';\r\nimport SpeciesMapper from './speciesMapper';\r\nimport SpeciesViewModel from './speciesViewModel';\r\nimport { Form, Input, Button, Switch, InputNumber, DatePicker, Spin, Alert, TimePicker } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\ninterface SpeciesEditComponentProps {\r\n  form:WrappedFormUtils;\r\n  history:any;\r\n  match:any;\r\n}\r\n\r\ninterface SpeciesEditComponentState {\r\n  model?: SpeciesViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  submitted:boolean;\r\n}\r\n\r\nclass SpeciesEditComponent extends React.Component<\r\n  SpeciesEditComponentProps,\r\n  SpeciesEditComponentState\r\n> {\r\n  state = {\r\n    model: new SpeciesViewModel(),\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n\tsubmitted:false\r\n  };\r\n\r\n    componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Species +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SpeciesClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SpeciesMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n\r\n\t\t  this.props.form.setFieldsValue(mapper.mapApiResponseToViewModel(response));\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n }\r\n \r\n handleSubmit = (e:FormEvent<HTMLFormElement>) => {\r\n     e.preventDefault();\r\n     this.props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        let model = values as SpeciesViewModel;\r\n        console.log('Received values of form: ', model);\r\n        this.submit(model);\r\n      }\r\n    });\r\n  };\r\n\r\n  submit = (model:SpeciesViewModel) =>\r\n  {  \r\n    let mapper = new SpeciesMapper();\r\n     axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Species + '/' + this.state.model!.id,\r\n        mapper.mapViewModelToApiRequest(model),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SpeciesClientRequestModel\r\n          >;\r\n          this.setState({...this.state, submitted:true, model:mapper.mapApiResponseToViewModel(response.record!), errorOccurred:false, errorMessage:''});\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({...this.state, submitted:true, errorOccurred:true, errorMessage:'Error from API'});\r\n        }\r\n      ); \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form;\r\n        \r\n    let message:JSX.Element = <div></div>;\r\n    if(this.state.submitted)\r\n    {\r\n      if (this.state.errorOccurred) {\r\n        message = <Alert message={this.state.errorMessage} type='error' />;\r\n      }\r\n      else\r\n      {\r\n        message = <Alert message='Submitted' type='success' />;\r\n      }\r\n    }\r\n\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } \r\n    else if (this.state.loaded) {\r\n\r\n        return ( \r\n         <Form onSubmit={this.handleSubmit}>\r\n            \t\t\t<Form.Item>\r\n              <label htmlFor='name'>name</label>\r\n              <br />             \r\n              {getFieldDecorator('name', {\r\n              rules:[{ required: true, message: 'Required' },\r\n{ max: 128, message: 'Exceeds max length of 128' },\r\n],\r\n              \r\n              })\r\n              ( <Input placeholder={\"name\"} /> )}\r\n              </Form.Item>\r\n\r\n\t\t\t\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n\t\t\t{message}\r\n        </Form>);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedSpeciesEditComponent = Form.create({ name: 'Species Edit' })(SpeciesEditComponent);\r\n\r\n/*<Codenesium>\r\n    <Hash>7143053348f3362319457097763a0f38</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SpeciesMapper from './speciesMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport SpeciesViewModel from './speciesViewModel';\r\nimport 'react-table/react-table.css';\r\nimport { Form, Button, Input, Row, Col, Alert, Spin } from 'antd';\r\nimport { WrappedFormUtils } from 'antd/es/form/Form';\r\n\r\ninterface SpeciesSearchComponentProps {\r\n  form: WrappedFormUtils;\r\n  history: any;\r\n  match: any;\r\n}\r\n\r\ninterface SpeciesSearchComponentState {\r\n  records: Array<SpeciesViewModel>;\r\n  filteredRecords: Array<SpeciesViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class SpeciesSearchComponent extends React.Component<\r\n  SpeciesSearchComponentProps,\r\n  SpeciesSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<SpeciesViewModel>(),\r\n    filteredRecords: new Array<SpeciesViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: SpeciesViewModel) {\r\n    this.props.history.push(ClientRoutes.Species + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: SpeciesViewModel) {\r\n    this.props.history.push(ClientRoutes.Species + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Species + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.SpeciesClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Species + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.Species + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.SpeciesClientResponseModel>;\r\n          let viewModels: Array<SpeciesViewModel> = [];\r\n          let mapper = new SpeciesMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<SpeciesViewModel>(),\r\n            filteredRecords: new Array<SpeciesViewModel>(),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <Spin size=\"large\" />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <Alert message={this.state.errorMessage} type=\"error\" />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"success\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <Alert\r\n              message={this.state.deleteResponse}\r\n              type=\"error\"\r\n              style={{ marginBottom: '25px' }}\r\n            />\r\n          );\r\n        }\r\n      }\r\n\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <Row>\r\n            <Col span={8} />\r\n            <Col span={8}>\r\n              <Input\r\n                placeholder={'Search'}\r\n                id={'search'}\r\n                onChange={(e: any) => {\r\n                  this.handleSearchChanged(e);\r\n                }}\r\n              />\r\n            </Col>\r\n            <Col span={8}>\r\n              <Button\r\n                style={{ float: 'right' }}\r\n                type=\"primary\"\r\n                onClick={(e: any) => {\r\n                  this.handleCreateClick(e);\r\n                }}\r\n              >\r\n                +\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Species',\r\n                columns: [\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as SpeciesViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"primary\"\r\n                          onClick={(e: any) => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as SpeciesViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </Button>\r\n                        &nbsp;\r\n                        <Button\r\n                          type=\"danger\"\r\n                          onClick={(e: any) => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as SpeciesViewModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </Button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport const WrappedSpeciesSearchComponent = Form.create({\r\n  name: 'Species Search',\r\n})(SpeciesSearchComponent);\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b13a5406ffa20b2aaaf8550536c2e22d</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport { Route, Switch, match, BrowserRouter } from 'react-router-dom';\r\nimport Dashboard from './components/dashboard';\r\nimport { Security, ImplicitCallback, SecureRoute } from '@okta/okta-react';\r\nimport { wrapperHeader } from './components/header';\r\nimport { ClientRoutes, Constants } from './constants';\r\nimport { WrappedAirlineCreateComponent } from './components/airline/airlineCreateForm';\r\nimport { WrappedAirlineDetailComponent } from './components/airline/airlineDetailForm';\r\nimport { WrappedAirlineEditComponent } from './components/airline/airlineEditForm';\r\nimport { WrappedAirlineSearchComponent } from './components/airline/airlineSearchForm';\t\t\t\t\t\r\nimport { WrappedAirTransportCreateComponent } from './components/airTransport/airTransportCreateForm';\r\nimport { WrappedAirTransportDetailComponent } from './components/airTransport/airTransportDetailForm';\r\nimport { WrappedAirTransportEditComponent } from './components/airTransport/airTransportEditForm';\r\nimport { WrappedAirTransportSearchComponent } from './components/airTransport/airTransportSearchForm';\t\t\t\t\t\r\nimport { WrappedBreedCreateComponent } from './components/breed/breedCreateForm';\r\nimport { WrappedBreedDetailComponent } from './components/breed/breedDetailForm';\r\nimport { WrappedBreedEditComponent } from './components/breed/breedEditForm';\r\nimport { WrappedBreedSearchComponent } from './components/breed/breedSearchForm';\t\t\t\t\t\r\nimport { WrappedCountryCreateComponent } from './components/country/countryCreateForm';\r\nimport { WrappedCountryDetailComponent } from './components/country/countryDetailForm';\r\nimport { WrappedCountryEditComponent } from './components/country/countryEditForm';\r\nimport { WrappedCountrySearchComponent } from './components/country/countrySearchForm';\t\t\t\t\t\r\nimport { WrappedCountryRequirementCreateComponent } from './components/countryRequirement/countryRequirementCreateForm';\r\nimport { WrappedCountryRequirementDetailComponent } from './components/countryRequirement/countryRequirementDetailForm';\r\nimport { WrappedCountryRequirementEditComponent } from './components/countryRequirement/countryRequirementEditForm';\r\nimport { WrappedCountryRequirementSearchComponent } from './components/countryRequirement/countryRequirementSearchForm';\t\t\t\t\t\r\nimport { WrappedCustomerCreateComponent } from './components/customer/customerCreateForm';\r\nimport { WrappedCustomerDetailComponent } from './components/customer/customerDetailForm';\r\nimport { WrappedCustomerEditComponent } from './components/customer/customerEditForm';\r\nimport { WrappedCustomerSearchComponent } from './components/customer/customerSearchForm';\t\t\t\t\t\r\nimport { WrappedCustomerCommunicationCreateComponent } from './components/customerCommunication/customerCommunicationCreateForm';\r\nimport { WrappedCustomerCommunicationDetailComponent } from './components/customerCommunication/customerCommunicationDetailForm';\r\nimport { WrappedCustomerCommunicationEditComponent } from './components/customerCommunication/customerCommunicationEditForm';\r\nimport { WrappedCustomerCommunicationSearchComponent } from './components/customerCommunication/customerCommunicationSearchForm';\t\t\t\t\t\r\nimport { WrappedDestinationCreateComponent } from './components/destination/destinationCreateForm';\r\nimport { WrappedDestinationDetailComponent } from './components/destination/destinationDetailForm';\r\nimport { WrappedDestinationEditComponent } from './components/destination/destinationEditForm';\r\nimport { WrappedDestinationSearchComponent } from './components/destination/destinationSearchForm';\t\t\t\t\t\r\nimport { WrappedEmployeeCreateComponent } from './components/employee/employeeCreateForm';\r\nimport { WrappedEmployeeDetailComponent } from './components/employee/employeeDetailForm';\r\nimport { WrappedEmployeeEditComponent } from './components/employee/employeeEditForm';\r\nimport { WrappedEmployeeSearchComponent } from './components/employee/employeeSearchForm';\t\t\t\t\t\r\nimport { WrappedHandlerCreateComponent } from './components/handler/handlerCreateForm';\r\nimport { WrappedHandlerDetailComponent } from './components/handler/handlerDetailForm';\r\nimport { WrappedHandlerEditComponent } from './components/handler/handlerEditForm';\r\nimport { WrappedHandlerSearchComponent } from './components/handler/handlerSearchForm';\t\t\t\t\t\r\nimport { WrappedHandlerPipelineStepCreateComponent } from './components/handlerPipelineStep/handlerPipelineStepCreateForm';\r\nimport { WrappedHandlerPipelineStepDetailComponent } from './components/handlerPipelineStep/handlerPipelineStepDetailForm';\r\nimport { WrappedHandlerPipelineStepEditComponent } from './components/handlerPipelineStep/handlerPipelineStepEditForm';\r\nimport { WrappedHandlerPipelineStepSearchComponent } from './components/handlerPipelineStep/handlerPipelineStepSearchForm';\t\t\t\t\t\r\nimport { WrappedOtherTransportCreateComponent } from './components/otherTransport/otherTransportCreateForm';\r\nimport { WrappedOtherTransportDetailComponent } from './components/otherTransport/otherTransportDetailForm';\r\nimport { WrappedOtherTransportEditComponent } from './components/otherTransport/otherTransportEditForm';\r\nimport { WrappedOtherTransportSearchComponent } from './components/otherTransport/otherTransportSearchForm';\t\t\t\t\t\r\nimport { WrappedPetCreateComponent } from './components/pet/petCreateForm';\r\nimport { WrappedPetDetailComponent } from './components/pet/petDetailForm';\r\nimport { WrappedPetEditComponent } from './components/pet/petEditForm';\r\nimport { WrappedPetSearchComponent } from './components/pet/petSearchForm';\t\t\t\t\t\r\nimport { WrappedPipelineCreateComponent } from './components/pipeline/pipelineCreateForm';\r\nimport { WrappedPipelineDetailComponent } from './components/pipeline/pipelineDetailForm';\r\nimport { WrappedPipelineEditComponent } from './components/pipeline/pipelineEditForm';\r\nimport { WrappedPipelineSearchComponent } from './components/pipeline/pipelineSearchForm';\t\t\t\t\t\r\nimport { WrappedPipelineStatusCreateComponent } from './components/pipelineStatus/pipelineStatusCreateForm';\r\nimport { WrappedPipelineStatusDetailComponent } from './components/pipelineStatus/pipelineStatusDetailForm';\r\nimport { WrappedPipelineStatusEditComponent } from './components/pipelineStatus/pipelineStatusEditForm';\r\nimport { WrappedPipelineStatusSearchComponent } from './components/pipelineStatus/pipelineStatusSearchForm';\t\t\t\t\t\r\nimport { WrappedPipelineStepCreateComponent } from './components/pipelineStep/pipelineStepCreateForm';\r\nimport { WrappedPipelineStepDetailComponent } from './components/pipelineStep/pipelineStepDetailForm';\r\nimport { WrappedPipelineStepEditComponent } from './components/pipelineStep/pipelineStepEditForm';\r\nimport { WrappedPipelineStepSearchComponent } from './components/pipelineStep/pipelineStepSearchForm';\t\t\t\t\t\r\nimport { WrappedPipelineStepDestinationCreateComponent } from './components/pipelineStepDestination/pipelineStepDestinationCreateForm';\r\nimport { WrappedPipelineStepDestinationDetailComponent } from './components/pipelineStepDestination/pipelineStepDestinationDetailForm';\r\nimport { WrappedPipelineStepDestinationEditComponent } from './components/pipelineStepDestination/pipelineStepDestinationEditForm';\r\nimport { WrappedPipelineStepDestinationSearchComponent } from './components/pipelineStepDestination/pipelineStepDestinationSearchForm';\t\t\t\t\t\r\nimport { WrappedPipelineStepNoteCreateComponent } from './components/pipelineStepNote/pipelineStepNoteCreateForm';\r\nimport { WrappedPipelineStepNoteDetailComponent } from './components/pipelineStepNote/pipelineStepNoteDetailForm';\r\nimport { WrappedPipelineStepNoteEditComponent } from './components/pipelineStepNote/pipelineStepNoteEditForm';\r\nimport { WrappedPipelineStepNoteSearchComponent } from './components/pipelineStepNote/pipelineStepNoteSearchForm';\t\t\t\t\t\r\nimport { WrappedPipelineStepStatusCreateComponent } from './components/pipelineStepStatus/pipelineStepStatusCreateForm';\r\nimport { WrappedPipelineStepStatusDetailComponent } from './components/pipelineStepStatus/pipelineStepStatusDetailForm';\r\nimport { WrappedPipelineStepStatusEditComponent } from './components/pipelineStepStatus/pipelineStepStatusEditForm';\r\nimport { WrappedPipelineStepStatusSearchComponent } from './components/pipelineStepStatus/pipelineStepStatusSearchForm';\t\t\t\t\t\r\nimport { WrappedPipelineStepStepRequirementCreateComponent } from './components/pipelineStepStepRequirement/pipelineStepStepRequirementCreateForm';\r\nimport { WrappedPipelineStepStepRequirementDetailComponent } from './components/pipelineStepStepRequirement/pipelineStepStepRequirementDetailForm';\r\nimport { WrappedPipelineStepStepRequirementEditComponent } from './components/pipelineStepStepRequirement/pipelineStepStepRequirementEditForm';\r\nimport { WrappedPipelineStepStepRequirementSearchComponent } from './components/pipelineStepStepRequirement/pipelineStepStepRequirementSearchForm';\t\t\t\t\t\r\nimport { WrappedSaleCreateComponent } from './components/sale/saleCreateForm';\r\nimport { WrappedSaleDetailComponent } from './components/sale/saleDetailForm';\r\nimport { WrappedSaleEditComponent } from './components/sale/saleEditForm';\r\nimport { WrappedSaleSearchComponent } from './components/sale/saleSearchForm';\t\t\t\t\t\r\nimport { WrappedSpeciesCreateComponent } from './components/species/speciesCreateForm';\r\nimport { WrappedSpeciesDetailComponent } from './components/species/speciesDetailForm';\r\nimport { WrappedSpeciesEditComponent } from './components/species/speciesEditForm';\r\nimport { WrappedSpeciesSearchComponent } from './components/species/speciesSearchForm';\t\t\t\t\t\r\n\r\nconst config = {\r\n  oidc: {\r\n    clientId: '<okta_client_id>',\r\n    issuer: 'https://<okta_application_url>/oauth2/default',\r\n    redirectUri: 'https://<your_public_webserver>/implicit/callback',\r\n    scope: 'openid profile email',\r\n  }\r\n}\r\n\r\nexport const AppRouter: React.StatelessComponent<{}> = () => {\r\n  const query = new URLSearchParams(location.search)\r\n\r\n  return (\r\n    <BrowserRouter>   \r\n\t<Security issuer={config.oidc.issuer}\r\n        client_id={config.oidc.clientId}\r\n        redirect_uri={config.oidc.redirectUri}>\r\n\t    <SecureRoute path=\"/protected\" component={() => '<div>secure route</div>'} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={wrapperHeader(Dashboard, \"Dashboard\")} />\r\n\t\t  <Route path={ClientRoutes.Airlines + \"/create\"} component={wrapperHeader(WrappedAirlineCreateComponent, \"Airline Create\")} />\r\n                      <Route path={ClientRoutes.Airlines + \"/edit/:id\"} component={wrapperHeader(WrappedAirlineEditComponent, \"Airline Edit\")} />\r\n                      <Route path={ClientRoutes.Airlines + \"/:id\"} component={wrapperHeader(WrappedAirlineDetailComponent , \"Airline Detail\")} />\r\n                      <Route path={ClientRoutes.Airlines} component={wrapperHeader(WrappedAirlineSearchComponent, \"Airline Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.AirTransports + \"/create\"} component={wrapperHeader(WrappedAirTransportCreateComponent, \"AirTransport Create\")} />\r\n                      <Route path={ClientRoutes.AirTransports + \"/edit/:id\"} component={wrapperHeader(WrappedAirTransportEditComponent, \"AirTransport Edit\")} />\r\n                      <Route path={ClientRoutes.AirTransports + \"/:id\"} component={wrapperHeader(WrappedAirTransportDetailComponent , \"AirTransport Detail\")} />\r\n                      <Route path={ClientRoutes.AirTransports} component={wrapperHeader(WrappedAirTransportSearchComponent, \"AirTransport Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Breeds + \"/create\"} component={wrapperHeader(WrappedBreedCreateComponent, \"Breed Create\")} />\r\n                      <Route path={ClientRoutes.Breeds + \"/edit/:id\"} component={wrapperHeader(WrappedBreedEditComponent, \"Breed Edit\")} />\r\n                      <Route path={ClientRoutes.Breeds + \"/:id\"} component={wrapperHeader(WrappedBreedDetailComponent , \"Breed Detail\")} />\r\n                      <Route path={ClientRoutes.Breeds} component={wrapperHeader(WrappedBreedSearchComponent, \"Breed Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Countries + \"/create\"} component={wrapperHeader(WrappedCountryCreateComponent, \"Country Create\")} />\r\n                      <Route path={ClientRoutes.Countries + \"/edit/:id\"} component={wrapperHeader(WrappedCountryEditComponent, \"Country Edit\")} />\r\n                      <Route path={ClientRoutes.Countries + \"/:id\"} component={wrapperHeader(WrappedCountryDetailComponent , \"Country Detail\")} />\r\n                      <Route path={ClientRoutes.Countries} component={wrapperHeader(WrappedCountrySearchComponent, \"Country Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.CountryRequirements + \"/create\"} component={wrapperHeader(WrappedCountryRequirementCreateComponent, \"CountryRequirement Create\")} />\r\n                      <Route path={ClientRoutes.CountryRequirements + \"/edit/:id\"} component={wrapperHeader(WrappedCountryRequirementEditComponent, \"CountryRequirement Edit\")} />\r\n                      <Route path={ClientRoutes.CountryRequirements + \"/:id\"} component={wrapperHeader(WrappedCountryRequirementDetailComponent , \"CountryRequirement Detail\")} />\r\n                      <Route path={ClientRoutes.CountryRequirements} component={wrapperHeader(WrappedCountryRequirementSearchComponent, \"CountryRequirement Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Customers + \"/create\"} component={wrapperHeader(WrappedCustomerCreateComponent, \"Customer Create\")} />\r\n                      <Route path={ClientRoutes.Customers + \"/edit/:id\"} component={wrapperHeader(WrappedCustomerEditComponent, \"Customer Edit\")} />\r\n                      <Route path={ClientRoutes.Customers + \"/:id\"} component={wrapperHeader(WrappedCustomerDetailComponent , \"Customer Detail\")} />\r\n                      <Route path={ClientRoutes.Customers} component={wrapperHeader(WrappedCustomerSearchComponent, \"Customer Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.CustomerCommunications + \"/create\"} component={wrapperHeader(WrappedCustomerCommunicationCreateComponent, \"CustomerCommunication Create\")} />\r\n                      <Route path={ClientRoutes.CustomerCommunications + \"/edit/:id\"} component={wrapperHeader(WrappedCustomerCommunicationEditComponent, \"CustomerCommunication Edit\")} />\r\n                      <Route path={ClientRoutes.CustomerCommunications + \"/:id\"} component={wrapperHeader(WrappedCustomerCommunicationDetailComponent , \"CustomerCommunication Detail\")} />\r\n                      <Route path={ClientRoutes.CustomerCommunications} component={wrapperHeader(WrappedCustomerCommunicationSearchComponent, \"CustomerCommunication Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Destinations + \"/create\"} component={wrapperHeader(WrappedDestinationCreateComponent, \"Destination Create\")} />\r\n                      <Route path={ClientRoutes.Destinations + \"/edit/:id\"} component={wrapperHeader(WrappedDestinationEditComponent, \"Destination Edit\")} />\r\n                      <Route path={ClientRoutes.Destinations + \"/:id\"} component={wrapperHeader(WrappedDestinationDetailComponent , \"Destination Detail\")} />\r\n                      <Route path={ClientRoutes.Destinations} component={wrapperHeader(WrappedDestinationSearchComponent, \"Destination Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Employees + \"/create\"} component={wrapperHeader(WrappedEmployeeCreateComponent, \"Employee Create\")} />\r\n                      <Route path={ClientRoutes.Employees + \"/edit/:id\"} component={wrapperHeader(WrappedEmployeeEditComponent, \"Employee Edit\")} />\r\n                      <Route path={ClientRoutes.Employees + \"/:id\"} component={wrapperHeader(WrappedEmployeeDetailComponent , \"Employee Detail\")} />\r\n                      <Route path={ClientRoutes.Employees} component={wrapperHeader(WrappedEmployeeSearchComponent, \"Employee Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Handlers + \"/create\"} component={wrapperHeader(WrappedHandlerCreateComponent, \"Handler Create\")} />\r\n                      <Route path={ClientRoutes.Handlers + \"/edit/:id\"} component={wrapperHeader(WrappedHandlerEditComponent, \"Handler Edit\")} />\r\n                      <Route path={ClientRoutes.Handlers + \"/:id\"} component={wrapperHeader(WrappedHandlerDetailComponent , \"Handler Detail\")} />\r\n                      <Route path={ClientRoutes.Handlers} component={wrapperHeader(WrappedHandlerSearchComponent, \"Handler Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.HandlerPipelineSteps + \"/create\"} component={wrapperHeader(WrappedHandlerPipelineStepCreateComponent, \"HandlerPipelineStep Create\")} />\r\n                      <Route path={ClientRoutes.HandlerPipelineSteps + \"/edit/:id\"} component={wrapperHeader(WrappedHandlerPipelineStepEditComponent, \"HandlerPipelineStep Edit\")} />\r\n                      <Route path={ClientRoutes.HandlerPipelineSteps + \"/:id\"} component={wrapperHeader(WrappedHandlerPipelineStepDetailComponent , \"HandlerPipelineStep Detail\")} />\r\n                      <Route path={ClientRoutes.HandlerPipelineSteps} component={wrapperHeader(WrappedHandlerPipelineStepSearchComponent, \"HandlerPipelineStep Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.OtherTransports + \"/create\"} component={wrapperHeader(WrappedOtherTransportCreateComponent, \"OtherTransport Create\")} />\r\n                      <Route path={ClientRoutes.OtherTransports + \"/edit/:id\"} component={wrapperHeader(WrappedOtherTransportEditComponent, \"OtherTransport Edit\")} />\r\n                      <Route path={ClientRoutes.OtherTransports + \"/:id\"} component={wrapperHeader(WrappedOtherTransportDetailComponent , \"OtherTransport Detail\")} />\r\n                      <Route path={ClientRoutes.OtherTransports} component={wrapperHeader(WrappedOtherTransportSearchComponent, \"OtherTransport Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Pets + \"/create\"} component={wrapperHeader(WrappedPetCreateComponent, \"Pet Create\")} />\r\n                      <Route path={ClientRoutes.Pets + \"/edit/:id\"} component={wrapperHeader(WrappedPetEditComponent, \"Pet Edit\")} />\r\n                      <Route path={ClientRoutes.Pets + \"/:id\"} component={wrapperHeader(WrappedPetDetailComponent , \"Pet Detail\")} />\r\n                      <Route path={ClientRoutes.Pets} component={wrapperHeader(WrappedPetSearchComponent, \"Pet Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Pipelines + \"/create\"} component={wrapperHeader(WrappedPipelineCreateComponent, \"Pipeline Create\")} />\r\n                      <Route path={ClientRoutes.Pipelines + \"/edit/:id\"} component={wrapperHeader(WrappedPipelineEditComponent, \"Pipeline Edit\")} />\r\n                      <Route path={ClientRoutes.Pipelines + \"/:id\"} component={wrapperHeader(WrappedPipelineDetailComponent , \"Pipeline Detail\")} />\r\n                      <Route path={ClientRoutes.Pipelines} component={wrapperHeader(WrappedPipelineSearchComponent, \"Pipeline Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.PipelineStatus + \"/create\"} component={wrapperHeader(WrappedPipelineStatusCreateComponent, \"PipelineStatus Create\")} />\r\n                      <Route path={ClientRoutes.PipelineStatus + \"/edit/:id\"} component={wrapperHeader(WrappedPipelineStatusEditComponent, \"PipelineStatus Edit\")} />\r\n                      <Route path={ClientRoutes.PipelineStatus + \"/:id\"} component={wrapperHeader(WrappedPipelineStatusDetailComponent , \"PipelineStatus Detail\")} />\r\n                      <Route path={ClientRoutes.PipelineStatus} component={wrapperHeader(WrappedPipelineStatusSearchComponent, \"PipelineStatus Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.PipelineSteps + \"/create\"} component={wrapperHeader(WrappedPipelineStepCreateComponent, \"PipelineStep Create\")} />\r\n                      <Route path={ClientRoutes.PipelineSteps + \"/edit/:id\"} component={wrapperHeader(WrappedPipelineStepEditComponent, \"PipelineStep Edit\")} />\r\n                      <Route path={ClientRoutes.PipelineSteps + \"/:id\"} component={wrapperHeader(WrappedPipelineStepDetailComponent , \"PipelineStep Detail\")} />\r\n                      <Route path={ClientRoutes.PipelineSteps} component={wrapperHeader(WrappedPipelineStepSearchComponent, \"PipelineStep Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.PipelineStepDestinations + \"/create\"} component={wrapperHeader(WrappedPipelineStepDestinationCreateComponent, \"PipelineStepDestination Create\")} />\r\n                      <Route path={ClientRoutes.PipelineStepDestinations + \"/edit/:id\"} component={wrapperHeader(WrappedPipelineStepDestinationEditComponent, \"PipelineStepDestination Edit\")} />\r\n                      <Route path={ClientRoutes.PipelineStepDestinations + \"/:id\"} component={wrapperHeader(WrappedPipelineStepDestinationDetailComponent , \"PipelineStepDestination Detail\")} />\r\n                      <Route path={ClientRoutes.PipelineStepDestinations} component={wrapperHeader(WrappedPipelineStepDestinationSearchComponent, \"PipelineStepDestination Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.PipelineStepNotes + \"/create\"} component={wrapperHeader(WrappedPipelineStepNoteCreateComponent, \"PipelineStepNote Create\")} />\r\n                      <Route path={ClientRoutes.PipelineStepNotes + \"/edit/:id\"} component={wrapperHeader(WrappedPipelineStepNoteEditComponent, \"PipelineStepNote Edit\")} />\r\n                      <Route path={ClientRoutes.PipelineStepNotes + \"/:id\"} component={wrapperHeader(WrappedPipelineStepNoteDetailComponent , \"PipelineStepNote Detail\")} />\r\n                      <Route path={ClientRoutes.PipelineStepNotes} component={wrapperHeader(WrappedPipelineStepNoteSearchComponent, \"PipelineStepNote Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.PipelineStepStatus + \"/create\"} component={wrapperHeader(WrappedPipelineStepStatusCreateComponent, \"PipelineStepStatus Create\")} />\r\n                      <Route path={ClientRoutes.PipelineStepStatus + \"/edit/:id\"} component={wrapperHeader(WrappedPipelineStepStatusEditComponent, \"PipelineStepStatus Edit\")} />\r\n                      <Route path={ClientRoutes.PipelineStepStatus + \"/:id\"} component={wrapperHeader(WrappedPipelineStepStatusDetailComponent , \"PipelineStepStatus Detail\")} />\r\n                      <Route path={ClientRoutes.PipelineStepStatus} component={wrapperHeader(WrappedPipelineStepStatusSearchComponent, \"PipelineStepStatus Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.PipelineStepStepRequirements + \"/create\"} component={wrapperHeader(WrappedPipelineStepStepRequirementCreateComponent, \"PipelineStepStepRequirement Create\")} />\r\n                      <Route path={ClientRoutes.PipelineStepStepRequirements + \"/edit/:id\"} component={wrapperHeader(WrappedPipelineStepStepRequirementEditComponent, \"PipelineStepStepRequirement Edit\")} />\r\n                      <Route path={ClientRoutes.PipelineStepStepRequirements + \"/:id\"} component={wrapperHeader(WrappedPipelineStepStepRequirementDetailComponent , \"PipelineStepStepRequirement Detail\")} />\r\n                      <Route path={ClientRoutes.PipelineStepStepRequirements} component={wrapperHeader(WrappedPipelineStepStepRequirementSearchComponent, \"PipelineStepStepRequirement Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Sales + \"/create\"} component={wrapperHeader(WrappedSaleCreateComponent, \"Sale Create\")} />\r\n                      <Route path={ClientRoutes.Sales + \"/edit/:id\"} component={wrapperHeader(WrappedSaleEditComponent, \"Sale Edit\")} />\r\n                      <Route path={ClientRoutes.Sales + \"/:id\"} component={wrapperHeader(WrappedSaleDetailComponent , \"Sale Detail\")} />\r\n                      <Route path={ClientRoutes.Sales} component={wrapperHeader(WrappedSaleSearchComponent, \"Sale Search\")} />\r\n\t\t\t\t\t<Route path={ClientRoutes.Species + \"/create\"} component={wrapperHeader(WrappedSpeciesCreateComponent, \"Species Create\")} />\r\n                      <Route path={ClientRoutes.Species + \"/edit/:id\"} component={wrapperHeader(WrappedSpeciesEditComponent, \"Species Edit\")} />\r\n                      <Route path={ClientRoutes.Species + \"/:id\"} component={wrapperHeader(WrappedSpeciesDetailComponent , \"Species Detail\")} />\r\n                      <Route path={ClientRoutes.Species} component={wrapperHeader(WrappedSpeciesSearchComponent, \"Species Search\")} />\r\n\t\t\t\t\t        </Switch>\r\n\t  </Security>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>49756f6d939c5ca5ef78fe14f0e685f3</Hash>\r\n</Codenesium>*/","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {AppRouter} from './router'\r\n\r\n\r\nReactDOM.render(\r\n       <AppRouter />\r\n, document.getElementById('root'));"],"sourceRoot":""}