{"version":3,"sources":["components/header.tsx","app.tsx","constants.tsx","components/dashboard.tsx","lib/components/loadingForm.tsx","lib/components/errorForm.tsx","api/models.ts","components/breed/breedViewModel.tsx","components/breed/breedMapper.tsx","components/breed/breedCreateForm.tsx","components/breed/breedDetailForm.tsx","components/breed/breedEditForm.tsx","components/breed/breedSearchForm.tsx","components/paymentType/paymentTypeViewModel.tsx","components/paymentType/paymentTypeMapper.tsx","components/paymentType/paymentTypeCreateForm.tsx","components/paymentType/paymentTypeDetailForm.tsx","components/paymentType/paymentTypeEditForm.tsx","components/paymentType/paymentTypeSearchForm.tsx","components/pen/penViewModel.tsx","components/pen/penMapper.tsx","components/pen/penCreateForm.tsx","components/pen/penDetailForm.tsx","components/pen/penEditForm.tsx","components/pen/penSearchForm.tsx","components/pet/petViewModel.tsx","components/species/speciesViewModel.tsx","components/pet/petMapper.tsx","components/pet/petCreateForm.tsx","components/pet/petDetailForm.tsx","components/pet/petEditForm.tsx","components/pet/petSearchForm.tsx","components/sale/saleViewModel.tsx","components/sale/saleMapper.tsx","components/sale/saleCreateForm.tsx","components/sale/saleDetailForm.tsx","components/sale/saleEditForm.tsx","components/sale/saleSearchForm.tsx","components/species/speciesMapper.tsx","components/species/speciesCreateForm.tsx","components/species/speciesDetailForm.tsx","components/species/speciesEditForm.tsx","components/species/speciesSearchForm.tsx","router.tsx","index.tsx"],"names":["Header","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","menuExpanded","inherits","createClass","key","value","e","setState","_this2","react","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","handleClick","Link","to","React","App","props","header_Header","Constants","ApiHealthEndpoint","ApiEndpoint","BaseEndpoint","SwaggerEndpoint","ClientRoutes","Breeds","PaymentTypes","Pens","Pets","Sales","Species","ApiRoutes","Dashboard","connected","connecting","objectSpread","axios","get","headers","Content-Type","then","resp","console","log","error","testConnection","_this3","alert","target","LoadingForm","ErrorForm","message","BreedClientRequestModel","name","PaymentTypeClientRequestModel","PenClientRequestModel","PetClientRequestModel","acquiredDate","undefined","breedId","breedIdEntity","breedIdNavigation","description","penId","penIdEntity","penIdNavigation","price","speciesId","speciesIdEntity","speciesIdNavigation","SaleClientRequestModel","amount","firstName","lastName","paymentTypeId","paymentTypeIdEntity","paymentTypeIdNavigation","petId","petIdEntity","petIdNavigation","phone","SpeciesClientRequestModel","BreedViewModel","String","BreedMapper","dto","response","setProperties","model","Api","BreedCreate","withFormik","mapPropsToValues","validate","values","errors","handleSubmit","actions","setStatus","mapper","post","mapViewModelToApiRequest","data","displayName","status","errorsForField","touched","validationErrors","find","f","propertyName","toLowerCase","filter","errorMessage","errorExistForField","react_default","a","createElement","onSubmit","role","htmlFor","formik_esm","disabled","success","BreedCreateComponent","loading","loaded","errorOccurred","loadingForm_LoadingForm","errorForm_ErrorForm","Component","BreedDetailDisplay","history","push","BreedDetailComponent","match","params","mapApiResponseToViewModel","breedDetailForm_BreedDetailDisplay","BreedEdit","put","BreedEditComponent","BreedSearchComponent","deleteSubmitted","deleteSuccess","deleteResponse","records","filteredRecords","searchValue","loadRecords","row","delete","currentTarget","query","searchEndpoint","viewModels","forEach","x","_this4","errorResponse","placeholder","onChange","handleSearchChanged","handleCreateClick","es","columns","accessor","Cell","original","handleDetailClick","handleEditClick","handleDeleteClick","PaymentTypeViewModel","PaymentTypeMapper","PaymentTypeCreate","PaymentTypeCreateComponent","PaymentTypeDetailDisplay","PaymentTypeDetailComponent","paymentTypeDetailForm_PaymentTypeDetailDisplay","PaymentTypeEdit","PaymentTypeEditComponent","PaymentTypeSearchComponent","PenViewModel","PenMapper","PenCreate","PenCreateComponent","PenDetailDisplay","PenDetailComponent","penDetailForm_PenDetailDisplay","PenEdit","PenEditComponent","PenSearchComponent","PetViewModel","SpeciesViewModel","PetMapper","PetCreate","PetCreateComponent","PetDetailDisplay","toDisplay","PetDetailComponent","petDetailForm_PetDetailDisplay","PetEdit","PetEditComponent","PetSearchComponent","preventDefault","SaleViewModel","SaleMapper","SaleCreate","SaleCreateComponent","SaleDetailDisplay","SaleDetailComponent","saleDetailForm_SaleDetailDisplay","SaleEdit","SaleEditComponent","SaleSearchComponent","SpeciesMapper","SpeciesCreate","SpeciesCreateComponent","SpeciesDetailDisplay","SpeciesDetailComponent","speciesDetailForm_SpeciesDetailDisplay","SpeciesEdit","SpeciesEditComponent","SpeciesSearchComponent","config","clientId","issuer","redirectUri","scope","ReactDOM","render","URLSearchParams","location","search","BrowserRouter","dist","client_id","redirect_uri","Route","component","path","Switch","exact","document","getElementById"],"mappings":"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","file":"static/js/main.1ff73e72.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n  menuExpanded: boolean;\r\n}\r\n\r\nexport class Header extends React.Component<Props, State> {\r\n  state = { menuExpanded: false };\r\n\r\n  handleClick(e: React.FormEvent) {\r\n    this.setState({ menuExpanded: !this.state.menuExpanded });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row col-12\">\r\n        <nav\r\n          className=\"navbar navbar-expand-lg navbar-light bg-white\"\r\n          id=\"navbar\"\r\n        >\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            PetStore\r\n          </a>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n            onClick={e => this.handleClick(e)}\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div\r\n            className={\r\n              this.state.menuExpanded\r\n                ? 'collapse.expand navbar-collapse'\r\n                : 'collapse navbar-collapse'\r\n            }\r\n            id=\"navbarSupportedContent\"\r\n          >\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/breeds\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Breeds\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/paymenttypes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  PaymentTypes\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/pens\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Pens\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/pets\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Pets\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/sales\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Sales\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/species\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Species\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>617b9c56d781f04f91a3d73f18a419b7</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport {Header} from './components/header'\r\nexport const App: React.StatelessComponent<{}> = (props) => {\r\n  return (\r\n    <Header />\r\n  );\r\n}","export class Constants {\r\n  static readonly BaseEndpoint = 'http://localhost:8000/';\r\n  static readonly ApiEndpoint = Constants.BaseEndpoint + 'api/';\r\n  static readonly ApiHealthEndpoint = Constants.ApiEndpoint + 'apiHealth';\r\n  static readonly SwaggerEndpoint = Constants.BaseEndpoint + 'swagger';\r\n}\r\n\r\nexport class ClientRoutes {\r\n  static readonly Breeds = '/breeds';\r\n  static readonly PaymentTypes = '/paymenttypes';\r\n  static readonly Pens = '/pens';\r\n  static readonly Pets = '/pets';\r\n  static readonly Sales = '/sales';\r\n  static readonly Species = '/species';\r\n}\r\n\r\nexport class ApiRoutes {\r\n  static readonly Breeds = 'breeds';\r\n  static readonly PaymentTypes = 'paymenttypes';\r\n  static readonly Pens = 'pens';\r\n  static readonly Pets = 'pets';\r\n  static readonly Sales = 'sales';\r\n  static readonly Species = 'species';\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e48a2734b98e64255b997c6d6cdff6ec</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { Constants } from '../constants';\r\n\r\n\r\ninterface DashboardComponentProps{\r\n}\r\n\r\ninterface DashboardComponentState{\r\n  connected:boolean;\r\n  connecting:boolean;\r\n}\r\n\r\nexport default class Dashboard extends React.Component<DashboardComponentProps, DashboardComponentState>  {\r\n  \r\n  state = ({connected:false, connecting:false});\r\n\r\n  testConnection() {\r\n    this.setState({...this.state,connecting:true});\r\n\r\n    axios.get(Constants.ApiHealthEndpoint, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(\r\n      resp => {\r\n\r\n        console.log(resp);\r\n        this.setState({connecting:false, connected:true});\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.setState({connecting:false, connected:false});\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n     this.testConnection();\r\n  }\r\n\r\n  render() {\r\n      let alert:JSX.Element = <div></div>;\r\n      if(this.state.connecting){\r\n        alert = <div>\r\n                 <div className=\"alert alert-primary\">Connecting...</div>\r\n               </div>;\r\n      }\r\n      else if(this.state.connected){\r\n        alert = <div>\r\n                 <div className=\"alert alert-success\">Connected...</div>\r\n               </div>;\r\n      }\r\n      else {\r\n        alert = <div>\r\n                  <div className=\"alert alert-danger\">Unable to connect to API...  <button className=\"btn btn-primary\" onClick={(e) => this.testConnection()}>Test Connection</button></div>\r\n                </div>;\r\n      }\r\n\r\n      return <div>\r\n        {alert}\r\n        <div>API Health Endpoint : <a target=\"_blank\" href={Constants.ApiHealthEndpoint}>{Constants.ApiHealthEndpoint}</a></div>\r\n        <div>Swagger Endpoint : <a target=\"_blank\" href={Constants.SwaggerEndpoint}>{Constants.SwaggerEndpoint}</a></div>\r\n      </div>;\r\n  }\r\n}","import * as React from 'react'\r\n\r\nexport const LoadingForm: React.SFC<{}> = () => {\r\n return <div>loading...</div>;\r\n}","import * as React from 'react'\r\n\r\ninterface ErrorFormProps\r\n{\r\n    message:string;\r\n}\r\nexport const ErrorForm: React.SFC<ErrorFormProps> = (props) => {\r\n   return <div className=\"alert alert-danger\">{props.message}</div>;\r\n}","export class BreedClientRequestModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nexport class BreedClientResponseModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n}\r\nexport class PaymentTypeClientRequestModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nexport class PaymentTypeClientResponseModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n}\r\nexport class PenClientRequestModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nexport class PenClientResponseModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n}\r\nexport class PetClientRequestModel {\r\n  acquiredDate: any;\r\n  breedId: number;\r\n  breedIdEntity: string;\r\n  breedIdNavigation?: BreedClientResponseModel;\r\n  description: string;\r\n  id: number;\r\n  penId: number;\r\n  penIdEntity: string;\r\n  penIdNavigation?: PenClientResponseModel;\r\n  price: number;\r\n  speciesId: number;\r\n  speciesIdEntity: string;\r\n  speciesIdNavigation?: SpeciesClientResponseModel;\r\n\r\n  constructor() {\r\n    this.acquiredDate = undefined;\r\n    this.breedId = 0;\r\n    this.breedIdEntity = '';\r\n    this.breedIdNavigation = undefined;\r\n    this.description = '';\r\n    this.id = 0;\r\n    this.penId = 0;\r\n    this.penIdEntity = '';\r\n    this.penIdNavigation = undefined;\r\n    this.price = 0;\r\n    this.speciesId = 0;\r\n    this.speciesIdEntity = '';\r\n    this.speciesIdNavigation = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    acquiredDate: any,\r\n    breedId: number,\r\n    description: string,\r\n    id: number,\r\n    penId: number,\r\n    price: number,\r\n    speciesId: number\r\n  ): void {\r\n    this.acquiredDate = acquiredDate;\r\n    this.breedId = breedId;\r\n    this.description = description;\r\n    this.id = id;\r\n    this.penId = penId;\r\n    this.price = price;\r\n    this.speciesId = speciesId;\r\n  }\r\n}\r\n\r\nexport class PetClientResponseModel {\r\n  acquiredDate: any;\r\n  breedId: number;\r\n  breedIdEntity: string;\r\n  breedIdNavigation?: BreedClientResponseModel;\r\n  description: string;\r\n  id: number;\r\n  penId: number;\r\n  penIdEntity: string;\r\n  penIdNavigation?: PenClientResponseModel;\r\n  price: number;\r\n  speciesId: number;\r\n  speciesIdEntity: string;\r\n  speciesIdNavigation?: SpeciesClientResponseModel;\r\n\r\n  constructor() {\r\n    this.acquiredDate = undefined;\r\n    this.breedId = 0;\r\n    this.breedIdEntity = '';\r\n    this.breedIdNavigation = undefined;\r\n    this.description = '';\r\n    this.id = 0;\r\n    this.penId = 0;\r\n    this.penIdEntity = '';\r\n    this.penIdNavigation = undefined;\r\n    this.price = 0;\r\n    this.speciesId = 0;\r\n    this.speciesIdEntity = '';\r\n    this.speciesIdNavigation = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    acquiredDate: any,\r\n    breedId: number,\r\n    description: string,\r\n    id: number,\r\n    penId: number,\r\n    price: number,\r\n    speciesId: number\r\n  ): void {\r\n    this.acquiredDate = acquiredDate;\r\n    this.breedId = breedId;\r\n    this.description = description;\r\n    this.id = id;\r\n    this.penId = penId;\r\n    this.price = price;\r\n    this.speciesId = speciesId;\r\n  }\r\n}\r\nexport class SaleClientRequestModel {\r\n  amount: number;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n  paymentTypeId: number;\r\n  paymentTypeIdEntity: string;\r\n  paymentTypeIdNavigation?: PaymentTypeClientResponseModel;\r\n  petId: number;\r\n  petIdEntity: string;\r\n  petIdNavigation?: PetClientResponseModel;\r\n  phone: string;\r\n\r\n  constructor() {\r\n    this.amount = 0;\r\n    this.firstName = '';\r\n    this.id = 0;\r\n    this.lastName = '';\r\n    this.paymentTypeId = 0;\r\n    this.paymentTypeIdEntity = '';\r\n    this.paymentTypeIdNavigation = undefined;\r\n    this.petId = 0;\r\n    this.petIdEntity = '';\r\n    this.petIdNavigation = undefined;\r\n    this.phone = '';\r\n  }\r\n\r\n  setProperties(\r\n    amount: number,\r\n    firstName: string,\r\n    id: number,\r\n    lastName: string,\r\n    paymentTypeId: number,\r\n    petId: number,\r\n    phone: string\r\n  ): void {\r\n    this.amount = amount;\r\n    this.firstName = firstName;\r\n    this.id = id;\r\n    this.lastName = lastName;\r\n    this.paymentTypeId = paymentTypeId;\r\n    this.petId = petId;\r\n    this.phone = phone;\r\n  }\r\n}\r\n\r\nexport class SaleClientResponseModel {\r\n  amount: number;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n  paymentTypeId: number;\r\n  paymentTypeIdEntity: string;\r\n  paymentTypeIdNavigation?: PaymentTypeClientResponseModel;\r\n  petId: number;\r\n  petIdEntity: string;\r\n  petIdNavigation?: PetClientResponseModel;\r\n  phone: string;\r\n\r\n  constructor() {\r\n    this.amount = 0;\r\n    this.firstName = '';\r\n    this.id = 0;\r\n    this.lastName = '';\r\n    this.paymentTypeId = 0;\r\n    this.paymentTypeIdEntity = '';\r\n    this.paymentTypeIdNavigation = undefined;\r\n    this.petId = 0;\r\n    this.petIdEntity = '';\r\n    this.petIdNavigation = undefined;\r\n    this.phone = '';\r\n  }\r\n\r\n  setProperties(\r\n    amount: number,\r\n    firstName: string,\r\n    id: number,\r\n    lastName: string,\r\n    paymentTypeId: number,\r\n    petId: number,\r\n    phone: string\r\n  ): void {\r\n    this.amount = amount;\r\n    this.firstName = firstName;\r\n    this.id = id;\r\n    this.lastName = lastName;\r\n    this.paymentTypeId = paymentTypeId;\r\n    this.petId = petId;\r\n    this.phone = phone;\r\n  }\r\n}\r\nexport class SpeciesClientRequestModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\nexport class SpeciesClientResponseModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>55636b142a3e94e07dd605f583bff866</Hash>\r\n</Codenesium>*/","export default class BreedViewModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5256cec1eb0eb92488bc1a6c208c6915</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport BreedViewModel from './breedViewModel';\r\nexport default class BreedMapper {\r\n  mapApiResponseToViewModel(dto: Api.BreedClientResponseModel): BreedViewModel {\r\n    let response = new BreedViewModel();\r\n    response.setProperties(dto.id, dto.name);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: BreedViewModel): Api.BreedClientRequestModel {\r\n    let response = new Api.BreedClientRequestModel();\r\n    response.setProperties(model.id, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f3f7a19ac7c6943f6a2ff2266f1f0fde</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport BreedMapper from './breedMapper';\r\nimport BreedViewModel from './breedViewModel';\r\n\r\ninterface Props {\r\n  model?: BreedViewModel;\r\n}\r\n\r\nconst BreedCreateDisplay: React.SFC<FormikProps<BreedViewModel>> = (\r\n  props: FormikProps<BreedViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.BreedClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof BreedViewModel] &&\r\n      props.errors[name as keyof BreedViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof BreedViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst BreedCreate = withFormik<Props, BreedViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new BreedViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(props.model!.id, props.model!.name);\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<BreedViewModel> = {};\r\n\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new BreedMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Breeds,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.BreedClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'BreedCreate',\r\n})(BreedCreateDisplay);\r\n\r\ninterface BreedCreateComponentProps {}\r\n\r\ninterface BreedCreateComponentState {\r\n  model?: BreedViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class BreedCreateComponent extends React.Component<\r\n  BreedCreateComponentProps,\r\n  BreedCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <BreedCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8858f37eec937e761a79ee6dd5997a4a</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport BreedMapper from './breedMapper';\r\nimport BreedViewModel from './breedViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: BreedViewModel;\r\n}\r\n\r\nconst BreedDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(ClientRoutes.Breeds + '/edit/' + model.model!.id);\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface BreedDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface BreedDetailComponentState {\r\n  model?: BreedViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class BreedDetailComponent extends React.Component<\r\n  BreedDetailComponentProps,\r\n  BreedDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Breeds +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.BreedClientResponseModel;\r\n\r\n          let mapper = new BreedMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <BreedDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4da695099265b7fae38dd47627b8daf5</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport BreedViewModel from './breedViewModel';\r\nimport BreedMapper from './breedMapper';\r\n\r\ninterface Props {\r\n  model?: BreedViewModel;\r\n}\r\n\r\nconst BreedEditDisplay = (props: FormikProps<BreedViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.BreedClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof BreedViewModel] &&\r\n      props.errors[name as keyof BreedViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof BreedViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('id')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"id\"\r\n            className={\r\n              errorExistForField('id')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('id') && (\r\n            <small className=\"text-danger\">{errorsForField('id')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst BreedEdit = withFormik<Props, BreedViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new BreedViewModel();\r\n    response.setProperties(props.model!.id, props.model!.name);\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<BreedViewModel> = {};\r\n\r\n    if (values.id == 0) {\r\n      errors.id = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new BreedMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Breeds + '/' + values.id,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.BreedClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'BreedEdit',\r\n})(BreedEditDisplay);\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface BreedEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface BreedEditComponentState {\r\n  model?: BreedViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class BreedEditComponent extends React.Component<\r\n  BreedEditComponentProps,\r\n  BreedEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Breeds +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.BreedClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new BreedMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <BreedEdit model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ecdf1ea68be1072fec8c4718722b4e10</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport BreedMapper from './breedMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport ReactTable from 'react-table';\r\nimport BreedViewModel from './breedViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface BreedSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface BreedSearchComponentState {\r\n  records: Array<BreedViewModel>;\r\n  filteredRecords: Array<BreedViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class BreedSearchComponent extends React.Component<\r\n  BreedSearchComponentProps,\r\n  BreedSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<BreedViewModel>(),\r\n    filteredRecords: new Array<BreedViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.BreedClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Breeds + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.BreedClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Breeds + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Breeds + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.BreedClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Breeds + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.Breeds + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.BreedClientResponseModel>;\r\n          let viewModels: Array<BreedViewModel> = [];\r\n          let mapper = new BreedMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<BreedViewModel>(),\r\n            filteredRecords: new Array<BreedViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Breed',\r\n                columns: [\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.BreedClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.BreedClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.BreedClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1610e5c8aa8f9da03fd55d33e9895144</Hash>\r\n</Codenesium>*/","export default class PaymentTypeViewModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f1b6f6c5d6804a6118851518295338a7</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PaymentTypeViewModel from './paymentTypeViewModel';\r\nexport default class PaymentTypeMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PaymentTypeClientResponseModel\r\n  ): PaymentTypeViewModel {\r\n    let response = new PaymentTypeViewModel();\r\n    response.setProperties(dto.id, dto.name);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PaymentTypeViewModel\r\n  ): Api.PaymentTypeClientRequestModel {\r\n    let response = new Api.PaymentTypeClientRequestModel();\r\n    response.setProperties(model.id, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>feabac69328f5b8a7be4f9f63a20d489</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport PaymentTypeMapper from './paymentTypeMapper';\r\nimport PaymentTypeViewModel from './paymentTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: PaymentTypeViewModel;\r\n}\r\n\r\nconst PaymentTypeCreateDisplay: React.SFC<FormikProps<PaymentTypeViewModel>> = (\r\n  props: FormikProps<PaymentTypeViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.PaymentTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PaymentTypeViewModel] &&\r\n      props.errors[name as keyof PaymentTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PaymentTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PaymentTypeCreate = withFormik<Props, PaymentTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PaymentTypeViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(props.model!.id, props.model!.name);\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<PaymentTypeViewModel> = {};\r\n\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new PaymentTypeMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.PaymentTypes,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PaymentTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'PaymentTypeCreate',\r\n})(PaymentTypeCreateDisplay);\r\n\r\ninterface PaymentTypeCreateComponentProps {}\r\n\r\ninterface PaymentTypeCreateComponentState {\r\n  model?: PaymentTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PaymentTypeCreateComponent extends React.Component<\r\n  PaymentTypeCreateComponentProps,\r\n  PaymentTypeCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <PaymentTypeCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>af2a3bc4bbac71357ddbb968ae147569</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PaymentTypeMapper from './paymentTypeMapper';\r\nimport PaymentTypeViewModel from './paymentTypeViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: PaymentTypeViewModel;\r\n}\r\n\r\nconst PaymentTypeDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(\r\n            ClientRoutes.PaymentTypes + '/edit/' + model.model!.id\r\n          );\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PaymentTypeDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface PaymentTypeDetailComponentState {\r\n  model?: PaymentTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PaymentTypeDetailComponent extends React.Component<\r\n  PaymentTypeDetailComponentProps,\r\n  PaymentTypeDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PaymentTypes +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PaymentTypeClientResponseModel;\r\n\r\n          let mapper = new PaymentTypeMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <PaymentTypeDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3952f21acfc30a148d36e4af340502e3</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PaymentTypeViewModel from './paymentTypeViewModel';\r\nimport PaymentTypeMapper from './paymentTypeMapper';\r\n\r\ninterface Props {\r\n  model?: PaymentTypeViewModel;\r\n}\r\n\r\nconst PaymentTypeEditDisplay = (props: FormikProps<PaymentTypeViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.PaymentTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PaymentTypeViewModel] &&\r\n      props.errors[name as keyof PaymentTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PaymentTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('id')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"id\"\r\n            className={\r\n              errorExistForField('id')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('id') && (\r\n            <small className=\"text-danger\">{errorsForField('id')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PaymentTypeEdit = withFormik<Props, PaymentTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PaymentTypeViewModel();\r\n    response.setProperties(props.model!.id, props.model!.name);\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<PaymentTypeViewModel> = {};\r\n\r\n    if (values.id == 0) {\r\n      errors.id = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new PaymentTypeMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.PaymentTypes + '/' + values.id,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.PaymentTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'PaymentTypeEdit',\r\n})(PaymentTypeEditDisplay);\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PaymentTypeEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PaymentTypeEditComponentState {\r\n  model?: PaymentTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PaymentTypeEditComponent extends React.Component<\r\n  PaymentTypeEditComponentProps,\r\n  PaymentTypeEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PaymentTypes +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PaymentTypeClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PaymentTypeMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <PaymentTypeEdit model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d18927b983c9743fd86e22575d3dd9c1</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PaymentTypeMapper from './paymentTypeMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport ReactTable from 'react-table';\r\nimport PaymentTypeViewModel from './paymentTypeViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface PaymentTypeSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface PaymentTypeSearchComponentState {\r\n  records: Array<PaymentTypeViewModel>;\r\n  filteredRecords: Array<PaymentTypeViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PaymentTypeSearchComponent extends React.Component<\r\n  PaymentTypeSearchComponentProps,\r\n  PaymentTypeSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<PaymentTypeViewModel>(),\r\n    filteredRecords: new Array<PaymentTypeViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.PaymentTypeClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.PaymentTypes + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.PaymentTypeClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.PaymentTypes + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.PaymentTypes + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PaymentTypeClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.PaymentTypes + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.PaymentTypes + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PaymentTypeClientResponseModel>;\r\n          let viewModels: Array<PaymentTypeViewModel> = [];\r\n          let mapper = new PaymentTypeMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PaymentTypeViewModel>(),\r\n            filteredRecords: new Array<PaymentTypeViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'PaymentType',\r\n                columns: [\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.PaymentTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.PaymentTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.PaymentTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1759a9636ef6922e535f882a941b6427</Hash>\r\n</Codenesium>*/","export default class PenViewModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>aded3edc61da51f3c73fb8ff368c91b5</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PenViewModel from './penViewModel';\r\nexport default class PenMapper {\r\n  mapApiResponseToViewModel(dto: Api.PenClientResponseModel): PenViewModel {\r\n    let response = new PenViewModel();\r\n    response.setProperties(dto.id, dto.name);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: PenViewModel): Api.PenClientRequestModel {\r\n    let response = new Api.PenClientRequestModel();\r\n    response.setProperties(model.id, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>fc10bee8d2577922bf788109c8258552</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport PenMapper from './penMapper';\r\nimport PenViewModel from './penViewModel';\r\n\r\ninterface Props {\r\n  model?: PenViewModel;\r\n}\r\n\r\nconst PenCreateDisplay: React.SFC<FormikProps<PenViewModel>> = (\r\n  props: FormikProps<PenViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.PenClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PenViewModel] &&\r\n      props.errors[name as keyof PenViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PenViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PenCreate = withFormik<Props, PenViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PenViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(props.model!.id, props.model!.name);\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<PenViewModel> = {};\r\n\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new PenMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Pens,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<Api.PenClientRequestModel>;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'PenCreate',\r\n})(PenCreateDisplay);\r\n\r\ninterface PenCreateComponentProps {}\r\n\r\ninterface PenCreateComponentState {\r\n  model?: PenViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PenCreateComponent extends React.Component<\r\n  PenCreateComponentProps,\r\n  PenCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <PenCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>239aebc2003ff63eda2747e8989e6bc2</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PenMapper from './penMapper';\r\nimport PenViewModel from './penViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: PenViewModel;\r\n}\r\n\r\nconst PenDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(ClientRoutes.Pens + '/edit/' + model.model!.id);\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PenDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface PenDetailComponentState {\r\n  model?: PenViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PenDetailComponent extends React.Component<\r\n  PenDetailComponentProps,\r\n  PenDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Pens +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PenClientResponseModel;\r\n\r\n          let mapper = new PenMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <PenDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>17ffc816ee57b2084d5df6defbe5b9be</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PenViewModel from './penViewModel';\r\nimport PenMapper from './penMapper';\r\n\r\ninterface Props {\r\n  model?: PenViewModel;\r\n}\r\n\r\nconst PenEditDisplay = (props: FormikProps<PenViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.PenClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PenViewModel] &&\r\n      props.errors[name as keyof PenViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PenViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('id')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"id\"\r\n            className={\r\n              errorExistForField('id')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('id') && (\r\n            <small className=\"text-danger\">{errorsForField('id')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PenEdit = withFormik<Props, PenViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PenViewModel();\r\n    response.setProperties(props.model!.id, props.model!.name);\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<PenViewModel> = {};\r\n\r\n    if (values.id == 0) {\r\n      errors.id = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new PenMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Pens + '/' + values.id,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<Api.PenClientRequestModel>;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'PenEdit',\r\n})(PenEditDisplay);\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PenEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PenEditComponentState {\r\n  model?: PenViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PenEditComponent extends React.Component<\r\n  PenEditComponentProps,\r\n  PenEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Pens +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PenClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PenMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <PenEdit model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>731dce74bae7f41a9f463347a726722e</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PenMapper from './penMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport ReactTable from 'react-table';\r\nimport PenViewModel from './penViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface PenSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface PenSearchComponentState {\r\n  records: Array<PenViewModel>;\r\n  filteredRecords: Array<PenViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PenSearchComponent extends React.Component<\r\n  PenSearchComponentProps,\r\n  PenSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<PenViewModel>(),\r\n    filteredRecords: new Array<PenViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.PenClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Pens + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.PenClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Pens + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Pens + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PenClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Pens + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Pens + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PenClientResponseModel>;\r\n          let viewModels: Array<PenViewModel> = [];\r\n          let mapper = new PenMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PenViewModel>(),\r\n            filteredRecords: new Array<PenViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Pen',\r\n                columns: [\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.PenClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.PenClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.PenClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c843c4c0e87cc6c2aed45a988ad294f3</Hash>\r\n</Codenesium>*/","import BreedViewModel from '../breed/breedViewModel';\r\nimport PenViewModel from '../pen/penViewModel';\r\nimport SpeciesViewModel from '../species/speciesViewModel';\r\n\r\nexport default class PetViewModel {\r\n  acquiredDate: any;\r\n  breedId: number;\r\n  breedIdEntity: string;\r\n  breedIdNavigation?: BreedViewModel;\r\n  description: string;\r\n  id: number;\r\n  penId: number;\r\n  penIdEntity: string;\r\n  penIdNavigation?: PenViewModel;\r\n  price: number;\r\n  speciesId: number;\r\n  speciesIdEntity: string;\r\n  speciesIdNavigation?: SpeciesViewModel;\r\n\r\n  constructor() {\r\n    this.acquiredDate = undefined;\r\n    this.breedId = 0;\r\n    this.breedIdEntity = '';\r\n    this.breedIdNavigation = undefined;\r\n    this.description = '';\r\n    this.id = 0;\r\n    this.penId = 0;\r\n    this.penIdEntity = '';\r\n    this.penIdNavigation = undefined;\r\n    this.price = 0;\r\n    this.speciesId = 0;\r\n    this.speciesIdEntity = '';\r\n    this.speciesIdNavigation = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    acquiredDate: any,\r\n    breedId: number,\r\n    description: string,\r\n    id: number,\r\n    penId: number,\r\n    price: number,\r\n    speciesId: number\r\n  ): void {\r\n    this.acquiredDate = acquiredDate;\r\n    this.breedId = breedId;\r\n    this.description = description;\r\n    this.id = id;\r\n    this.penId = penId;\r\n    this.price = price;\r\n    this.speciesId = speciesId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>302baf7e674f9f8b28bcc97be4657f99</Hash>\r\n</Codenesium>*/","export default class SpeciesViewModel {\r\n  id: number;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(id: number, name: string): void {\r\n    this.id = id;\r\n    this.name = name;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2671f36b53fd2122c5b6d1959e34da46</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PetViewModel from './petViewModel';\r\nimport BreedViewModel from '../breed/breedViewModel';\r\nimport PenViewModel from '../pen/penViewModel';\r\nimport SpeciesViewModel from '../species/speciesViewModel';\r\nexport default class PetMapper {\r\n  mapApiResponseToViewModel(dto: Api.PetClientResponseModel): PetViewModel {\r\n    let response = new PetViewModel();\r\n    response.setProperties(\r\n      dto.acquiredDate,\r\n      dto.breedId,\r\n      dto.description,\r\n      dto.id,\r\n      dto.penId,\r\n      dto.price,\r\n      dto.speciesId\r\n    );\r\n\r\n    if (dto.breedIdNavigation != null) {\r\n      response.breedIdNavigation = new BreedViewModel();\r\n      response.breedIdNavigation.setProperties(\r\n        dto.breedIdNavigation.id,\r\n        dto.breedIdNavigation.name\r\n      );\r\n    }\r\n    if (dto.penIdNavigation != null) {\r\n      response.penIdNavigation = new PenViewModel();\r\n      response.penIdNavigation.setProperties(\r\n        dto.penIdNavigation.id,\r\n        dto.penIdNavigation.name\r\n      );\r\n    }\r\n    if (dto.speciesIdNavigation != null) {\r\n      response.speciesIdNavigation = new SpeciesViewModel();\r\n      response.speciesIdNavigation.setProperties(\r\n        dto.speciesIdNavigation.id,\r\n        dto.speciesIdNavigation.name\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: PetViewModel): Api.PetClientRequestModel {\r\n    let response = new Api.PetClientRequestModel();\r\n    response.setProperties(\r\n      model.acquiredDate,\r\n      model.breedId,\r\n      model.description,\r\n      model.id,\r\n      model.penId,\r\n      model.price,\r\n      model.speciesId\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ad4823770d3e3faf18a93bd4a1d39f82</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects'\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport PetMapper from './petMapper';\r\nimport PetViewModel from './petViewModel';\r\n\r\ninterface Props {\r\n    model?:PetViewModel\r\n}\r\n\r\n   const PetCreateDisplay: React.SFC<FormikProps<PetViewModel>> = (props: FormikProps<PetViewModel>) => {\r\n\r\n   let status = props.status as CreateResponse<Api.PetClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   {\r\n        let response = '';\r\n        if(props.touched[name as keyof PetViewModel]  && props.errors[name as keyof PetViewModel]) {\r\n            response += props.errors[name as keyof PetViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (<form onSubmit={props.handleSubmit} role=\"form\">            \r\n            \t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"acquiredDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>AcquiredDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"acquiredDate\" className={errorExistForField(\"acquiredDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"acquiredDate\") && <small className=\"text-danger\">{errorsForField(\"acquiredDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"breedId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>BreedId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"breedId\" className={errorExistForField(\"breedId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"breedId\") && <small className=\"text-danger\">{errorsForField(\"breedId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"description\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Description</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"description\" className={errorExistForField(\"description\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"description\") && <small className=\"text-danger\">{errorsForField(\"description\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"penId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PenId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"penId\" className={errorExistForField(\"penId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"penId\") && <small className=\"text-danger\">{errorsForField(\"penId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"price\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Price</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"price\" className={errorExistForField(\"price\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"price\") && <small className=\"text-danger\">{errorsForField(\"price\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"speciesId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>SpeciesId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"speciesId\" className={errorExistForField(\"speciesId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"speciesId\") && <small className=\"text-danger\">{errorsForField(\"speciesId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>);\r\n}\r\n\r\n\r\nconst PetCreate = withFormik<Props, PetViewModel>({\r\n    mapPropsToValues: props => {\r\n                \r\n\t\tlet response = new PetViewModel();\r\n\t\tif (props.model != undefined)\r\n\t\t{\r\n\t\t\tresponse.setProperties(props.model!.acquiredDate,props.model!.breedId,props.model!.description,props.model!.id,props.model!.penId,props.model!.price,props.model!.speciesId);\t\r\n\t\t}\r\n\t\treturn response;\r\n      },\r\n  \r\n    validate: values => {\r\n      let errors:FormikErrors<PetViewModel> = { };\r\n\r\n\t  if(values.acquiredDate == undefined) {\r\n                errors.acquiredDate = \"Required\"\r\n                    }if(values.breedId == 0) {\r\n                errors.breedId = \"Required\"\r\n                    }if(values.description == '') {\r\n                errors.description = \"Required\"\r\n                    }if(values.penId == 0) {\r\n                errors.penId = \"Required\"\r\n                    }if(values.price == 0) {\r\n                errors.price = \"Required\"\r\n                    }if(values.speciesId == 0) {\r\n                errors.speciesId = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n  \r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n        let mapper = new PetMapper();\r\n\r\n        axios.post(Constants.ApiEndpoint + ApiRoutes.Pets,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as CreateResponse<Api.PetClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n    \r\n        }, error => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n    },\r\n    displayName: 'PetCreate', \r\n  })(PetCreateDisplay);\r\n\r\n  interface PetCreateComponentProps\r\n  {\r\n  }\r\n\r\n  interface PetCreateComponentState\r\n  {\r\n      model?:PetViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class PetCreateComponent extends React.Component<PetCreateComponentProps, PetCreateComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t    else if (this.state.errorOccurred) {\r\n             return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PetCreate model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>a96ea082ce8275732104a23f1b1c7221</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PetMapper from './petMapper';\r\nimport PetViewModel from './petViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: PetViewModel;\r\n}\r\n\r\nconst PetDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(ClientRoutes.Pets + '/edit/' + model.model!.id);\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"acquiredDate\" className={'col-sm-2 col-form-label'}>\r\n          AcquiredDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.acquiredDate)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"breedId\" className={'col-sm-2 col-form-label'}>\r\n          BreedId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {model.model!.breedIdNavigation!.toDisplay()}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"description\" className={'col-sm-2 col-form-label'}>\r\n          Description\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.description)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"penId\" className={'col-sm-2 col-form-label'}>\r\n          PenId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {model.model!.penIdNavigation!.toDisplay()}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"price\" className={'col-sm-2 col-form-label'}>\r\n          Price\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.price)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"speciesId\" className={'col-sm-2 col-form-label'}>\r\n          SpeciesId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {model.model!.speciesIdNavigation!.toDisplay()}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PetDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface PetDetailComponentState {\r\n  model?: PetViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PetDetailComponent extends React.Component<\r\n  PetDetailComponentProps,\r\n  PetDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Pets +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PetClientResponseModel;\r\n\r\n          let mapper = new PetMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <PetDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9ac8a52479b57e15a0c31776a98a9d77</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PetViewModel from './petViewModel';\r\nimport PetMapper from './petMapper';\r\n\r\ninterface Props {\r\n  model?: PetViewModel;\r\n}\r\n\r\nconst PetEditDisplay = (props: FormikProps<PetViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.PetClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PetViewModel] &&\r\n      props.errors[name as keyof PetViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PetViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('acquiredDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AcquiredDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"acquiredDate\"\r\n            className={\r\n              errorExistForField('acquiredDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('acquiredDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('acquiredDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('breedId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BreedId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"breedId\"\r\n            className={\r\n              errorExistForField('breedId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('breedId') && (\r\n            <small className=\"text-danger\">{errorsForField('breedId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('description')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Description\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"description\"\r\n            className={\r\n              errorExistForField('description')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('description') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('description')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('id')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"id\"\r\n            className={\r\n              errorExistForField('id')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('id') && (\r\n            <small className=\"text-danger\">{errorsForField('id')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('penId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PenId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"penId\"\r\n            className={\r\n              errorExistForField('penId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('penId') && (\r\n            <small className=\"text-danger\">{errorsForField('penId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('price')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Price\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"price\"\r\n            className={\r\n              errorExistForField('price')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('price') && (\r\n            <small className=\"text-danger\">{errorsForField('price')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('speciesId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SpeciesId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"speciesId\"\r\n            className={\r\n              errorExistForField('speciesId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('speciesId') && (\r\n            <small className=\"text-danger\">{errorsForField('speciesId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PetEdit = withFormik<Props, PetViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PetViewModel();\r\n    response.setProperties(\r\n      props.model!.acquiredDate,\r\n      props.model!.breedId,\r\n      props.model!.description,\r\n      props.model!.id,\r\n      props.model!.penId,\r\n      props.model!.price,\r\n      props.model!.speciesId\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<PetViewModel> = {};\r\n\r\n    if (values.acquiredDate == undefined) {\r\n      errors.acquiredDate = 'Required';\r\n    }\r\n    if (values.breedId == 0) {\r\n      errors.breedId = 'Required';\r\n    }\r\n    if (values.description == '') {\r\n      errors.description = 'Required';\r\n    }\r\n    if (values.id == 0) {\r\n      errors.id = 'Required';\r\n    }\r\n    if (values.penId == 0) {\r\n      errors.penId = 'Required';\r\n    }\r\n    if (values.price == 0) {\r\n      errors.price = 'Required';\r\n    }\r\n    if (values.speciesId == 0) {\r\n      errors.speciesId = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new PetMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Pets + '/' + values.id,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<Api.PetClientRequestModel>;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'PetEdit',\r\n})(PetEditDisplay);\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PetEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PetEditComponentState {\r\n  model?: PetViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PetEditComponent extends React.Component<\r\n  PetEditComponentProps,\r\n  PetEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Pets +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PetClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PetMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <PetEdit model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c7755eb1a907512bf39bf77b9393af60</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PetMapper from './petMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport ReactTable from 'react-table';\r\nimport PetViewModel from './petViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface PetSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface PetSearchComponentState {\r\n  records: Array<PetViewModel>;\r\n  filteredRecords: Array<PetViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PetSearchComponent extends React.Component<\r\n  PetSearchComponentProps,\r\n  PetSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<PetViewModel>(),\r\n    filteredRecords: new Array<PetViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.PetClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Pets + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.PetClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Pets + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Pets + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PetClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Pets + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Pets + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PetClientResponseModel>;\r\n          let viewModels: Array<PetViewModel> = [];\r\n          let mapper = new PetMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PetViewModel>(),\r\n            filteredRecords: new Array<PetViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Pet',\r\n                columns: [\r\n                  {\r\n                    Header: 'AcquiredDate',\r\n                    accessor: 'acquiredDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.acquiredDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'BreedId',\r\n                    accessor: 'breedId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Breeds + '/' + props.original.breedId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(props.original.breedIdNavigation.toDisplay())}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Description',\r\n                    accessor: 'description',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.description)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PenId',\r\n                    accessor: 'penId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Pens + '/' + props.original.penId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(props.original.penIdNavigation.toDisplay())}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Price',\r\n                    accessor: 'price',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.price)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SpeciesId',\r\n                    accessor: 'speciesId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Species +\r\n                                '/' +\r\n                                props.original.speciesId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.speciesIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.PetClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.PetClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.PetClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1b452b43098d39720ea4b7dcc46a830a</Hash>\r\n</Codenesium>*/","import PaymentTypeViewModel from '../paymentType/paymentTypeViewModel';\r\nimport PetViewModel from '../pet/petViewModel';\r\n\r\nexport default class SaleViewModel {\r\n  amount: number;\r\n  firstName: string;\r\n  id: number;\r\n  lastName: string;\r\n  paymentTypeId: number;\r\n  paymentTypeIdEntity: string;\r\n  paymentTypeIdNavigation?: PaymentTypeViewModel;\r\n  petId: number;\r\n  petIdEntity: string;\r\n  petIdNavigation?: PetViewModel;\r\n  phone: string;\r\n\r\n  constructor() {\r\n    this.amount = 0;\r\n    this.firstName = '';\r\n    this.id = 0;\r\n    this.lastName = '';\r\n    this.paymentTypeId = 0;\r\n    this.paymentTypeIdEntity = '';\r\n    this.paymentTypeIdNavigation = undefined;\r\n    this.petId = 0;\r\n    this.petIdEntity = '';\r\n    this.petIdNavigation = undefined;\r\n    this.phone = '';\r\n  }\r\n\r\n  setProperties(\r\n    amount: number,\r\n    firstName: string,\r\n    id: number,\r\n    lastName: string,\r\n    paymentTypeId: number,\r\n    petId: number,\r\n    phone: string\r\n  ): void {\r\n    this.amount = amount;\r\n    this.firstName = firstName;\r\n    this.id = id;\r\n    this.lastName = lastName;\r\n    this.paymentTypeId = paymentTypeId;\r\n    this.petId = petId;\r\n    this.phone = phone;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7d5ae069a709e5c5b1e3e8c8f6fe5d35</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SaleViewModel from './saleViewModel';\r\nimport PaymentTypeViewModel from '../paymentType/paymentTypeViewModel';\r\nimport PetViewModel from '../pet/petViewModel';\r\nexport default class SaleMapper {\r\n  mapApiResponseToViewModel(dto: Api.SaleClientResponseModel): SaleViewModel {\r\n    let response = new SaleViewModel();\r\n    response.setProperties(\r\n      dto.amount,\r\n      dto.firstName,\r\n      dto.id,\r\n      dto.lastName,\r\n      dto.paymentTypeId,\r\n      dto.petId,\r\n      dto.phone\r\n    );\r\n\r\n    if (dto.paymentTypeIdNavigation != null) {\r\n      response.paymentTypeIdNavigation = new PaymentTypeViewModel();\r\n      response.paymentTypeIdNavigation.setProperties(\r\n        dto.paymentTypeIdNavigation.id,\r\n        dto.paymentTypeIdNavigation.name\r\n      );\r\n    }\r\n    if (dto.petIdNavigation != null) {\r\n      response.petIdNavigation = new PetViewModel();\r\n      response.petIdNavigation.setProperties(\r\n        dto.petIdNavigation.acquiredDate,\r\n        dto.petIdNavigation.breedId,\r\n        dto.petIdNavigation.description,\r\n        dto.petIdNavigation.id,\r\n        dto.petIdNavigation.penId,\r\n        dto.petIdNavigation.price,\r\n        dto.petIdNavigation.speciesId\r\n      );\r\n    }\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: SaleViewModel): Api.SaleClientRequestModel {\r\n    let response = new Api.SaleClientRequestModel();\r\n    response.setProperties(\r\n      model.amount,\r\n      model.firstName,\r\n      model.id,\r\n      model.lastName,\r\n      model.paymentTypeId,\r\n      model.petId,\r\n      model.phone\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bcf0fbafa72609657afc078e3ac44776</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport SaleMapper from './saleMapper';\r\nimport SaleViewModel from './saleViewModel';\r\n\r\ninterface Props {\r\n  model?: SaleViewModel;\r\n}\r\n\r\nconst SaleCreateDisplay: React.SFC<FormikProps<SaleViewModel>> = (\r\n  props: FormikProps<SaleViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.SaleClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SaleViewModel] &&\r\n      props.errors[name as keyof SaleViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SaleViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('amount')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Amount\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"amount\"\r\n            className={\r\n              errorExistForField('amount')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('amount') && (\r\n            <small className=\"text-danger\">{errorsForField('amount')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('firstName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FirstName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"firstName\"\r\n            className={\r\n              errorExistForField('firstName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('firstName') && (\r\n            <small className=\"text-danger\">{errorsForField('firstName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('lastName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LastName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"lastName\"\r\n            className={\r\n              errorExistForField('lastName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('lastName') && (\r\n            <small className=\"text-danger\">{errorsForField('lastName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('paymentTypeId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PaymentTypeId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"paymentTypeId\"\r\n            className={\r\n              errorExistForField('paymentTypeId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('paymentTypeId') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('paymentTypeId')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('petId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PetId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"petId\"\r\n            className={\r\n              errorExistForField('petId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('petId') && (\r\n            <small className=\"text-danger\">{errorsForField('petId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('phone')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Phone\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"phone\"\r\n            className={\r\n              errorExistForField('phone')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('phone') && (\r\n            <small className=\"text-danger\">{errorsForField('phone')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SaleCreate = withFormik<Props, SaleViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SaleViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.amount,\r\n        props.model!.firstName,\r\n        props.model!.id,\r\n        props.model!.lastName,\r\n        props.model!.paymentTypeId,\r\n        props.model!.petId,\r\n        props.model!.phone\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<SaleViewModel> = {};\r\n\r\n    if (values.amount == 0) {\r\n      errors.amount = 'Required';\r\n    }\r\n    if (values.firstName == '') {\r\n      errors.firstName = 'Required';\r\n    }\r\n    if (values.lastName == '') {\r\n      errors.lastName = 'Required';\r\n    }\r\n    if (values.paymentTypeId == 0) {\r\n      errors.paymentTypeId = 'Required';\r\n    }\r\n    if (values.petId == 0) {\r\n      errors.petId = 'Required';\r\n    }\r\n    if (values.phone == '') {\r\n      errors.phone = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new SaleMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Sales,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SaleClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'SaleCreate',\r\n})(SaleCreateDisplay);\r\n\r\ninterface SaleCreateComponentProps {}\r\n\r\ninterface SaleCreateComponentState {\r\n  model?: SaleViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SaleCreateComponent extends React.Component<\r\n  SaleCreateComponentProps,\r\n  SaleCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <SaleCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>41f570e4cddb5dc609ab2cd193a8aecc</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport SaleMapper from './saleMapper';\r\nimport SaleViewModel from './saleViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: SaleViewModel;\r\n}\r\n\r\nconst SaleDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(ClientRoutes.Sales + '/edit/' + model.model!.id);\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"amount\" className={'col-sm-2 col-form-label'}>\r\n          Amount\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.amount)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"firstName\" className={'col-sm-2 col-form-label'}>\r\n          FirstName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.firstName)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"lastName\" className={'col-sm-2 col-form-label'}>\r\n          LastName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.lastName)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"paymentTypeId\" className={'col-sm-2 col-form-label'}>\r\n          PaymentTypeId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {model.model!.paymentTypeIdNavigation!.toDisplay()}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"petId\" className={'col-sm-2 col-form-label'}>\r\n          PetId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {model.model!.petIdNavigation!.toDisplay()}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"phone\" className={'col-sm-2 col-form-label'}>\r\n          Phone\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.phone)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SaleDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface SaleDetailComponentState {\r\n  model?: SaleViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SaleDetailComponent extends React.Component<\r\n  SaleDetailComponentProps,\r\n  SaleDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Sales +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SaleClientResponseModel;\r\n\r\n          let mapper = new SaleMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <SaleDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>758bb5ac6d2cba20d9bf9d4e158810b3</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport SaleViewModel from './saleViewModel';\r\nimport SaleMapper from './saleMapper';\r\n\r\ninterface Props {\r\n  model?: SaleViewModel;\r\n}\r\n\r\nconst SaleEditDisplay = (props: FormikProps<SaleViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.SaleClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SaleViewModel] &&\r\n      props.errors[name as keyof SaleViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SaleViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('amount')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Amount\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"amount\"\r\n            className={\r\n              errorExistForField('amount')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('amount') && (\r\n            <small className=\"text-danger\">{errorsForField('amount')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('firstName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FirstName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"firstName\"\r\n            className={\r\n              errorExistForField('firstName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('firstName') && (\r\n            <small className=\"text-danger\">{errorsForField('firstName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('id')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"id\"\r\n            className={\r\n              errorExistForField('id')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('id') && (\r\n            <small className=\"text-danger\">{errorsForField('id')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('lastName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LastName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"lastName\"\r\n            className={\r\n              errorExistForField('lastName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('lastName') && (\r\n            <small className=\"text-danger\">{errorsForField('lastName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('paymentTypeId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PaymentTypeId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"paymentTypeId\"\r\n            className={\r\n              errorExistForField('paymentTypeId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('paymentTypeId') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('paymentTypeId')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('petId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PetId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"petId\"\r\n            className={\r\n              errorExistForField('petId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('petId') && (\r\n            <small className=\"text-danger\">{errorsForField('petId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('phone')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Phone\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"phone\"\r\n            className={\r\n              errorExistForField('phone')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('phone') && (\r\n            <small className=\"text-danger\">{errorsForField('phone')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SaleEdit = withFormik<Props, SaleViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SaleViewModel();\r\n    response.setProperties(\r\n      props.model!.amount,\r\n      props.model!.firstName,\r\n      props.model!.id,\r\n      props.model!.lastName,\r\n      props.model!.paymentTypeId,\r\n      props.model!.petId,\r\n      props.model!.phone\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<SaleViewModel> = {};\r\n\r\n    if (values.amount == 0) {\r\n      errors.amount = 'Required';\r\n    }\r\n    if (values.firstName == '') {\r\n      errors.firstName = 'Required';\r\n    }\r\n    if (values.id == 0) {\r\n      errors.id = 'Required';\r\n    }\r\n    if (values.lastName == '') {\r\n      errors.lastName = 'Required';\r\n    }\r\n    if (values.paymentTypeId == 0) {\r\n      errors.paymentTypeId = 'Required';\r\n    }\r\n    if (values.petId == 0) {\r\n      errors.petId = 'Required';\r\n    }\r\n    if (values.phone == '') {\r\n      errors.phone = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new SaleMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Sales + '/' + values.id,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.SaleClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'SaleEdit',\r\n})(SaleEditDisplay);\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SaleEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SaleEditComponentState {\r\n  model?: SaleViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SaleEditComponent extends React.Component<\r\n  SaleEditComponentProps,\r\n  SaleEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Sales +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SaleClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SaleMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <SaleEdit model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4c1910f12060ad160a59d24f5cb5b7be</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SaleMapper from './saleMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport ReactTable from 'react-table';\r\nimport SaleViewModel from './saleViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface SaleSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface SaleSearchComponentState {\r\n  records: Array<SaleViewModel>;\r\n  filteredRecords: Array<SaleViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class SaleSearchComponent extends React.Component<\r\n  SaleSearchComponentProps,\r\n  SaleSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<SaleViewModel>(),\r\n    filteredRecords: new Array<SaleViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.SaleClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Sales + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.SaleClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Sales + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Sales + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.SaleClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Sales + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Sales + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.SaleClientResponseModel>;\r\n          let viewModels: Array<SaleViewModel> = [];\r\n          let mapper = new SaleMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<SaleViewModel>(),\r\n            filteredRecords: new Array<SaleViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Sale',\r\n                columns: [\r\n                  {\r\n                    Header: 'Amount',\r\n                    accessor: 'amount',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.amount)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FirstName',\r\n                    accessor: 'firstName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.firstName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'LastName',\r\n                    accessor: 'lastName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.lastName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PaymentTypeId',\r\n                    accessor: 'paymentTypeId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.PaymentTypes +\r\n                                '/' +\r\n                                props.original.paymentTypeId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(\r\n                            props.original.paymentTypeIdNavigation.toDisplay()\r\n                          )}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PetId',\r\n                    accessor: 'petId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <a\r\n                          href=\"\"\r\n                          onClick={e => {\r\n                            e.preventDefault();\r\n                            this.props.history.push(\r\n                              ClientRoutes.Pets + '/' + props.original.petId\r\n                            );\r\n                          }}\r\n                        >\r\n                          {String(props.original.petIdNavigation.toDisplay())}\r\n                        </a>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Phone',\r\n                    accessor: 'phone',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.phone)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.SaleClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.SaleClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.SaleClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d4072e106bcaf6c5b4606f1da64c3188</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SpeciesViewModel from './speciesViewModel';\r\nexport default class SpeciesMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.SpeciesClientResponseModel\r\n  ): SpeciesViewModel {\r\n    let response = new SpeciesViewModel();\r\n    response.setProperties(dto.id, dto.name);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: SpeciesViewModel\r\n  ): Api.SpeciesClientRequestModel {\r\n    let response = new Api.SpeciesClientRequestModel();\r\n    response.setProperties(model.id, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c3eadfbe65e07a5a3b70af9eed03110a</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport SpeciesMapper from './speciesMapper';\r\nimport SpeciesViewModel from './speciesViewModel';\r\n\r\ninterface Props {\r\n  model?: SpeciesViewModel;\r\n}\r\n\r\nconst SpeciesCreateDisplay: React.SFC<FormikProps<SpeciesViewModel>> = (\r\n  props: FormikProps<SpeciesViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.SpeciesClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SpeciesViewModel] &&\r\n      props.errors[name as keyof SpeciesViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SpeciesViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SpeciesCreate = withFormik<Props, SpeciesViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SpeciesViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(props.model!.id, props.model!.name);\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<SpeciesViewModel> = {};\r\n\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new SpeciesMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Species,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SpeciesClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'SpeciesCreate',\r\n})(SpeciesCreateDisplay);\r\n\r\ninterface SpeciesCreateComponentProps {}\r\n\r\ninterface SpeciesCreateComponentState {\r\n  model?: SpeciesViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SpeciesCreateComponent extends React.Component<\r\n  SpeciesCreateComponentProps,\r\n  SpeciesCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <SpeciesCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d5f9b51728fb3d94979748ce5b22ceb3</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport SpeciesMapper from './speciesMapper';\r\nimport SpeciesViewModel from './speciesViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: SpeciesViewModel;\r\n}\r\n\r\nconst SpeciesDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(ClientRoutes.Species + '/edit/' + model.model!.id);\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SpeciesDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface SpeciesDetailComponentState {\r\n  model?: SpeciesViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SpeciesDetailComponent extends React.Component<\r\n  SpeciesDetailComponentProps,\r\n  SpeciesDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Species +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SpeciesClientResponseModel;\r\n\r\n          let mapper = new SpeciesMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <SpeciesDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9d85f1d9aefc3ebc5ead4c63dcccf34c</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport SpeciesViewModel from './speciesViewModel';\r\nimport SpeciesMapper from './speciesMapper';\r\n\r\ninterface Props {\r\n  model?: SpeciesViewModel;\r\n}\r\n\r\nconst SpeciesEditDisplay = (props: FormikProps<SpeciesViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.SpeciesClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SpeciesViewModel] &&\r\n      props.errors[name as keyof SpeciesViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SpeciesViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('id')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"id\"\r\n            className={\r\n              errorExistForField('id')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('id') && (\r\n            <small className=\"text-danger\">{errorsForField('id')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SpeciesEdit = withFormik<Props, SpeciesViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SpeciesViewModel();\r\n    response.setProperties(props.model!.id, props.model!.name);\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<SpeciesViewModel> = {};\r\n\r\n    if (values.id == 0) {\r\n      errors.id = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new SpeciesMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Species + '/' + values.id,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.SpeciesClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'SpeciesEdit',\r\n})(SpeciesEditDisplay);\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SpeciesEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SpeciesEditComponentState {\r\n  model?: SpeciesViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SpeciesEditComponent extends React.Component<\r\n  SpeciesEditComponentProps,\r\n  SpeciesEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Species +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SpeciesClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SpeciesMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <SpeciesEdit model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9d45e0764ea512d9541e7f744c881b43</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SpeciesMapper from './speciesMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport ReactTable from 'react-table';\r\nimport SpeciesViewModel from './speciesViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface SpeciesSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface SpeciesSearchComponentState {\r\n  records: Array<SpeciesViewModel>;\r\n  filteredRecords: Array<SpeciesViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class SpeciesSearchComponent extends React.Component<\r\n  SpeciesSearchComponentProps,\r\n  SpeciesSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<SpeciesViewModel>(),\r\n    filteredRecords: new Array<SpeciesViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.SpeciesClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Species + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.SpeciesClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Species + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Species + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.SpeciesClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Species + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.Species + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.SpeciesClientResponseModel>;\r\n          let viewModels: Array<SpeciesViewModel> = [];\r\n          let mapper = new SpeciesMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<SpeciesViewModel>(),\r\n            filteredRecords: new Array<SpeciesViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Species',\r\n                columns: [\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.SpeciesClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.SpeciesClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.SpeciesClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>96c1bc396934ceed597daf81d79223eb</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport { Route, Switch, match, BrowserRouter } from 'react-router-dom';\r\nimport { App } from './app';\r\nimport Dashboard from './components/dashboard';\r\nimport { Security, ImplicitCallback, SecureRoute } from '@okta/okta-react';\r\nimport BreedCreateComponent from './components/breed/breedCreateForm';\r\nimport BreedDetailComponent from './components/breed/breedDetailForm';\r\nimport BreedEditComponent from './components/breed/breedEditForm';\r\nimport BreedSearchComponent from './components/breed/breedSearchForm';\r\nimport PaymentTypeCreateComponent from './components/paymentType/paymentTypeCreateForm';\r\nimport PaymentTypeDetailComponent from './components/paymentType/paymentTypeDetailForm';\r\nimport PaymentTypeEditComponent from './components/paymentType/paymentTypeEditForm';\r\nimport PaymentTypeSearchComponent from './components/paymentType/paymentTypeSearchForm';\r\nimport PenCreateComponent from './components/pen/penCreateForm';\r\nimport PenDetailComponent from './components/pen/penDetailForm';\r\nimport PenEditComponent from './components/pen/penEditForm';\r\nimport PenSearchComponent from './components/pen/penSearchForm';\r\nimport PetCreateComponent from './components/pet/petCreateForm';\r\nimport PetDetailComponent from './components/pet/petDetailForm';\r\nimport PetEditComponent from './components/pet/petEditForm';\r\nimport PetSearchComponent from './components/pet/petSearchForm';\r\nimport SaleCreateComponent from './components/sale/saleCreateForm';\r\nimport SaleDetailComponent from './components/sale/saleDetailForm';\r\nimport SaleEditComponent from './components/sale/saleEditForm';\r\nimport SaleSearchComponent from './components/sale/saleSearchForm';\r\nimport SpeciesCreateComponent from './components/species/speciesCreateForm';\r\nimport SpeciesDetailComponent from './components/species/speciesDetailForm';\r\nimport SpeciesEditComponent from './components/species/speciesEditForm';\r\nimport SpeciesSearchComponent from './components/species/speciesSearchForm';\r\n\r\nconst config = {\r\n  oidc: {\r\n    clientId: '<okta_client_id>',\r\n    issuer: 'https://<okta_application_url>/oauth2/default',\r\n    redirectUri: 'https://<your_public_webserver>/implicit/callback',\r\n    scope: 'openid profile email',\r\n  },\r\n};\r\n\r\nexport const AppRouter: React.StatelessComponent<{}> = () => {\r\n  const query = new URLSearchParams(location.search);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Security\r\n        issuer={config.oidc.issuer}\r\n        client_id={config.oidc.clientId}\r\n        redirect_uri={config.oidc.redirectUri}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Route component={App} />\r\n          <SecureRoute\r\n            path=\"/protected\"\r\n            component={() => '<div>secure route</div>'}\r\n          />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/breeds/create\" component={BreedCreateComponent} />\r\n            <Route path=\"/breeds/edit/:id\" component={BreedEditComponent} />\r\n            <Route path=\"/breeds/:id\" component={BreedDetailComponent} />\r\n            <Route path=\"/breeds\" component={BreedSearchComponent} />\r\n            <Route\r\n              path=\"/paymenttypes/create\"\r\n              component={PaymentTypeCreateComponent}\r\n            />\r\n            <Route\r\n              path=\"/paymenttypes/edit/:id\"\r\n              component={PaymentTypeEditComponent}\r\n            />\r\n            <Route\r\n              path=\"/paymenttypes/:id\"\r\n              component={PaymentTypeDetailComponent}\r\n            />\r\n            <Route\r\n              path=\"/paymenttypes\"\r\n              component={PaymentTypeSearchComponent}\r\n            />\r\n            <Route path=\"/pens/create\" component={PenCreateComponent} />\r\n            <Route path=\"/pens/edit/:id\" component={PenEditComponent} />\r\n            <Route path=\"/pens/:id\" component={PenDetailComponent} />\r\n            <Route path=\"/pens\" component={PenSearchComponent} />\r\n            <Route path=\"/pets/create\" component={PetCreateComponent} />\r\n            <Route path=\"/pets/edit/:id\" component={PetEditComponent} />\r\n            <Route path=\"/pets/:id\" component={PetDetailComponent} />\r\n            <Route path=\"/pets\" component={PetSearchComponent} />\r\n            <Route path=\"/sales/create\" component={SaleCreateComponent} />\r\n            <Route path=\"/sales/edit/:id\" component={SaleEditComponent} />\r\n            <Route path=\"/sales/:id\" component={SaleDetailComponent} />\r\n            <Route path=\"/sales\" component={SaleSearchComponent} />\r\n            <Route path=\"/species/create\" component={SpeciesCreateComponent} />\r\n            <Route path=\"/species/edit/:id\" component={SpeciesEditComponent} />\r\n            <Route path=\"/species/:id\" component={SpeciesDetailComponent} />\r\n            <Route path=\"/species\" component={SpeciesSearchComponent} />\r\n          </Switch>\r\n        </div>\r\n      </Security>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ef13c50c9c35dfaf2cf748b993015759</Hash>\r\n</Codenesium>*/","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {AppRouter} from './router'\r\n\r\n\r\nReactDOM.render(\r\n       <AppRouter />\r\n, document.getElementById('root'));"],"sourceRoot":""}