{"version":3,"sources":["components/header.tsx","app.tsx","components/dashboard.tsx","constants.ts","api/models.ts","components/aWBuildVersion/aWBuildVersionViewModel.tsx","components/aWBuildVersion/aWBuildVersionMapper.tsx","components/aWBuildVersion/aWBuildVersionCreateForm.tsx","components/aWBuildVersion/aWBuildVersionDetailForm.tsx","components/aWBuildVersion/aWBuildVersionEditForm.tsx","components/aWBuildVersion/aWBuildVersionSearchForm.tsx","components/databaseLog/databaseLogViewModel.tsx","components/databaseLog/databaseLogMapper.tsx","components/databaseLog/databaseLogCreateForm.tsx","components/databaseLog/databaseLogDetailForm.tsx","components/databaseLog/databaseLogEditForm.tsx","components/databaseLog/databaseLogSearchForm.tsx","components/errorLog/errorLogViewModel.tsx","components/errorLog/errorLogMapper.tsx","components/errorLog/errorLogCreateForm.tsx","components/errorLog/errorLogDetailForm.tsx","components/errorLog/errorLogEditForm.tsx","components/errorLog/errorLogSearchForm.tsx","components/department/departmentViewModel.tsx","components/department/departmentMapper.tsx","components/department/departmentCreateForm.tsx","components/department/departmentDetailForm.tsx","components/department/departmentEditForm.tsx","components/department/departmentSearchForm.tsx","components/employee/employeeViewModel.tsx","components/employee/employeeMapper.tsx","components/employee/employeeCreateForm.tsx","components/employee/employeeDetailForm.tsx","components/employee/employeeEditForm.tsx","components/employee/employeeSearchForm.tsx","components/jobCandidate/jobCandidateViewModel.tsx","components/jobCandidate/jobCandidateMapper.tsx","components/jobCandidate/jobCandidateCreateForm.tsx","components/jobCandidate/jobCandidateDetailForm.tsx","components/jobCandidate/jobCandidateEditForm.tsx","components/jobCandidate/jobCandidateSearchForm.tsx","components/shift/shiftViewModel.tsx","components/shift/shiftMapper.tsx","components/shift/shiftCreateForm.tsx","components/shift/shiftDetailForm.tsx","components/shift/shiftEditForm.tsx","components/shift/shiftSearchForm.tsx","components/address/addressViewModel.tsx","components/address/addressMapper.tsx","components/address/addressCreateForm.tsx","components/address/addressDetailForm.tsx","components/address/addressEditForm.tsx","components/address/addressSearchForm.tsx","components/addressType/addressTypeViewModel.tsx","components/addressType/addressTypeMapper.tsx","components/addressType/addressTypeCreateForm.tsx","components/addressType/addressTypeDetailForm.tsx","components/addressType/addressTypeEditForm.tsx","components/addressType/addressTypeSearchForm.tsx","components/businessEntity/businessEntityViewModel.tsx","components/businessEntity/businessEntityMapper.tsx","components/businessEntity/businessEntityCreateForm.tsx","components/businessEntity/businessEntityDetailForm.tsx","components/businessEntity/businessEntityEditForm.tsx","components/businessEntity/businessEntitySearchForm.tsx","components/contactType/contactTypeViewModel.tsx","components/contactType/contactTypeMapper.tsx","components/contactType/contactTypeCreateForm.tsx","components/contactType/contactTypeDetailForm.tsx","components/contactType/contactTypeEditForm.tsx","components/contactType/contactTypeSearchForm.tsx","components/countryRegion/countryRegionViewModel.tsx","components/countryRegion/countryRegionMapper.tsx","components/countryRegion/countryRegionCreateForm.tsx","components/countryRegion/countryRegionDetailForm.tsx","components/countryRegion/countryRegionEditForm.tsx","components/countryRegion/countryRegionSearchForm.tsx","components/password/passwordViewModel.tsx","components/password/passwordMapper.tsx","components/password/passwordCreateForm.tsx","components/password/passwordDetailForm.tsx","components/password/passwordEditForm.tsx","components/password/passwordSearchForm.tsx","components/person/personViewModel.tsx","components/person/personMapper.tsx","components/person/personCreateForm.tsx","components/person/personDetailForm.tsx","components/person/personEditForm.tsx","components/person/personSearchForm.tsx","components/phoneNumberType/phoneNumberTypeViewModel.tsx","components/phoneNumberType/phoneNumberTypeMapper.tsx","components/phoneNumberType/phoneNumberTypeCreateForm.tsx","components/phoneNumberType/phoneNumberTypeDetailForm.tsx","components/phoneNumberType/phoneNumberTypeEditForm.tsx","components/phoneNumberType/phoneNumberTypeSearchForm.tsx","components/stateProvince/stateProvinceViewModel.tsx","components/stateProvince/stateProvinceMapper.tsx","components/stateProvince/stateProvinceCreateForm.tsx","components/stateProvince/stateProvinceDetailForm.tsx","components/stateProvince/stateProvinceEditForm.tsx","components/stateProvince/stateProvinceSearchForm.tsx","components/billOfMaterial/billOfMaterialViewModel.tsx","components/billOfMaterial/billOfMaterialMapper.tsx","components/billOfMaterial/billOfMaterialCreateForm.tsx","components/billOfMaterial/billOfMaterialDetailForm.tsx","components/billOfMaterial/billOfMaterialEditForm.tsx","components/billOfMaterial/billOfMaterialSearchForm.tsx","components/culture/cultureViewModel.tsx","components/culture/cultureMapper.tsx","components/culture/cultureCreateForm.tsx","components/culture/cultureDetailForm.tsx","components/culture/cultureEditForm.tsx","components/culture/cultureSearchForm.tsx","components/document/documentViewModel.tsx","components/document/documentMapper.tsx","components/document/documentCreateForm.tsx","components/document/documentDetailForm.tsx","components/document/documentEditForm.tsx","components/document/documentSearchForm.tsx","components/illustration/illustrationViewModel.tsx","components/illustration/illustrationMapper.tsx","components/illustration/illustrationCreateForm.tsx","components/illustration/illustrationDetailForm.tsx","components/illustration/illustrationEditForm.tsx","components/illustration/illustrationSearchForm.tsx","components/location/locationViewModel.tsx","components/location/locationMapper.tsx","components/location/locationCreateForm.tsx","components/location/locationDetailForm.tsx","components/location/locationEditForm.tsx","components/location/locationSearchForm.tsx","components/product/productViewModel.tsx","components/product/productMapper.tsx","components/product/productCreateForm.tsx","components/product/productDetailForm.tsx","components/product/productEditForm.tsx","components/product/productSearchForm.tsx","components/productCategory/productCategoryViewModel.tsx","components/productCategory/productCategoryMapper.tsx","components/productCategory/productCategoryCreateForm.tsx","components/productCategory/productCategoryDetailForm.tsx","components/productCategory/productCategoryEditForm.tsx","components/productCategory/productCategorySearchForm.tsx","components/productDescription/productDescriptionViewModel.tsx","components/productDescription/productDescriptionMapper.tsx","components/productDescription/productDescriptionCreateForm.tsx","components/productDescription/productDescriptionDetailForm.tsx","components/productDescription/productDescriptionEditForm.tsx","components/productDescription/productDescriptionSearchForm.tsx","components/productModel/productModelViewModel.tsx","components/productModel/productModelMapper.tsx","components/productModel/productModelCreateForm.tsx","components/productModel/productModelDetailForm.tsx","components/productModel/productModelEditForm.tsx","components/productModel/productModelSearchForm.tsx","components/productPhoto/productPhotoViewModel.tsx","components/productPhoto/productPhotoMapper.tsx","components/productPhoto/productPhotoCreateForm.tsx","components/productPhoto/productPhotoDetailForm.tsx","components/productPhoto/productPhotoEditForm.tsx","components/productPhoto/productPhotoSearchForm.tsx","components/productReview/productReviewViewModel.tsx","components/productReview/productReviewMapper.tsx","components/productReview/productReviewCreateForm.tsx","components/productReview/productReviewDetailForm.tsx","components/productReview/productReviewEditForm.tsx","components/productReview/productReviewSearchForm.tsx","components/productSubcategory/productSubcategoryViewModel.tsx","components/productSubcategory/productSubcategoryMapper.tsx","components/productSubcategory/productSubcategoryCreateForm.tsx","components/productSubcategory/productSubcategoryDetailForm.tsx","components/productSubcategory/productSubcategoryEditForm.tsx","components/productSubcategory/productSubcategorySearchForm.tsx","components/scrapReason/scrapReasonViewModel.tsx","components/scrapReason/scrapReasonMapper.tsx","components/scrapReason/scrapReasonCreateForm.tsx","components/scrapReason/scrapReasonDetailForm.tsx","components/scrapReason/scrapReasonEditForm.tsx","components/scrapReason/scrapReasonSearchForm.tsx","components/transactionHistory/transactionHistoryViewModel.tsx","components/transactionHistory/transactionHistoryMapper.tsx","components/transactionHistory/transactionHistoryCreateForm.tsx","components/transactionHistory/transactionHistoryDetailForm.tsx","components/transactionHistory/transactionHistoryEditForm.tsx","components/transactionHistory/transactionHistorySearchForm.tsx","components/transactionHistoryArchive/transactionHistoryArchiveViewModel.tsx","components/transactionHistoryArchive/transactionHistoryArchiveMapper.tsx","components/transactionHistoryArchive/transactionHistoryArchiveCreateForm.tsx","components/transactionHistoryArchive/transactionHistoryArchiveDetailForm.tsx","components/transactionHistoryArchive/transactionHistoryArchiveEditForm.tsx","components/transactionHistoryArchive/transactionHistoryArchiveSearchForm.tsx","components/unitMeasure/unitMeasureViewModel.tsx","components/unitMeasure/unitMeasureMapper.tsx","components/unitMeasure/unitMeasureCreateForm.tsx","components/unitMeasure/unitMeasureDetailForm.tsx","components/unitMeasure/unitMeasureEditForm.tsx","components/unitMeasure/unitMeasureSearchForm.tsx","components/workOrder/workOrderViewModel.tsx","components/workOrder/workOrderMapper.tsx","components/workOrder/workOrderCreateForm.tsx","components/workOrder/workOrderDetailForm.tsx","components/workOrder/workOrderEditForm.tsx","components/workOrder/workOrderSearchForm.tsx","components/purchaseOrderHeader/purchaseOrderHeaderViewModel.tsx","components/purchaseOrderHeader/purchaseOrderHeaderMapper.tsx","components/purchaseOrderHeader/purchaseOrderHeaderCreateForm.tsx","components/purchaseOrderHeader/purchaseOrderHeaderDetailForm.tsx","components/purchaseOrderHeader/purchaseOrderHeaderEditForm.tsx","components/purchaseOrderHeader/purchaseOrderHeaderSearchForm.tsx","components/shipMethod/shipMethodViewModel.tsx","components/shipMethod/shipMethodMapper.tsx","components/shipMethod/shipMethodCreateForm.tsx","components/shipMethod/shipMethodDetailForm.tsx","components/shipMethod/shipMethodEditForm.tsx","components/shipMethod/shipMethodSearchForm.tsx","components/vendor/vendorViewModel.tsx","components/vendor/vendorMapper.tsx","components/vendor/vendorCreateForm.tsx","components/vendor/vendorDetailForm.tsx","components/vendor/vendorEditForm.tsx","components/vendor/vendorSearchForm.tsx","components/creditCard/creditCardViewModel.tsx","components/creditCard/creditCardMapper.tsx","components/creditCard/creditCardCreateForm.tsx","components/creditCard/creditCardDetailForm.tsx","components/creditCard/creditCardEditForm.tsx","components/creditCard/creditCardSearchForm.tsx","components/currency/currencyViewModel.tsx","components/currency/currencyMapper.tsx","components/currency/currencyCreateForm.tsx","components/currency/currencyDetailForm.tsx","components/currency/currencyEditForm.tsx","components/currency/currencySearchForm.tsx","components/currencyRate/currencyRateViewModel.tsx","components/currencyRate/currencyRateMapper.tsx","components/currencyRate/currencyRateCreateForm.tsx","components/currencyRate/currencyRateDetailForm.tsx","components/currencyRate/currencyRateEditForm.tsx","components/currencyRate/currencyRateSearchForm.tsx","components/customer/customerViewModel.tsx","components/customer/customerMapper.tsx","components/customer/customerCreateForm.tsx","components/customer/customerDetailForm.tsx","components/customer/customerEditForm.tsx","components/customer/customerSearchForm.tsx","components/salesOrderHeader/salesOrderHeaderViewModel.tsx","components/salesOrderHeader/salesOrderHeaderMapper.tsx","components/salesOrderHeader/salesOrderHeaderCreateForm.tsx","components/salesOrderHeader/salesOrderHeaderDetailForm.tsx","components/salesOrderHeader/salesOrderHeaderEditForm.tsx","components/salesOrderHeader/salesOrderHeaderSearchForm.tsx","components/salesPerson/salesPersonViewModel.tsx","components/salesPerson/salesPersonMapper.tsx","components/salesPerson/salesPersonCreateForm.tsx","components/salesPerson/salesPersonDetailForm.tsx","components/salesPerson/salesPersonEditForm.tsx","components/salesPerson/salesPersonSearchForm.tsx","components/salesReason/salesReasonViewModel.tsx","components/salesReason/salesReasonMapper.tsx","components/salesReason/salesReasonCreateForm.tsx","components/salesReason/salesReasonDetailForm.tsx","components/salesReason/salesReasonEditForm.tsx","components/salesReason/salesReasonSearchForm.tsx","components/salesTaxRate/salesTaxRateViewModel.tsx","components/salesTaxRate/salesTaxRateMapper.tsx","components/salesTaxRate/salesTaxRateCreateForm.tsx","components/salesTaxRate/salesTaxRateDetailForm.tsx","components/salesTaxRate/salesTaxRateEditForm.tsx","components/salesTaxRate/salesTaxRateSearchForm.tsx","components/salesTerritory/salesTerritoryViewModel.tsx","components/salesTerritory/salesTerritoryMapper.tsx","components/salesTerritory/salesTerritoryCreateForm.tsx","components/salesTerritory/salesTerritoryDetailForm.tsx","components/salesTerritory/salesTerritoryEditForm.tsx","components/salesTerritory/salesTerritorySearchForm.tsx","components/shoppingCartItem/shoppingCartItemViewModel.tsx","components/shoppingCartItem/shoppingCartItemMapper.tsx","components/shoppingCartItem/shoppingCartItemCreateForm.tsx","components/shoppingCartItem/shoppingCartItemDetailForm.tsx","components/shoppingCartItem/shoppingCartItemEditForm.tsx","components/shoppingCartItem/shoppingCartItemSearchForm.tsx","components/specialOffer/specialOfferViewModel.tsx","components/specialOffer/specialOfferMapper.tsx","components/specialOffer/specialOfferCreateForm.tsx","components/specialOffer/specialOfferDetailForm.tsx","components/specialOffer/specialOfferEditForm.tsx","components/specialOffer/specialOfferSearchForm.tsx","components/store/storeViewModel.tsx","components/store/storeMapper.tsx","components/store/storeCreateForm.tsx","components/store/storeDetailForm.tsx","components/store/storeEditForm.tsx","components/store/storeSearchForm.tsx","router.tsx","index.tsx"],"names":["Header","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","menuExpanded","inherits","createClass","key","value","e","setState","_this2","react","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","handleClick","Link","to","React","App","props","header_Header","Dashboard","Constants","ApiUrl","AWBuildVersionClientRequestModel","database_Version","modifiedDate","undefined","systemInformationID","versionDate","DatabaseLogClientRequestModel","databaseLogID","databaseUser","postTime","schema","tsql","xmlEvent","ErrorLogClientRequestModel","errorLine","errorLogID","errorMessage","errorNumber","errorProcedure","errorSeverity","errorState","errorTime","userName","DepartmentClientRequestModel","departmentID","groupName","name","EmployeeClientRequestModel","birthDate","businessEntityID","currentFlag","gender","hireDate","jobTitle","loginID","maritalStatu","nationalIDNumber","organizationLevel","rowguid","salariedFlag","sickLeaveHour","vacationHour","JobCandidateClientRequestModel","jobCandidateID","resume","ShiftClientRequestModel","endTime","shiftID","startTime","AddressClientRequestModel","addressID","addressLine1","addressLine2","city","postalCode","stateProvinceID","AddressTypeClientRequestModel","addressTypeID","BusinessEntityClientRequestModel","ContactTypeClientRequestModel","contactTypeID","CountryRegionClientRequestModel","countryRegionCode","PasswordClientRequestModel","passwordHash","passwordSalt","PersonClientRequestModel","additionalContactInfo","demographic","emailPromotion","firstName","lastName","middleName","nameStyle","personType","suffix","title","PhoneNumberTypeClientRequestModel","phoneNumberTypeID","StateProvinceClientRequestModel","isOnlyStateProvinceFlag","stateProvinceCode","territoryID","BillOfMaterialClientRequestModel","billOfMaterialsID","bOMLevel","componentID","endDate","perAssemblyQty","productAssemblyID","startDate","unitMeasureCode","CultureClientRequestModel","cultureID","DocumentClientRequestModel","changeNumber","document1","documentLevel","documentSummary","fileExtension","fileName","folderFlag","owner","revision","status","IllustrationClientRequestModel","diagram","illustrationID","LocationClientRequestModel","availability","costRate","locationID","ProductClientRequestModel","color","daysToManufacture","discontinuedDate","finishedGoodsFlag","listPrice","makeFlag","productID","productLine","productModelID","productNumber","productSubcategoryID","reorderPoint","safetyStockLevel","sellEndDate","sellStartDate","size","sizeUnitMeasureCode","standardCost","style","weight","weightUnitMeasureCode","ProductCategoryClientRequestModel","productCategoryID","ProductDescriptionClientRequestModel","description","productDescriptionID","ProductModelClientRequestModel","catalogDescription","instruction","ProductPhotoClientRequestModel","largePhoto","largePhotoFileName","productPhotoID","thumbNailPhoto","thumbnailPhotoFileName","ProductReviewClientRequestModel","comment","emailAddress","productReviewID","rating","reviewDate","reviewerName","ProductSubcategoryClientRequestModel","ScrapReasonClientRequestModel","scrapReasonID","TransactionHistoryClientRequestModel","actualCost","quantity","referenceOrderID","referenceOrderLineID","transactionDate","transactionID","transactionType","TransactionHistoryArchiveClientRequestModel","UnitMeasureClientRequestModel","WorkOrderClientRequestModel","dueDate","orderQty","scrappedQty","stockedQty","workOrderID","PurchaseOrderHeaderClientRequestModel","employeeID","freight","orderDate","purchaseOrderID","revisionNumber","shipDate","shipMethodID","subTotal","taxAmt","totalDue","vendorID","ShipMethodClientRequestModel","shipBase","shipRate","VendorClientRequestModel","accountNumber","activeFlag","creditRating","preferredVendorStatu","purchasingWebServiceURL","CreditCardClientRequestModel","cardNumber","cardType","creditCardID","expMonth","expYear","CurrencyClientRequestModel","currencyCode","CurrencyRateClientRequestModel","averageRate","currencyRateDate","currencyRateID","endOfDayRate","fromCurrencyCode","fromCurrencyCodeEntity","toCurrencyCode","toCurrencyCodeEntity","CustomerClientRequestModel","customerID","personID","storeID","storeIDEntity","territoryIDEntity","SalesOrderHeaderClientRequestModel","billToAddressID","creditCardApprovalCode","creditCardIDEntity","currencyRateIDEntity","customerIDEntity","onlineOrderFlag","purchaseOrderNumber","salesOrderID","salesOrderNumber","salesPersonID","salesPersonIDEntity","shipToAddressID","SalesPersonClientRequestModel","bonus","commissionPct","salesLastYear","salesQuota","salesYTD","SalesReasonClientRequestModel","reasonType","salesReasonID","SalesTaxRateClientRequestModel","salesTaxRateID","taxRate","taxType","SalesTerritoryClientRequestModel","costLastYear","costYTD","ShoppingCartItemClientRequestModel","dateCreated","shoppingCartID","shoppingCartItemID","SpecialOfferClientRequestModel","category","discountPct","maxQty","minQty","specialOfferID","StoreClientRequestModel","AWBuildVersionViewModel","AWBuildVersionMapper","dto","response","setProperties","model","Api","AWBuildVersionCreate","withFormik","mapPropsToValues","validate","values","errors","handleSubmit","actions","setStatus","mapper","axios","post","mapViewModelToApiRequest","headers","Content-Type","then","resp","data","console","log","error","displayName","errorsForField","touched","validationErrors","find","f","propertyName","toLowerCase","filter","errorExistForField","react_default","a","createElement","onSubmit","role","htmlFor","formik_esm","disabled","success","AWBuildVersionCreateComponent","loading","loaded","errorOccurred","Component","AWBuildVersionDetailDisplay","String","AWBuildVersionDetailComponent","objectSpread","get","match","params","mapApiResponseToViewModel","aWBuildVersionDetailForm_AWBuildVersionDetailDisplay","AWBuildVersionUpdate","put","AWBuildVersionEditComponent","AWBuildVersionSearchComponent","deleteSubmitted","deleteSuccess","deleteResponse","records","filteredRecords","searchValue","loadRecords","row","history","push","delete","currentTarget","_this3","query","searchEndpoint","viewModels","forEach","x","_this4","errorResponse","placeholder","onChange","handleSearchChanged","handleCreateClick","es","columns","accessor","Cell","original","handleDetailClick","handleEditClick","handleDeleteClick","DatabaseLogViewModel","DatabaseLogMapper","DatabaseLogCreate","DatabaseLogCreateComponent","DatabaseLogDetailDisplay","DatabaseLogDetailComponent","databaseLogDetailForm_DatabaseLogDetailDisplay","DatabaseLogUpdate","DatabaseLogEditComponent","DatabaseLogSearchComponent","ErrorLogViewModel","ErrorLogMapper","ErrorLogCreate","ErrorLogCreateComponent","ErrorLogDetailDisplay","ErrorLogDetailComponent","errorLogDetailForm_ErrorLogDetailDisplay","ErrorLogUpdate","ErrorLogEditComponent","ErrorLogSearchComponent","DepartmentViewModel","DepartmentMapper","DepartmentCreate","DepartmentCreateComponent","DepartmentDetailDisplay","DepartmentDetailComponent","departmentDetailForm_DepartmentDetailDisplay","DepartmentUpdate","DepartmentEditComponent","DepartmentSearchComponent","EmployeeViewModel","EmployeeMapper","EmployeeCreate","EmployeeCreateComponent","EmployeeDetailDisplay","EmployeeDetailComponent","employeeDetailForm_EmployeeDetailDisplay","EmployeeUpdate","EmployeeEditComponent","EmployeeSearchComponent","JobCandidateViewModel","JobCandidateMapper","JobCandidateCreate","JobCandidateCreateComponent","JobCandidateDetailDisplay","JobCandidateDetailComponent","jobCandidateDetailForm_JobCandidateDetailDisplay","JobCandidateUpdate","JobCandidateEditComponent","JobCandidateSearchComponent","ShiftViewModel","ShiftMapper","ShiftCreate","ShiftCreateComponent","ShiftDetailDisplay","ShiftDetailComponent","shiftDetailForm_ShiftDetailDisplay","ShiftUpdate","ShiftEditComponent","ShiftSearchComponent","AddressViewModel","AddressMapper","AddressCreate","AddressCreateComponent","AddressDetailDisplay","AddressDetailComponent","addressDetailForm_AddressDetailDisplay","AddressUpdate","AddressEditComponent","AddressSearchComponent","AddressTypeViewModel","AddressTypeMapper","AddressTypeCreate","AddressTypeCreateComponent","AddressTypeDetailDisplay","AddressTypeDetailComponent","addressTypeDetailForm_AddressTypeDetailDisplay","AddressTypeUpdate","AddressTypeEditComponent","AddressTypeSearchComponent","BusinessEntityViewModel","BusinessEntityMapper","BusinessEntityCreate","BusinessEntityCreateComponent","BusinessEntityDetailDisplay","BusinessEntityDetailComponent","businessEntityDetailForm_BusinessEntityDetailDisplay","BusinessEntityUpdate","BusinessEntityEditComponent","BusinessEntitySearchComponent","ContactTypeViewModel","ContactTypeMapper","ContactTypeCreate","ContactTypeCreateComponent","ContactTypeDetailDisplay","ContactTypeDetailComponent","contactTypeDetailForm_ContactTypeDetailDisplay","ContactTypeUpdate","ContactTypeEditComponent","ContactTypeSearchComponent","CountryRegionViewModel","CountryRegionMapper","CountryRegionCreate","CountryRegionCreateComponent","CountryRegionDetailDisplay","CountryRegionDetailComponent","countryRegionDetailForm_CountryRegionDetailDisplay","CountryRegionUpdate","CountryRegionEditComponent","CountryRegionSearchComponent","PasswordViewModel","PasswordMapper","PasswordCreate","PasswordCreateComponent","PasswordDetailDisplay","PasswordDetailComponent","passwordDetailForm_PasswordDetailDisplay","PasswordUpdate","PasswordEditComponent","PasswordSearchComponent","PersonViewModel","PersonMapper","PersonCreate","PersonCreateComponent","PersonDetailDisplay","PersonDetailComponent","personDetailForm_PersonDetailDisplay","PersonUpdate","PersonEditComponent","PersonSearchComponent","PhoneNumberTypeViewModel","PhoneNumberTypeMapper","PhoneNumberTypeCreate","PhoneNumberTypeCreateComponent","PhoneNumberTypeDetailDisplay","PhoneNumberTypeDetailComponent","phoneNumberTypeDetailForm_PhoneNumberTypeDetailDisplay","PhoneNumberTypeUpdate","PhoneNumberTypeEditComponent","PhoneNumberTypeSearchComponent","StateProvinceViewModel","StateProvinceMapper","StateProvinceCreate","StateProvinceCreateComponent","StateProvinceDetailDisplay","StateProvinceDetailComponent","stateProvinceDetailForm_StateProvinceDetailDisplay","StateProvinceUpdate","StateProvinceEditComponent","StateProvinceSearchComponent","BillOfMaterialViewModel","BillOfMaterialMapper","BillOfMaterialCreate","BillOfMaterialCreateComponent","BillOfMaterialDetailDisplay","BillOfMaterialDetailComponent","billOfMaterialDetailForm_BillOfMaterialDetailDisplay","BillOfMaterialUpdate","BillOfMaterialEditComponent","BillOfMaterialSearchComponent","CultureViewModel","CultureMapper","CultureCreate","CultureCreateComponent","CultureDetailDisplay","CultureDetailComponent","cultureDetailForm_CultureDetailDisplay","CultureUpdate","CultureEditComponent","CultureSearchComponent","DocumentViewModel","DocumentMapper","DocumentCreate","DocumentCreateComponent","DocumentDetailDisplay","DocumentDetailComponent","documentDetailForm_DocumentDetailDisplay","DocumentUpdate","DocumentEditComponent","DocumentSearchComponent","IllustrationViewModel","IllustrationMapper","IllustrationCreate","IllustrationCreateComponent","IllustrationDetailDisplay","IllustrationDetailComponent","illustrationDetailForm_IllustrationDetailDisplay","IllustrationUpdate","IllustrationEditComponent","IllustrationSearchComponent","LocationViewModel","LocationMapper","LocationCreate","LocationCreateComponent","LocationDetailDisplay","LocationDetailComponent","locationDetailForm_LocationDetailDisplay","LocationUpdate","LocationEditComponent","LocationSearchComponent","ProductViewModel","ProductMapper","ProductCreate","ProductCreateComponent","ProductDetailDisplay","ProductDetailComponent","productDetailForm_ProductDetailDisplay","ProductUpdate","ProductEditComponent","ProductSearchComponent","ProductCategoryViewModel","ProductCategoryMapper","ProductCategoryCreate","ProductCategoryCreateComponent","ProductCategoryDetailDisplay","ProductCategoryDetailComponent","productCategoryDetailForm_ProductCategoryDetailDisplay","ProductCategoryUpdate","ProductCategoryEditComponent","ProductCategorySearchComponent","ProductDescriptionViewModel","ProductDescriptionMapper","ProductDescriptionCreate","ProductDescriptionCreateComponent","ProductDescriptionDetailDisplay","ProductDescriptionDetailComponent","productDescriptionDetailForm_ProductDescriptionDetailDisplay","ProductDescriptionUpdate","ProductDescriptionEditComponent","ProductDescriptionSearchComponent","ProductModelViewModel","ProductModelMapper","ProductModelCreate","ProductModelCreateComponent","ProductModelDetailDisplay","ProductModelDetailComponent","productModelDetailForm_ProductModelDetailDisplay","ProductModelUpdate","ProductModelEditComponent","ProductModelSearchComponent","ProductPhotoViewModel","ProductPhotoMapper","ProductPhotoCreate","ProductPhotoCreateComponent","ProductPhotoDetailDisplay","ProductPhotoDetailComponent","productPhotoDetailForm_ProductPhotoDetailDisplay","ProductPhotoUpdate","ProductPhotoEditComponent","ProductPhotoSearchComponent","ProductReviewViewModel","ProductReviewMapper","ProductReviewCreate","ProductReviewCreateComponent","ProductReviewDetailDisplay","ProductReviewDetailComponent","productReviewDetailForm_ProductReviewDetailDisplay","ProductReviewUpdate","ProductReviewEditComponent","ProductReviewSearchComponent","ProductSubcategoryViewModel","ProductSubcategoryMapper","ProductSubcategoryCreate","ProductSubcategoryCreateComponent","ProductSubcategoryDetailDisplay","ProductSubcategoryDetailComponent","productSubcategoryDetailForm_ProductSubcategoryDetailDisplay","ProductSubcategoryUpdate","ProductSubcategoryEditComponent","ProductSubcategorySearchComponent","ScrapReasonViewModel","ScrapReasonMapper","ScrapReasonCreate","ScrapReasonCreateComponent","ScrapReasonDetailDisplay","ScrapReasonDetailComponent","scrapReasonDetailForm_ScrapReasonDetailDisplay","ScrapReasonUpdate","ScrapReasonEditComponent","ScrapReasonSearchComponent","TransactionHistoryViewModel","TransactionHistoryMapper","TransactionHistoryCreate","TransactionHistoryCreateComponent","TransactionHistoryDetailDisplay","TransactionHistoryDetailComponent","transactionHistoryDetailForm_TransactionHistoryDetailDisplay","TransactionHistoryUpdate","TransactionHistoryEditComponent","TransactionHistorySearchComponent","TransactionHistoryArchiveViewModel","TransactionHistoryArchiveMapper","TransactionHistoryArchiveCreate","TransactionHistoryArchiveCreateComponent","TransactionHistoryArchiveDetailDisplay","TransactionHistoryArchiveDetailComponent","transactionHistoryArchiveDetailForm_TransactionHistoryArchiveDetailDisplay","TransactionHistoryArchiveUpdate","TransactionHistoryArchiveEditComponent","TransactionHistoryArchiveSearchComponent","UnitMeasureViewModel","UnitMeasureMapper","UnitMeasureCreate","UnitMeasureCreateComponent","UnitMeasureDetailDisplay","UnitMeasureDetailComponent","unitMeasureDetailForm_UnitMeasureDetailDisplay","UnitMeasureUpdate","UnitMeasureEditComponent","UnitMeasureSearchComponent","WorkOrderViewModel","WorkOrderMapper","WorkOrderCreate","WorkOrderCreateComponent","WorkOrderDetailDisplay","WorkOrderDetailComponent","workOrderDetailForm_WorkOrderDetailDisplay","WorkOrderUpdate","WorkOrderEditComponent","WorkOrderSearchComponent","PurchaseOrderHeaderViewModel","PurchaseOrderHeaderMapper","PurchaseOrderHeaderCreate","PurchaseOrderHeaderCreateComponent","PurchaseOrderHeaderDetailDisplay","PurchaseOrderHeaderDetailComponent","purchaseOrderHeaderDetailForm_PurchaseOrderHeaderDetailDisplay","PurchaseOrderHeaderUpdate","PurchaseOrderHeaderEditComponent","PurchaseOrderHeaderSearchComponent","ShipMethodViewModel","ShipMethodMapper","ShipMethodCreate","ShipMethodCreateComponent","ShipMethodDetailDisplay","ShipMethodDetailComponent","shipMethodDetailForm_ShipMethodDetailDisplay","ShipMethodUpdate","ShipMethodEditComponent","ShipMethodSearchComponent","VendorViewModel","VendorMapper","VendorCreate","VendorCreateComponent","VendorDetailDisplay","VendorDetailComponent","vendorDetailForm_VendorDetailDisplay","VendorUpdate","VendorEditComponent","VendorSearchComponent","CreditCardViewModel","CreditCardMapper","CreditCardCreate","CreditCardCreateComponent","CreditCardDetailDisplay","CreditCardDetailComponent","creditCardDetailForm_CreditCardDetailDisplay","CreditCardUpdate","CreditCardEditComponent","CreditCardSearchComponent","CurrencyViewModel","CurrencyMapper","CurrencyCreate","CurrencyCreateComponent","CurrencyDetailDisplay","CurrencyDetailComponent","currencyDetailForm_CurrencyDetailDisplay","CurrencyUpdate","CurrencyEditComponent","CurrencySearchComponent","CurrencyRateViewModel","CurrencyRateMapper","CurrencyRateCreate","CurrencyRateCreateComponent","CurrencyRateDetailDisplay","CurrencyRateDetailComponent","currencyRateDetailForm_CurrencyRateDetailDisplay","CurrencyRateUpdate","CurrencyRateEditComponent","CurrencyRateSearchComponent","CustomerViewModel","CustomerMapper","CustomerCreate","CustomerCreateComponent","CustomerDetailDisplay","CustomerDetailComponent","customerDetailForm_CustomerDetailDisplay","CustomerUpdate","CustomerEditComponent","CustomerSearchComponent","SalesOrderHeaderViewModel","SalesOrderHeaderMapper","SalesOrderHeaderCreate","SalesOrderHeaderCreateComponent","SalesOrderHeaderDetailDisplay","SalesOrderHeaderDetailComponent","salesOrderHeaderDetailForm_SalesOrderHeaderDetailDisplay","SalesOrderHeaderUpdate","SalesOrderHeaderEditComponent","SalesOrderHeaderSearchComponent","SalesPersonViewModel","SalesPersonMapper","SalesPersonCreate","SalesPersonCreateComponent","SalesPersonDetailDisplay","SalesPersonDetailComponent","salesPersonDetailForm_SalesPersonDetailDisplay","SalesPersonUpdate","SalesPersonEditComponent","SalesPersonSearchComponent","SalesReasonViewModel","SalesReasonMapper","SalesReasonCreate","SalesReasonCreateComponent","SalesReasonDetailDisplay","SalesReasonDetailComponent","salesReasonDetailForm_SalesReasonDetailDisplay","SalesReasonUpdate","SalesReasonEditComponent","SalesReasonSearchComponent","SalesTaxRateViewModel","SalesTaxRateMapper","SalesTaxRateCreate","SalesTaxRateCreateComponent","SalesTaxRateDetailDisplay","SalesTaxRateDetailComponent","salesTaxRateDetailForm_SalesTaxRateDetailDisplay","SalesTaxRateUpdate","SalesTaxRateEditComponent","SalesTaxRateSearchComponent","SalesTerritoryViewModel","SalesTerritoryMapper","SalesTerritoryCreate","SalesTerritoryCreateComponent","SalesTerritoryDetailDisplay","SalesTerritoryDetailComponent","salesTerritoryDetailForm_SalesTerritoryDetailDisplay","SalesTerritoryUpdate","SalesTerritoryEditComponent","SalesTerritorySearchComponent","ShoppingCartItemViewModel","ShoppingCartItemMapper","ShoppingCartItemCreate","ShoppingCartItemCreateComponent","ShoppingCartItemDetailDisplay","ShoppingCartItemDetailComponent","shoppingCartItemDetailForm_ShoppingCartItemDetailDisplay","ShoppingCartItemUpdate","ShoppingCartItemEditComponent","ShoppingCartItemSearchComponent","SpecialOfferViewModel","SpecialOfferMapper","SpecialOfferCreate","SpecialOfferCreateComponent","SpecialOfferDetailDisplay","SpecialOfferDetailComponent","specialOfferDetailForm_SpecialOfferDetailDisplay","SpecialOfferUpdate","SpecialOfferEditComponent","SpecialOfferSearchComponent","StoreViewModel","StoreMapper","StoreCreate","StoreCreateComponent","StoreDetailDisplay","StoreDetailComponent","storeDetailForm_StoreDetailDisplay","StoreUpdate","StoreEditComponent","StoreSearchComponent","config","clientId","issuer","redirectUri","scope","ReactDOM","render","URLSearchParams","location","search","BrowserRouter","dist","client_id","redirect_uri","Route","component","path","Switch","exact","document","getElementById"],"mappings":"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","file":"static/js/main.b6a56165.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n  menuExpanded: boolean;\r\n}\r\n\r\nexport class Header extends React.Component<Props, State> {\r\n  state = { menuExpanded: false };\r\n\r\n  handleClick(e: React.FormEvent) {\r\n    this.setState({ menuExpanded: !this.state.menuExpanded });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row col-12\">\r\n        <nav\r\n          className=\"navbar navbar-expand-lg navbar-light bg-white\"\r\n          id=\"navbar\"\r\n        >\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            AdventureWorks\r\n          </a>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n            onClick={e => this.handleClick(e)}\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div\r\n            className={\r\n              this.state.menuExpanded\r\n                ? 'collapse.expand navbar-collapse'\r\n                : 'collapse navbar-collapse'\r\n            }\r\n            id=\"navbarSupportedContent\"\r\n          >\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/awbuildversions\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  AWBuildVersions\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/databaselogs\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  DatabaseLogs\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/errorlogs\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ErrorLogs\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/departments\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Departments\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/employees\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Employees\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/jobcandidates\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  JobCandidates\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/shifts\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Shifts\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/addresses\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Addresses\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/addresstypes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  AddressTypes\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/businessentities\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  BusinessEntities\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/contacttypes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ContactTypes\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/countryregions\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  CountryRegions\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/passwords\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Passwords\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/people\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  People\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/phonenumbertypes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  PhoneNumberTypes\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/stateprovinces\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  StateProvinces\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/billofmaterials\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  BillOfMaterials\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/cultures\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Cultures\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/documents\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Documents\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/illustrations\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Illustrations\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/locations\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Locations\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/products\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Products\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/productcategories\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ProductCategories\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/productdescriptions\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ProductDescriptions\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/productmodels\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ProductModels\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/productphotoes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ProductPhotoes\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/productreviews\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ProductReviews\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/productsubcategories\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ProductSubcategories\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/scrapreasons\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ScrapReasons\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/transactionhistories\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  TransactionHistories\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/transactionhistoryarchives\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  TransactionHistoryArchives\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/unitmeasures\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  UnitMeasures\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/workorders\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  WorkOrders\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/purchaseorderheaders\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  PurchaseOrderHeaders\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/shipmethods\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ShipMethods\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/vendors\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Vendors\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/creditcards\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  CreditCards\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/currencies\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Currencies\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/currencyrates\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  CurrencyRates\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/customers\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Customers\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/salesorderheaders\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  SalesOrderHeaders\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/salespersons\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  SalesPersons\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/salesreasons\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  SalesReasons\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/salestaxrates\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  SalesTaxRates\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/salesterritories\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  SalesTerritories\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/shoppingcartitems\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  ShoppingCartItems\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/specialoffers\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  SpecialOffers\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/stores\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Stores\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>efe676fa5b47e1aa86c0872ab0e19189</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport {Header} from './components/header'\r\nexport const App: React.StatelessComponent<{}> = (props) => {\r\n  return (\r\n    <Header />\r\n  );\r\n}","import * as React from 'react';\r\n\r\nexport const Dashboard: React.StatelessComponent<{}> = () => {\r\n  return (\r\n    <div className=\"row col-12\">\r\n       Nothing here yet...\r\n    </div>\r\n  );\r\n}","export default class Constants {\r\n   static readonly ApiUrl:string = \"http://localhost:8000/api/\";\r\n}","export class AWBuildVersionClientRequestModel {\r\n\t\t\t\tdatabase_Version:string;\r\nmodifiedDate:any;\r\nsystemInformationID:number;\r\nversionDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.database_Version = '';\r\nthis.modifiedDate = undefined;\r\nthis.systemInformationID = 0;\r\nthis.versionDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(database_Version : string,modifiedDate : any,systemInformationID : number,versionDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.database_Version = database_Version;\r\nthis.modifiedDate = modifiedDate;\r\nthis.systemInformationID = systemInformationID;\r\nthis.versionDate = versionDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class AWBuildVersionClientResponseModel {\r\n\t\t\t\tdatabase_Version:string;\r\nmodifiedDate:any;\r\nsystemInformationID:number;\r\nversionDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.database_Version = '';\r\nthis.modifiedDate = undefined;\r\nthis.systemInformationID = 0;\r\nthis.versionDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(database_Version : string,modifiedDate : any,systemInformationID : number,versionDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.database_Version = database_Version;\r\nthis.modifiedDate = modifiedDate;\r\nthis.systemInformationID = systemInformationID;\r\nthis.versionDate = versionDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class DatabaseLogClientRequestModel {\r\n\t\t\t\tdatabaseLogID:number;\r\ndatabaseUser:string;\r\npostTime:any;\r\nschema:string;\r\ntsql:string;\r\nxmlEvent:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.databaseLogID = 0;\r\nthis.databaseUser = '';\r\nthis.postTime = undefined;\r\nthis.schema = '';\r\nthis.tsql = '';\r\nthis.xmlEvent = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(databaseLogID : number,databaseUser : string,postTime : any,schema : string,tsql : string,xmlEvent : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.databaseLogID = databaseLogID;\r\nthis.databaseUser = databaseUser;\r\nthis.postTime = postTime;\r\nthis.schema = schema;\r\nthis.tsql = tsql;\r\nthis.xmlEvent = xmlEvent;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class DatabaseLogClientResponseModel {\r\n\t\t\t\tdatabaseLogID:number;\r\ndatabaseUser:string;\r\npostTime:any;\r\nschema:string;\r\ntsql:string;\r\nxmlEvent:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.databaseLogID = 0;\r\nthis.databaseUser = '';\r\nthis.postTime = undefined;\r\nthis.schema = '';\r\nthis.tsql = '';\r\nthis.xmlEvent = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(databaseLogID : number,databaseUser : string,postTime : any,schema : string,tsql : string,xmlEvent : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.databaseLogID = databaseLogID;\r\nthis.databaseUser = databaseUser;\r\nthis.postTime = postTime;\r\nthis.schema = schema;\r\nthis.tsql = tsql;\r\nthis.xmlEvent = xmlEvent;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ErrorLogClientRequestModel {\r\n\t\t\t\terrorLine:any;\r\nerrorLogID:number;\r\nerrorMessage:string;\r\nerrorNumber:number;\r\nerrorProcedure:string;\r\nerrorSeverity:any;\r\nerrorState:any;\r\nerrorTime:any;\r\nuserName:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.errorLine = undefined;\r\nthis.errorLogID = 0;\r\nthis.errorMessage = '';\r\nthis.errorNumber = 0;\r\nthis.errorProcedure = '';\r\nthis.errorSeverity = undefined;\r\nthis.errorState = undefined;\r\nthis.errorTime = undefined;\r\nthis.userName = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(errorLine : any,errorLogID : number,errorMessage : string,errorNumber : number,errorProcedure : string,errorSeverity : any,errorState : any,errorTime : any,userName : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.errorLine = errorLine;\r\nthis.errorLogID = errorLogID;\r\nthis.errorMessage = errorMessage;\r\nthis.errorNumber = errorNumber;\r\nthis.errorProcedure = errorProcedure;\r\nthis.errorSeverity = errorSeverity;\r\nthis.errorState = errorState;\r\nthis.errorTime = errorTime;\r\nthis.userName = userName;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ErrorLogClientResponseModel {\r\n\t\t\t\terrorLine:any;\r\nerrorLogID:number;\r\nerrorMessage:string;\r\nerrorNumber:number;\r\nerrorProcedure:string;\r\nerrorSeverity:any;\r\nerrorState:any;\r\nerrorTime:any;\r\nuserName:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.errorLine = undefined;\r\nthis.errorLogID = 0;\r\nthis.errorMessage = '';\r\nthis.errorNumber = 0;\r\nthis.errorProcedure = '';\r\nthis.errorSeverity = undefined;\r\nthis.errorState = undefined;\r\nthis.errorTime = undefined;\r\nthis.userName = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(errorLine : any,errorLogID : number,errorMessage : string,errorNumber : number,errorProcedure : string,errorSeverity : any,errorState : any,errorTime : any,userName : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.errorLine = errorLine;\r\nthis.errorLogID = errorLogID;\r\nthis.errorMessage = errorMessage;\r\nthis.errorNumber = errorNumber;\r\nthis.errorProcedure = errorProcedure;\r\nthis.errorSeverity = errorSeverity;\r\nthis.errorState = errorState;\r\nthis.errorTime = errorTime;\r\nthis.userName = userName;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class DepartmentClientRequestModel {\r\n\t\t\t\tdepartmentID:number;\r\ngroupName:string;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.departmentID = 0;\r\nthis.groupName = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(departmentID : number,groupName : string,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.departmentID = departmentID;\r\nthis.groupName = groupName;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class DepartmentClientResponseModel {\r\n\t\t\t\tdepartmentID:number;\r\ngroupName:string;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.departmentID = 0;\r\nthis.groupName = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(departmentID : number,groupName : string,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.departmentID = departmentID;\r\nthis.groupName = groupName;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class EmployeeClientRequestModel {\r\n\t\t\t\tbirthDate:any;\r\nbusinessEntityID:number;\r\ncurrentFlag:boolean;\r\ngender:string;\r\nhireDate:any;\r\njobTitle:string;\r\nloginID:string;\r\nmaritalStatu:string;\r\nmodifiedDate:any;\r\nnationalIDNumber:string;\r\norganizationLevel:any;\r\nrowguid:any;\r\nsalariedFlag:boolean;\r\nsickLeaveHour:number;\r\nvacationHour:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.birthDate = undefined;\r\nthis.businessEntityID = 0;\r\nthis.currentFlag = false;\r\nthis.gender = '';\r\nthis.hireDate = undefined;\r\nthis.jobTitle = '';\r\nthis.loginID = '';\r\nthis.maritalStatu = '';\r\nthis.modifiedDate = undefined;\r\nthis.nationalIDNumber = '';\r\nthis.organizationLevel = undefined;\r\nthis.rowguid = undefined;\r\nthis.salariedFlag = false;\r\nthis.sickLeaveHour = 0;\r\nthis.vacationHour = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(birthDate : any,businessEntityID : number,currentFlag : boolean,gender : string,hireDate : any,jobTitle : string,loginID : string,maritalStatu : string,modifiedDate : any,nationalIDNumber : string,organizationLevel : any,rowguid : any,salariedFlag : boolean,sickLeaveHour : number,vacationHour : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.birthDate = birthDate;\r\nthis.businessEntityID = businessEntityID;\r\nthis.currentFlag = currentFlag;\r\nthis.gender = gender;\r\nthis.hireDate = hireDate;\r\nthis.jobTitle = jobTitle;\r\nthis.loginID = loginID;\r\nthis.maritalStatu = maritalStatu;\r\nthis.modifiedDate = modifiedDate;\r\nthis.nationalIDNumber = nationalIDNumber;\r\nthis.organizationLevel = organizationLevel;\r\nthis.rowguid = rowguid;\r\nthis.salariedFlag = salariedFlag;\r\nthis.sickLeaveHour = sickLeaveHour;\r\nthis.vacationHour = vacationHour;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class EmployeeClientResponseModel {\r\n\t\t\t\tbirthDate:any;\r\nbusinessEntityID:number;\r\ncurrentFlag:boolean;\r\ngender:string;\r\nhireDate:any;\r\njobTitle:string;\r\nloginID:string;\r\nmaritalStatu:string;\r\nmodifiedDate:any;\r\nnationalIDNumber:string;\r\norganizationLevel:any;\r\nrowguid:any;\r\nsalariedFlag:boolean;\r\nsickLeaveHour:number;\r\nvacationHour:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.birthDate = undefined;\r\nthis.businessEntityID = 0;\r\nthis.currentFlag = false;\r\nthis.gender = '';\r\nthis.hireDate = undefined;\r\nthis.jobTitle = '';\r\nthis.loginID = '';\r\nthis.maritalStatu = '';\r\nthis.modifiedDate = undefined;\r\nthis.nationalIDNumber = '';\r\nthis.organizationLevel = undefined;\r\nthis.rowguid = undefined;\r\nthis.salariedFlag = false;\r\nthis.sickLeaveHour = 0;\r\nthis.vacationHour = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(birthDate : any,businessEntityID : number,currentFlag : boolean,gender : string,hireDate : any,jobTitle : string,loginID : string,maritalStatu : string,modifiedDate : any,nationalIDNumber : string,organizationLevel : any,rowguid : any,salariedFlag : boolean,sickLeaveHour : number,vacationHour : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.birthDate = birthDate;\r\nthis.businessEntityID = businessEntityID;\r\nthis.currentFlag = currentFlag;\r\nthis.gender = gender;\r\nthis.hireDate = hireDate;\r\nthis.jobTitle = jobTitle;\r\nthis.loginID = loginID;\r\nthis.maritalStatu = maritalStatu;\r\nthis.modifiedDate = modifiedDate;\r\nthis.nationalIDNumber = nationalIDNumber;\r\nthis.organizationLevel = organizationLevel;\r\nthis.rowguid = rowguid;\r\nthis.salariedFlag = salariedFlag;\r\nthis.sickLeaveHour = sickLeaveHour;\r\nthis.vacationHour = vacationHour;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class JobCandidateClientRequestModel {\r\n\t\t\t\tbusinessEntityID:any;\r\njobCandidateID:number;\r\nmodifiedDate:any;\r\nresume:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.businessEntityID = undefined;\r\nthis.jobCandidateID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.resume = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(businessEntityID : any,jobCandidateID : number,modifiedDate : any,resume : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.businessEntityID = businessEntityID;\r\nthis.jobCandidateID = jobCandidateID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.resume = resume;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class JobCandidateClientResponseModel {\r\n\t\t\t\tbusinessEntityID:any;\r\njobCandidateID:number;\r\nmodifiedDate:any;\r\nresume:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.businessEntityID = undefined;\r\nthis.jobCandidateID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.resume = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(businessEntityID : any,jobCandidateID : number,modifiedDate : any,resume : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.businessEntityID = businessEntityID;\r\nthis.jobCandidateID = jobCandidateID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.resume = resume;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ShiftClientRequestModel {\r\n\t\t\t\tendTime:any;\r\nmodifiedDate:any;\r\nname:string;\r\nshiftID:number;\r\nstartTime:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.endTime = undefined;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.shiftID = 0;\r\nthis.startTime = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(endTime : any,modifiedDate : any,name : string,shiftID : number,startTime : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.endTime = endTime;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.shiftID = shiftID;\r\nthis.startTime = startTime;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ShiftClientResponseModel {\r\n\t\t\t\tendTime:any;\r\nmodifiedDate:any;\r\nname:string;\r\nshiftID:number;\r\nstartTime:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.endTime = undefined;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.shiftID = 0;\r\nthis.startTime = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(endTime : any,modifiedDate : any,name : string,shiftID : number,startTime : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.endTime = endTime;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.shiftID = shiftID;\r\nthis.startTime = startTime;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class AddressClientRequestModel {\r\n\t\t\t\taddressID:number;\r\naddressLine1:string;\r\naddressLine2:string;\r\ncity:string;\r\nmodifiedDate:any;\r\npostalCode:string;\r\nrowguid:any;\r\nstateProvinceID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.addressID = 0;\r\nthis.addressLine1 = '';\r\nthis.addressLine2 = '';\r\nthis.city = '';\r\nthis.modifiedDate = undefined;\r\nthis.postalCode = '';\r\nthis.rowguid = undefined;\r\nthis.stateProvinceID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(addressID : number,addressLine1 : string,addressLine2 : string,city : string,modifiedDate : any,postalCode : string,rowguid : any,stateProvinceID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.addressID = addressID;\r\nthis.addressLine1 = addressLine1;\r\nthis.addressLine2 = addressLine2;\r\nthis.city = city;\r\nthis.modifiedDate = modifiedDate;\r\nthis.postalCode = postalCode;\r\nthis.rowguid = rowguid;\r\nthis.stateProvinceID = stateProvinceID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class AddressClientResponseModel {\r\n\t\t\t\taddressID:number;\r\naddressLine1:string;\r\naddressLine2:string;\r\ncity:string;\r\nmodifiedDate:any;\r\npostalCode:string;\r\nrowguid:any;\r\nstateProvinceID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.addressID = 0;\r\nthis.addressLine1 = '';\r\nthis.addressLine2 = '';\r\nthis.city = '';\r\nthis.modifiedDate = undefined;\r\nthis.postalCode = '';\r\nthis.rowguid = undefined;\r\nthis.stateProvinceID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(addressID : number,addressLine1 : string,addressLine2 : string,city : string,modifiedDate : any,postalCode : string,rowguid : any,stateProvinceID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.addressID = addressID;\r\nthis.addressLine1 = addressLine1;\r\nthis.addressLine2 = addressLine2;\r\nthis.city = city;\r\nthis.modifiedDate = modifiedDate;\r\nthis.postalCode = postalCode;\r\nthis.rowguid = rowguid;\r\nthis.stateProvinceID = stateProvinceID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class AddressTypeClientRequestModel {\r\n\t\t\t\taddressTypeID:number;\r\nmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.addressTypeID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(addressTypeID : number,modifiedDate : any,name : string,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.addressTypeID = addressTypeID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class AddressTypeClientResponseModel {\r\n\t\t\t\taddressTypeID:number;\r\nmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.addressTypeID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(addressTypeID : number,modifiedDate : any,name : string,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.addressTypeID = addressTypeID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class BusinessEntityClientRequestModel {\r\n\t\t\t\tbusinessEntityID:number;\r\nmodifiedDate:any;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.businessEntityID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(businessEntityID : number,modifiedDate : any,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.businessEntityID = businessEntityID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class BusinessEntityClientResponseModel {\r\n\t\t\t\tbusinessEntityID:number;\r\nmodifiedDate:any;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.businessEntityID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(businessEntityID : number,modifiedDate : any,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.businessEntityID = businessEntityID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ContactTypeClientRequestModel {\r\n\t\t\t\tcontactTypeID:number;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.contactTypeID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(contactTypeID : number,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.contactTypeID = contactTypeID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ContactTypeClientResponseModel {\r\n\t\t\t\tcontactTypeID:number;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.contactTypeID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(contactTypeID : number,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.contactTypeID = contactTypeID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CountryRegionClientRequestModel {\r\n\t\t\t\tcountryRegionCode:string;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryRegionCode = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryRegionCode : string,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryRegionCode = countryRegionCode;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CountryRegionClientResponseModel {\r\n\t\t\t\tcountryRegionCode:string;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryRegionCode = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryRegionCode : string,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryRegionCode = countryRegionCode;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PasswordClientRequestModel {\r\n\t\t\t\tbusinessEntityID:number;\r\nmodifiedDate:any;\r\npasswordHash:string;\r\npasswordSalt:string;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.businessEntityID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.passwordHash = '';\r\nthis.passwordSalt = '';\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(businessEntityID : number,modifiedDate : any,passwordHash : string,passwordSalt : string,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.businessEntityID = businessEntityID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.passwordHash = passwordHash;\r\nthis.passwordSalt = passwordSalt;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PasswordClientResponseModel {\r\n\t\t\t\tbusinessEntityID:number;\r\nmodifiedDate:any;\r\npasswordHash:string;\r\npasswordSalt:string;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.businessEntityID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.passwordHash = '';\r\nthis.passwordSalt = '';\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(businessEntityID : number,modifiedDate : any,passwordHash : string,passwordSalt : string,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.businessEntityID = businessEntityID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.passwordHash = passwordHash;\r\nthis.passwordSalt = passwordSalt;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PersonClientRequestModel {\r\n\t\t\t\tadditionalContactInfo:string;\r\nbusinessEntityID:number;\r\ndemographic:string;\r\nemailPromotion:number;\r\nfirstName:string;\r\nlastName:string;\r\nmiddleName:string;\r\nmodifiedDate:any;\r\nnameStyle:boolean;\r\npersonType:string;\r\nrowguid:any;\r\nsuffix:string;\r\ntitle:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.additionalContactInfo = '';\r\nthis.businessEntityID = 0;\r\nthis.demographic = '';\r\nthis.emailPromotion = 0;\r\nthis.firstName = '';\r\nthis.lastName = '';\r\nthis.middleName = '';\r\nthis.modifiedDate = undefined;\r\nthis.nameStyle = false;\r\nthis.personType = '';\r\nthis.rowguid = undefined;\r\nthis.suffix = '';\r\nthis.title = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(additionalContactInfo : string,businessEntityID : number,demographic : string,emailPromotion : number,firstName : string,lastName : string,middleName : string,modifiedDate : any,nameStyle : boolean,personType : string,rowguid : any,suffix : string,title : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.additionalContactInfo = additionalContactInfo;\r\nthis.businessEntityID = businessEntityID;\r\nthis.demographic = demographic;\r\nthis.emailPromotion = emailPromotion;\r\nthis.firstName = firstName;\r\nthis.lastName = lastName;\r\nthis.middleName = middleName;\r\nthis.modifiedDate = modifiedDate;\r\nthis.nameStyle = nameStyle;\r\nthis.personType = personType;\r\nthis.rowguid = rowguid;\r\nthis.suffix = suffix;\r\nthis.title = title;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PersonClientResponseModel {\r\n\t\t\t\tadditionalContactInfo:string;\r\nbusinessEntityID:number;\r\ndemographic:string;\r\nemailPromotion:number;\r\nfirstName:string;\r\nlastName:string;\r\nmiddleName:string;\r\nmodifiedDate:any;\r\nnameStyle:boolean;\r\npersonType:string;\r\nrowguid:any;\r\nsuffix:string;\r\ntitle:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.additionalContactInfo = '';\r\nthis.businessEntityID = 0;\r\nthis.demographic = '';\r\nthis.emailPromotion = 0;\r\nthis.firstName = '';\r\nthis.lastName = '';\r\nthis.middleName = '';\r\nthis.modifiedDate = undefined;\r\nthis.nameStyle = false;\r\nthis.personType = '';\r\nthis.rowguid = undefined;\r\nthis.suffix = '';\r\nthis.title = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(additionalContactInfo : string,businessEntityID : number,demographic : string,emailPromotion : number,firstName : string,lastName : string,middleName : string,modifiedDate : any,nameStyle : boolean,personType : string,rowguid : any,suffix : string,title : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.additionalContactInfo = additionalContactInfo;\r\nthis.businessEntityID = businessEntityID;\r\nthis.demographic = demographic;\r\nthis.emailPromotion = emailPromotion;\r\nthis.firstName = firstName;\r\nthis.lastName = lastName;\r\nthis.middleName = middleName;\r\nthis.modifiedDate = modifiedDate;\r\nthis.nameStyle = nameStyle;\r\nthis.personType = personType;\r\nthis.rowguid = rowguid;\r\nthis.suffix = suffix;\r\nthis.title = title;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PhoneNumberTypeClientRequestModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nphoneNumberTypeID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.phoneNumberTypeID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,phoneNumberTypeID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.phoneNumberTypeID = phoneNumberTypeID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PhoneNumberTypeClientResponseModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nphoneNumberTypeID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.phoneNumberTypeID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,phoneNumberTypeID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.phoneNumberTypeID = phoneNumberTypeID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class StateProvinceClientRequestModel {\r\n\t\t\t\tcountryRegionCode:string;\r\nisOnlyStateProvinceFlag:boolean;\r\nmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nstateProvinceCode:string;\r\nstateProvinceID:number;\r\nterritoryID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryRegionCode = '';\r\nthis.isOnlyStateProvinceFlag = false;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.stateProvinceCode = '';\r\nthis.stateProvinceID = 0;\r\nthis.territoryID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryRegionCode : string,isOnlyStateProvinceFlag : boolean,modifiedDate : any,name : string,rowguid : any,stateProvinceCode : string,stateProvinceID : number,territoryID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryRegionCode = countryRegionCode;\r\nthis.isOnlyStateProvinceFlag = isOnlyStateProvinceFlag;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.stateProvinceCode = stateProvinceCode;\r\nthis.stateProvinceID = stateProvinceID;\r\nthis.territoryID = territoryID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class StateProvinceClientResponseModel {\r\n\t\t\t\tcountryRegionCode:string;\r\nisOnlyStateProvinceFlag:boolean;\r\nmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nstateProvinceCode:string;\r\nstateProvinceID:number;\r\nterritoryID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.countryRegionCode = '';\r\nthis.isOnlyStateProvinceFlag = false;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.stateProvinceCode = '';\r\nthis.stateProvinceID = 0;\r\nthis.territoryID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(countryRegionCode : string,isOnlyStateProvinceFlag : boolean,modifiedDate : any,name : string,rowguid : any,stateProvinceCode : string,stateProvinceID : number,territoryID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.countryRegionCode = countryRegionCode;\r\nthis.isOnlyStateProvinceFlag = isOnlyStateProvinceFlag;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.stateProvinceCode = stateProvinceCode;\r\nthis.stateProvinceID = stateProvinceID;\r\nthis.territoryID = territoryID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class BillOfMaterialClientRequestModel {\r\n\t\t\t\tbillOfMaterialsID:number;\r\nbOMLevel:number;\r\ncomponentID:number;\r\nendDate:any;\r\nmodifiedDate:any;\r\nperAssemblyQty:number;\r\nproductAssemblyID:any;\r\nstartDate:any;\r\nunitMeasureCode:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.billOfMaterialsID = 0;\r\nthis.bOMLevel = 0;\r\nthis.componentID = 0;\r\nthis.endDate = undefined;\r\nthis.modifiedDate = undefined;\r\nthis.perAssemblyQty = 0;\r\nthis.productAssemblyID = undefined;\r\nthis.startDate = undefined;\r\nthis.unitMeasureCode = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(billOfMaterialsID : number,bOMLevel : number,componentID : number,endDate : any,modifiedDate : any,perAssemblyQty : number,productAssemblyID : any,startDate : any,unitMeasureCode : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.billOfMaterialsID = billOfMaterialsID;\r\nthis.bOMLevel = bOMLevel;\r\nthis.componentID = componentID;\r\nthis.endDate = endDate;\r\nthis.modifiedDate = modifiedDate;\r\nthis.perAssemblyQty = perAssemblyQty;\r\nthis.productAssemblyID = productAssemblyID;\r\nthis.startDate = startDate;\r\nthis.unitMeasureCode = unitMeasureCode;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class BillOfMaterialClientResponseModel {\r\n\t\t\t\tbillOfMaterialsID:number;\r\nbOMLevel:number;\r\ncomponentID:number;\r\nendDate:any;\r\nmodifiedDate:any;\r\nperAssemblyQty:number;\r\nproductAssemblyID:any;\r\nstartDate:any;\r\nunitMeasureCode:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.billOfMaterialsID = 0;\r\nthis.bOMLevel = 0;\r\nthis.componentID = 0;\r\nthis.endDate = undefined;\r\nthis.modifiedDate = undefined;\r\nthis.perAssemblyQty = 0;\r\nthis.productAssemblyID = undefined;\r\nthis.startDate = undefined;\r\nthis.unitMeasureCode = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(billOfMaterialsID : number,bOMLevel : number,componentID : number,endDate : any,modifiedDate : any,perAssemblyQty : number,productAssemblyID : any,startDate : any,unitMeasureCode : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.billOfMaterialsID = billOfMaterialsID;\r\nthis.bOMLevel = bOMLevel;\r\nthis.componentID = componentID;\r\nthis.endDate = endDate;\r\nthis.modifiedDate = modifiedDate;\r\nthis.perAssemblyQty = perAssemblyQty;\r\nthis.productAssemblyID = productAssemblyID;\r\nthis.startDate = startDate;\r\nthis.unitMeasureCode = unitMeasureCode;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CultureClientRequestModel {\r\n\t\t\t\tcultureID:string;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.cultureID = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(cultureID : string,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.cultureID = cultureID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CultureClientResponseModel {\r\n\t\t\t\tcultureID:string;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.cultureID = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(cultureID : string,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.cultureID = cultureID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class DocumentClientRequestModel {\r\n\t\t\t\tchangeNumber:number;\r\ndocument1:any;\r\ndocumentLevel:any;\r\ndocumentSummary:string;\r\nfileExtension:string;\r\nfileName:string;\r\nfolderFlag:boolean;\r\nmodifiedDate:any;\r\nowner:number;\r\nrevision:string;\r\nrowguid:any;\r\nstatus:number;\r\ntitle:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.changeNumber = 0;\r\nthis.document1 = undefined;\r\nthis.documentLevel = undefined;\r\nthis.documentSummary = '';\r\nthis.fileExtension = '';\r\nthis.fileName = '';\r\nthis.folderFlag = false;\r\nthis.modifiedDate = undefined;\r\nthis.owner = 0;\r\nthis.revision = '';\r\nthis.rowguid = undefined;\r\nthis.status = 0;\r\nthis.title = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(changeNumber : number,document1 : any,documentLevel : any,documentSummary : string,fileExtension : string,fileName : string,folderFlag : boolean,modifiedDate : any,owner : number,revision : string,rowguid : any,status : number,title : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.changeNumber = changeNumber;\r\nthis.document1 = document1;\r\nthis.documentLevel = documentLevel;\r\nthis.documentSummary = documentSummary;\r\nthis.fileExtension = fileExtension;\r\nthis.fileName = fileName;\r\nthis.folderFlag = folderFlag;\r\nthis.modifiedDate = modifiedDate;\r\nthis.owner = owner;\r\nthis.revision = revision;\r\nthis.rowguid = rowguid;\r\nthis.status = status;\r\nthis.title = title;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class DocumentClientResponseModel {\r\n\t\t\t\tchangeNumber:number;\r\ndocument1:any;\r\ndocumentLevel:any;\r\ndocumentSummary:string;\r\nfileExtension:string;\r\nfileName:string;\r\nfolderFlag:boolean;\r\nmodifiedDate:any;\r\nowner:number;\r\nrevision:string;\r\nrowguid:any;\r\nstatus:number;\r\ntitle:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.changeNumber = 0;\r\nthis.document1 = undefined;\r\nthis.documentLevel = undefined;\r\nthis.documentSummary = '';\r\nthis.fileExtension = '';\r\nthis.fileName = '';\r\nthis.folderFlag = false;\r\nthis.modifiedDate = undefined;\r\nthis.owner = 0;\r\nthis.revision = '';\r\nthis.rowguid = undefined;\r\nthis.status = 0;\r\nthis.title = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(changeNumber : number,document1 : any,documentLevel : any,documentSummary : string,fileExtension : string,fileName : string,folderFlag : boolean,modifiedDate : any,owner : number,revision : string,rowguid : any,status : number,title : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.changeNumber = changeNumber;\r\nthis.document1 = document1;\r\nthis.documentLevel = documentLevel;\r\nthis.documentSummary = documentSummary;\r\nthis.fileExtension = fileExtension;\r\nthis.fileName = fileName;\r\nthis.folderFlag = folderFlag;\r\nthis.modifiedDate = modifiedDate;\r\nthis.owner = owner;\r\nthis.revision = revision;\r\nthis.rowguid = rowguid;\r\nthis.status = status;\r\nthis.title = title;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class IllustrationClientRequestModel {\r\n\t\t\t\tdiagram:string;\r\nillustrationID:number;\r\nmodifiedDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.diagram = '';\r\nthis.illustrationID = 0;\r\nthis.modifiedDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(diagram : string,illustrationID : number,modifiedDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.diagram = diagram;\r\nthis.illustrationID = illustrationID;\r\nthis.modifiedDate = modifiedDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class IllustrationClientResponseModel {\r\n\t\t\t\tdiagram:string;\r\nillustrationID:number;\r\nmodifiedDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.diagram = '';\r\nthis.illustrationID = 0;\r\nthis.modifiedDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(diagram : string,illustrationID : number,modifiedDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.diagram = diagram;\r\nthis.illustrationID = illustrationID;\r\nthis.modifiedDate = modifiedDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class LocationClientRequestModel {\r\n\t\t\t\tavailability:number;\r\ncostRate:number;\r\nlocationID:number;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.availability = 0;\r\nthis.costRate = 0;\r\nthis.locationID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(availability : number,costRate : number,locationID : number,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.availability = availability;\r\nthis.costRate = costRate;\r\nthis.locationID = locationID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class LocationClientResponseModel {\r\n\t\t\t\tavailability:number;\r\ncostRate:number;\r\nlocationID:number;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.availability = 0;\r\nthis.costRate = 0;\r\nthis.locationID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(availability : number,costRate : number,locationID : number,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.availability = availability;\r\nthis.costRate = costRate;\r\nthis.locationID = locationID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ProductClientRequestModel {\r\n\t\t\t\tcolor:string;\r\ndaysToManufacture:number;\r\ndiscontinuedDate:any;\r\nfinishedGoodsFlag:boolean;\r\nlistPrice:number;\r\nmakeFlag:boolean;\r\nmodifiedDate:any;\r\nname:string;\r\nproductID:number;\r\nproductLine:string;\r\nproductModelID:any;\r\nproductNumber:string;\r\nproductSubcategoryID:any;\r\nreorderPoint:number;\r\nrowguid:any;\r\nsafetyStockLevel:number;\r\nsellEndDate:any;\r\nsellStartDate:any;\r\nsize:string;\r\nsizeUnitMeasureCode:string;\r\nstandardCost:number;\r\nstyle:string;\r\nweight:any;\r\nweightUnitMeasureCode:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.color = '';\r\nthis.daysToManufacture = 0;\r\nthis.discontinuedDate = undefined;\r\nthis.finishedGoodsFlag = false;\r\nthis.listPrice = 0;\r\nthis.makeFlag = false;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.productID = 0;\r\nthis.productLine = '';\r\nthis.productModelID = undefined;\r\nthis.productNumber = '';\r\nthis.productSubcategoryID = undefined;\r\nthis.reorderPoint = 0;\r\nthis.rowguid = undefined;\r\nthis.safetyStockLevel = 0;\r\nthis.sellEndDate = undefined;\r\nthis.sellStartDate = undefined;\r\nthis.size = '';\r\nthis.sizeUnitMeasureCode = '';\r\nthis.standardCost = 0;\r\nthis.style = '';\r\nthis.weight = undefined;\r\nthis.weightUnitMeasureCode = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(color : string,daysToManufacture : number,discontinuedDate : any,finishedGoodsFlag : boolean,listPrice : number,makeFlag : boolean,modifiedDate : any,name : string,productID : number,productLine : string,productModelID : any,productNumber : string,productSubcategoryID : any,reorderPoint : number,rowguid : any,safetyStockLevel : number,sellEndDate : any,sellStartDate : any,size : string,sizeUnitMeasureCode : string,standardCost : number,style : string,weight : any,weightUnitMeasureCode : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.color = color;\r\nthis.daysToManufacture = daysToManufacture;\r\nthis.discontinuedDate = discontinuedDate;\r\nthis.finishedGoodsFlag = finishedGoodsFlag;\r\nthis.listPrice = listPrice;\r\nthis.makeFlag = makeFlag;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.productID = productID;\r\nthis.productLine = productLine;\r\nthis.productModelID = productModelID;\r\nthis.productNumber = productNumber;\r\nthis.productSubcategoryID = productSubcategoryID;\r\nthis.reorderPoint = reorderPoint;\r\nthis.rowguid = rowguid;\r\nthis.safetyStockLevel = safetyStockLevel;\r\nthis.sellEndDate = sellEndDate;\r\nthis.sellStartDate = sellStartDate;\r\nthis.size = size;\r\nthis.sizeUnitMeasureCode = sizeUnitMeasureCode;\r\nthis.standardCost = standardCost;\r\nthis.style = style;\r\nthis.weight = weight;\r\nthis.weightUnitMeasureCode = weightUnitMeasureCode;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ProductClientResponseModel {\r\n\t\t\t\tcolor:string;\r\ndaysToManufacture:number;\r\ndiscontinuedDate:any;\r\nfinishedGoodsFlag:boolean;\r\nlistPrice:number;\r\nmakeFlag:boolean;\r\nmodifiedDate:any;\r\nname:string;\r\nproductID:number;\r\nproductLine:string;\r\nproductModelID:any;\r\nproductNumber:string;\r\nproductSubcategoryID:any;\r\nreorderPoint:number;\r\nrowguid:any;\r\nsafetyStockLevel:number;\r\nsellEndDate:any;\r\nsellStartDate:any;\r\nsize:string;\r\nsizeUnitMeasureCode:string;\r\nstandardCost:number;\r\nstyle:string;\r\nweight:any;\r\nweightUnitMeasureCode:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.color = '';\r\nthis.daysToManufacture = 0;\r\nthis.discontinuedDate = undefined;\r\nthis.finishedGoodsFlag = false;\r\nthis.listPrice = 0;\r\nthis.makeFlag = false;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.productID = 0;\r\nthis.productLine = '';\r\nthis.productModelID = undefined;\r\nthis.productNumber = '';\r\nthis.productSubcategoryID = undefined;\r\nthis.reorderPoint = 0;\r\nthis.rowguid = undefined;\r\nthis.safetyStockLevel = 0;\r\nthis.sellEndDate = undefined;\r\nthis.sellStartDate = undefined;\r\nthis.size = '';\r\nthis.sizeUnitMeasureCode = '';\r\nthis.standardCost = 0;\r\nthis.style = '';\r\nthis.weight = undefined;\r\nthis.weightUnitMeasureCode = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(color : string,daysToManufacture : number,discontinuedDate : any,finishedGoodsFlag : boolean,listPrice : number,makeFlag : boolean,modifiedDate : any,name : string,productID : number,productLine : string,productModelID : any,productNumber : string,productSubcategoryID : any,reorderPoint : number,rowguid : any,safetyStockLevel : number,sellEndDate : any,sellStartDate : any,size : string,sizeUnitMeasureCode : string,standardCost : number,style : string,weight : any,weightUnitMeasureCode : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.color = color;\r\nthis.daysToManufacture = daysToManufacture;\r\nthis.discontinuedDate = discontinuedDate;\r\nthis.finishedGoodsFlag = finishedGoodsFlag;\r\nthis.listPrice = listPrice;\r\nthis.makeFlag = makeFlag;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.productID = productID;\r\nthis.productLine = productLine;\r\nthis.productModelID = productModelID;\r\nthis.productNumber = productNumber;\r\nthis.productSubcategoryID = productSubcategoryID;\r\nthis.reorderPoint = reorderPoint;\r\nthis.rowguid = rowguid;\r\nthis.safetyStockLevel = safetyStockLevel;\r\nthis.sellEndDate = sellEndDate;\r\nthis.sellStartDate = sellStartDate;\r\nthis.size = size;\r\nthis.sizeUnitMeasureCode = sizeUnitMeasureCode;\r\nthis.standardCost = standardCost;\r\nthis.style = style;\r\nthis.weight = weight;\r\nthis.weightUnitMeasureCode = weightUnitMeasureCode;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ProductCategoryClientRequestModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nproductCategoryID:number;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.productCategoryID = 0;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,productCategoryID : number,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.productCategoryID = productCategoryID;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ProductCategoryClientResponseModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nproductCategoryID:number;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.productCategoryID = 0;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,productCategoryID : number,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.productCategoryID = productCategoryID;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ProductDescriptionClientRequestModel {\r\n\t\t\t\tdescription:string;\r\nmodifiedDate:any;\r\nproductDescriptionID:number;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.description = '';\r\nthis.modifiedDate = undefined;\r\nthis.productDescriptionID = 0;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(description : string,modifiedDate : any,productDescriptionID : number,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.description = description;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productDescriptionID = productDescriptionID;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ProductDescriptionClientResponseModel {\r\n\t\t\t\tdescription:string;\r\nmodifiedDate:any;\r\nproductDescriptionID:number;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.description = '';\r\nthis.modifiedDate = undefined;\r\nthis.productDescriptionID = 0;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(description : string,modifiedDate : any,productDescriptionID : number,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.description = description;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productDescriptionID = productDescriptionID;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ProductModelClientRequestModel {\r\n\t\t\t\tcatalogDescription:string;\r\ninstruction:string;\r\nmodifiedDate:any;\r\nname:string;\r\nproductModelID:number;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.catalogDescription = '';\r\nthis.instruction = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.productModelID = 0;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(catalogDescription : string,instruction : string,modifiedDate : any,name : string,productModelID : number,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.catalogDescription = catalogDescription;\r\nthis.instruction = instruction;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.productModelID = productModelID;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ProductModelClientResponseModel {\r\n\t\t\t\tcatalogDescription:string;\r\ninstruction:string;\r\nmodifiedDate:any;\r\nname:string;\r\nproductModelID:number;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.catalogDescription = '';\r\nthis.instruction = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.productModelID = 0;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(catalogDescription : string,instruction : string,modifiedDate : any,name : string,productModelID : number,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.catalogDescription = catalogDescription;\r\nthis.instruction = instruction;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.productModelID = productModelID;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ProductPhotoClientRequestModel {\r\n\t\t\t\tlargePhoto:any;\r\nlargePhotoFileName:string;\r\nmodifiedDate:any;\r\nproductPhotoID:number;\r\nthumbNailPhoto:any;\r\nthumbnailPhotoFileName:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.largePhoto = undefined;\r\nthis.largePhotoFileName = '';\r\nthis.modifiedDate = undefined;\r\nthis.productPhotoID = 0;\r\nthis.thumbNailPhoto = undefined;\r\nthis.thumbnailPhotoFileName = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(largePhoto : any,largePhotoFileName : string,modifiedDate : any,productPhotoID : number,thumbNailPhoto : any,thumbnailPhotoFileName : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.largePhoto = largePhoto;\r\nthis.largePhotoFileName = largePhotoFileName;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productPhotoID = productPhotoID;\r\nthis.thumbNailPhoto = thumbNailPhoto;\r\nthis.thumbnailPhotoFileName = thumbnailPhotoFileName;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ProductPhotoClientResponseModel {\r\n\t\t\t\tlargePhoto:any;\r\nlargePhotoFileName:string;\r\nmodifiedDate:any;\r\nproductPhotoID:number;\r\nthumbNailPhoto:any;\r\nthumbnailPhotoFileName:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.largePhoto = undefined;\r\nthis.largePhotoFileName = '';\r\nthis.modifiedDate = undefined;\r\nthis.productPhotoID = 0;\r\nthis.thumbNailPhoto = undefined;\r\nthis.thumbnailPhotoFileName = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(largePhoto : any,largePhotoFileName : string,modifiedDate : any,productPhotoID : number,thumbNailPhoto : any,thumbnailPhotoFileName : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.largePhoto = largePhoto;\r\nthis.largePhotoFileName = largePhotoFileName;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productPhotoID = productPhotoID;\r\nthis.thumbNailPhoto = thumbNailPhoto;\r\nthis.thumbnailPhotoFileName = thumbnailPhotoFileName;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ProductReviewClientRequestModel {\r\n\t\t\t\tcomment:string;\r\nemailAddress:string;\r\nmodifiedDate:any;\r\nproductID:number;\r\nproductReviewID:number;\r\nrating:number;\r\nreviewDate:any;\r\nreviewerName:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.comment = '';\r\nthis.emailAddress = '';\r\nthis.modifiedDate = undefined;\r\nthis.productID = 0;\r\nthis.productReviewID = 0;\r\nthis.rating = 0;\r\nthis.reviewDate = undefined;\r\nthis.reviewerName = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(comment : string,emailAddress : string,modifiedDate : any,productID : number,productReviewID : number,rating : number,reviewDate : any,reviewerName : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.comment = comment;\r\nthis.emailAddress = emailAddress;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productID = productID;\r\nthis.productReviewID = productReviewID;\r\nthis.rating = rating;\r\nthis.reviewDate = reviewDate;\r\nthis.reviewerName = reviewerName;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ProductReviewClientResponseModel {\r\n\t\t\t\tcomment:string;\r\nemailAddress:string;\r\nmodifiedDate:any;\r\nproductID:number;\r\nproductReviewID:number;\r\nrating:number;\r\nreviewDate:any;\r\nreviewerName:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.comment = '';\r\nthis.emailAddress = '';\r\nthis.modifiedDate = undefined;\r\nthis.productID = 0;\r\nthis.productReviewID = 0;\r\nthis.rating = 0;\r\nthis.reviewDate = undefined;\r\nthis.reviewerName = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(comment : string,emailAddress : string,modifiedDate : any,productID : number,productReviewID : number,rating : number,reviewDate : any,reviewerName : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.comment = comment;\r\nthis.emailAddress = emailAddress;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productID = productID;\r\nthis.productReviewID = productReviewID;\r\nthis.rating = rating;\r\nthis.reviewDate = reviewDate;\r\nthis.reviewerName = reviewerName;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ProductSubcategoryClientRequestModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nproductCategoryID:number;\r\nproductSubcategoryID:number;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.productCategoryID = 0;\r\nthis.productSubcategoryID = 0;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,productCategoryID : number,productSubcategoryID : number,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.productCategoryID = productCategoryID;\r\nthis.productSubcategoryID = productSubcategoryID;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ProductSubcategoryClientResponseModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nproductCategoryID:number;\r\nproductSubcategoryID:number;\r\nrowguid:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.productCategoryID = 0;\r\nthis.productSubcategoryID = 0;\r\nthis.rowguid = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,productCategoryID : number,productSubcategoryID : number,rowguid : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.productCategoryID = productCategoryID;\r\nthis.productSubcategoryID = productSubcategoryID;\r\nthis.rowguid = rowguid;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ScrapReasonClientRequestModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nscrapReasonID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.scrapReasonID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,scrapReasonID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.scrapReasonID = scrapReasonID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ScrapReasonClientResponseModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nscrapReasonID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.scrapReasonID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,scrapReasonID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.scrapReasonID = scrapReasonID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class TransactionHistoryClientRequestModel {\r\n\t\t\t\tactualCost:number;\r\nmodifiedDate:any;\r\nproductID:number;\r\nquantity:number;\r\nreferenceOrderID:number;\r\nreferenceOrderLineID:number;\r\ntransactionDate:any;\r\ntransactionID:number;\r\ntransactionType:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.actualCost = 0;\r\nthis.modifiedDate = undefined;\r\nthis.productID = 0;\r\nthis.quantity = 0;\r\nthis.referenceOrderID = 0;\r\nthis.referenceOrderLineID = 0;\r\nthis.transactionDate = undefined;\r\nthis.transactionID = 0;\r\nthis.transactionType = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(actualCost : number,modifiedDate : any,productID : number,quantity : number,referenceOrderID : number,referenceOrderLineID : number,transactionDate : any,transactionID : number,transactionType : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.actualCost = actualCost;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productID = productID;\r\nthis.quantity = quantity;\r\nthis.referenceOrderID = referenceOrderID;\r\nthis.referenceOrderLineID = referenceOrderLineID;\r\nthis.transactionDate = transactionDate;\r\nthis.transactionID = transactionID;\r\nthis.transactionType = transactionType;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class TransactionHistoryClientResponseModel {\r\n\t\t\t\tactualCost:number;\r\nmodifiedDate:any;\r\nproductID:number;\r\nquantity:number;\r\nreferenceOrderID:number;\r\nreferenceOrderLineID:number;\r\ntransactionDate:any;\r\ntransactionID:number;\r\ntransactionType:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.actualCost = 0;\r\nthis.modifiedDate = undefined;\r\nthis.productID = 0;\r\nthis.quantity = 0;\r\nthis.referenceOrderID = 0;\r\nthis.referenceOrderLineID = 0;\r\nthis.transactionDate = undefined;\r\nthis.transactionID = 0;\r\nthis.transactionType = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(actualCost : number,modifiedDate : any,productID : number,quantity : number,referenceOrderID : number,referenceOrderLineID : number,transactionDate : any,transactionID : number,transactionType : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.actualCost = actualCost;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productID = productID;\r\nthis.quantity = quantity;\r\nthis.referenceOrderID = referenceOrderID;\r\nthis.referenceOrderLineID = referenceOrderLineID;\r\nthis.transactionDate = transactionDate;\r\nthis.transactionID = transactionID;\r\nthis.transactionType = transactionType;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class TransactionHistoryArchiveClientRequestModel {\r\n\t\t\t\tactualCost:number;\r\nmodifiedDate:any;\r\nproductID:number;\r\nquantity:number;\r\nreferenceOrderID:number;\r\nreferenceOrderLineID:number;\r\ntransactionDate:any;\r\ntransactionID:number;\r\ntransactionType:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.actualCost = 0;\r\nthis.modifiedDate = undefined;\r\nthis.productID = 0;\r\nthis.quantity = 0;\r\nthis.referenceOrderID = 0;\r\nthis.referenceOrderLineID = 0;\r\nthis.transactionDate = undefined;\r\nthis.transactionID = 0;\r\nthis.transactionType = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(actualCost : number,modifiedDate : any,productID : number,quantity : number,referenceOrderID : number,referenceOrderLineID : number,transactionDate : any,transactionID : number,transactionType : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.actualCost = actualCost;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productID = productID;\r\nthis.quantity = quantity;\r\nthis.referenceOrderID = referenceOrderID;\r\nthis.referenceOrderLineID = referenceOrderLineID;\r\nthis.transactionDate = transactionDate;\r\nthis.transactionID = transactionID;\r\nthis.transactionType = transactionType;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class TransactionHistoryArchiveClientResponseModel {\r\n\t\t\t\tactualCost:number;\r\nmodifiedDate:any;\r\nproductID:number;\r\nquantity:number;\r\nreferenceOrderID:number;\r\nreferenceOrderLineID:number;\r\ntransactionDate:any;\r\ntransactionID:number;\r\ntransactionType:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.actualCost = 0;\r\nthis.modifiedDate = undefined;\r\nthis.productID = 0;\r\nthis.quantity = 0;\r\nthis.referenceOrderID = 0;\r\nthis.referenceOrderLineID = 0;\r\nthis.transactionDate = undefined;\r\nthis.transactionID = 0;\r\nthis.transactionType = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(actualCost : number,modifiedDate : any,productID : number,quantity : number,referenceOrderID : number,referenceOrderLineID : number,transactionDate : any,transactionID : number,transactionType : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.actualCost = actualCost;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productID = productID;\r\nthis.quantity = quantity;\r\nthis.referenceOrderID = referenceOrderID;\r\nthis.referenceOrderLineID = referenceOrderLineID;\r\nthis.transactionDate = transactionDate;\r\nthis.transactionID = transactionID;\r\nthis.transactionType = transactionType;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class UnitMeasureClientRequestModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nunitMeasureCode:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.unitMeasureCode = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,unitMeasureCode : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.unitMeasureCode = unitMeasureCode;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class UnitMeasureClientResponseModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nunitMeasureCode:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.unitMeasureCode = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,unitMeasureCode : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.unitMeasureCode = unitMeasureCode;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class WorkOrderClientRequestModel {\r\n\t\t\t\tdueDate:any;\r\nendDate:any;\r\nmodifiedDate:any;\r\norderQty:number;\r\nproductID:number;\r\nscrappedQty:number;\r\nscrapReasonID:any;\r\nstartDate:any;\r\nstockedQty:number;\r\nworkOrderID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.dueDate = undefined;\r\nthis.endDate = undefined;\r\nthis.modifiedDate = undefined;\r\nthis.orderQty = 0;\r\nthis.productID = 0;\r\nthis.scrappedQty = 0;\r\nthis.scrapReasonID = undefined;\r\nthis.startDate = undefined;\r\nthis.stockedQty = 0;\r\nthis.workOrderID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(dueDate : any,endDate : any,modifiedDate : any,orderQty : number,productID : number,scrappedQty : number,scrapReasonID : any,startDate : any,stockedQty : number,workOrderID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.dueDate = dueDate;\r\nthis.endDate = endDate;\r\nthis.modifiedDate = modifiedDate;\r\nthis.orderQty = orderQty;\r\nthis.productID = productID;\r\nthis.scrappedQty = scrappedQty;\r\nthis.scrapReasonID = scrapReasonID;\r\nthis.startDate = startDate;\r\nthis.stockedQty = stockedQty;\r\nthis.workOrderID = workOrderID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class WorkOrderClientResponseModel {\r\n\t\t\t\tdueDate:any;\r\nendDate:any;\r\nmodifiedDate:any;\r\norderQty:number;\r\nproductID:number;\r\nscrappedQty:number;\r\nscrapReasonID:any;\r\nstartDate:any;\r\nstockedQty:number;\r\nworkOrderID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.dueDate = undefined;\r\nthis.endDate = undefined;\r\nthis.modifiedDate = undefined;\r\nthis.orderQty = 0;\r\nthis.productID = 0;\r\nthis.scrappedQty = 0;\r\nthis.scrapReasonID = undefined;\r\nthis.startDate = undefined;\r\nthis.stockedQty = 0;\r\nthis.workOrderID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(dueDate : any,endDate : any,modifiedDate : any,orderQty : number,productID : number,scrappedQty : number,scrapReasonID : any,startDate : any,stockedQty : number,workOrderID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.dueDate = dueDate;\r\nthis.endDate = endDate;\r\nthis.modifiedDate = modifiedDate;\r\nthis.orderQty = orderQty;\r\nthis.productID = productID;\r\nthis.scrappedQty = scrappedQty;\r\nthis.scrapReasonID = scrapReasonID;\r\nthis.startDate = startDate;\r\nthis.stockedQty = stockedQty;\r\nthis.workOrderID = workOrderID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PurchaseOrderHeaderClientRequestModel {\r\n\t\t\t\temployeeID:number;\r\nfreight:number;\r\nmodifiedDate:any;\r\norderDate:any;\r\npurchaseOrderID:number;\r\nrevisionNumber:number;\r\nshipDate:any;\r\nshipMethodID:number;\r\nstatus:number;\r\nsubTotal:number;\r\ntaxAmt:number;\r\ntotalDue:number;\r\nvendorID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.employeeID = 0;\r\nthis.freight = 0;\r\nthis.modifiedDate = undefined;\r\nthis.orderDate = undefined;\r\nthis.purchaseOrderID = 0;\r\nthis.revisionNumber = 0;\r\nthis.shipDate = undefined;\r\nthis.shipMethodID = 0;\r\nthis.status = 0;\r\nthis.subTotal = 0;\r\nthis.taxAmt = 0;\r\nthis.totalDue = 0;\r\nthis.vendorID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(employeeID : number,freight : number,modifiedDate : any,orderDate : any,purchaseOrderID : number,revisionNumber : number,shipDate : any,shipMethodID : number,status : number,subTotal : number,taxAmt : number,totalDue : number,vendorID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.employeeID = employeeID;\r\nthis.freight = freight;\r\nthis.modifiedDate = modifiedDate;\r\nthis.orderDate = orderDate;\r\nthis.purchaseOrderID = purchaseOrderID;\r\nthis.revisionNumber = revisionNumber;\r\nthis.shipDate = shipDate;\r\nthis.shipMethodID = shipMethodID;\r\nthis.status = status;\r\nthis.subTotal = subTotal;\r\nthis.taxAmt = taxAmt;\r\nthis.totalDue = totalDue;\r\nthis.vendorID = vendorID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PurchaseOrderHeaderClientResponseModel {\r\n\t\t\t\temployeeID:number;\r\nfreight:number;\r\nmodifiedDate:any;\r\norderDate:any;\r\npurchaseOrderID:number;\r\nrevisionNumber:number;\r\nshipDate:any;\r\nshipMethodID:number;\r\nstatus:number;\r\nsubTotal:number;\r\ntaxAmt:number;\r\ntotalDue:number;\r\nvendorID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.employeeID = 0;\r\nthis.freight = 0;\r\nthis.modifiedDate = undefined;\r\nthis.orderDate = undefined;\r\nthis.purchaseOrderID = 0;\r\nthis.revisionNumber = 0;\r\nthis.shipDate = undefined;\r\nthis.shipMethodID = 0;\r\nthis.status = 0;\r\nthis.subTotal = 0;\r\nthis.taxAmt = 0;\r\nthis.totalDue = 0;\r\nthis.vendorID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(employeeID : number,freight : number,modifiedDate : any,orderDate : any,purchaseOrderID : number,revisionNumber : number,shipDate : any,shipMethodID : number,status : number,subTotal : number,taxAmt : number,totalDue : number,vendorID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.employeeID = employeeID;\r\nthis.freight = freight;\r\nthis.modifiedDate = modifiedDate;\r\nthis.orderDate = orderDate;\r\nthis.purchaseOrderID = purchaseOrderID;\r\nthis.revisionNumber = revisionNumber;\r\nthis.shipDate = shipDate;\r\nthis.shipMethodID = shipMethodID;\r\nthis.status = status;\r\nthis.subTotal = subTotal;\r\nthis.taxAmt = taxAmt;\r\nthis.totalDue = totalDue;\r\nthis.vendorID = vendorID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ShipMethodClientRequestModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nshipBase:number;\r\nshipMethodID:number;\r\nshipRate:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.shipBase = 0;\r\nthis.shipMethodID = 0;\r\nthis.shipRate = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,rowguid : any,shipBase : number,shipMethodID : number,shipRate : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.shipBase = shipBase;\r\nthis.shipMethodID = shipMethodID;\r\nthis.shipRate = shipRate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ShipMethodClientResponseModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nshipBase:number;\r\nshipMethodID:number;\r\nshipRate:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.shipBase = 0;\r\nthis.shipMethodID = 0;\r\nthis.shipRate = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,rowguid : any,shipBase : number,shipMethodID : number,shipRate : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.shipBase = shipBase;\r\nthis.shipMethodID = shipMethodID;\r\nthis.shipRate = shipRate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class VendorClientRequestModel {\r\n\t\t\t\taccountNumber:string;\r\nactiveFlag:boolean;\r\nbusinessEntityID:number;\r\ncreditRating:number;\r\nmodifiedDate:any;\r\nname:string;\r\npreferredVendorStatu:boolean;\r\npurchasingWebServiceURL:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.accountNumber = '';\r\nthis.activeFlag = false;\r\nthis.businessEntityID = 0;\r\nthis.creditRating = 0;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.preferredVendorStatu = false;\r\nthis.purchasingWebServiceURL = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(accountNumber : string,activeFlag : boolean,businessEntityID : number,creditRating : number,modifiedDate : any,name : string,preferredVendorStatu : boolean,purchasingWebServiceURL : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.accountNumber = accountNumber;\r\nthis.activeFlag = activeFlag;\r\nthis.businessEntityID = businessEntityID;\r\nthis.creditRating = creditRating;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.preferredVendorStatu = preferredVendorStatu;\r\nthis.purchasingWebServiceURL = purchasingWebServiceURL;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class VendorClientResponseModel {\r\n\t\t\t\taccountNumber:string;\r\nactiveFlag:boolean;\r\nbusinessEntityID:number;\r\ncreditRating:number;\r\nmodifiedDate:any;\r\nname:string;\r\npreferredVendorStatu:boolean;\r\npurchasingWebServiceURL:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.accountNumber = '';\r\nthis.activeFlag = false;\r\nthis.businessEntityID = 0;\r\nthis.creditRating = 0;\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.preferredVendorStatu = false;\r\nthis.purchasingWebServiceURL = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(accountNumber : string,activeFlag : boolean,businessEntityID : number,creditRating : number,modifiedDate : any,name : string,preferredVendorStatu : boolean,purchasingWebServiceURL : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.accountNumber = accountNumber;\r\nthis.activeFlag = activeFlag;\r\nthis.businessEntityID = businessEntityID;\r\nthis.creditRating = creditRating;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.preferredVendorStatu = preferredVendorStatu;\r\nthis.purchasingWebServiceURL = purchasingWebServiceURL;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CreditCardClientRequestModel {\r\n\t\t\t\tcardNumber:string;\r\ncardType:string;\r\ncreditCardID:number;\r\nexpMonth:number;\r\nexpYear:number;\r\nmodifiedDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.cardNumber = '';\r\nthis.cardType = '';\r\nthis.creditCardID = 0;\r\nthis.expMonth = 0;\r\nthis.expYear = 0;\r\nthis.modifiedDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(cardNumber : string,cardType : string,creditCardID : number,expMonth : number,expYear : number,modifiedDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.cardNumber = cardNumber;\r\nthis.cardType = cardType;\r\nthis.creditCardID = creditCardID;\r\nthis.expMonth = expMonth;\r\nthis.expYear = expYear;\r\nthis.modifiedDate = modifiedDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CreditCardClientResponseModel {\r\n\t\t\t\tcardNumber:string;\r\ncardType:string;\r\ncreditCardID:number;\r\nexpMonth:number;\r\nexpYear:number;\r\nmodifiedDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.cardNumber = '';\r\nthis.cardType = '';\r\nthis.creditCardID = 0;\r\nthis.expMonth = 0;\r\nthis.expYear = 0;\r\nthis.modifiedDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(cardNumber : string,cardType : string,creditCardID : number,expMonth : number,expYear : number,modifiedDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.cardNumber = cardNumber;\r\nthis.cardType = cardType;\r\nthis.creditCardID = creditCardID;\r\nthis.expMonth = expMonth;\r\nthis.expYear = expYear;\r\nthis.modifiedDate = modifiedDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CurrencyClientRequestModel {\r\n\t\t\t\tcurrencyCode:string;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.currencyCode = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(currencyCode : string,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.currencyCode = currencyCode;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CurrencyClientResponseModel {\r\n\t\t\t\tcurrencyCode:string;\r\nmodifiedDate:any;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.currencyCode = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(currencyCode : string,modifiedDate : any,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.currencyCode = currencyCode;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CurrencyRateClientRequestModel {\r\n\t\t\t\taverageRate:number;\r\ncurrencyRateDate:any;\r\ncurrencyRateID:number;\r\nendOfDayRate:number;\r\nfromCurrencyCode:string;\r\nfromCurrencyCodeEntity : string;\r\nmodifiedDate:any;\r\ntoCurrencyCode:string;\r\ntoCurrencyCodeEntity : string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.averageRate = 0;\r\nthis.currencyRateDate = undefined;\r\nthis.currencyRateID = 0;\r\nthis.endOfDayRate = 0;\r\nthis.fromCurrencyCode = '';\r\nthis.fromCurrencyCodeEntity = '';\r\nthis.modifiedDate = undefined;\r\nthis.toCurrencyCode = '';\r\nthis.toCurrencyCodeEntity = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(averageRate : number,currencyRateDate : any,currencyRateID : number,endOfDayRate : number,fromCurrencyCode : string,modifiedDate : any,toCurrencyCode : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.averageRate = averageRate;\r\nthis.currencyRateDate = currencyRateDate;\r\nthis.currencyRateID = currencyRateID;\r\nthis.endOfDayRate = endOfDayRate;\r\nthis.fromCurrencyCode = fromCurrencyCode;\r\nthis.modifiedDate = modifiedDate;\r\nthis.toCurrencyCode = toCurrencyCode;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CurrencyRateClientResponseModel {\r\n\t\t\t\taverageRate:number;\r\ncurrencyRateDate:any;\r\ncurrencyRateID:number;\r\nendOfDayRate:number;\r\nfromCurrencyCode:string;\r\nfromCurrencyCodeEntity : string;\r\nmodifiedDate:any;\r\ntoCurrencyCode:string;\r\ntoCurrencyCodeEntity : string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.averageRate = 0;\r\nthis.currencyRateDate = undefined;\r\nthis.currencyRateID = 0;\r\nthis.endOfDayRate = 0;\r\nthis.fromCurrencyCode = '';\r\nthis.fromCurrencyCodeEntity = '';\r\nthis.modifiedDate = undefined;\r\nthis.toCurrencyCode = '';\r\nthis.toCurrencyCodeEntity = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(averageRate : number,currencyRateDate : any,currencyRateID : number,endOfDayRate : number,fromCurrencyCode : string,modifiedDate : any,toCurrencyCode : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.averageRate = averageRate;\r\nthis.currencyRateDate = currencyRateDate;\r\nthis.currencyRateID = currencyRateID;\r\nthis.endOfDayRate = endOfDayRate;\r\nthis.fromCurrencyCode = fromCurrencyCode;\r\nthis.modifiedDate = modifiedDate;\r\nthis.toCurrencyCode = toCurrencyCode;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CustomerClientRequestModel {\r\n\t\t\t\taccountNumber:string;\r\ncustomerID:number;\r\nmodifiedDate:any;\r\npersonID:any;\r\nrowguid:any;\r\nstoreID:any;\r\nstoreIDEntity : string;\r\nterritoryID:any;\r\nterritoryIDEntity : string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.accountNumber = '';\r\nthis.customerID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.personID = undefined;\r\nthis.rowguid = undefined;\r\nthis.storeID = undefined;\r\nthis.storeIDEntity = '';\r\nthis.territoryID = undefined;\r\nthis.territoryIDEntity = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(accountNumber : string,customerID : number,modifiedDate : any,personID : any,rowguid : any,storeID : any,territoryID : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.accountNumber = accountNumber;\r\nthis.customerID = customerID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.personID = personID;\r\nthis.rowguid = rowguid;\r\nthis.storeID = storeID;\r\nthis.territoryID = territoryID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CustomerClientResponseModel {\r\n\t\t\t\taccountNumber:string;\r\ncustomerID:number;\r\nmodifiedDate:any;\r\npersonID:any;\r\nrowguid:any;\r\nstoreID:any;\r\nstoreIDEntity : string;\r\nterritoryID:any;\r\nterritoryIDEntity : string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.accountNumber = '';\r\nthis.customerID = 0;\r\nthis.modifiedDate = undefined;\r\nthis.personID = undefined;\r\nthis.rowguid = undefined;\r\nthis.storeID = undefined;\r\nthis.storeIDEntity = '';\r\nthis.territoryID = undefined;\r\nthis.territoryIDEntity = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(accountNumber : string,customerID : number,modifiedDate : any,personID : any,rowguid : any,storeID : any,territoryID : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.accountNumber = accountNumber;\r\nthis.customerID = customerID;\r\nthis.modifiedDate = modifiedDate;\r\nthis.personID = personID;\r\nthis.rowguid = rowguid;\r\nthis.storeID = storeID;\r\nthis.territoryID = territoryID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class SalesOrderHeaderClientRequestModel {\r\n\t\t\t\taccountNumber:string;\r\nbillToAddressID:number;\r\ncomment:string;\r\ncreditCardApprovalCode:string;\r\ncreditCardID:any;\r\ncreditCardIDEntity : string;\r\ncurrencyRateID:any;\r\ncurrencyRateIDEntity : string;\r\ncustomerID:number;\r\ncustomerIDEntity : string;\r\ndueDate:any;\r\nfreight:number;\r\nmodifiedDate:any;\r\nonlineOrderFlag:boolean;\r\norderDate:any;\r\npurchaseOrderNumber:string;\r\nrevisionNumber:number;\r\nrowguid:any;\r\nsalesOrderID:number;\r\nsalesOrderNumber:string;\r\nsalesPersonID:any;\r\nsalesPersonIDEntity : string;\r\nshipDate:any;\r\nshipMethodID:number;\r\nshipToAddressID:number;\r\nstatus:number;\r\nsubTotal:number;\r\ntaxAmt:number;\r\nterritoryID:any;\r\nterritoryIDEntity : string;\r\ntotalDue:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.accountNumber = '';\r\nthis.billToAddressID = 0;\r\nthis.comment = '';\r\nthis.creditCardApprovalCode = '';\r\nthis.creditCardID = undefined;\r\nthis.creditCardIDEntity = '';\r\nthis.currencyRateID = undefined;\r\nthis.currencyRateIDEntity = '';\r\nthis.customerID = 0;\r\nthis.customerIDEntity = '';\r\nthis.dueDate = undefined;\r\nthis.freight = 0;\r\nthis.modifiedDate = undefined;\r\nthis.onlineOrderFlag = false;\r\nthis.orderDate = undefined;\r\nthis.purchaseOrderNumber = '';\r\nthis.revisionNumber = 0;\r\nthis.rowguid = undefined;\r\nthis.salesOrderID = 0;\r\nthis.salesOrderNumber = '';\r\nthis.salesPersonID = undefined;\r\nthis.salesPersonIDEntity = '';\r\nthis.shipDate = undefined;\r\nthis.shipMethodID = 0;\r\nthis.shipToAddressID = 0;\r\nthis.status = 0;\r\nthis.subTotal = 0;\r\nthis.taxAmt = 0;\r\nthis.territoryID = undefined;\r\nthis.territoryIDEntity = '';\r\nthis.totalDue = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(accountNumber : string,billToAddressID : number,comment : string,creditCardApprovalCode : string,creditCardID : any,currencyRateID : any,customerID : number,dueDate : any,freight : number,modifiedDate : any,onlineOrderFlag : boolean,orderDate : any,purchaseOrderNumber : string,revisionNumber : number,rowguid : any,salesOrderID : number,salesOrderNumber : string,salesPersonID : any,shipDate : any,shipMethodID : number,shipToAddressID : number,status : number,subTotal : number,taxAmt : number,territoryID : any,totalDue : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.accountNumber = accountNumber;\r\nthis.billToAddressID = billToAddressID;\r\nthis.comment = comment;\r\nthis.creditCardApprovalCode = creditCardApprovalCode;\r\nthis.creditCardID = creditCardID;\r\nthis.currencyRateID = currencyRateID;\r\nthis.customerID = customerID;\r\nthis.dueDate = dueDate;\r\nthis.freight = freight;\r\nthis.modifiedDate = modifiedDate;\r\nthis.onlineOrderFlag = onlineOrderFlag;\r\nthis.orderDate = orderDate;\r\nthis.purchaseOrderNumber = purchaseOrderNumber;\r\nthis.revisionNumber = revisionNumber;\r\nthis.rowguid = rowguid;\r\nthis.salesOrderID = salesOrderID;\r\nthis.salesOrderNumber = salesOrderNumber;\r\nthis.salesPersonID = salesPersonID;\r\nthis.shipDate = shipDate;\r\nthis.shipMethodID = shipMethodID;\r\nthis.shipToAddressID = shipToAddressID;\r\nthis.status = status;\r\nthis.subTotal = subTotal;\r\nthis.taxAmt = taxAmt;\r\nthis.territoryID = territoryID;\r\nthis.totalDue = totalDue;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class SalesOrderHeaderClientResponseModel {\r\n\t\t\t\taccountNumber:string;\r\nbillToAddressID:number;\r\ncomment:string;\r\ncreditCardApprovalCode:string;\r\ncreditCardID:any;\r\ncreditCardIDEntity : string;\r\ncurrencyRateID:any;\r\ncurrencyRateIDEntity : string;\r\ncustomerID:number;\r\ncustomerIDEntity : string;\r\ndueDate:any;\r\nfreight:number;\r\nmodifiedDate:any;\r\nonlineOrderFlag:boolean;\r\norderDate:any;\r\npurchaseOrderNumber:string;\r\nrevisionNumber:number;\r\nrowguid:any;\r\nsalesOrderID:number;\r\nsalesOrderNumber:string;\r\nsalesPersonID:any;\r\nsalesPersonIDEntity : string;\r\nshipDate:any;\r\nshipMethodID:number;\r\nshipToAddressID:number;\r\nstatus:number;\r\nsubTotal:number;\r\ntaxAmt:number;\r\nterritoryID:any;\r\nterritoryIDEntity : string;\r\ntotalDue:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.accountNumber = '';\r\nthis.billToAddressID = 0;\r\nthis.comment = '';\r\nthis.creditCardApprovalCode = '';\r\nthis.creditCardID = undefined;\r\nthis.creditCardIDEntity = '';\r\nthis.currencyRateID = undefined;\r\nthis.currencyRateIDEntity = '';\r\nthis.customerID = 0;\r\nthis.customerIDEntity = '';\r\nthis.dueDate = undefined;\r\nthis.freight = 0;\r\nthis.modifiedDate = undefined;\r\nthis.onlineOrderFlag = false;\r\nthis.orderDate = undefined;\r\nthis.purchaseOrderNumber = '';\r\nthis.revisionNumber = 0;\r\nthis.rowguid = undefined;\r\nthis.salesOrderID = 0;\r\nthis.salesOrderNumber = '';\r\nthis.salesPersonID = undefined;\r\nthis.salesPersonIDEntity = '';\r\nthis.shipDate = undefined;\r\nthis.shipMethodID = 0;\r\nthis.shipToAddressID = 0;\r\nthis.status = 0;\r\nthis.subTotal = 0;\r\nthis.taxAmt = 0;\r\nthis.territoryID = undefined;\r\nthis.territoryIDEntity = '';\r\nthis.totalDue = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(accountNumber : string,billToAddressID : number,comment : string,creditCardApprovalCode : string,creditCardID : any,currencyRateID : any,customerID : number,dueDate : any,freight : number,modifiedDate : any,onlineOrderFlag : boolean,orderDate : any,purchaseOrderNumber : string,revisionNumber : number,rowguid : any,salesOrderID : number,salesOrderNumber : string,salesPersonID : any,shipDate : any,shipMethodID : number,shipToAddressID : number,status : number,subTotal : number,taxAmt : number,territoryID : any,totalDue : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.accountNumber = accountNumber;\r\nthis.billToAddressID = billToAddressID;\r\nthis.comment = comment;\r\nthis.creditCardApprovalCode = creditCardApprovalCode;\r\nthis.creditCardID = creditCardID;\r\nthis.currencyRateID = currencyRateID;\r\nthis.customerID = customerID;\r\nthis.dueDate = dueDate;\r\nthis.freight = freight;\r\nthis.modifiedDate = modifiedDate;\r\nthis.onlineOrderFlag = onlineOrderFlag;\r\nthis.orderDate = orderDate;\r\nthis.purchaseOrderNumber = purchaseOrderNumber;\r\nthis.revisionNumber = revisionNumber;\r\nthis.rowguid = rowguid;\r\nthis.salesOrderID = salesOrderID;\r\nthis.salesOrderNumber = salesOrderNumber;\r\nthis.salesPersonID = salesPersonID;\r\nthis.shipDate = shipDate;\r\nthis.shipMethodID = shipMethodID;\r\nthis.shipToAddressID = shipToAddressID;\r\nthis.status = status;\r\nthis.subTotal = subTotal;\r\nthis.taxAmt = taxAmt;\r\nthis.territoryID = territoryID;\r\nthis.totalDue = totalDue;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class SalesPersonClientRequestModel {\r\n\t\t\t\tbonus:number;\r\nbusinessEntityID:number;\r\ncommissionPct:number;\r\nmodifiedDate:any;\r\nrowguid:any;\r\nsalesLastYear:number;\r\nsalesQuota:any;\r\nsalesYTD:number;\r\nterritoryID:any;\r\nterritoryIDEntity : string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.bonus = 0;\r\nthis.businessEntityID = 0;\r\nthis.commissionPct = 0;\r\nthis.modifiedDate = undefined;\r\nthis.rowguid = undefined;\r\nthis.salesLastYear = 0;\r\nthis.salesQuota = undefined;\r\nthis.salesYTD = 0;\r\nthis.territoryID = undefined;\r\nthis.territoryIDEntity = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(bonus : number,businessEntityID : number,commissionPct : number,modifiedDate : any,rowguid : any,salesLastYear : number,salesQuota : any,salesYTD : number,territoryID : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.bonus = bonus;\r\nthis.businessEntityID = businessEntityID;\r\nthis.commissionPct = commissionPct;\r\nthis.modifiedDate = modifiedDate;\r\nthis.rowguid = rowguid;\r\nthis.salesLastYear = salesLastYear;\r\nthis.salesQuota = salesQuota;\r\nthis.salesYTD = salesYTD;\r\nthis.territoryID = territoryID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class SalesPersonClientResponseModel {\r\n\t\t\t\tbonus:number;\r\nbusinessEntityID:number;\r\ncommissionPct:number;\r\nmodifiedDate:any;\r\nrowguid:any;\r\nsalesLastYear:number;\r\nsalesQuota:any;\r\nsalesYTD:number;\r\nterritoryID:any;\r\nterritoryIDEntity : string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.bonus = 0;\r\nthis.businessEntityID = 0;\r\nthis.commissionPct = 0;\r\nthis.modifiedDate = undefined;\r\nthis.rowguid = undefined;\r\nthis.salesLastYear = 0;\r\nthis.salesQuota = undefined;\r\nthis.salesYTD = 0;\r\nthis.territoryID = undefined;\r\nthis.territoryIDEntity = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(bonus : number,businessEntityID : number,commissionPct : number,modifiedDate : any,rowguid : any,salesLastYear : number,salesQuota : any,salesYTD : number,territoryID : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.bonus = bonus;\r\nthis.businessEntityID = businessEntityID;\r\nthis.commissionPct = commissionPct;\r\nthis.modifiedDate = modifiedDate;\r\nthis.rowguid = rowguid;\r\nthis.salesLastYear = salesLastYear;\r\nthis.salesQuota = salesQuota;\r\nthis.salesYTD = salesYTD;\r\nthis.territoryID = territoryID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class SalesReasonClientRequestModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nreasonType:string;\r\nsalesReasonID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.reasonType = '';\r\nthis.salesReasonID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,reasonType : string,salesReasonID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.reasonType = reasonType;\r\nthis.salesReasonID = salesReasonID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class SalesReasonClientResponseModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nreasonType:string;\r\nsalesReasonID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.reasonType = '';\r\nthis.salesReasonID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,reasonType : string,salesReasonID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.reasonType = reasonType;\r\nthis.salesReasonID = salesReasonID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class SalesTaxRateClientRequestModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nsalesTaxRateID:number;\r\nstateProvinceID:number;\r\ntaxRate:number;\r\ntaxType:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.salesTaxRateID = 0;\r\nthis.stateProvinceID = 0;\r\nthis.taxRate = 0;\r\nthis.taxType = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,rowguid : any,salesTaxRateID : number,stateProvinceID : number,taxRate : number,taxType : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.salesTaxRateID = salesTaxRateID;\r\nthis.stateProvinceID = stateProvinceID;\r\nthis.taxRate = taxRate;\r\nthis.taxType = taxType;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class SalesTaxRateClientResponseModel {\r\n\t\t\t\tmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nsalesTaxRateID:number;\r\nstateProvinceID:number;\r\ntaxRate:number;\r\ntaxType:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.salesTaxRateID = 0;\r\nthis.stateProvinceID = 0;\r\nthis.taxRate = 0;\r\nthis.taxType = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(modifiedDate : any,name : string,rowguid : any,salesTaxRateID : number,stateProvinceID : number,taxRate : number,taxType : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.salesTaxRateID = salesTaxRateID;\r\nthis.stateProvinceID = stateProvinceID;\r\nthis.taxRate = taxRate;\r\nthis.taxType = taxType;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class SalesTerritoryClientRequestModel {\r\n\t\t\t\tcostLastYear:number;\r\ncostYTD:number;\r\ncountryRegionCode:string;\r\nmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nsalesLastYear:number;\r\nsalesYTD:number;\r\nterritoryID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.costLastYear = 0;\r\nthis.costYTD = 0;\r\nthis.countryRegionCode = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.salesLastYear = 0;\r\nthis.salesYTD = 0;\r\nthis.territoryID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(costLastYear : number,costYTD : number,countryRegionCode : string,modifiedDate : any,name : string,rowguid : any,salesLastYear : number,salesYTD : number,territoryID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.costLastYear = costLastYear;\r\nthis.costYTD = costYTD;\r\nthis.countryRegionCode = countryRegionCode;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.salesLastYear = salesLastYear;\r\nthis.salesYTD = salesYTD;\r\nthis.territoryID = territoryID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class SalesTerritoryClientResponseModel {\r\n\t\t\t\tcostLastYear:number;\r\ncostYTD:number;\r\ncountryRegionCode:string;\r\nmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nsalesLastYear:number;\r\nsalesYTD:number;\r\nterritoryID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.costLastYear = 0;\r\nthis.costYTD = 0;\r\nthis.countryRegionCode = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.salesLastYear = 0;\r\nthis.salesYTD = 0;\r\nthis.territoryID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(costLastYear : number,costYTD : number,countryRegionCode : string,modifiedDate : any,name : string,rowguid : any,salesLastYear : number,salesYTD : number,territoryID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.costLastYear = costLastYear;\r\nthis.costYTD = costYTD;\r\nthis.countryRegionCode = countryRegionCode;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.salesLastYear = salesLastYear;\r\nthis.salesYTD = salesYTD;\r\nthis.territoryID = territoryID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class ShoppingCartItemClientRequestModel {\r\n\t\t\t\tdateCreated:any;\r\nmodifiedDate:any;\r\nproductID:number;\r\nquantity:number;\r\nshoppingCartID:string;\r\nshoppingCartItemID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.dateCreated = undefined;\r\nthis.modifiedDate = undefined;\r\nthis.productID = 0;\r\nthis.quantity = 0;\r\nthis.shoppingCartID = '';\r\nthis.shoppingCartItemID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(dateCreated : any,modifiedDate : any,productID : number,quantity : number,shoppingCartID : string,shoppingCartItemID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.dateCreated = dateCreated;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productID = productID;\r\nthis.quantity = quantity;\r\nthis.shoppingCartID = shoppingCartID;\r\nthis.shoppingCartItemID = shoppingCartItemID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class ShoppingCartItemClientResponseModel {\r\n\t\t\t\tdateCreated:any;\r\nmodifiedDate:any;\r\nproductID:number;\r\nquantity:number;\r\nshoppingCartID:string;\r\nshoppingCartItemID:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.dateCreated = undefined;\r\nthis.modifiedDate = undefined;\r\nthis.productID = 0;\r\nthis.quantity = 0;\r\nthis.shoppingCartID = '';\r\nthis.shoppingCartItemID = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(dateCreated : any,modifiedDate : any,productID : number,quantity : number,shoppingCartID : string,shoppingCartItemID : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.dateCreated = dateCreated;\r\nthis.modifiedDate = modifiedDate;\r\nthis.productID = productID;\r\nthis.quantity = quantity;\r\nthis.shoppingCartID = shoppingCartID;\r\nthis.shoppingCartItemID = shoppingCartItemID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class SpecialOfferClientRequestModel {\r\n\t\t\t\tcategory:string;\r\ndescription:string;\r\ndiscountPct:number;\r\nendDate:any;\r\nmaxQty:any;\r\nminQty:number;\r\nmodifiedDate:any;\r\nrowguid:any;\r\nspecialOfferID:number;\r\nstartDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.category = '';\r\nthis.description = '';\r\nthis.discountPct = 0;\r\nthis.endDate = undefined;\r\nthis.maxQty = undefined;\r\nthis.minQty = 0;\r\nthis.modifiedDate = undefined;\r\nthis.rowguid = undefined;\r\nthis.specialOfferID = 0;\r\nthis.startDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(category : string,description : string,discountPct : number,endDate : any,maxQty : any,minQty : number,modifiedDate : any,rowguid : any,specialOfferID : number,startDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.category = category;\r\nthis.description = description;\r\nthis.discountPct = discountPct;\r\nthis.endDate = endDate;\r\nthis.maxQty = maxQty;\r\nthis.minQty = minQty;\r\nthis.modifiedDate = modifiedDate;\r\nthis.rowguid = rowguid;\r\nthis.specialOfferID = specialOfferID;\r\nthis.startDate = startDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class SpecialOfferClientResponseModel {\r\n\t\t\t\tcategory:string;\r\ndescription:string;\r\ndiscountPct:number;\r\nendDate:any;\r\nmaxQty:any;\r\nminQty:number;\r\nmodifiedDate:any;\r\nrowguid:any;\r\nspecialOfferID:number;\r\nstartDate:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.category = '';\r\nthis.description = '';\r\nthis.discountPct = 0;\r\nthis.endDate = undefined;\r\nthis.maxQty = undefined;\r\nthis.minQty = 0;\r\nthis.modifiedDate = undefined;\r\nthis.rowguid = undefined;\r\nthis.specialOfferID = 0;\r\nthis.startDate = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(category : string,description : string,discountPct : number,endDate : any,maxQty : any,minQty : number,modifiedDate : any,rowguid : any,specialOfferID : number,startDate : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.category = category;\r\nthis.description = description;\r\nthis.discountPct = discountPct;\r\nthis.endDate = endDate;\r\nthis.maxQty = maxQty;\r\nthis.minQty = minQty;\r\nthis.modifiedDate = modifiedDate;\r\nthis.rowguid = rowguid;\r\nthis.specialOfferID = specialOfferID;\r\nthis.startDate = startDate;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class StoreClientRequestModel {\r\n\t\t\t\tbusinessEntityID:number;\r\ndemographic:string;\r\nmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nsalesPersonID:any;\r\nsalesPersonIDEntity : string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.businessEntityID = 0;\r\nthis.demographic = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.salesPersonID = undefined;\r\nthis.salesPersonIDEntity = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(businessEntityID : number,demographic : string,modifiedDate : any,name : string,rowguid : any,salesPersonID : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.businessEntityID = businessEntityID;\r\nthis.demographic = demographic;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.salesPersonID = salesPersonID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class StoreClientResponseModel {\r\n\t\t\t\tbusinessEntityID:number;\r\ndemographic:string;\r\nmodifiedDate:any;\r\nname:string;\r\nrowguid:any;\r\nsalesPersonID:any;\r\nsalesPersonIDEntity : string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.businessEntityID = 0;\r\nthis.demographic = '';\r\nthis.modifiedDate = undefined;\r\nthis.name = '';\r\nthis.rowguid = undefined;\r\nthis.salesPersonID = undefined;\r\nthis.salesPersonIDEntity = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(businessEntityID : number,demographic : string,modifiedDate : any,name : string,rowguid : any,salesPersonID : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.businessEntityID = businessEntityID;\r\nthis.demographic = demographic;\r\nthis.modifiedDate = modifiedDate;\r\nthis.name = name;\r\nthis.rowguid = rowguid;\r\nthis.salesPersonID = salesPersonID;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n/*<Codenesium>\r\n    <Hash>1b8c738b9bb5cf3d8f7420f20ab393d8</Hash>\r\n</Codenesium>*/","export default class AWBuildVersionViewModel {\r\n  database_Version: string;\r\n  modifiedDate: any;\r\n  systemInformationID: number;\r\n  versionDate: any;\r\n\r\n  constructor() {\r\n    this.database_Version = '';\r\n    this.modifiedDate = undefined;\r\n    this.systemInformationID = 0;\r\n    this.versionDate = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    database_Version: string,\r\n    modifiedDate: any,\r\n    systemInformationID: number,\r\n    versionDate: any\r\n  ): void {\r\n    this.database_Version = database_Version;\r\n    this.modifiedDate = modifiedDate;\r\n    this.systemInformationID = systemInformationID;\r\n    this.versionDate = versionDate;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3e47eebeb8a935e3748ac4f60678ec49</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport AWBuildVersionViewModel from './aWBuildVersionViewModel';\r\n\r\nexport default class AWBuildVersionMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.AWBuildVersionClientResponseModel\r\n  ): AWBuildVersionViewModel {\r\n    let response = new AWBuildVersionViewModel();\r\n    response.setProperties(\r\n      dto.database_Version,\r\n      dto.modifiedDate,\r\n      dto.systemInformationID,\r\n      dto.versionDate\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: AWBuildVersionViewModel\r\n  ): Api.AWBuildVersionClientRequestModel {\r\n    let response = new Api.AWBuildVersionClientRequestModel();\r\n    response.setProperties(\r\n      model.database_Version,\r\n      model.modifiedDate,\r\n      model.systemInformationID,\r\n      model.versionDate\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5a525cfa70ae9993554ba089fff2c4b0</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport AWBuildVersionMapper from './aWBuildVersionMapper';\r\nimport AWBuildVersionViewModel from './aWBuildVersionViewModel';\r\n\r\ninterface Props {\r\n  model?: AWBuildVersionViewModel;\r\n}\r\n\r\nconst AWBuildVersionCreateDisplay: React.SFC<\r\n  FormikProps<AWBuildVersionViewModel>\r\n> = (props: FormikProps<AWBuildVersionViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.AWBuildVersionClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof AWBuildVersionViewModel] &&\r\n      props.errors[name as keyof AWBuildVersionViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof AWBuildVersionViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('database_Version')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Database Version\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"database_Version\"\r\n            className={\r\n              errorExistForField('database_Version')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('database_Version') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('database_Version')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('versionDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          VersionDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"versionDate\"\r\n            className={\r\n              errorExistForField('versionDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('versionDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('versionDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AWBuildVersionCreate = withFormik<Props, AWBuildVersionViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new AWBuildVersionViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.database_Version,\r\n        props.model!.modifiedDate,\r\n        props.model!.systemInformationID,\r\n        props.model!.versionDate\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<AWBuildVersionViewModel> = {};\r\n\r\n    if (values.database_Version == '') {\r\n      errors.database_Version = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.versionDate == undefined) {\r\n      errors.versionDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new AWBuildVersionMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'awbuildversions',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.AWBuildVersionClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'AWBuildVersionCreate',\r\n})(AWBuildVersionCreateDisplay);\r\n\r\ninterface AWBuildVersionCreateComponentProps {}\r\n\r\ninterface AWBuildVersionCreateComponentState {\r\n  model?: AWBuildVersionViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class AWBuildVersionCreateComponent extends React.Component<\r\n  AWBuildVersionCreateComponentProps,\r\n  AWBuildVersionCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <AWBuildVersionCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f1cef3a57c5bf0ab66670496017b42b7</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport AWBuildVersionMapper from './aWBuildVersionMapper';\r\nimport AWBuildVersionViewModel from './aWBuildVersionViewModel';\r\n\r\ninterface Props {\r\n  model?: AWBuildVersionViewModel;\r\n}\r\n\r\nconst AWBuildVersionDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"database_Version\" className={'col-sm-2 col-form-label'}>\r\n          Database Version\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.database_Version)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"systemInformationID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          SystemInformationID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.systemInformationID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"versionDate\" className={'col-sm-2 col-form-label'}>\r\n          VersionDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.versionDate)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  systemInformationID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface AWBuildVersionDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface AWBuildVersionDetailComponentState {\r\n  model?: AWBuildVersionViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class AWBuildVersionDetailComponent extends React.Component<\r\n  AWBuildVersionDetailComponentProps,\r\n  AWBuildVersionDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'awbuildversions/' +\r\n          this.props.match.params.systemInformationID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AWBuildVersionClientResponseModel;\r\n\r\n          let mapper = new AWBuildVersionMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <AWBuildVersionDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>eeb93dfa011d910b30e1da6f45e89e49</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport AWBuildVersionViewModel from './aWBuildVersionViewModel';\r\nimport AWBuildVersionMapper from './aWBuildVersionMapper';\r\n\r\ninterface Props {\r\n  model?: AWBuildVersionViewModel;\r\n}\r\n\r\nconst AWBuildVersionEditDisplay = (\r\n  props: FormikProps<AWBuildVersionViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.AWBuildVersionClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof AWBuildVersionViewModel] &&\r\n      props.errors[name as keyof AWBuildVersionViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof AWBuildVersionViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('database_Version')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Database Version\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"database_Version\"\r\n            className={\r\n              errorExistForField('database_Version')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('database_Version') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('database_Version')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('systemInformationID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SystemInformationID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"systemInformationID\"\r\n            className={\r\n              errorExistForField('systemInformationID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('systemInformationID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('systemInformationID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('versionDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          VersionDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"versionDate\"\r\n            className={\r\n              errorExistForField('versionDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('versionDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('versionDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AWBuildVersionUpdate = withFormik<Props, AWBuildVersionViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new AWBuildVersionViewModel();\r\n    response.setProperties(\r\n      props.model!.database_Version,\r\n      props.model!.modifiedDate,\r\n      props.model!.systemInformationID,\r\n      props.model!.versionDate\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<AWBuildVersionViewModel> = {};\r\n\r\n    if (values.database_Version == '') {\r\n      errors.database_Version = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.systemInformationID == 0) {\r\n      errors.systemInformationID = 'Required';\r\n    }\r\n    if (values.versionDate == undefined) {\r\n      errors.versionDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new AWBuildVersionMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'awbuildversions/' + values.systemInformationID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.AWBuildVersionClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'AWBuildVersionEdit',\r\n})(AWBuildVersionEditDisplay);\r\n\r\ninterface IParams {\r\n  systemInformationID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface AWBuildVersionEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface AWBuildVersionEditComponentState {\r\n  model?: AWBuildVersionViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class AWBuildVersionEditComponent extends React.Component<\r\n  AWBuildVersionEditComponentProps,\r\n  AWBuildVersionEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'awbuildversions/' +\r\n          this.props.match.params.systemInformationID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AWBuildVersionClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new AWBuildVersionMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <AWBuildVersionUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8887cd793910059eab4ac600146e20d6</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport AWBuildVersionMapper from './aWBuildVersionMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport AWBuildVersionViewModel from './aWBuildVersionViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface AWBuildVersionSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface AWBuildVersionSearchComponentState {\r\n  records: Array<AWBuildVersionViewModel>;\r\n  filteredRecords: Array<AWBuildVersionViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class AWBuildVersionSearchComponent extends React.Component<\r\n  AWBuildVersionSearchComponentProps,\r\n  AWBuildVersionSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.AWBuildVersionClientResponseModel>(),\r\n    filteredRecords: new Array<Api.AWBuildVersionClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.AWBuildVersionClientResponseModel) {\r\n    this.props.history.push('/awbuildversions/edit/' + row.systemInformationID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.AWBuildVersionClientResponseModel) {\r\n    this.props.history.push('/awbuildversions/' + row.systemInformationID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/awbuildversions/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.AWBuildVersionClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'awbuildversions/' + row.systemInformationID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'awbuildversions' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.AWBuildVersionClientResponseModel\r\n          >;\r\n          let viewModels: Array<AWBuildVersionViewModel> = [];\r\n          let mapper = new AWBuildVersionMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<AWBuildVersionViewModel>(),\r\n            filteredRecords: new Array<AWBuildVersionViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'AWBuildVersion',\r\n                columns: [\r\n                  {\r\n                    Header: 'Database Version',\r\n                    accessor: 'database_Version',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.database_Version)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SystemInformationID',\r\n                    accessor: 'systemInformationID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.systemInformationID)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'VersionDate',\r\n                    accessor: 'versionDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.versionDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.AWBuildVersionClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.AWBuildVersionClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.AWBuildVersionClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9e12dc90917e28d68e947896fc250b01</Hash>\r\n</Codenesium>*/","export default class DatabaseLogViewModel {\r\n  databaseLogID: number;\r\n  databaseUser: string;\r\n  postTime: any;\r\n  schema: string;\r\n  tsql: string;\r\n  xmlEvent: string;\r\n\r\n  constructor() {\r\n    this.databaseLogID = 0;\r\n    this.databaseUser = '';\r\n    this.postTime = undefined;\r\n    this.schema = '';\r\n    this.tsql = '';\r\n    this.xmlEvent = '';\r\n  }\r\n\r\n  setProperties(\r\n    databaseLogID: number,\r\n    databaseUser: string,\r\n    postTime: any,\r\n    schema: string,\r\n    tsql: string,\r\n    xmlEvent: string\r\n  ): void {\r\n    this.databaseLogID = databaseLogID;\r\n    this.databaseUser = databaseUser;\r\n    this.postTime = postTime;\r\n    this.schema = schema;\r\n    this.tsql = tsql;\r\n    this.xmlEvent = xmlEvent;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>95081dd7d424254115570029e2cb8f63</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport DatabaseLogViewModel from './databaseLogViewModel';\r\n\r\nexport default class DatabaseLogMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.DatabaseLogClientResponseModel\r\n  ): DatabaseLogViewModel {\r\n    let response = new DatabaseLogViewModel();\r\n    response.setProperties(\r\n      dto.databaseLogID,\r\n      dto.databaseUser,\r\n      dto.postTime,\r\n      dto.schema,\r\n      dto.tsql,\r\n      dto.xmlEvent\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: DatabaseLogViewModel\r\n  ): Api.DatabaseLogClientRequestModel {\r\n    let response = new Api.DatabaseLogClientRequestModel();\r\n    response.setProperties(\r\n      model.databaseLogID,\r\n      model.databaseUser,\r\n      model.postTime,\r\n      model.schema,\r\n      model.tsql,\r\n      model.xmlEvent\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>33fcb2889a9c378bbb0891d2d2e45cfb</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport DatabaseLogMapper from './databaseLogMapper';\r\nimport DatabaseLogViewModel from './databaseLogViewModel';\r\n\r\ninterface Props {\r\n  model?: DatabaseLogViewModel;\r\n}\r\n\r\nconst DatabaseLogCreateDisplay: React.SFC<FormikProps<DatabaseLogViewModel>> = (\r\n  props: FormikProps<DatabaseLogViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.DatabaseLogClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof DatabaseLogViewModel] &&\r\n      props.errors[name as keyof DatabaseLogViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof DatabaseLogViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('databaseUser')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DatabaseUser\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"databaseUser\"\r\n            className={\r\n              errorExistForField('databaseUser')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('databaseUser') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('databaseUser')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('postTime')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PostTime\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"postTime\"\r\n            className={\r\n              errorExistForField('postTime')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('postTime') && (\r\n            <small className=\"text-danger\">{errorsForField('postTime')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('schema')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Schema\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"schema\"\r\n            className={\r\n              errorExistForField('schema')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('schema') && (\r\n            <small className=\"text-danger\">{errorsForField('schema')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('tsql')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TSQL\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"tsql\"\r\n            className={\r\n              errorExistForField('tsql')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('tsql') && (\r\n            <small className=\"text-danger\">{errorsForField('tsql')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('xmlEvent')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          XmlEvent\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"xmlEvent\"\r\n            className={\r\n              errorExistForField('xmlEvent')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('xmlEvent') && (\r\n            <small className=\"text-danger\">{errorsForField('xmlEvent')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DatabaseLogCreate = withFormik<Props, DatabaseLogViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new DatabaseLogViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.databaseLogID,\r\n        props.model!.databaseUser,\r\n        props.model!.postTime,\r\n        props.model!.schema,\r\n        props.model!.tsql,\r\n        props.model!.xmlEvent\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<DatabaseLogViewModel> = {};\r\n\r\n    if (values.databaseUser == '') {\r\n      errors.databaseUser = 'Required';\r\n    }\r\n    if (values.postTime == undefined) {\r\n      errors.postTime = 'Required';\r\n    }\r\n    if (values.tsql == '') {\r\n      errors.tsql = 'Required';\r\n    }\r\n    if (values.xmlEvent == '') {\r\n      errors.xmlEvent = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new DatabaseLogMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'databaselogs',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.DatabaseLogClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'DatabaseLogCreate',\r\n})(DatabaseLogCreateDisplay);\r\n\r\ninterface DatabaseLogCreateComponentProps {}\r\n\r\ninterface DatabaseLogCreateComponentState {\r\n  model?: DatabaseLogViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class DatabaseLogCreateComponent extends React.Component<\r\n  DatabaseLogCreateComponentProps,\r\n  DatabaseLogCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <DatabaseLogCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>dc10cfbd1cb5e6a3c8af15fca6b94e94</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport DatabaseLogMapper from './databaseLogMapper';\r\nimport DatabaseLogViewModel from './databaseLogViewModel';\r\n\r\ninterface Props {\r\n  model?: DatabaseLogViewModel;\r\n}\r\n\r\nconst DatabaseLogDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"databaseLogID\" className={'col-sm-2 col-form-label'}>\r\n          DatabaseLogID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.databaseLogID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"databaseUser\" className={'col-sm-2 col-form-label'}>\r\n          DatabaseUser\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.databaseUser)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"postTime\" className={'col-sm-2 col-form-label'}>\r\n          PostTime\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.postTime)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"schema\" className={'col-sm-2 col-form-label'}>\r\n          Schema\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.schema)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"tsql\" className={'col-sm-2 col-form-label'}>\r\n          TSQL\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.tsql)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"xmlEvent\" className={'col-sm-2 col-form-label'}>\r\n          XmlEvent\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.xmlEvent)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  databaseLogID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface DatabaseLogDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface DatabaseLogDetailComponentState {\r\n  model?: DatabaseLogViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class DatabaseLogDetailComponent extends React.Component<\r\n  DatabaseLogDetailComponentProps,\r\n  DatabaseLogDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'databaselogs/' +\r\n          this.props.match.params.databaseLogID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.DatabaseLogClientResponseModel;\r\n\r\n          let mapper = new DatabaseLogMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <DatabaseLogDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>88289c0c54dd89b02f7de94113d5af7d</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport DatabaseLogViewModel from './databaseLogViewModel';\r\nimport DatabaseLogMapper from './databaseLogMapper';\r\n\r\ninterface Props {\r\n  model?: DatabaseLogViewModel;\r\n}\r\n\r\nconst DatabaseLogEditDisplay = (props: FormikProps<DatabaseLogViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.DatabaseLogClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof DatabaseLogViewModel] &&\r\n      props.errors[name as keyof DatabaseLogViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof DatabaseLogViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('databaseLogID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DatabaseLogID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"databaseLogID\"\r\n            className={\r\n              errorExistForField('databaseLogID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('databaseLogID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('databaseLogID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('databaseUser')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DatabaseUser\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"databaseUser\"\r\n            className={\r\n              errorExistForField('databaseUser')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('databaseUser') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('databaseUser')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('postTime')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PostTime\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"postTime\"\r\n            className={\r\n              errorExistForField('postTime')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('postTime') && (\r\n            <small className=\"text-danger\">{errorsForField('postTime')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('schema')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Schema\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"schema\"\r\n            className={\r\n              errorExistForField('schema')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('schema') && (\r\n            <small className=\"text-danger\">{errorsForField('schema')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('tsql')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TSQL\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"tsql\"\r\n            className={\r\n              errorExistForField('tsql')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('tsql') && (\r\n            <small className=\"text-danger\">{errorsForField('tsql')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('xmlEvent')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          XmlEvent\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"xmlEvent\"\r\n            className={\r\n              errorExistForField('xmlEvent')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('xmlEvent') && (\r\n            <small className=\"text-danger\">{errorsForField('xmlEvent')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DatabaseLogUpdate = withFormik<Props, DatabaseLogViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new DatabaseLogViewModel();\r\n    response.setProperties(\r\n      props.model!.databaseLogID,\r\n      props.model!.databaseUser,\r\n      props.model!.postTime,\r\n      props.model!.schema,\r\n      props.model!.tsql,\r\n      props.model!.xmlEvent\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<DatabaseLogViewModel> = {};\r\n\r\n    if (values.databaseLogID == 0) {\r\n      errors.databaseLogID = 'Required';\r\n    }\r\n    if (values.databaseUser == '') {\r\n      errors.databaseUser = 'Required';\r\n    }\r\n    if (values.postTime == undefined) {\r\n      errors.postTime = 'Required';\r\n    }\r\n    if (values.tsql == '') {\r\n      errors.tsql = 'Required';\r\n    }\r\n    if (values.xmlEvent == '') {\r\n      errors.xmlEvent = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new DatabaseLogMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'databaselogs/' + values.databaseLogID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.DatabaseLogClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'DatabaseLogEdit',\r\n})(DatabaseLogEditDisplay);\r\n\r\ninterface IParams {\r\n  databaseLogID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface DatabaseLogEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface DatabaseLogEditComponentState {\r\n  model?: DatabaseLogViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class DatabaseLogEditComponent extends React.Component<\r\n  DatabaseLogEditComponentProps,\r\n  DatabaseLogEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'databaselogs/' +\r\n          this.props.match.params.databaseLogID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.DatabaseLogClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new DatabaseLogMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <DatabaseLogUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>62c9a6a322d95c82a79f44340fd65c12</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport DatabaseLogMapper from './databaseLogMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport DatabaseLogViewModel from './databaseLogViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface DatabaseLogSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface DatabaseLogSearchComponentState {\r\n  records: Array<DatabaseLogViewModel>;\r\n  filteredRecords: Array<DatabaseLogViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class DatabaseLogSearchComponent extends React.Component<\r\n  DatabaseLogSearchComponentProps,\r\n  DatabaseLogSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.DatabaseLogClientResponseModel>(),\r\n    filteredRecords: new Array<Api.DatabaseLogClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.DatabaseLogClientResponseModel) {\r\n    this.props.history.push('/databaselogs/edit/' + row.databaseLogID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.DatabaseLogClientResponseModel) {\r\n    this.props.history.push('/databaselogs/' + row.databaseLogID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/databaselogs/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.DatabaseLogClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'databaselogs/' + row.databaseLogID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'databaselogs' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.DatabaseLogClientResponseModel>;\r\n          let viewModels: Array<DatabaseLogViewModel> = [];\r\n          let mapper = new DatabaseLogMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<DatabaseLogViewModel>(),\r\n            filteredRecords: new Array<DatabaseLogViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'DatabaseLog',\r\n                columns: [\r\n                  {\r\n                    Header: 'DatabaseLogID',\r\n                    accessor: 'databaseLogID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.databaseLogID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'DatabaseUser',\r\n                    accessor: 'databaseUser',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.databaseUser)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PostTime',\r\n                    accessor: 'postTime',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.postTime)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Schema',\r\n                    accessor: 'schema',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.schema)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TSQL',\r\n                    accessor: 'tsql',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.tsql)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'XmlEvent',\r\n                    accessor: 'xmlEvent',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.xmlEvent)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.DatabaseLogClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.DatabaseLogClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.DatabaseLogClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>63d13c662139aa70712d995064debb96</Hash>\r\n</Codenesium>*/","export default class ErrorLogViewModel {\r\n  errorLine: any;\r\n  errorLogID: number;\r\n  errorMessage: string;\r\n  errorNumber: number;\r\n  errorProcedure: string;\r\n  errorSeverity: any;\r\n  errorState: any;\r\n  errorTime: any;\r\n  userName: string;\r\n\r\n  constructor() {\r\n    this.errorLine = undefined;\r\n    this.errorLogID = 0;\r\n    this.errorMessage = '';\r\n    this.errorNumber = 0;\r\n    this.errorProcedure = '';\r\n    this.errorSeverity = undefined;\r\n    this.errorState = undefined;\r\n    this.errorTime = undefined;\r\n    this.userName = '';\r\n  }\r\n\r\n  setProperties(\r\n    errorLine: any,\r\n    errorLogID: number,\r\n    errorMessage: string,\r\n    errorNumber: number,\r\n    errorProcedure: string,\r\n    errorSeverity: any,\r\n    errorState: any,\r\n    errorTime: any,\r\n    userName: string\r\n  ): void {\r\n    this.errorLine = errorLine;\r\n    this.errorLogID = errorLogID;\r\n    this.errorMessage = errorMessage;\r\n    this.errorNumber = errorNumber;\r\n    this.errorProcedure = errorProcedure;\r\n    this.errorSeverity = errorSeverity;\r\n    this.errorState = errorState;\r\n    this.errorTime = errorTime;\r\n    this.userName = userName;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e52556941cd7dd5c14673e7b769f5bba</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ErrorLogViewModel from './errorLogViewModel';\r\n\r\nexport default class ErrorLogMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ErrorLogClientResponseModel\r\n  ): ErrorLogViewModel {\r\n    let response = new ErrorLogViewModel();\r\n    response.setProperties(\r\n      dto.errorLine,\r\n      dto.errorLogID,\r\n      dto.errorMessage,\r\n      dto.errorNumber,\r\n      dto.errorProcedure,\r\n      dto.errorSeverity,\r\n      dto.errorState,\r\n      dto.errorTime,\r\n      dto.userName\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ErrorLogViewModel\r\n  ): Api.ErrorLogClientRequestModel {\r\n    let response = new Api.ErrorLogClientRequestModel();\r\n    response.setProperties(\r\n      model.errorLine,\r\n      model.errorLogID,\r\n      model.errorMessage,\r\n      model.errorNumber,\r\n      model.errorProcedure,\r\n      model.errorSeverity,\r\n      model.errorState,\r\n      model.errorTime,\r\n      model.userName\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e5f726f5e8babfc9aa18bd44b86871c6</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ErrorLogMapper from './errorLogMapper';\r\nimport ErrorLogViewModel from './errorLogViewModel';\r\n\r\ninterface Props {\r\n  model?: ErrorLogViewModel;\r\n}\r\n\r\nconst ErrorLogCreateDisplay: React.SFC<FormikProps<ErrorLogViewModel>> = (\r\n  props: FormikProps<ErrorLogViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.ErrorLogClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ErrorLogViewModel] &&\r\n      props.errors[name as keyof ErrorLogViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ErrorLogViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorLine')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorLine\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorLine\"\r\n            className={\r\n              errorExistForField('errorLine')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorLine') && (\r\n            <small className=\"text-danger\">{errorsForField('errorLine')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorMessage')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorMessage\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorMessage\"\r\n            className={\r\n              errorExistForField('errorMessage')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorMessage') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorMessage')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorNumber\"\r\n            className={\r\n              errorExistForField('errorNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorProcedure')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorProcedure\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorProcedure\"\r\n            className={\r\n              errorExistForField('errorProcedure')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorProcedure') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorProcedure')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorSeverity')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorSeverity\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorSeverity\"\r\n            className={\r\n              errorExistForField('errorSeverity')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorSeverity') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorSeverity')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorState')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorState\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorState\"\r\n            className={\r\n              errorExistForField('errorState')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorState') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorState')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorTime')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorTime\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorTime\"\r\n            className={\r\n              errorExistForField('errorTime')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorTime') && (\r\n            <small className=\"text-danger\">{errorsForField('errorTime')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('userName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          UserName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"userName\"\r\n            className={\r\n              errorExistForField('userName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('userName') && (\r\n            <small className=\"text-danger\">{errorsForField('userName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ErrorLogCreate = withFormik<Props, ErrorLogViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ErrorLogViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.errorLine,\r\n        props.model!.errorLogID,\r\n        props.model!.errorMessage,\r\n        props.model!.errorNumber,\r\n        props.model!.errorProcedure,\r\n        props.model!.errorSeverity,\r\n        props.model!.errorState,\r\n        props.model!.errorTime,\r\n        props.model!.userName\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ErrorLogViewModel> = {};\r\n\r\n    if (values.errorMessage == '') {\r\n      errors.errorMessage = 'Required';\r\n    }\r\n    if (values.errorNumber == 0) {\r\n      errors.errorNumber = 'Required';\r\n    }\r\n    if (values.errorTime == undefined) {\r\n      errors.errorTime = 'Required';\r\n    }\r\n    if (values.userName == '') {\r\n      errors.userName = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ErrorLogMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'errorlogs',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ErrorLogClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ErrorLogCreate',\r\n})(ErrorLogCreateDisplay);\r\n\r\ninterface ErrorLogCreateComponentProps {}\r\n\r\ninterface ErrorLogCreateComponentState {\r\n  model?: ErrorLogViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ErrorLogCreateComponent extends React.Component<\r\n  ErrorLogCreateComponentProps,\r\n  ErrorLogCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ErrorLogCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>83f8a26552d493adc519e581b8f8b968</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ErrorLogMapper from './errorLogMapper';\r\nimport ErrorLogViewModel from './errorLogViewModel';\r\n\r\ninterface Props {\r\n  model?: ErrorLogViewModel;\r\n}\r\n\r\nconst ErrorLogDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"errorLine\" className={'col-sm-2 col-form-label'}>\r\n          ErrorLine\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.errorLine)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"errorLogID\" className={'col-sm-2 col-form-label'}>\r\n          ErrorLogID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.errorLogID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"errorMessage\" className={'col-sm-2 col-form-label'}>\r\n          ErrorMessage\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.errorMessage)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"errorNumber\" className={'col-sm-2 col-form-label'}>\r\n          ErrorNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.errorNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"errorProcedure\" className={'col-sm-2 col-form-label'}>\r\n          ErrorProcedure\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.errorProcedure)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"errorSeverity\" className={'col-sm-2 col-form-label'}>\r\n          ErrorSeverity\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.errorSeverity)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"errorState\" className={'col-sm-2 col-form-label'}>\r\n          ErrorState\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.errorState)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"errorTime\" className={'col-sm-2 col-form-label'}>\r\n          ErrorTime\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.errorTime)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"userName\" className={'col-sm-2 col-form-label'}>\r\n          UserName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.userName)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  errorLogID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ErrorLogDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ErrorLogDetailComponentState {\r\n  model?: ErrorLogViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ErrorLogDetailComponent extends React.Component<\r\n  ErrorLogDetailComponentProps,\r\n  ErrorLogDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'errorlogs/' + this.props.match.params.errorLogID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ErrorLogClientResponseModel;\r\n\r\n          let mapper = new ErrorLogMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ErrorLogDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c4c19c1e0fcef794147df9063a6b0bb8</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ErrorLogViewModel from './errorLogViewModel';\r\nimport ErrorLogMapper from './errorLogMapper';\r\n\r\ninterface Props {\r\n  model?: ErrorLogViewModel;\r\n}\r\n\r\nconst ErrorLogEditDisplay = (props: FormikProps<ErrorLogViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.ErrorLogClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ErrorLogViewModel] &&\r\n      props.errors[name as keyof ErrorLogViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ErrorLogViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorLine')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorLine\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorLine\"\r\n            className={\r\n              errorExistForField('errorLine')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorLine') && (\r\n            <small className=\"text-danger\">{errorsForField('errorLine')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorLogID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorLogID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorLogID\"\r\n            className={\r\n              errorExistForField('errorLogID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorLogID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorLogID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorMessage')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorMessage\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorMessage\"\r\n            className={\r\n              errorExistForField('errorMessage')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorMessage') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorMessage')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorNumber\"\r\n            className={\r\n              errorExistForField('errorNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorProcedure')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorProcedure\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorProcedure\"\r\n            className={\r\n              errorExistForField('errorProcedure')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorProcedure') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorProcedure')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorSeverity')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorSeverity\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorSeverity\"\r\n            className={\r\n              errorExistForField('errorSeverity')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorSeverity') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorSeverity')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorState')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorState\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorState\"\r\n            className={\r\n              errorExistForField('errorState')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorState') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('errorState')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('errorTime')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ErrorTime\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"errorTime\"\r\n            className={\r\n              errorExistForField('errorTime')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('errorTime') && (\r\n            <small className=\"text-danger\">{errorsForField('errorTime')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('userName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          UserName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"userName\"\r\n            className={\r\n              errorExistForField('userName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('userName') && (\r\n            <small className=\"text-danger\">{errorsForField('userName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ErrorLogUpdate = withFormik<Props, ErrorLogViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ErrorLogViewModel();\r\n    response.setProperties(\r\n      props.model!.errorLine,\r\n      props.model!.errorLogID,\r\n      props.model!.errorMessage,\r\n      props.model!.errorNumber,\r\n      props.model!.errorProcedure,\r\n      props.model!.errorSeverity,\r\n      props.model!.errorState,\r\n      props.model!.errorTime,\r\n      props.model!.userName\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ErrorLogViewModel> = {};\r\n\r\n    if (values.errorLogID == 0) {\r\n      errors.errorLogID = 'Required';\r\n    }\r\n    if (values.errorMessage == '') {\r\n      errors.errorMessage = 'Required';\r\n    }\r\n    if (values.errorNumber == 0) {\r\n      errors.errorNumber = 'Required';\r\n    }\r\n    if (values.errorTime == undefined) {\r\n      errors.errorTime = 'Required';\r\n    }\r\n    if (values.userName == '') {\r\n      errors.userName = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ErrorLogMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'errorlogs/' + values.errorLogID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ErrorLogClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ErrorLogEdit',\r\n})(ErrorLogEditDisplay);\r\n\r\ninterface IParams {\r\n  errorLogID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ErrorLogEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ErrorLogEditComponentState {\r\n  model?: ErrorLogViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ErrorLogEditComponent extends React.Component<\r\n  ErrorLogEditComponentProps,\r\n  ErrorLogEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'errorlogs/' + this.props.match.params.errorLogID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ErrorLogClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ErrorLogMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ErrorLogUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7adf954b413eb7d4dd39372a52905645</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ErrorLogMapper from './errorLogMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ErrorLogViewModel from './errorLogViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ErrorLogSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ErrorLogSearchComponentState {\r\n  records: Array<ErrorLogViewModel>;\r\n  filteredRecords: Array<ErrorLogViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ErrorLogSearchComponent extends React.Component<\r\n  ErrorLogSearchComponentProps,\r\n  ErrorLogSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ErrorLogClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ErrorLogClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ErrorLogClientResponseModel) {\r\n    this.props.history.push('/errorlogs/edit/' + row.errorLogID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ErrorLogClientResponseModel) {\r\n    this.props.history.push('/errorlogs/' + row.errorLogID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/errorlogs/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ErrorLogClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'errorlogs/' + row.errorLogID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'errorlogs' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.ErrorLogClientResponseModel>;\r\n          let viewModels: Array<ErrorLogViewModel> = [];\r\n          let mapper = new ErrorLogMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ErrorLogViewModel>(),\r\n            filteredRecords: new Array<ErrorLogViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ErrorLog',\r\n                columns: [\r\n                  {\r\n                    Header: 'ErrorLine',\r\n                    accessor: 'errorLine',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.errorLine)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ErrorLogID',\r\n                    accessor: 'errorLogID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.errorLogID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ErrorMessage',\r\n                    accessor: 'errorMessage',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.errorMessage)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ErrorNumber',\r\n                    accessor: 'errorNumber',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.errorNumber)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ErrorProcedure',\r\n                    accessor: 'errorProcedure',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.errorProcedure)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ErrorSeverity',\r\n                    accessor: 'errorSeverity',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.errorSeverity)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ErrorState',\r\n                    accessor: 'errorState',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.errorState)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ErrorTime',\r\n                    accessor: 'errorTime',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.errorTime)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'UserName',\r\n                    accessor: 'userName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.userName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ErrorLogClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ErrorLogClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ErrorLogClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ed05dcfa60e9a080a8412721fbd85a98</Hash>\r\n</Codenesium>*/","export default class DepartmentViewModel {\r\n  departmentID: number;\r\n  groupName: string;\r\n  modifiedDate: any;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.departmentID = 0;\r\n    this.groupName = '';\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(\r\n    departmentID: number,\r\n    groupName: string,\r\n    modifiedDate: any,\r\n    name: string\r\n  ): void {\r\n    this.departmentID = departmentID;\r\n    this.groupName = groupName;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f32253cc52a435931a21b559f06c0338</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport DepartmentViewModel from './departmentViewModel';\r\n\r\nexport default class DepartmentMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.DepartmentClientResponseModel\r\n  ): DepartmentViewModel {\r\n    let response = new DepartmentViewModel();\r\n    response.setProperties(\r\n      dto.departmentID,\r\n      dto.groupName,\r\n      dto.modifiedDate,\r\n      dto.name\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: DepartmentViewModel\r\n  ): Api.DepartmentClientRequestModel {\r\n    let response = new Api.DepartmentClientRequestModel();\r\n    response.setProperties(\r\n      model.departmentID,\r\n      model.groupName,\r\n      model.modifiedDate,\r\n      model.name\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>eaedc472518e425609478fb6ba2a516d</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport DepartmentMapper from './departmentMapper';\r\nimport DepartmentViewModel from './departmentViewModel';\r\n\r\ninterface Props {\r\n  model?: DepartmentViewModel;\r\n}\r\n\r\nconst DepartmentCreateDisplay: React.SFC<FormikProps<DepartmentViewModel>> = (\r\n  props: FormikProps<DepartmentViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.DepartmentClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof DepartmentViewModel] &&\r\n      props.errors[name as keyof DepartmentViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof DepartmentViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('groupName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          GroupName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"groupName\"\r\n            className={\r\n              errorExistForField('groupName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('groupName') && (\r\n            <small className=\"text-danger\">{errorsForField('groupName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DepartmentCreate = withFormik<Props, DepartmentViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new DepartmentViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.departmentID,\r\n        props.model!.groupName,\r\n        props.model!.modifiedDate,\r\n        props.model!.name\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<DepartmentViewModel> = {};\r\n\r\n    if (values.groupName == '') {\r\n      errors.groupName = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new DepartmentMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'departments',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.DepartmentClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'DepartmentCreate',\r\n})(DepartmentCreateDisplay);\r\n\r\ninterface DepartmentCreateComponentProps {}\r\n\r\ninterface DepartmentCreateComponentState {\r\n  model?: DepartmentViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class DepartmentCreateComponent extends React.Component<\r\n  DepartmentCreateComponentProps,\r\n  DepartmentCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <DepartmentCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>94741e934f080f128416d55c3880e539</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport DepartmentMapper from './departmentMapper';\r\nimport DepartmentViewModel from './departmentViewModel';\r\n\r\ninterface Props {\r\n  model?: DepartmentViewModel;\r\n}\r\n\r\nconst DepartmentDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"departmentID\" className={'col-sm-2 col-form-label'}>\r\n          DepartmentID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.departmentID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"groupName\" className={'col-sm-2 col-form-label'}>\r\n          GroupName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.groupName)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  departmentID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface DepartmentDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface DepartmentDetailComponentState {\r\n  model?: DepartmentViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class DepartmentDetailComponent extends React.Component<\r\n  DepartmentDetailComponentProps,\r\n  DepartmentDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'departments/' +\r\n          this.props.match.params.departmentID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.DepartmentClientResponseModel;\r\n\r\n          let mapper = new DepartmentMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <DepartmentDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>a002896f7bad40102abde88b5b050398</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport DepartmentViewModel from './departmentViewModel';\r\nimport DepartmentMapper from './departmentMapper';\r\n\r\ninterface Props {\r\n  model?: DepartmentViewModel;\r\n}\r\n\r\nconst DepartmentEditDisplay = (props: FormikProps<DepartmentViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.DepartmentClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof DepartmentViewModel] &&\r\n      props.errors[name as keyof DepartmentViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof DepartmentViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('departmentID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DepartmentID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"departmentID\"\r\n            className={\r\n              errorExistForField('departmentID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('departmentID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('departmentID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('groupName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          GroupName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"groupName\"\r\n            className={\r\n              errorExistForField('groupName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('groupName') && (\r\n            <small className=\"text-danger\">{errorsForField('groupName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DepartmentUpdate = withFormik<Props, DepartmentViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new DepartmentViewModel();\r\n    response.setProperties(\r\n      props.model!.departmentID,\r\n      props.model!.groupName,\r\n      props.model!.modifiedDate,\r\n      props.model!.name\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<DepartmentViewModel> = {};\r\n\r\n    if (values.departmentID == 0) {\r\n      errors.departmentID = 'Required';\r\n    }\r\n    if (values.groupName == '') {\r\n      errors.groupName = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new DepartmentMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'departments/' + values.departmentID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.DepartmentClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'DepartmentEdit',\r\n})(DepartmentEditDisplay);\r\n\r\ninterface IParams {\r\n  departmentID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface DepartmentEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface DepartmentEditComponentState {\r\n  model?: DepartmentViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class DepartmentEditComponent extends React.Component<\r\n  DepartmentEditComponentProps,\r\n  DepartmentEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'departments/' +\r\n          this.props.match.params.departmentID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.DepartmentClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new DepartmentMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <DepartmentUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d7e8d3531df8273611ebffaceb9b9a75</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport DepartmentMapper from './departmentMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport DepartmentViewModel from './departmentViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface DepartmentSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface DepartmentSearchComponentState {\r\n  records: Array<DepartmentViewModel>;\r\n  filteredRecords: Array<DepartmentViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class DepartmentSearchComponent extends React.Component<\r\n  DepartmentSearchComponentProps,\r\n  DepartmentSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.DepartmentClientResponseModel>(),\r\n    filteredRecords: new Array<Api.DepartmentClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.DepartmentClientResponseModel) {\r\n    this.props.history.push('/departments/edit/' + row.departmentID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.DepartmentClientResponseModel) {\r\n    this.props.history.push('/departments/' + row.departmentID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/departments/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.DepartmentClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'departments/' + row.departmentID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'departments' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.DepartmentClientResponseModel>;\r\n          let viewModels: Array<DepartmentViewModel> = [];\r\n          let mapper = new DepartmentMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<DepartmentViewModel>(),\r\n            filteredRecords: new Array<DepartmentViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Department',\r\n                columns: [\r\n                  {\r\n                    Header: 'DepartmentID',\r\n                    accessor: 'departmentID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.departmentID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'GroupName',\r\n                    accessor: 'groupName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.groupName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.DepartmentClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.DepartmentClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.DepartmentClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>04d29872b4736bbbfafd13241307804a</Hash>\r\n</Codenesium>*/","export default class EmployeeViewModel {\r\n  birthDate: any;\r\n  businessEntityID: number;\r\n  currentFlag: boolean;\r\n  gender: string;\r\n  hireDate: any;\r\n  jobTitle: string;\r\n  loginID: string;\r\n  maritalStatu: string;\r\n  modifiedDate: any;\r\n  nationalIDNumber: string;\r\n  organizationLevel: any;\r\n  rowguid: any;\r\n  salariedFlag: boolean;\r\n  sickLeaveHour: number;\r\n  vacationHour: number;\r\n\r\n  constructor() {\r\n    this.birthDate = undefined;\r\n    this.businessEntityID = 0;\r\n    this.currentFlag = false;\r\n    this.gender = '';\r\n    this.hireDate = undefined;\r\n    this.jobTitle = '';\r\n    this.loginID = '';\r\n    this.maritalStatu = '';\r\n    this.modifiedDate = undefined;\r\n    this.nationalIDNumber = '';\r\n    this.organizationLevel = undefined;\r\n    this.rowguid = undefined;\r\n    this.salariedFlag = false;\r\n    this.sickLeaveHour = 0;\r\n    this.vacationHour = 0;\r\n  }\r\n\r\n  setProperties(\r\n    birthDate: any,\r\n    businessEntityID: number,\r\n    currentFlag: boolean,\r\n    gender: string,\r\n    hireDate: any,\r\n    jobTitle: string,\r\n    loginID: string,\r\n    maritalStatu: string,\r\n    modifiedDate: any,\r\n    nationalIDNumber: string,\r\n    organizationLevel: any,\r\n    rowguid: any,\r\n    salariedFlag: boolean,\r\n    sickLeaveHour: number,\r\n    vacationHour: number\r\n  ): void {\r\n    this.birthDate = birthDate;\r\n    this.businessEntityID = businessEntityID;\r\n    this.currentFlag = currentFlag;\r\n    this.gender = gender;\r\n    this.hireDate = hireDate;\r\n    this.jobTitle = jobTitle;\r\n    this.loginID = loginID;\r\n    this.maritalStatu = maritalStatu;\r\n    this.modifiedDate = modifiedDate;\r\n    this.nationalIDNumber = nationalIDNumber;\r\n    this.organizationLevel = organizationLevel;\r\n    this.rowguid = rowguid;\r\n    this.salariedFlag = salariedFlag;\r\n    this.sickLeaveHour = sickLeaveHour;\r\n    this.vacationHour = vacationHour;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>52d383590aebc17c8681dfe9dfb5df4c</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport EmployeeViewModel from './employeeViewModel';\r\n\r\nexport default class EmployeeMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.EmployeeClientResponseModel\r\n  ): EmployeeViewModel {\r\n    let response = new EmployeeViewModel();\r\n    response.setProperties(\r\n      dto.birthDate,\r\n      dto.businessEntityID,\r\n      dto.currentFlag,\r\n      dto.gender,\r\n      dto.hireDate,\r\n      dto.jobTitle,\r\n      dto.loginID,\r\n      dto.maritalStatu,\r\n      dto.modifiedDate,\r\n      dto.nationalIDNumber,\r\n      dto.organizationLevel,\r\n      dto.rowguid,\r\n      dto.salariedFlag,\r\n      dto.sickLeaveHour,\r\n      dto.vacationHour\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: EmployeeViewModel\r\n  ): Api.EmployeeClientRequestModel {\r\n    let response = new Api.EmployeeClientRequestModel();\r\n    response.setProperties(\r\n      model.birthDate,\r\n      model.businessEntityID,\r\n      model.currentFlag,\r\n      model.gender,\r\n      model.hireDate,\r\n      model.jobTitle,\r\n      model.loginID,\r\n      model.maritalStatu,\r\n      model.modifiedDate,\r\n      model.nationalIDNumber,\r\n      model.organizationLevel,\r\n      model.rowguid,\r\n      model.salariedFlag,\r\n      model.sickLeaveHour,\r\n      model.vacationHour\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f5cf9f496fbfa8356b2087e22fdc0196</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport EmployeeMapper from './employeeMapper';\r\nimport EmployeeViewModel from './employeeViewModel';\r\n\r\ninterface Props {\r\n  model?: EmployeeViewModel;\r\n}\r\n\r\nconst EmployeeCreateDisplay: React.SFC<FormikProps<EmployeeViewModel>> = (\r\n  props: FormikProps<EmployeeViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.EmployeeClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof EmployeeViewModel] &&\r\n      props.errors[name as keyof EmployeeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof EmployeeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('birthDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BirthDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"birthDate\"\r\n            className={\r\n              errorExistForField('birthDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('birthDate') && (\r\n            <small className=\"text-danger\">{errorsForField('birthDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('currentFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CurrentFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"currentFlag\"\r\n            className={\r\n              errorExistForField('currentFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('currentFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('currentFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('gender')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Gender\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"gender\"\r\n            className={\r\n              errorExistForField('gender')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('gender') && (\r\n            <small className=\"text-danger\">{errorsForField('gender')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('hireDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          HireDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"hireDate\"\r\n            className={\r\n              errorExistForField('hireDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('hireDate') && (\r\n            <small className=\"text-danger\">{errorsForField('hireDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('jobTitle')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          JobTitle\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"jobTitle\"\r\n            className={\r\n              errorExistForField('jobTitle')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('jobTitle') && (\r\n            <small className=\"text-danger\">{errorsForField('jobTitle')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('loginID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LoginID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"loginID\"\r\n            className={\r\n              errorExistForField('loginID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('loginID') && (\r\n            <small className=\"text-danger\">{errorsForField('loginID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('maritalStatu')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MaritalStatus\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"maritalStatu\"\r\n            className={\r\n              errorExistForField('maritalStatu')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('maritalStatu') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('maritalStatu')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('nationalIDNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          NationalIDNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"nationalIDNumber\"\r\n            className={\r\n              errorExistForField('nationalIDNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('nationalIDNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('nationalIDNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('organizationLevel')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OrganizationLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"organizationLevel\"\r\n            className={\r\n              errorExistForField('organizationLevel')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('organizationLevel') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('organizationLevel')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salariedFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalariedFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salariedFlag\"\r\n            className={\r\n              errorExistForField('salariedFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salariedFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salariedFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('sickLeaveHour')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SickLeaveHours\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"sickLeaveHour\"\r\n            className={\r\n              errorExistForField('sickLeaveHour')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('sickLeaveHour') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('sickLeaveHour')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('vacationHour')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          VacationHours\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"vacationHour\"\r\n            className={\r\n              errorExistForField('vacationHour')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('vacationHour') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('vacationHour')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst EmployeeCreate = withFormik<Props, EmployeeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new EmployeeViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.birthDate,\r\n        props.model!.businessEntityID,\r\n        props.model!.currentFlag,\r\n        props.model!.gender,\r\n        props.model!.hireDate,\r\n        props.model!.jobTitle,\r\n        props.model!.loginID,\r\n        props.model!.maritalStatu,\r\n        props.model!.modifiedDate,\r\n        props.model!.nationalIDNumber,\r\n        props.model!.organizationLevel,\r\n        props.model!.rowguid,\r\n        props.model!.salariedFlag,\r\n        props.model!.sickLeaveHour,\r\n        props.model!.vacationHour\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<EmployeeViewModel> = {};\r\n\r\n    if (values.birthDate == undefined) {\r\n      errors.birthDate = 'Required';\r\n    }\r\n    if (values.currentFlag == false) {\r\n      errors.currentFlag = 'Required';\r\n    }\r\n    if (values.gender == '') {\r\n      errors.gender = 'Required';\r\n    }\r\n    if (values.hireDate == undefined) {\r\n      errors.hireDate = 'Required';\r\n    }\r\n    if (values.jobTitle == '') {\r\n      errors.jobTitle = 'Required';\r\n    }\r\n    if (values.loginID == '') {\r\n      errors.loginID = 'Required';\r\n    }\r\n    if (values.maritalStatu == '') {\r\n      errors.maritalStatu = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.nationalIDNumber == '') {\r\n      errors.nationalIDNumber = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.salariedFlag == false) {\r\n      errors.salariedFlag = 'Required';\r\n    }\r\n    if (values.sickLeaveHour == 0) {\r\n      errors.sickLeaveHour = 'Required';\r\n    }\r\n    if (values.vacationHour == 0) {\r\n      errors.vacationHour = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new EmployeeMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'employees',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.EmployeeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'EmployeeCreate',\r\n})(EmployeeCreateDisplay);\r\n\r\ninterface EmployeeCreateComponentProps {}\r\n\r\ninterface EmployeeCreateComponentState {\r\n  model?: EmployeeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class EmployeeCreateComponent extends React.Component<\r\n  EmployeeCreateComponentProps,\r\n  EmployeeCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <EmployeeCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>de18ac76e0c2d4188f19d0faa4f6749c</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport EmployeeMapper from './employeeMapper';\r\nimport EmployeeViewModel from './employeeViewModel';\r\n\r\ninterface Props {\r\n  model?: EmployeeViewModel;\r\n}\r\n\r\nconst EmployeeDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"birthDate\" className={'col-sm-2 col-form-label'}>\r\n          BirthDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.birthDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"businessEntityID\" className={'col-sm-2 col-form-label'}>\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.businessEntityID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"currentFlag\" className={'col-sm-2 col-form-label'}>\r\n          CurrentFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.currentFlag)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"gender\" className={'col-sm-2 col-form-label'}>\r\n          Gender\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.gender)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"hireDate\" className={'col-sm-2 col-form-label'}>\r\n          HireDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.hireDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"jobTitle\" className={'col-sm-2 col-form-label'}>\r\n          JobTitle\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.jobTitle)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"loginID\" className={'col-sm-2 col-form-label'}>\r\n          LoginID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.loginID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"maritalStatu\" className={'col-sm-2 col-form-label'}>\r\n          MaritalStatus\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.maritalStatu)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"nationalIDNumber\" className={'col-sm-2 col-form-label'}>\r\n          NationalIDNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.nationalIDNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"organizationLevel\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          OrganizationLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.organizationLevel)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salariedFlag\" className={'col-sm-2 col-form-label'}>\r\n          SalariedFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salariedFlag)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"sickLeaveHour\" className={'col-sm-2 col-form-label'}>\r\n          SickLeaveHours\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.sickLeaveHour)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"vacationHour\" className={'col-sm-2 col-form-label'}>\r\n          VacationHours\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.vacationHour)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface EmployeeDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface EmployeeDetailComponentState {\r\n  model?: EmployeeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class EmployeeDetailComponent extends React.Component<\r\n  EmployeeDetailComponentProps,\r\n  EmployeeDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'employees/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.EmployeeClientResponseModel;\r\n\r\n          let mapper = new EmployeeMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <EmployeeDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>915318ef25d854c000bacd25a62a527d</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport EmployeeViewModel from './employeeViewModel';\r\nimport EmployeeMapper from './employeeMapper';\r\n\r\ninterface Props {\r\n  model?: EmployeeViewModel;\r\n}\r\n\r\nconst EmployeeEditDisplay = (props: FormikProps<EmployeeViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.EmployeeClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof EmployeeViewModel] &&\r\n      props.errors[name as keyof EmployeeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof EmployeeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('birthDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BirthDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"birthDate\"\r\n            className={\r\n              errorExistForField('birthDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('birthDate') && (\r\n            <small className=\"text-danger\">{errorsForField('birthDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('businessEntityID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"businessEntityID\"\r\n            className={\r\n              errorExistForField('businessEntityID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('businessEntityID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('businessEntityID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('currentFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CurrentFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"currentFlag\"\r\n            className={\r\n              errorExistForField('currentFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('currentFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('currentFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('gender')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Gender\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"gender\"\r\n            className={\r\n              errorExistForField('gender')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('gender') && (\r\n            <small className=\"text-danger\">{errorsForField('gender')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('hireDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          HireDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"hireDate\"\r\n            className={\r\n              errorExistForField('hireDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('hireDate') && (\r\n            <small className=\"text-danger\">{errorsForField('hireDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('jobTitle')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          JobTitle\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"jobTitle\"\r\n            className={\r\n              errorExistForField('jobTitle')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('jobTitle') && (\r\n            <small className=\"text-danger\">{errorsForField('jobTitle')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('loginID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LoginID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"loginID\"\r\n            className={\r\n              errorExistForField('loginID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('loginID') && (\r\n            <small className=\"text-danger\">{errorsForField('loginID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('maritalStatu')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MaritalStatus\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"maritalStatu\"\r\n            className={\r\n              errorExistForField('maritalStatu')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('maritalStatu') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('maritalStatu')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('nationalIDNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          NationalIDNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"nationalIDNumber\"\r\n            className={\r\n              errorExistForField('nationalIDNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('nationalIDNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('nationalIDNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('organizationLevel')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OrganizationLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"organizationLevel\"\r\n            className={\r\n              errorExistForField('organizationLevel')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('organizationLevel') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('organizationLevel')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salariedFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalariedFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salariedFlag\"\r\n            className={\r\n              errorExistForField('salariedFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salariedFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salariedFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('sickLeaveHour')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SickLeaveHours\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"sickLeaveHour\"\r\n            className={\r\n              errorExistForField('sickLeaveHour')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('sickLeaveHour') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('sickLeaveHour')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('vacationHour')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          VacationHours\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"vacationHour\"\r\n            className={\r\n              errorExistForField('vacationHour')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('vacationHour') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('vacationHour')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst EmployeeUpdate = withFormik<Props, EmployeeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new EmployeeViewModel();\r\n    response.setProperties(\r\n      props.model!.birthDate,\r\n      props.model!.businessEntityID,\r\n      props.model!.currentFlag,\r\n      props.model!.gender,\r\n      props.model!.hireDate,\r\n      props.model!.jobTitle,\r\n      props.model!.loginID,\r\n      props.model!.maritalStatu,\r\n      props.model!.modifiedDate,\r\n      props.model!.nationalIDNumber,\r\n      props.model!.organizationLevel,\r\n      props.model!.rowguid,\r\n      props.model!.salariedFlag,\r\n      props.model!.sickLeaveHour,\r\n      props.model!.vacationHour\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<EmployeeViewModel> = {};\r\n\r\n    if (values.birthDate == undefined) {\r\n      errors.birthDate = 'Required';\r\n    }\r\n    if (values.businessEntityID == 0) {\r\n      errors.businessEntityID = 'Required';\r\n    }\r\n    if (values.currentFlag == false) {\r\n      errors.currentFlag = 'Required';\r\n    }\r\n    if (values.gender == '') {\r\n      errors.gender = 'Required';\r\n    }\r\n    if (values.hireDate == undefined) {\r\n      errors.hireDate = 'Required';\r\n    }\r\n    if (values.jobTitle == '') {\r\n      errors.jobTitle = 'Required';\r\n    }\r\n    if (values.loginID == '') {\r\n      errors.loginID = 'Required';\r\n    }\r\n    if (values.maritalStatu == '') {\r\n      errors.maritalStatu = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.nationalIDNumber == '') {\r\n      errors.nationalIDNumber = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.salariedFlag == false) {\r\n      errors.salariedFlag = 'Required';\r\n    }\r\n    if (values.sickLeaveHour == 0) {\r\n      errors.sickLeaveHour = 'Required';\r\n    }\r\n    if (values.vacationHour == 0) {\r\n      errors.vacationHour = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new EmployeeMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'employees/' + values.businessEntityID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.EmployeeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'EmployeeEdit',\r\n})(EmployeeEditDisplay);\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface EmployeeEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface EmployeeEditComponentState {\r\n  model?: EmployeeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class EmployeeEditComponent extends React.Component<\r\n  EmployeeEditComponentProps,\r\n  EmployeeEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'employees/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.EmployeeClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new EmployeeMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <EmployeeUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>eb77838d8a54e11e370ef6847e0cf18f</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport EmployeeMapper from './employeeMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport EmployeeViewModel from './employeeViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface EmployeeSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface EmployeeSearchComponentState {\r\n  records: Array<EmployeeViewModel>;\r\n  filteredRecords: Array<EmployeeViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class EmployeeSearchComponent extends React.Component<\r\n  EmployeeSearchComponentProps,\r\n  EmployeeSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.EmployeeClientResponseModel>(),\r\n    filteredRecords: new Array<Api.EmployeeClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.EmployeeClientResponseModel) {\r\n    this.props.history.push('/employees/edit/' + row.businessEntityID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.EmployeeClientResponseModel) {\r\n    this.props.history.push('/employees/' + row.businessEntityID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/employees/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.EmployeeClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'employees/' + row.businessEntityID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'employees' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.EmployeeClientResponseModel>;\r\n          let viewModels: Array<EmployeeViewModel> = [];\r\n          let mapper = new EmployeeMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<EmployeeViewModel>(),\r\n            filteredRecords: new Array<EmployeeViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Employee',\r\n                columns: [\r\n                  {\r\n                    Header: 'BirthDate',\r\n                    accessor: 'birthDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.birthDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'BusinessEntityID',\r\n                    accessor: 'businessEntityID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.businessEntityID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CurrentFlag',\r\n                    accessor: 'currentFlag',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.currentFlag)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Gender',\r\n                    accessor: 'gender',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.gender)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'HireDate',\r\n                    accessor: 'hireDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.hireDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'JobTitle',\r\n                    accessor: 'jobTitle',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.jobTitle)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'LoginID',\r\n                    accessor: 'loginID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.loginID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'MaritalStatus',\r\n                    accessor: 'maritalStatu',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.maritalStatu)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'NationalIDNumber',\r\n                    accessor: 'nationalIDNumber',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.nationalIDNumber)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'OrganizationLevel',\r\n                    accessor: 'organizationLevel',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.organizationLevel)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalariedFlag',\r\n                    accessor: 'salariedFlag',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.salariedFlag)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SickLeaveHours',\r\n                    accessor: 'sickLeaveHour',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.sickLeaveHour)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'VacationHours',\r\n                    accessor: 'vacationHour',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.vacationHour)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.EmployeeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.EmployeeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.EmployeeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1dc060ec7cdddd561974cc74bf4024e5</Hash>\r\n</Codenesium>*/","export default class JobCandidateViewModel {\r\n  businessEntityID: any;\r\n  jobCandidateID: number;\r\n  modifiedDate: any;\r\n  resume: string;\r\n\r\n  constructor() {\r\n    this.businessEntityID = undefined;\r\n    this.jobCandidateID = 0;\r\n    this.modifiedDate = undefined;\r\n    this.resume = '';\r\n  }\r\n\r\n  setProperties(\r\n    businessEntityID: any,\r\n    jobCandidateID: number,\r\n    modifiedDate: any,\r\n    resume: string\r\n  ): void {\r\n    this.businessEntityID = businessEntityID;\r\n    this.jobCandidateID = jobCandidateID;\r\n    this.modifiedDate = modifiedDate;\r\n    this.resume = resume;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4b61cdd089828aa98709398095167d4d</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport JobCandidateViewModel from './jobCandidateViewModel';\r\n\r\nexport default class JobCandidateMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.JobCandidateClientResponseModel\r\n  ): JobCandidateViewModel {\r\n    let response = new JobCandidateViewModel();\r\n    response.setProperties(\r\n      dto.businessEntityID,\r\n      dto.jobCandidateID,\r\n      dto.modifiedDate,\r\n      dto.resume\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: JobCandidateViewModel\r\n  ): Api.JobCandidateClientRequestModel {\r\n    let response = new Api.JobCandidateClientRequestModel();\r\n    response.setProperties(\r\n      model.businessEntityID,\r\n      model.jobCandidateID,\r\n      model.modifiedDate,\r\n      model.resume\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>deab249372d411299a0fd4f434179279</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport JobCandidateMapper from './jobCandidateMapper';\r\nimport JobCandidateViewModel from './jobCandidateViewModel';\r\n\r\ninterface Props {\r\n  model?: JobCandidateViewModel;\r\n}\r\n\r\nconst JobCandidateCreateDisplay: React.SFC<\r\n  FormikProps<JobCandidateViewModel>\r\n> = (props: FormikProps<JobCandidateViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.JobCandidateClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof JobCandidateViewModel] &&\r\n      props.errors[name as keyof JobCandidateViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof JobCandidateViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('businessEntityID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"businessEntityID\"\r\n            className={\r\n              errorExistForField('businessEntityID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('businessEntityID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('businessEntityID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('resume')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Resume\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"resume\"\r\n            className={\r\n              errorExistForField('resume')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('resume') && (\r\n            <small className=\"text-danger\">{errorsForField('resume')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst JobCandidateCreate = withFormik<Props, JobCandidateViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new JobCandidateViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.businessEntityID,\r\n        props.model!.jobCandidateID,\r\n        props.model!.modifiedDate,\r\n        props.model!.resume\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<JobCandidateViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new JobCandidateMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'jobcandidates',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.JobCandidateClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'JobCandidateCreate',\r\n})(JobCandidateCreateDisplay);\r\n\r\ninterface JobCandidateCreateComponentProps {}\r\n\r\ninterface JobCandidateCreateComponentState {\r\n  model?: JobCandidateViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class JobCandidateCreateComponent extends React.Component<\r\n  JobCandidateCreateComponentProps,\r\n  JobCandidateCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <JobCandidateCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>737653b37907fe6e70d4600a7030b3b7</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport JobCandidateMapper from './jobCandidateMapper';\r\nimport JobCandidateViewModel from './jobCandidateViewModel';\r\n\r\ninterface Props {\r\n  model?: JobCandidateViewModel;\r\n}\r\n\r\nconst JobCandidateDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"businessEntityID\" className={'col-sm-2 col-form-label'}>\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.businessEntityID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"jobCandidateID\" className={'col-sm-2 col-form-label'}>\r\n          JobCandidateID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.jobCandidateID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"resume\" className={'col-sm-2 col-form-label'}>\r\n          Resume\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.resume)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  jobCandidateID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface JobCandidateDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface JobCandidateDetailComponentState {\r\n  model?: JobCandidateViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class JobCandidateDetailComponent extends React.Component<\r\n  JobCandidateDetailComponentProps,\r\n  JobCandidateDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'jobcandidates/' +\r\n          this.props.match.params.jobCandidateID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.JobCandidateClientResponseModel;\r\n\r\n          let mapper = new JobCandidateMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <JobCandidateDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e62d32edf04f4383424a5dc13d555225</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport JobCandidateViewModel from './jobCandidateViewModel';\r\nimport JobCandidateMapper from './jobCandidateMapper';\r\n\r\ninterface Props {\r\n  model?: JobCandidateViewModel;\r\n}\r\n\r\nconst JobCandidateEditDisplay = (props: FormikProps<JobCandidateViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.JobCandidateClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof JobCandidateViewModel] &&\r\n      props.errors[name as keyof JobCandidateViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof JobCandidateViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('businessEntityID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"businessEntityID\"\r\n            className={\r\n              errorExistForField('businessEntityID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('businessEntityID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('businessEntityID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('jobCandidateID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          JobCandidateID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"jobCandidateID\"\r\n            className={\r\n              errorExistForField('jobCandidateID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('jobCandidateID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('jobCandidateID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('resume')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Resume\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"resume\"\r\n            className={\r\n              errorExistForField('resume')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('resume') && (\r\n            <small className=\"text-danger\">{errorsForField('resume')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst JobCandidateUpdate = withFormik<Props, JobCandidateViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new JobCandidateViewModel();\r\n    response.setProperties(\r\n      props.model!.businessEntityID,\r\n      props.model!.jobCandidateID,\r\n      props.model!.modifiedDate,\r\n      props.model!.resume\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<JobCandidateViewModel> = {};\r\n\r\n    if (values.jobCandidateID == 0) {\r\n      errors.jobCandidateID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new JobCandidateMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'jobcandidates/' + values.jobCandidateID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.JobCandidateClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'JobCandidateEdit',\r\n})(JobCandidateEditDisplay);\r\n\r\ninterface IParams {\r\n  jobCandidateID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface JobCandidateEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface JobCandidateEditComponentState {\r\n  model?: JobCandidateViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class JobCandidateEditComponent extends React.Component<\r\n  JobCandidateEditComponentProps,\r\n  JobCandidateEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'jobcandidates/' +\r\n          this.props.match.params.jobCandidateID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.JobCandidateClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new JobCandidateMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <JobCandidateUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c9c16096d77507477c283ddd7acea8ea</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport JobCandidateMapper from './jobCandidateMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport JobCandidateViewModel from './jobCandidateViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface JobCandidateSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface JobCandidateSearchComponentState {\r\n  records: Array<JobCandidateViewModel>;\r\n  filteredRecords: Array<JobCandidateViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class JobCandidateSearchComponent extends React.Component<\r\n  JobCandidateSearchComponentProps,\r\n  JobCandidateSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.JobCandidateClientResponseModel>(),\r\n    filteredRecords: new Array<Api.JobCandidateClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.JobCandidateClientResponseModel) {\r\n    this.props.history.push('/jobcandidates/edit/' + row.jobCandidateID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.JobCandidateClientResponseModel) {\r\n    this.props.history.push('/jobcandidates/' + row.jobCandidateID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/jobcandidates/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.JobCandidateClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'jobcandidates/' + row.jobCandidateID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'jobcandidates' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.JobCandidateClientResponseModel\r\n          >;\r\n          let viewModels: Array<JobCandidateViewModel> = [];\r\n          let mapper = new JobCandidateMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<JobCandidateViewModel>(),\r\n            filteredRecords: new Array<JobCandidateViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'JobCandidate',\r\n                columns: [\r\n                  {\r\n                    Header: 'BusinessEntityID',\r\n                    accessor: 'businessEntityID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.businessEntityID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'JobCandidateID',\r\n                    accessor: 'jobCandidateID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.jobCandidateID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Resume',\r\n                    accessor: 'resume',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.resume)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.JobCandidateClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.JobCandidateClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.JobCandidateClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3da134f9032c2389a379f9b1460616c3</Hash>\r\n</Codenesium>*/","export default class ShiftViewModel {\r\n  endTime: any;\r\n  modifiedDate: any;\r\n  name: string;\r\n  shiftID: number;\r\n  startTime: any;\r\n\r\n  constructor() {\r\n    this.endTime = undefined;\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.shiftID = 0;\r\n    this.startTime = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    endTime: any,\r\n    modifiedDate: any,\r\n    name: string,\r\n    shiftID: number,\r\n    startTime: any\r\n  ): void {\r\n    this.endTime = endTime;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.shiftID = shiftID;\r\n    this.startTime = startTime;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>fde60fa4dc1e9297dcb129b1867ff20c</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ShiftViewModel from './shiftViewModel';\r\n\r\nexport default class ShiftMapper {\r\n  mapApiResponseToViewModel(dto: Api.ShiftClientResponseModel): ShiftViewModel {\r\n    let response = new ShiftViewModel();\r\n    response.setProperties(\r\n      dto.endTime,\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.shiftID,\r\n      dto.startTime\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: ShiftViewModel): Api.ShiftClientRequestModel {\r\n    let response = new Api.ShiftClientRequestModel();\r\n    response.setProperties(\r\n      model.endTime,\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.shiftID,\r\n      model.startTime\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>77a956ecc1797d92ad93a9e84c9b29a4</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ShiftMapper from './shiftMapper';\r\nimport ShiftViewModel from './shiftViewModel';\r\n\r\ninterface Props {\r\n  model?: ShiftViewModel;\r\n}\r\n\r\nconst ShiftCreateDisplay: React.SFC<FormikProps<ShiftViewModel>> = (\r\n  props: FormikProps<ShiftViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.ShiftClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ShiftViewModel] &&\r\n      props.errors[name as keyof ShiftViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ShiftViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endTime')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndTime\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endTime\"\r\n            className={\r\n              errorExistForField('endTime')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endTime') && (\r\n            <small className=\"text-danger\">{errorsForField('endTime')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('startTime')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StartTime\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"startTime\"\r\n            className={\r\n              errorExistForField('startTime')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('startTime') && (\r\n            <small className=\"text-danger\">{errorsForField('startTime')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ShiftCreate = withFormik<Props, ShiftViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ShiftViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.endTime,\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.shiftID,\r\n        props.model!.startTime\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ShiftViewModel> = {};\r\n\r\n    if (values.endTime == undefined) {\r\n      errors.endTime = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.startTime == undefined) {\r\n      errors.startTime = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ShiftMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'shifts',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ShiftClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ShiftCreate',\r\n})(ShiftCreateDisplay);\r\n\r\ninterface ShiftCreateComponentProps {}\r\n\r\ninterface ShiftCreateComponentState {\r\n  model?: ShiftViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ShiftCreateComponent extends React.Component<\r\n  ShiftCreateComponentProps,\r\n  ShiftCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ShiftCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>66965af9174928e437f1a5766bb4efb7</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ShiftMapper from './shiftMapper';\r\nimport ShiftViewModel from './shiftViewModel';\r\n\r\ninterface Props {\r\n  model?: ShiftViewModel;\r\n}\r\n\r\nconst ShiftDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"endTime\" className={'col-sm-2 col-form-label'}>\r\n          EndTime\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.endTime)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shiftID\" className={'col-sm-2 col-form-label'}>\r\n          ShiftID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shiftID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"startTime\" className={'col-sm-2 col-form-label'}>\r\n          StartTime\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.startTime)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  shiftID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ShiftDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ShiftDetailComponentState {\r\n  model?: ShiftViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ShiftDetailComponent extends React.Component<\r\n  ShiftDetailComponentProps,\r\n  ShiftDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(Constants.ApiUrl + 'shifts/' + this.props.match.params.shiftID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ShiftClientResponseModel;\r\n\r\n          let mapper = new ShiftMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ShiftDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2bc2d5746fd93b705609c9bb81f597fb</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ShiftViewModel from './shiftViewModel';\r\nimport ShiftMapper from './shiftMapper';\r\n\r\ninterface Props {\r\n  model?: ShiftViewModel;\r\n}\r\n\r\nconst ShiftEditDisplay = (props: FormikProps<ShiftViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.ShiftClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ShiftViewModel] &&\r\n      props.errors[name as keyof ShiftViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ShiftViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endTime')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndTime\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endTime\"\r\n            className={\r\n              errorExistForField('endTime')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endTime') && (\r\n            <small className=\"text-danger\">{errorsForField('endTime')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shiftID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShiftID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shiftID\"\r\n            className={\r\n              errorExistForField('shiftID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shiftID') && (\r\n            <small className=\"text-danger\">{errorsForField('shiftID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('startTime')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StartTime\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"startTime\"\r\n            className={\r\n              errorExistForField('startTime')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('startTime') && (\r\n            <small className=\"text-danger\">{errorsForField('startTime')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ShiftUpdate = withFormik<Props, ShiftViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ShiftViewModel();\r\n    response.setProperties(\r\n      props.model!.endTime,\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.shiftID,\r\n      props.model!.startTime\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ShiftViewModel> = {};\r\n\r\n    if (values.endTime == undefined) {\r\n      errors.endTime = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.shiftID == 0) {\r\n      errors.shiftID = 'Required';\r\n    }\r\n    if (values.startTime == undefined) {\r\n      errors.startTime = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ShiftMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'shifts/' + values.shiftID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ShiftClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ShiftEdit',\r\n})(ShiftEditDisplay);\r\n\r\ninterface IParams {\r\n  shiftID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ShiftEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ShiftEditComponentState {\r\n  model?: ShiftViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ShiftEditComponent extends React.Component<\r\n  ShiftEditComponentProps,\r\n  ShiftEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(Constants.ApiUrl + 'shifts/' + this.props.match.params.shiftID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ShiftClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ShiftMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ShiftUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>40e48d6d235e9144343304ced34538a5</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ShiftMapper from './shiftMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ShiftViewModel from './shiftViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ShiftSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ShiftSearchComponentState {\r\n  records: Array<ShiftViewModel>;\r\n  filteredRecords: Array<ShiftViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ShiftSearchComponent extends React.Component<\r\n  ShiftSearchComponentProps,\r\n  ShiftSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ShiftClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ShiftClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ShiftClientResponseModel) {\r\n    this.props.history.push('/shifts/edit/' + row.shiftID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ShiftClientResponseModel) {\r\n    this.props.history.push('/shifts/' + row.shiftID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/shifts/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ShiftClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'shifts/' + row.shiftID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'shifts' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.ShiftClientResponseModel>;\r\n          let viewModels: Array<ShiftViewModel> = [];\r\n          let mapper = new ShiftMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ShiftViewModel>(),\r\n            filteredRecords: new Array<ShiftViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Shift',\r\n                columns: [\r\n                  {\r\n                    Header: 'EndTime',\r\n                    accessor: 'endTime',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.endTime)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShiftID',\r\n                    accessor: 'shiftID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.shiftID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StartTime',\r\n                    accessor: 'startTime',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.startTime)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ShiftClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ShiftClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ShiftClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c4ec36e96118016ec91be0c731642d7d</Hash>\r\n</Codenesium>*/","export default class AddressViewModel {\r\n  addressID: number;\r\n  addressLine1: string;\r\n  addressLine2: string;\r\n  city: string;\r\n  modifiedDate: any;\r\n  postalCode: string;\r\n  rowguid: any;\r\n  stateProvinceID: number;\r\n\r\n  constructor() {\r\n    this.addressID = 0;\r\n    this.addressLine1 = '';\r\n    this.addressLine2 = '';\r\n    this.city = '';\r\n    this.modifiedDate = undefined;\r\n    this.postalCode = '';\r\n    this.rowguid = undefined;\r\n    this.stateProvinceID = 0;\r\n  }\r\n\r\n  setProperties(\r\n    addressID: number,\r\n    addressLine1: string,\r\n    addressLine2: string,\r\n    city: string,\r\n    modifiedDate: any,\r\n    postalCode: string,\r\n    rowguid: any,\r\n    stateProvinceID: number\r\n  ): void {\r\n    this.addressID = addressID;\r\n    this.addressLine1 = addressLine1;\r\n    this.addressLine2 = addressLine2;\r\n    this.city = city;\r\n    this.modifiedDate = modifiedDate;\r\n    this.postalCode = postalCode;\r\n    this.rowguid = rowguid;\r\n    this.stateProvinceID = stateProvinceID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d7f3b4923a65aff01a7cfbfab213ea9a</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport AddressViewModel from './addressViewModel';\r\n\r\nexport default class AddressMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.AddressClientResponseModel\r\n  ): AddressViewModel {\r\n    let response = new AddressViewModel();\r\n    response.setProperties(\r\n      dto.addressID,\r\n      dto.addressLine1,\r\n      dto.addressLine2,\r\n      dto.city,\r\n      dto.modifiedDate,\r\n      dto.postalCode,\r\n      dto.rowguid,\r\n      dto.stateProvinceID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: AddressViewModel\r\n  ): Api.AddressClientRequestModel {\r\n    let response = new Api.AddressClientRequestModel();\r\n    response.setProperties(\r\n      model.addressID,\r\n      model.addressLine1,\r\n      model.addressLine2,\r\n      model.city,\r\n      model.modifiedDate,\r\n      model.postalCode,\r\n      model.rowguid,\r\n      model.stateProvinceID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>717663bac0309f1f0ec53821076a1086</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport AddressMapper from './addressMapper';\r\nimport AddressViewModel from './addressViewModel';\r\n\r\ninterface Props {\r\n  model?: AddressViewModel;\r\n}\r\n\r\nconst AddressCreateDisplay: React.SFC<FormikProps<AddressViewModel>> = (\r\n  props: FormikProps<AddressViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.AddressClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof AddressViewModel] &&\r\n      props.errors[name as keyof AddressViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof AddressViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('addressLine1')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AddressLine1\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"addressLine1\"\r\n            className={\r\n              errorExistForField('addressLine1')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('addressLine1') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('addressLine1')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('addressLine2')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AddressLine2\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"addressLine2\"\r\n            className={\r\n              errorExistForField('addressLine2')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('addressLine2') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('addressLine2')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('city')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          City\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"city\"\r\n            className={\r\n              errorExistForField('city')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('city') && (\r\n            <small className=\"text-danger\">{errorsForField('city')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('postalCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PostalCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"postalCode\"\r\n            className={\r\n              errorExistForField('postalCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('postalCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('postalCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('stateProvinceID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StateProvinceID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"stateProvinceID\"\r\n            className={\r\n              errorExistForField('stateProvinceID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('stateProvinceID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('stateProvinceID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddressCreate = withFormik<Props, AddressViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new AddressViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.addressID,\r\n        props.model!.addressLine1,\r\n        props.model!.addressLine2,\r\n        props.model!.city,\r\n        props.model!.modifiedDate,\r\n        props.model!.postalCode,\r\n        props.model!.rowguid,\r\n        props.model!.stateProvinceID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<AddressViewModel> = {};\r\n\r\n    if (values.addressLine1 == '') {\r\n      errors.addressLine1 = 'Required';\r\n    }\r\n    if (values.city == '') {\r\n      errors.city = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.postalCode == '') {\r\n      errors.postalCode = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.stateProvinceID == 0) {\r\n      errors.stateProvinceID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new AddressMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'addresses',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.AddressClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'AddressCreate',\r\n})(AddressCreateDisplay);\r\n\r\ninterface AddressCreateComponentProps {}\r\n\r\ninterface AddressCreateComponentState {\r\n  model?: AddressViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class AddressCreateComponent extends React.Component<\r\n  AddressCreateComponentProps,\r\n  AddressCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <AddressCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>a9fea6aeb1c388cd8a8d7d6bb61559c8</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport AddressMapper from './addressMapper';\r\nimport AddressViewModel from './addressViewModel';\r\n\r\ninterface Props {\r\n  model?: AddressViewModel;\r\n}\r\n\r\nconst AddressDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"addressID\" className={'col-sm-2 col-form-label'}>\r\n          AddressID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.addressID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"addressLine1\" className={'col-sm-2 col-form-label'}>\r\n          AddressLine1\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.addressLine1)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"addressLine2\" className={'col-sm-2 col-form-label'}>\r\n          AddressLine2\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.addressLine2)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"city\" className={'col-sm-2 col-form-label'}>\r\n          City\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.city)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"postalCode\" className={'col-sm-2 col-form-label'}>\r\n          PostalCode\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.postalCode)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"stateProvinceID\" className={'col-sm-2 col-form-label'}>\r\n          StateProvinceID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.stateProvinceID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  addressID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface AddressDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface AddressDetailComponentState {\r\n  model?: AddressViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class AddressDetailComponent extends React.Component<\r\n  AddressDetailComponentProps,\r\n  AddressDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'addresses/' + this.props.match.params.addressID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AddressClientResponseModel;\r\n\r\n          let mapper = new AddressMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <AddressDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e5e231e25d9f12b11eaa41aefdf4361b</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport AddressViewModel from './addressViewModel';\r\nimport AddressMapper from './addressMapper';\r\n\r\ninterface Props {\r\n  model?: AddressViewModel;\r\n}\r\n\r\nconst AddressEditDisplay = (props: FormikProps<AddressViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.AddressClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof AddressViewModel] &&\r\n      props.errors[name as keyof AddressViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof AddressViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('addressID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AddressID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"addressID\"\r\n            className={\r\n              errorExistForField('addressID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('addressID') && (\r\n            <small className=\"text-danger\">{errorsForField('addressID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('addressLine1')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AddressLine1\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"addressLine1\"\r\n            className={\r\n              errorExistForField('addressLine1')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('addressLine1') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('addressLine1')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('addressLine2')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AddressLine2\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"addressLine2\"\r\n            className={\r\n              errorExistForField('addressLine2')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('addressLine2') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('addressLine2')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('city')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          City\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"city\"\r\n            className={\r\n              errorExistForField('city')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('city') && (\r\n            <small className=\"text-danger\">{errorsForField('city')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('postalCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PostalCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"postalCode\"\r\n            className={\r\n              errorExistForField('postalCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('postalCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('postalCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('stateProvinceID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StateProvinceID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"stateProvinceID\"\r\n            className={\r\n              errorExistForField('stateProvinceID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('stateProvinceID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('stateProvinceID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddressUpdate = withFormik<Props, AddressViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new AddressViewModel();\r\n    response.setProperties(\r\n      props.model!.addressID,\r\n      props.model!.addressLine1,\r\n      props.model!.addressLine2,\r\n      props.model!.city,\r\n      props.model!.modifiedDate,\r\n      props.model!.postalCode,\r\n      props.model!.rowguid,\r\n      props.model!.stateProvinceID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<AddressViewModel> = {};\r\n\r\n    if (values.addressID == 0) {\r\n      errors.addressID = 'Required';\r\n    }\r\n    if (values.addressLine1 == '') {\r\n      errors.addressLine1 = 'Required';\r\n    }\r\n    if (values.city == '') {\r\n      errors.city = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.postalCode == '') {\r\n      errors.postalCode = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.stateProvinceID == 0) {\r\n      errors.stateProvinceID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new AddressMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'addresses/' + values.addressID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.AddressClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'AddressEdit',\r\n})(AddressEditDisplay);\r\n\r\ninterface IParams {\r\n  addressID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface AddressEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface AddressEditComponentState {\r\n  model?: AddressViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class AddressEditComponent extends React.Component<\r\n  AddressEditComponentProps,\r\n  AddressEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'addresses/' + this.props.match.params.addressID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AddressClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new AddressMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <AddressUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>af4d5e83032271f9dbdc14488678ab5a</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport AddressMapper from './addressMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport AddressViewModel from './addressViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface AddressSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface AddressSearchComponentState {\r\n  records: Array<AddressViewModel>;\r\n  filteredRecords: Array<AddressViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class AddressSearchComponent extends React.Component<\r\n  AddressSearchComponentProps,\r\n  AddressSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.AddressClientResponseModel>(),\r\n    filteredRecords: new Array<Api.AddressClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.AddressClientResponseModel) {\r\n    this.props.history.push('/addresses/edit/' + row.addressID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.AddressClientResponseModel) {\r\n    this.props.history.push('/addresses/' + row.addressID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/addresses/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.AddressClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'addresses/' + row.addressID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'addresses' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.AddressClientResponseModel>;\r\n          let viewModels: Array<AddressViewModel> = [];\r\n          let mapper = new AddressMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<AddressViewModel>(),\r\n            filteredRecords: new Array<AddressViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Address',\r\n                columns: [\r\n                  {\r\n                    Header: 'AddressID',\r\n                    accessor: 'addressID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.addressID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'AddressLine1',\r\n                    accessor: 'addressLine1',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.addressLine1)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'AddressLine2',\r\n                    accessor: 'addressLine2',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.addressLine2)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'City',\r\n                    accessor: 'city',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.city)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PostalCode',\r\n                    accessor: 'postalCode',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.postalCode)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StateProvinceID',\r\n                    accessor: 'stateProvinceID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.stateProvinceID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.AddressClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.AddressClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.AddressClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>cbe3b221e32d5a539d8de0f51a751d4d</Hash>\r\n</Codenesium>*/","export default class AddressTypeViewModel {\r\n  addressTypeID: number;\r\n  modifiedDate: any;\r\n  name: string;\r\n  rowguid: any;\r\n\r\n  constructor() {\r\n    this.addressTypeID = 0;\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.rowguid = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    addressTypeID: number,\r\n    modifiedDate: any,\r\n    name: string,\r\n    rowguid: any\r\n  ): void {\r\n    this.addressTypeID = addressTypeID;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.rowguid = rowguid;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8d1489ddb5758b988dadda25430c2fff</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport AddressTypeViewModel from './addressTypeViewModel';\r\n\r\nexport default class AddressTypeMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.AddressTypeClientResponseModel\r\n  ): AddressTypeViewModel {\r\n    let response = new AddressTypeViewModel();\r\n    response.setProperties(\r\n      dto.addressTypeID,\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.rowguid\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: AddressTypeViewModel\r\n  ): Api.AddressTypeClientRequestModel {\r\n    let response = new Api.AddressTypeClientRequestModel();\r\n    response.setProperties(\r\n      model.addressTypeID,\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.rowguid\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>aca649e56ab064c680569d1148c09382</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport AddressTypeMapper from './addressTypeMapper';\r\nimport AddressTypeViewModel from './addressTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: AddressTypeViewModel;\r\n}\r\n\r\nconst AddressTypeCreateDisplay: React.SFC<FormikProps<AddressTypeViewModel>> = (\r\n  props: FormikProps<AddressTypeViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.AddressTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof AddressTypeViewModel] &&\r\n      props.errors[name as keyof AddressTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof AddressTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddressTypeCreate = withFormik<Props, AddressTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new AddressTypeViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.addressTypeID,\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.rowguid\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<AddressTypeViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new AddressTypeMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'addresstypes',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.AddressTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'AddressTypeCreate',\r\n})(AddressTypeCreateDisplay);\r\n\r\ninterface AddressTypeCreateComponentProps {}\r\n\r\ninterface AddressTypeCreateComponentState {\r\n  model?: AddressTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class AddressTypeCreateComponent extends React.Component<\r\n  AddressTypeCreateComponentProps,\r\n  AddressTypeCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <AddressTypeCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ff10bc22fbaea2bef4f39d549a1c5129</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport AddressTypeMapper from './addressTypeMapper';\r\nimport AddressTypeViewModel from './addressTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: AddressTypeViewModel;\r\n}\r\n\r\nconst AddressTypeDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"addressTypeID\" className={'col-sm-2 col-form-label'}>\r\n          AddressTypeID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.addressTypeID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  addressTypeID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface AddressTypeDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface AddressTypeDetailComponentState {\r\n  model?: AddressTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class AddressTypeDetailComponent extends React.Component<\r\n  AddressTypeDetailComponentProps,\r\n  AddressTypeDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'addresstypes/' +\r\n          this.props.match.params.addressTypeID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AddressTypeClientResponseModel;\r\n\r\n          let mapper = new AddressTypeMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <AddressTypeDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6725ab9bc3ba34201360aee5c88333b0</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport AddressTypeViewModel from './addressTypeViewModel';\r\nimport AddressTypeMapper from './addressTypeMapper';\r\n\r\ninterface Props {\r\n  model?: AddressTypeViewModel;\r\n}\r\n\r\nconst AddressTypeEditDisplay = (props: FormikProps<AddressTypeViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.AddressTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof AddressTypeViewModel] &&\r\n      props.errors[name as keyof AddressTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof AddressTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('addressTypeID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AddressTypeID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"addressTypeID\"\r\n            className={\r\n              errorExistForField('addressTypeID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('addressTypeID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('addressTypeID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddressTypeUpdate = withFormik<Props, AddressTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new AddressTypeViewModel();\r\n    response.setProperties(\r\n      props.model!.addressTypeID,\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.rowguid\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<AddressTypeViewModel> = {};\r\n\r\n    if (values.addressTypeID == 0) {\r\n      errors.addressTypeID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new AddressTypeMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'addresstypes/' + values.addressTypeID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.AddressTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'AddressTypeEdit',\r\n})(AddressTypeEditDisplay);\r\n\r\ninterface IParams {\r\n  addressTypeID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface AddressTypeEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface AddressTypeEditComponentState {\r\n  model?: AddressTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class AddressTypeEditComponent extends React.Component<\r\n  AddressTypeEditComponentProps,\r\n  AddressTypeEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'addresstypes/' +\r\n          this.props.match.params.addressTypeID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.AddressTypeClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new AddressTypeMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <AddressTypeUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>65370a6c34d2e944ba6dcd183c2fcbdf</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport AddressTypeMapper from './addressTypeMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport AddressTypeViewModel from './addressTypeViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface AddressTypeSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface AddressTypeSearchComponentState {\r\n  records: Array<AddressTypeViewModel>;\r\n  filteredRecords: Array<AddressTypeViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class AddressTypeSearchComponent extends React.Component<\r\n  AddressTypeSearchComponentProps,\r\n  AddressTypeSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.AddressTypeClientResponseModel>(),\r\n    filteredRecords: new Array<Api.AddressTypeClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.AddressTypeClientResponseModel) {\r\n    this.props.history.push('/addresstypes/edit/' + row.addressTypeID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.AddressTypeClientResponseModel) {\r\n    this.props.history.push('/addresstypes/' + row.addressTypeID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/addresstypes/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.AddressTypeClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'addresstypes/' + row.addressTypeID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'addresstypes' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.AddressTypeClientResponseModel>;\r\n          let viewModels: Array<AddressTypeViewModel> = [];\r\n          let mapper = new AddressTypeMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<AddressTypeViewModel>(),\r\n            filteredRecords: new Array<AddressTypeViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'AddressType',\r\n                columns: [\r\n                  {\r\n                    Header: 'AddressTypeID',\r\n                    accessor: 'addressTypeID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.addressTypeID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.AddressTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.AddressTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.AddressTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d38c722860239d2fd1da7a0a319652ac</Hash>\r\n</Codenesium>*/","export default class BusinessEntityViewModel {\r\n  businessEntityID: number;\r\n  modifiedDate: any;\r\n  rowguid: any;\r\n\r\n  constructor() {\r\n    this.businessEntityID = 0;\r\n    this.modifiedDate = undefined;\r\n    this.rowguid = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    businessEntityID: number,\r\n    modifiedDate: any,\r\n    rowguid: any\r\n  ): void {\r\n    this.businessEntityID = businessEntityID;\r\n    this.modifiedDate = modifiedDate;\r\n    this.rowguid = rowguid;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2d42729b723992297c0c2ce04c5977f9</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport BusinessEntityViewModel from './businessEntityViewModel';\r\n\r\nexport default class BusinessEntityMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.BusinessEntityClientResponseModel\r\n  ): BusinessEntityViewModel {\r\n    let response = new BusinessEntityViewModel();\r\n    response.setProperties(dto.businessEntityID, dto.modifiedDate, dto.rowguid);\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: BusinessEntityViewModel\r\n  ): Api.BusinessEntityClientRequestModel {\r\n    let response = new Api.BusinessEntityClientRequestModel();\r\n    response.setProperties(\r\n      model.businessEntityID,\r\n      model.modifiedDate,\r\n      model.rowguid\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>30ec9f4bdd153c6695fadc47b69269d5</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport BusinessEntityMapper from './businessEntityMapper';\r\nimport BusinessEntityViewModel from './businessEntityViewModel';\r\n\r\ninterface Props {\r\n  model?: BusinessEntityViewModel;\r\n}\r\n\r\nconst BusinessEntityCreateDisplay: React.SFC<\r\n  FormikProps<BusinessEntityViewModel>\r\n> = (props: FormikProps<BusinessEntityViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.BusinessEntityClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof BusinessEntityViewModel] &&\r\n      props.errors[name as keyof BusinessEntityViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof BusinessEntityViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst BusinessEntityCreate = withFormik<Props, BusinessEntityViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new BusinessEntityViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.businessEntityID,\r\n        props.model!.modifiedDate,\r\n        props.model!.rowguid\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<BusinessEntityViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new BusinessEntityMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'businessentities',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.BusinessEntityClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'BusinessEntityCreate',\r\n})(BusinessEntityCreateDisplay);\r\n\r\ninterface BusinessEntityCreateComponentProps {}\r\n\r\ninterface BusinessEntityCreateComponentState {\r\n  model?: BusinessEntityViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class BusinessEntityCreateComponent extends React.Component<\r\n  BusinessEntityCreateComponentProps,\r\n  BusinessEntityCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <BusinessEntityCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0b28b6c542b70407ec32faf57fa652cd</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport BusinessEntityMapper from './businessEntityMapper';\r\nimport BusinessEntityViewModel from './businessEntityViewModel';\r\n\r\ninterface Props {\r\n  model?: BusinessEntityViewModel;\r\n}\r\n\r\nconst BusinessEntityDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"businessEntityID\" className={'col-sm-2 col-form-label'}>\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.businessEntityID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface BusinessEntityDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface BusinessEntityDetailComponentState {\r\n  model?: BusinessEntityViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class BusinessEntityDetailComponent extends React.Component<\r\n  BusinessEntityDetailComponentProps,\r\n  BusinessEntityDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'businessentities/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.BusinessEntityClientResponseModel;\r\n\r\n          let mapper = new BusinessEntityMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <BusinessEntityDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>25c0da45f2a731feb35712b41e0998c6</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport BusinessEntityViewModel from './businessEntityViewModel';\r\nimport BusinessEntityMapper from './businessEntityMapper';\r\n\r\ninterface Props {\r\n  model?: BusinessEntityViewModel;\r\n}\r\n\r\nconst BusinessEntityEditDisplay = (\r\n  props: FormikProps<BusinessEntityViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.BusinessEntityClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof BusinessEntityViewModel] &&\r\n      props.errors[name as keyof BusinessEntityViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof BusinessEntityViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('businessEntityID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"businessEntityID\"\r\n            className={\r\n              errorExistForField('businessEntityID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('businessEntityID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('businessEntityID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst BusinessEntityUpdate = withFormik<Props, BusinessEntityViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new BusinessEntityViewModel();\r\n    response.setProperties(\r\n      props.model!.businessEntityID,\r\n      props.model!.modifiedDate,\r\n      props.model!.rowguid\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<BusinessEntityViewModel> = {};\r\n\r\n    if (values.businessEntityID == 0) {\r\n      errors.businessEntityID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new BusinessEntityMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'businessentities/' + values.businessEntityID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.BusinessEntityClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'BusinessEntityEdit',\r\n})(BusinessEntityEditDisplay);\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface BusinessEntityEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface BusinessEntityEditComponentState {\r\n  model?: BusinessEntityViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class BusinessEntityEditComponent extends React.Component<\r\n  BusinessEntityEditComponentProps,\r\n  BusinessEntityEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'businessentities/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.BusinessEntityClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new BusinessEntityMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <BusinessEntityUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e2901ea58f22c5ea961d168c384e4f14</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport BusinessEntityMapper from './businessEntityMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport BusinessEntityViewModel from './businessEntityViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface BusinessEntitySearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface BusinessEntitySearchComponentState {\r\n  records: Array<BusinessEntityViewModel>;\r\n  filteredRecords: Array<BusinessEntityViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class BusinessEntitySearchComponent extends React.Component<\r\n  BusinessEntitySearchComponentProps,\r\n  BusinessEntitySearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.BusinessEntityClientResponseModel>(),\r\n    filteredRecords: new Array<Api.BusinessEntityClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.BusinessEntityClientResponseModel) {\r\n    this.props.history.push('/businessentities/edit/' + row.businessEntityID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.BusinessEntityClientResponseModel) {\r\n    this.props.history.push('/businessentities/' + row.businessEntityID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/businessentities/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.BusinessEntityClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'businessentities/' + row.businessEntityID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'businessentities' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.BusinessEntityClientResponseModel\r\n          >;\r\n          let viewModels: Array<BusinessEntityViewModel> = [];\r\n          let mapper = new BusinessEntityMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<BusinessEntityViewModel>(),\r\n            filteredRecords: new Array<BusinessEntityViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'BusinessEntity',\r\n                columns: [\r\n                  {\r\n                    Header: 'BusinessEntityID',\r\n                    accessor: 'businessEntityID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.businessEntityID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.BusinessEntityClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.BusinessEntityClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.BusinessEntityClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>581d9ec250e4534e372e2313b80cba30</Hash>\r\n</Codenesium>*/","export default class ContactTypeViewModel {\r\n  contactTypeID: number;\r\n  modifiedDate: any;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.contactTypeID = 0;\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(contactTypeID: number, modifiedDate: any, name: string): void {\r\n    this.contactTypeID = contactTypeID;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c30fca29ec6bfeeab26606fb1e9a82db</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ContactTypeViewModel from './contactTypeViewModel';\r\n\r\nexport default class ContactTypeMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ContactTypeClientResponseModel\r\n  ): ContactTypeViewModel {\r\n    let response = new ContactTypeViewModel();\r\n    response.setProperties(dto.contactTypeID, dto.modifiedDate, dto.name);\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ContactTypeViewModel\r\n  ): Api.ContactTypeClientRequestModel {\r\n    let response = new Api.ContactTypeClientRequestModel();\r\n    response.setProperties(model.contactTypeID, model.modifiedDate, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>736bd7241ad6d1a39235da7685f7d543</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ContactTypeMapper from './contactTypeMapper';\r\nimport ContactTypeViewModel from './contactTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: ContactTypeViewModel;\r\n}\r\n\r\nconst ContactTypeCreateDisplay: React.SFC<FormikProps<ContactTypeViewModel>> = (\r\n  props: FormikProps<ContactTypeViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.ContactTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ContactTypeViewModel] &&\r\n      props.errors[name as keyof ContactTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ContactTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ContactTypeCreate = withFormik<Props, ContactTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ContactTypeViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.contactTypeID,\r\n        props.model!.modifiedDate,\r\n        props.model!.name\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ContactTypeViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ContactTypeMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'contacttypes',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ContactTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ContactTypeCreate',\r\n})(ContactTypeCreateDisplay);\r\n\r\ninterface ContactTypeCreateComponentProps {}\r\n\r\ninterface ContactTypeCreateComponentState {\r\n  model?: ContactTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ContactTypeCreateComponent extends React.Component<\r\n  ContactTypeCreateComponentProps,\r\n  ContactTypeCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ContactTypeCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bb415139e79562d9774c5e28b0431c60</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ContactTypeMapper from './contactTypeMapper';\r\nimport ContactTypeViewModel from './contactTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: ContactTypeViewModel;\r\n}\r\n\r\nconst ContactTypeDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"contactTypeID\" className={'col-sm-2 col-form-label'}>\r\n          ContactTypeID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.contactTypeID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  contactTypeID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ContactTypeDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ContactTypeDetailComponentState {\r\n  model?: ContactTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ContactTypeDetailComponent extends React.Component<\r\n  ContactTypeDetailComponentProps,\r\n  ContactTypeDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'contacttypes/' +\r\n          this.props.match.params.contactTypeID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ContactTypeClientResponseModel;\r\n\r\n          let mapper = new ContactTypeMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ContactTypeDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bc0f984ca9fd2a8d25e453b49ce5a1b2</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ContactTypeViewModel from './contactTypeViewModel';\r\nimport ContactTypeMapper from './contactTypeMapper';\r\n\r\ninterface Props {\r\n  model?: ContactTypeViewModel;\r\n}\r\n\r\nconst ContactTypeEditDisplay = (props: FormikProps<ContactTypeViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.ContactTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ContactTypeViewModel] &&\r\n      props.errors[name as keyof ContactTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ContactTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('contactTypeID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ContactTypeID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"contactTypeID\"\r\n            className={\r\n              errorExistForField('contactTypeID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('contactTypeID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('contactTypeID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ContactTypeUpdate = withFormik<Props, ContactTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ContactTypeViewModel();\r\n    response.setProperties(\r\n      props.model!.contactTypeID,\r\n      props.model!.modifiedDate,\r\n      props.model!.name\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ContactTypeViewModel> = {};\r\n\r\n    if (values.contactTypeID == 0) {\r\n      errors.contactTypeID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ContactTypeMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'contacttypes/' + values.contactTypeID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ContactTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ContactTypeEdit',\r\n})(ContactTypeEditDisplay);\r\n\r\ninterface IParams {\r\n  contactTypeID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ContactTypeEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ContactTypeEditComponentState {\r\n  model?: ContactTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ContactTypeEditComponent extends React.Component<\r\n  ContactTypeEditComponentProps,\r\n  ContactTypeEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'contacttypes/' +\r\n          this.props.match.params.contactTypeID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ContactTypeClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ContactTypeMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ContactTypeUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e26424c048666a496113293816e70262</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ContactTypeMapper from './contactTypeMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ContactTypeViewModel from './contactTypeViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ContactTypeSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ContactTypeSearchComponentState {\r\n  records: Array<ContactTypeViewModel>;\r\n  filteredRecords: Array<ContactTypeViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ContactTypeSearchComponent extends React.Component<\r\n  ContactTypeSearchComponentProps,\r\n  ContactTypeSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ContactTypeClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ContactTypeClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ContactTypeClientResponseModel) {\r\n    this.props.history.push('/contacttypes/edit/' + row.contactTypeID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ContactTypeClientResponseModel) {\r\n    this.props.history.push('/contacttypes/' + row.contactTypeID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/contacttypes/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ContactTypeClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'contacttypes/' + row.contactTypeID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'contacttypes' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.ContactTypeClientResponseModel>;\r\n          let viewModels: Array<ContactTypeViewModel> = [];\r\n          let mapper = new ContactTypeMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ContactTypeViewModel>(),\r\n            filteredRecords: new Array<ContactTypeViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ContactType',\r\n                columns: [\r\n                  {\r\n                    Header: 'ContactTypeID',\r\n                    accessor: 'contactTypeID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.contactTypeID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ContactTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ContactTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ContactTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>baaaaa2b7379e38d56cf3131495bb627</Hash>\r\n</Codenesium>*/","export default class CountryRegionViewModel {\r\n  countryRegionCode: string;\r\n  modifiedDate: any;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.countryRegionCode = '';\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(\r\n    countryRegionCode: string,\r\n    modifiedDate: any,\r\n    name: string\r\n  ): void {\r\n    this.countryRegionCode = countryRegionCode;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1815a428f3cc7939ca95739c1e05d110</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CountryRegionViewModel from './countryRegionViewModel';\r\n\r\nexport default class CountryRegionMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CountryRegionClientResponseModel\r\n  ): CountryRegionViewModel {\r\n    let response = new CountryRegionViewModel();\r\n    response.setProperties(dto.countryRegionCode, dto.modifiedDate, dto.name);\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CountryRegionViewModel\r\n  ): Api.CountryRegionClientRequestModel {\r\n    let response = new Api.CountryRegionClientRequestModel();\r\n    response.setProperties(\r\n      model.countryRegionCode,\r\n      model.modifiedDate,\r\n      model.name\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>11ae32db18e074a7305e2f167da28546</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport CountryRegionMapper from './countryRegionMapper';\r\nimport CountryRegionViewModel from './countryRegionViewModel';\r\n\r\ninterface Props {\r\n  model?: CountryRegionViewModel;\r\n}\r\n\r\nconst CountryRegionCreateDisplay: React.SFC<\r\n  FormikProps<CountryRegionViewModel>\r\n> = (props: FormikProps<CountryRegionViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.CountryRegionClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CountryRegionViewModel] &&\r\n      props.errors[name as keyof CountryRegionViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CountryRegionViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CountryRegionCreate = withFormik<Props, CountryRegionViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CountryRegionViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.countryRegionCode,\r\n        props.model!.modifiedDate,\r\n        props.model!.name\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<CountryRegionViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new CountryRegionMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'countryregions',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CountryRegionClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'CountryRegionCreate',\r\n})(CountryRegionCreateDisplay);\r\n\r\ninterface CountryRegionCreateComponentProps {}\r\n\r\ninterface CountryRegionCreateComponentState {\r\n  model?: CountryRegionViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CountryRegionCreateComponent extends React.Component<\r\n  CountryRegionCreateComponentProps,\r\n  CountryRegionCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CountryRegionCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f048841205cd6692a0957cdcfd423b03</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CountryRegionMapper from './countryRegionMapper';\r\nimport CountryRegionViewModel from './countryRegionViewModel';\r\n\r\ninterface Props {\r\n  model?: CountryRegionViewModel;\r\n}\r\n\r\nconst CountryRegionDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"countryRegionCode\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          CountryRegionCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.countryRegionCode)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  countryRegionCode: string;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CountryRegionDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CountryRegionDetailComponentState {\r\n  model?: CountryRegionViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CountryRegionDetailComponent extends React.Component<\r\n  CountryRegionDetailComponentProps,\r\n  CountryRegionDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'countryregions/' +\r\n          this.props.match.params.countryRegionCode,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CountryRegionClientResponseModel;\r\n\r\n          let mapper = new CountryRegionMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CountryRegionDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9e0c58fd0fa74d6019d356cee1dca307</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CountryRegionViewModel from './countryRegionViewModel';\r\nimport CountryRegionMapper from './countryRegionMapper';\r\n\r\ninterface Props {\r\n  model?: CountryRegionViewModel;\r\n}\r\n\r\nconst CountryRegionEditDisplay = (\r\n  props: FormikProps<CountryRegionViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.CountryRegionClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CountryRegionViewModel] &&\r\n      props.errors[name as keyof CountryRegionViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CountryRegionViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('countryRegionCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CountryRegionCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"countryRegionCode\"\r\n            className={\r\n              errorExistForField('countryRegionCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('countryRegionCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('countryRegionCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CountryRegionUpdate = withFormik<Props, CountryRegionViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CountryRegionViewModel();\r\n    response.setProperties(\r\n      props.model!.countryRegionCode,\r\n      props.model!.modifiedDate,\r\n      props.model!.name\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<CountryRegionViewModel> = {};\r\n\r\n    if (values.countryRegionCode == '') {\r\n      errors.countryRegionCode = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new CountryRegionMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'countryregions/' + values.countryRegionCode,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.CountryRegionClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'CountryRegionEdit',\r\n})(CountryRegionEditDisplay);\r\n\r\ninterface IParams {\r\n  countryRegionCode: string;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CountryRegionEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CountryRegionEditComponentState {\r\n  model?: CountryRegionViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CountryRegionEditComponent extends React.Component<\r\n  CountryRegionEditComponentProps,\r\n  CountryRegionEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'countryregions/' +\r\n          this.props.match.params.countryRegionCode,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CountryRegionClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CountryRegionMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CountryRegionUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2f2dcf0fc808ece909ca807b379ddbed</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CountryRegionMapper from './countryRegionMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport CountryRegionViewModel from './countryRegionViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface CountryRegionSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface CountryRegionSearchComponentState {\r\n  records: Array<CountryRegionViewModel>;\r\n  filteredRecords: Array<CountryRegionViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class CountryRegionSearchComponent extends React.Component<\r\n  CountryRegionSearchComponentProps,\r\n  CountryRegionSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.CountryRegionClientResponseModel>(),\r\n    filteredRecords: new Array<Api.CountryRegionClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.CountryRegionClientResponseModel) {\r\n    this.props.history.push('/countryregions/edit/' + row.countryRegionCode);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.CountryRegionClientResponseModel) {\r\n    this.props.history.push('/countryregions/' + row.countryRegionCode);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/countryregions/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.CountryRegionClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'countryregions/' + row.countryRegionCode, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'countryregions' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.CountryRegionClientResponseModel\r\n          >;\r\n          let viewModels: Array<CountryRegionViewModel> = [];\r\n          let mapper = new CountryRegionMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<CountryRegionViewModel>(),\r\n            filteredRecords: new Array<CountryRegionViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'CountryRegion',\r\n                columns: [\r\n                  {\r\n                    Header: 'CountryRegionCode',\r\n                    accessor: 'countryRegionCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.countryRegionCode)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.CountryRegionClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.CountryRegionClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.CountryRegionClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5ef897ba38d5b96588b95a5f72726327</Hash>\r\n</Codenesium>*/","export default class PasswordViewModel {\r\n  businessEntityID: number;\r\n  modifiedDate: any;\r\n  passwordHash: string;\r\n  passwordSalt: string;\r\n  rowguid: any;\r\n\r\n  constructor() {\r\n    this.businessEntityID = 0;\r\n    this.modifiedDate = undefined;\r\n    this.passwordHash = '';\r\n    this.passwordSalt = '';\r\n    this.rowguid = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    businessEntityID: number,\r\n    modifiedDate: any,\r\n    passwordHash: string,\r\n    passwordSalt: string,\r\n    rowguid: any\r\n  ): void {\r\n    this.businessEntityID = businessEntityID;\r\n    this.modifiedDate = modifiedDate;\r\n    this.passwordHash = passwordHash;\r\n    this.passwordSalt = passwordSalt;\r\n    this.rowguid = rowguid;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f6fb13d5494d6ccda120c8e869477fef</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PasswordViewModel from './passwordViewModel';\r\n\r\nexport default class PasswordMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PasswordClientResponseModel\r\n  ): PasswordViewModel {\r\n    let response = new PasswordViewModel();\r\n    response.setProperties(\r\n      dto.businessEntityID,\r\n      dto.modifiedDate,\r\n      dto.passwordHash,\r\n      dto.passwordSalt,\r\n      dto.rowguid\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PasswordViewModel\r\n  ): Api.PasswordClientRequestModel {\r\n    let response = new Api.PasswordClientRequestModel();\r\n    response.setProperties(\r\n      model.businessEntityID,\r\n      model.modifiedDate,\r\n      model.passwordHash,\r\n      model.passwordSalt,\r\n      model.rowguid\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>904602991faa1d037fd6413fa0dc49da</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport PasswordMapper from './passwordMapper';\r\nimport PasswordViewModel from './passwordViewModel';\r\n\r\ninterface Props {\r\n  model?: PasswordViewModel;\r\n}\r\n\r\nconst PasswordCreateDisplay: React.SFC<FormikProps<PasswordViewModel>> = (\r\n  props: FormikProps<PasswordViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.PasswordClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PasswordViewModel] &&\r\n      props.errors[name as keyof PasswordViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PasswordViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('passwordHash')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PasswordHash\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"passwordHash\"\r\n            className={\r\n              errorExistForField('passwordHash')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('passwordHash') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('passwordHash')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('passwordSalt')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PasswordSalt\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"passwordSalt\"\r\n            className={\r\n              errorExistForField('passwordSalt')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('passwordSalt') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('passwordSalt')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PasswordCreate = withFormik<Props, PasswordViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PasswordViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.businessEntityID,\r\n        props.model!.modifiedDate,\r\n        props.model!.passwordHash,\r\n        props.model!.passwordSalt,\r\n        props.model!.rowguid\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<PasswordViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.passwordHash == '') {\r\n      errors.passwordHash = 'Required';\r\n    }\r\n    if (values.passwordSalt == '') {\r\n      errors.passwordSalt = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new PasswordMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'passwords',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PasswordClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'PasswordCreate',\r\n})(PasswordCreateDisplay);\r\n\r\ninterface PasswordCreateComponentProps {}\r\n\r\ninterface PasswordCreateComponentState {\r\n  model?: PasswordViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PasswordCreateComponent extends React.Component<\r\n  PasswordCreateComponentProps,\r\n  PasswordCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PasswordCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>cccfb177bd9367c3a28daf5b2c8bb936</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport PasswordMapper from './passwordMapper';\r\nimport PasswordViewModel from './passwordViewModel';\r\n\r\ninterface Props {\r\n  model?: PasswordViewModel;\r\n}\r\n\r\nconst PasswordDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"businessEntityID\" className={'col-sm-2 col-form-label'}>\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.businessEntityID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"passwordHash\" className={'col-sm-2 col-form-label'}>\r\n          PasswordHash\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.passwordHash)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"passwordSalt\" className={'col-sm-2 col-form-label'}>\r\n          PasswordSalt\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.passwordSalt)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PasswordDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PasswordDetailComponentState {\r\n  model?: PasswordViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PasswordDetailComponent extends React.Component<\r\n  PasswordDetailComponentProps,\r\n  PasswordDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'passwords/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PasswordClientResponseModel;\r\n\r\n          let mapper = new PasswordMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PasswordDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d4888ed1457fd5a1f52ba3cc22d471fe</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport PasswordViewModel from './passwordViewModel';\r\nimport PasswordMapper from './passwordMapper';\r\n\r\ninterface Props {\r\n  model?: PasswordViewModel;\r\n}\r\n\r\nconst PasswordEditDisplay = (props: FormikProps<PasswordViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.PasswordClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PasswordViewModel] &&\r\n      props.errors[name as keyof PasswordViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PasswordViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('businessEntityID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"businessEntityID\"\r\n            className={\r\n              errorExistForField('businessEntityID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('businessEntityID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('businessEntityID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('passwordHash')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PasswordHash\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"passwordHash\"\r\n            className={\r\n              errorExistForField('passwordHash')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('passwordHash') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('passwordHash')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('passwordSalt')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PasswordSalt\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"passwordSalt\"\r\n            className={\r\n              errorExistForField('passwordSalt')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('passwordSalt') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('passwordSalt')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PasswordUpdate = withFormik<Props, PasswordViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PasswordViewModel();\r\n    response.setProperties(\r\n      props.model!.businessEntityID,\r\n      props.model!.modifiedDate,\r\n      props.model!.passwordHash,\r\n      props.model!.passwordSalt,\r\n      props.model!.rowguid\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<PasswordViewModel> = {};\r\n\r\n    if (values.businessEntityID == 0) {\r\n      errors.businessEntityID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.passwordHash == '') {\r\n      errors.passwordHash = 'Required';\r\n    }\r\n    if (values.passwordSalt == '') {\r\n      errors.passwordSalt = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new PasswordMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'passwords/' + values.businessEntityID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.PasswordClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'PasswordEdit',\r\n})(PasswordEditDisplay);\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PasswordEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PasswordEditComponentState {\r\n  model?: PasswordViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PasswordEditComponent extends React.Component<\r\n  PasswordEditComponentProps,\r\n  PasswordEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'passwords/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PasswordClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PasswordMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PasswordUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0b69c50be08b0f9304aa2237ced90207</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PasswordMapper from './passwordMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport PasswordViewModel from './passwordViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface PasswordSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface PasswordSearchComponentState {\r\n  records: Array<PasswordViewModel>;\r\n  filteredRecords: Array<PasswordViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PasswordSearchComponent extends React.Component<\r\n  PasswordSearchComponentProps,\r\n  PasswordSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.PasswordClientResponseModel>(),\r\n    filteredRecords: new Array<Api.PasswordClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.PasswordClientResponseModel) {\r\n    this.props.history.push('/passwords/edit/' + row.businessEntityID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.PasswordClientResponseModel) {\r\n    this.props.history.push('/passwords/' + row.businessEntityID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/passwords/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PasswordClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'passwords/' + row.businessEntityID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'passwords' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PasswordClientResponseModel>;\r\n          let viewModels: Array<PasswordViewModel> = [];\r\n          let mapper = new PasswordMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PasswordViewModel>(),\r\n            filteredRecords: new Array<PasswordViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Password',\r\n                columns: [\r\n                  {\r\n                    Header: 'BusinessEntityID',\r\n                    accessor: 'businessEntityID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.businessEntityID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PasswordHash',\r\n                    accessor: 'passwordHash',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.passwordHash)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PasswordSalt',\r\n                    accessor: 'passwordSalt',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.passwordSalt)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.PasswordClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.PasswordClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.PasswordClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5cb5e6c7d9b52f28c5d22166d1bc5b58</Hash>\r\n</Codenesium>*/","export default class PersonViewModel {\r\n  additionalContactInfo: string;\r\n  businessEntityID: number;\r\n  demographic: string;\r\n  emailPromotion: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  modifiedDate: any;\r\n  nameStyle: boolean;\r\n  personType: string;\r\n  rowguid: any;\r\n  suffix: string;\r\n  title: string;\r\n\r\n  constructor() {\r\n    this.additionalContactInfo = '';\r\n    this.businessEntityID = 0;\r\n    this.demographic = '';\r\n    this.emailPromotion = 0;\r\n    this.firstName = '';\r\n    this.lastName = '';\r\n    this.middleName = '';\r\n    this.modifiedDate = undefined;\r\n    this.nameStyle = false;\r\n    this.personType = '';\r\n    this.rowguid = undefined;\r\n    this.suffix = '';\r\n    this.title = '';\r\n  }\r\n\r\n  setProperties(\r\n    additionalContactInfo: string,\r\n    businessEntityID: number,\r\n    demographic: string,\r\n    emailPromotion: number,\r\n    firstName: string,\r\n    lastName: string,\r\n    middleName: string,\r\n    modifiedDate: any,\r\n    nameStyle: boolean,\r\n    personType: string,\r\n    rowguid: any,\r\n    suffix: string,\r\n    title: string\r\n  ): void {\r\n    this.additionalContactInfo = additionalContactInfo;\r\n    this.businessEntityID = businessEntityID;\r\n    this.demographic = demographic;\r\n    this.emailPromotion = emailPromotion;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.middleName = middleName;\r\n    this.modifiedDate = modifiedDate;\r\n    this.nameStyle = nameStyle;\r\n    this.personType = personType;\r\n    this.rowguid = rowguid;\r\n    this.suffix = suffix;\r\n    this.title = title;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>275b1493d1590cd6b6c4f8a44fb98a4e</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PersonViewModel from './personViewModel';\r\n\r\nexport default class PersonMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PersonClientResponseModel\r\n  ): PersonViewModel {\r\n    let response = new PersonViewModel();\r\n    response.setProperties(\r\n      dto.additionalContactInfo,\r\n      dto.businessEntityID,\r\n      dto.demographic,\r\n      dto.emailPromotion,\r\n      dto.firstName,\r\n      dto.lastName,\r\n      dto.middleName,\r\n      dto.modifiedDate,\r\n      dto.nameStyle,\r\n      dto.personType,\r\n      dto.rowguid,\r\n      dto.suffix,\r\n      dto.title\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PersonViewModel\r\n  ): Api.PersonClientRequestModel {\r\n    let response = new Api.PersonClientRequestModel();\r\n    response.setProperties(\r\n      model.additionalContactInfo,\r\n      model.businessEntityID,\r\n      model.demographic,\r\n      model.emailPromotion,\r\n      model.firstName,\r\n      model.lastName,\r\n      model.middleName,\r\n      model.modifiedDate,\r\n      model.nameStyle,\r\n      model.personType,\r\n      model.rowguid,\r\n      model.suffix,\r\n      model.title\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>53b135dcd204f8cba65698f6a43a2ea9</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport PersonMapper from './personMapper';\r\nimport PersonViewModel from './personViewModel';\r\n\r\ninterface Props {\r\n  model?: PersonViewModel;\r\n}\r\n\r\nconst PersonCreateDisplay: React.SFC<FormikProps<PersonViewModel>> = (\r\n  props: FormikProps<PersonViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.PersonClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PersonViewModel] &&\r\n      props.errors[name as keyof PersonViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PersonViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('additionalContactInfo')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AdditionalContactInfo\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"additionalContactInfo\"\r\n            className={\r\n              errorExistForField('additionalContactInfo')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('additionalContactInfo') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('additionalContactInfo')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('demographic')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Demographics\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"demographic\"\r\n            className={\r\n              errorExistForField('demographic')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('demographic') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('demographic')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('emailPromotion')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EmailPromotion\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"emailPromotion\"\r\n            className={\r\n              errorExistForField('emailPromotion')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('emailPromotion') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('emailPromotion')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('firstName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FirstName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"firstName\"\r\n            className={\r\n              errorExistForField('firstName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('firstName') && (\r\n            <small className=\"text-danger\">{errorsForField('firstName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('lastName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LastName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"lastName\"\r\n            className={\r\n              errorExistForField('lastName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('lastName') && (\r\n            <small className=\"text-danger\">{errorsForField('lastName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('middleName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MiddleName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"middleName\"\r\n            className={\r\n              errorExistForField('middleName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('middleName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('middleName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('nameStyle')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          NameStyle\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"nameStyle\"\r\n            className={\r\n              errorExistForField('nameStyle')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('nameStyle') && (\r\n            <small className=\"text-danger\">{errorsForField('nameStyle')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('personType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PersonType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"personType\"\r\n            className={\r\n              errorExistForField('personType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('personType') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('personType')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('suffix')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Suffix\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"suffix\"\r\n            className={\r\n              errorExistForField('suffix')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('suffix') && (\r\n            <small className=\"text-danger\">{errorsForField('suffix')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('title')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Title\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"title\"\r\n            className={\r\n              errorExistForField('title')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('title') && (\r\n            <small className=\"text-danger\">{errorsForField('title')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PersonCreate = withFormik<Props, PersonViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PersonViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.additionalContactInfo,\r\n        props.model!.businessEntityID,\r\n        props.model!.demographic,\r\n        props.model!.emailPromotion,\r\n        props.model!.firstName,\r\n        props.model!.lastName,\r\n        props.model!.middleName,\r\n        props.model!.modifiedDate,\r\n        props.model!.nameStyle,\r\n        props.model!.personType,\r\n        props.model!.rowguid,\r\n        props.model!.suffix,\r\n        props.model!.title\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<PersonViewModel> = {};\r\n\r\n    if (values.emailPromotion == 0) {\r\n      errors.emailPromotion = 'Required';\r\n    }\r\n    if (values.firstName == '') {\r\n      errors.firstName = 'Required';\r\n    }\r\n    if (values.lastName == '') {\r\n      errors.lastName = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.nameStyle == false) {\r\n      errors.nameStyle = 'Required';\r\n    }\r\n    if (values.personType == '') {\r\n      errors.personType = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new PersonMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'people',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PersonClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'PersonCreate',\r\n})(PersonCreateDisplay);\r\n\r\ninterface PersonCreateComponentProps {}\r\n\r\ninterface PersonCreateComponentState {\r\n  model?: PersonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PersonCreateComponent extends React.Component<\r\n  PersonCreateComponentProps,\r\n  PersonCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PersonCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6f7723369afba470175649f5fcf04bbe</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport PersonMapper from './personMapper';\r\nimport PersonViewModel from './personViewModel';\r\n\r\ninterface Props {\r\n  model?: PersonViewModel;\r\n}\r\n\r\nconst PersonDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"additionalContactInfo\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          AdditionalContactInfo\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.additionalContactInfo)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"businessEntityID\" className={'col-sm-2 col-form-label'}>\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.businessEntityID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"demographic\" className={'col-sm-2 col-form-label'}>\r\n          Demographics\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.demographic)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"emailPromotion\" className={'col-sm-2 col-form-label'}>\r\n          EmailPromotion\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.emailPromotion)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"firstName\" className={'col-sm-2 col-form-label'}>\r\n          FirstName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.firstName)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"lastName\" className={'col-sm-2 col-form-label'}>\r\n          LastName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.lastName)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"middleName\" className={'col-sm-2 col-form-label'}>\r\n          MiddleName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.middleName)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"nameStyle\" className={'col-sm-2 col-form-label'}>\r\n          NameStyle\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.nameStyle)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"personType\" className={'col-sm-2 col-form-label'}>\r\n          PersonType\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.personType)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"suffix\" className={'col-sm-2 col-form-label'}>\r\n          Suffix\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.suffix)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"title\" className={'col-sm-2 col-form-label'}>\r\n          Title\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.title)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PersonDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PersonDetailComponentState {\r\n  model?: PersonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PersonDetailComponent extends React.Component<\r\n  PersonDetailComponentProps,\r\n  PersonDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'people/' + this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PersonClientResponseModel;\r\n\r\n          let mapper = new PersonMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PersonDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>002e3031a7dfe6cc4a7919bfbc3ce07e</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport PersonViewModel from './personViewModel';\r\nimport PersonMapper from './personMapper';\r\n\r\ninterface Props {\r\n  model?: PersonViewModel;\r\n}\r\n\r\nconst PersonEditDisplay = (props: FormikProps<PersonViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.PersonClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PersonViewModel] &&\r\n      props.errors[name as keyof PersonViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PersonViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('additionalContactInfo')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AdditionalContactInfo\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"additionalContactInfo\"\r\n            className={\r\n              errorExistForField('additionalContactInfo')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('additionalContactInfo') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('additionalContactInfo')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('businessEntityID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"businessEntityID\"\r\n            className={\r\n              errorExistForField('businessEntityID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('businessEntityID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('businessEntityID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('demographic')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Demographics\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"demographic\"\r\n            className={\r\n              errorExistForField('demographic')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('demographic') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('demographic')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('emailPromotion')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EmailPromotion\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"emailPromotion\"\r\n            className={\r\n              errorExistForField('emailPromotion')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('emailPromotion') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('emailPromotion')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('firstName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FirstName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"firstName\"\r\n            className={\r\n              errorExistForField('firstName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('firstName') && (\r\n            <small className=\"text-danger\">{errorsForField('firstName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('lastName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LastName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"lastName\"\r\n            className={\r\n              errorExistForField('lastName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('lastName') && (\r\n            <small className=\"text-danger\">{errorsForField('lastName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('middleName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MiddleName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"middleName\"\r\n            className={\r\n              errorExistForField('middleName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('middleName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('middleName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('nameStyle')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          NameStyle\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"nameStyle\"\r\n            className={\r\n              errorExistForField('nameStyle')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('nameStyle') && (\r\n            <small className=\"text-danger\">{errorsForField('nameStyle')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('personType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PersonType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"personType\"\r\n            className={\r\n              errorExistForField('personType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('personType') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('personType')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('suffix')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Suffix\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"suffix\"\r\n            className={\r\n              errorExistForField('suffix')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('suffix') && (\r\n            <small className=\"text-danger\">{errorsForField('suffix')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('title')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Title\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"title\"\r\n            className={\r\n              errorExistForField('title')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('title') && (\r\n            <small className=\"text-danger\">{errorsForField('title')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PersonUpdate = withFormik<Props, PersonViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PersonViewModel();\r\n    response.setProperties(\r\n      props.model!.additionalContactInfo,\r\n      props.model!.businessEntityID,\r\n      props.model!.demographic,\r\n      props.model!.emailPromotion,\r\n      props.model!.firstName,\r\n      props.model!.lastName,\r\n      props.model!.middleName,\r\n      props.model!.modifiedDate,\r\n      props.model!.nameStyle,\r\n      props.model!.personType,\r\n      props.model!.rowguid,\r\n      props.model!.suffix,\r\n      props.model!.title\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<PersonViewModel> = {};\r\n\r\n    if (values.businessEntityID == 0) {\r\n      errors.businessEntityID = 'Required';\r\n    }\r\n    if (values.emailPromotion == 0) {\r\n      errors.emailPromotion = 'Required';\r\n    }\r\n    if (values.firstName == '') {\r\n      errors.firstName = 'Required';\r\n    }\r\n    if (values.lastName == '') {\r\n      errors.lastName = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.nameStyle == false) {\r\n      errors.nameStyle = 'Required';\r\n    }\r\n    if (values.personType == '') {\r\n      errors.personType = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new PersonMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'people/' + values.businessEntityID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.PersonClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'PersonEdit',\r\n})(PersonEditDisplay);\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PersonEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PersonEditComponentState {\r\n  model?: PersonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PersonEditComponent extends React.Component<\r\n  PersonEditComponentProps,\r\n  PersonEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'people/' + this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PersonClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PersonMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PersonUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>84d30d7b52c780ff768a885f4e647dee</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PersonMapper from './personMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport PersonViewModel from './personViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface PersonSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface PersonSearchComponentState {\r\n  records: Array<PersonViewModel>;\r\n  filteredRecords: Array<PersonViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PersonSearchComponent extends React.Component<\r\n  PersonSearchComponentProps,\r\n  PersonSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.PersonClientResponseModel>(),\r\n    filteredRecords: new Array<Api.PersonClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.PersonClientResponseModel) {\r\n    this.props.history.push('/people/edit/' + row.businessEntityID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.PersonClientResponseModel) {\r\n    this.props.history.push('/people/' + row.businessEntityID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/people/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PersonClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'people/' + row.businessEntityID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'people' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PersonClientResponseModel>;\r\n          let viewModels: Array<PersonViewModel> = [];\r\n          let mapper = new PersonMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PersonViewModel>(),\r\n            filteredRecords: new Array<PersonViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Person',\r\n                columns: [\r\n                  {\r\n                    Header: 'AdditionalContactInfo',\r\n                    accessor: 'additionalContactInfo',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.additionalContactInfo)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'BusinessEntityID',\r\n                    accessor: 'businessEntityID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.businessEntityID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Demographics',\r\n                    accessor: 'demographic',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.demographic)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'EmailPromotion',\r\n                    accessor: 'emailPromotion',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.emailPromotion)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FirstName',\r\n                    accessor: 'firstName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.firstName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'LastName',\r\n                    accessor: 'lastName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.lastName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'MiddleName',\r\n                    accessor: 'middleName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.middleName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'NameStyle',\r\n                    accessor: 'nameStyle',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.nameStyle)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PersonType',\r\n                    accessor: 'personType',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.personType)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Suffix',\r\n                    accessor: 'suffix',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.suffix)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Title',\r\n                    accessor: 'title',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.title)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.PersonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.PersonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.PersonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6365b2c1ad30fe5032a4f532c9ed9d6d</Hash>\r\n</Codenesium>*/","export default class PhoneNumberTypeViewModel {\r\n  modifiedDate: any;\r\n  name: string;\r\n  phoneNumberTypeID: number;\r\n\r\n  constructor() {\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.phoneNumberTypeID = 0;\r\n  }\r\n\r\n  setProperties(\r\n    modifiedDate: any,\r\n    name: string,\r\n    phoneNumberTypeID: number\r\n  ): void {\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.phoneNumberTypeID = phoneNumberTypeID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>dbc8d11c32c9a273fdfa8151d1d4040e</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PhoneNumberTypeViewModel from './phoneNumberTypeViewModel';\r\n\r\nexport default class PhoneNumberTypeMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PhoneNumberTypeClientResponseModel\r\n  ): PhoneNumberTypeViewModel {\r\n    let response = new PhoneNumberTypeViewModel();\r\n    response.setProperties(dto.modifiedDate, dto.name, dto.phoneNumberTypeID);\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PhoneNumberTypeViewModel\r\n  ): Api.PhoneNumberTypeClientRequestModel {\r\n    let response = new Api.PhoneNumberTypeClientRequestModel();\r\n    response.setProperties(\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.phoneNumberTypeID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8f3eee147f48d685a8c93eb5b2e52aa2</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport PhoneNumberTypeMapper from './phoneNumberTypeMapper';\r\nimport PhoneNumberTypeViewModel from './phoneNumberTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: PhoneNumberTypeViewModel;\r\n}\r\n\r\nconst PhoneNumberTypeCreateDisplay: React.SFC<\r\n  FormikProps<PhoneNumberTypeViewModel>\r\n> = (props: FormikProps<PhoneNumberTypeViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.PhoneNumberTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PhoneNumberTypeViewModel] &&\r\n      props.errors[name as keyof PhoneNumberTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PhoneNumberTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PhoneNumberTypeCreate = withFormik<Props, PhoneNumberTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PhoneNumberTypeViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.phoneNumberTypeID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<PhoneNumberTypeViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new PhoneNumberTypeMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'phonenumbertypes',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PhoneNumberTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'PhoneNumberTypeCreate',\r\n})(PhoneNumberTypeCreateDisplay);\r\n\r\ninterface PhoneNumberTypeCreateComponentProps {}\r\n\r\ninterface PhoneNumberTypeCreateComponentState {\r\n  model?: PhoneNumberTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PhoneNumberTypeCreateComponent extends React.Component<\r\n  PhoneNumberTypeCreateComponentProps,\r\n  PhoneNumberTypeCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PhoneNumberTypeCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b438473f7b3bb37d03958af0d0a2d720</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport PhoneNumberTypeMapper from './phoneNumberTypeMapper';\r\nimport PhoneNumberTypeViewModel from './phoneNumberTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: PhoneNumberTypeViewModel;\r\n}\r\n\r\nconst PhoneNumberTypeDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"phoneNumberTypeID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          PhoneNumberTypeID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.phoneNumberTypeID)}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  phoneNumberTypeID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PhoneNumberTypeDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PhoneNumberTypeDetailComponentState {\r\n  model?: PhoneNumberTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PhoneNumberTypeDetailComponent extends React.Component<\r\n  PhoneNumberTypeDetailComponentProps,\r\n  PhoneNumberTypeDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'phonenumbertypes/' +\r\n          this.props.match.params.phoneNumberTypeID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PhoneNumberTypeClientResponseModel;\r\n\r\n          let mapper = new PhoneNumberTypeMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PhoneNumberTypeDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3c6e44876f930c6a07599b7d3fbec6d5</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport PhoneNumberTypeViewModel from './phoneNumberTypeViewModel';\r\nimport PhoneNumberTypeMapper from './phoneNumberTypeMapper';\r\n\r\ninterface Props {\r\n  model?: PhoneNumberTypeViewModel;\r\n}\r\n\r\nconst PhoneNumberTypeEditDisplay = (\r\n  props: FormikProps<PhoneNumberTypeViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.PhoneNumberTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PhoneNumberTypeViewModel] &&\r\n      props.errors[name as keyof PhoneNumberTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PhoneNumberTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('phoneNumberTypeID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PhoneNumberTypeID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"phoneNumberTypeID\"\r\n            className={\r\n              errorExistForField('phoneNumberTypeID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('phoneNumberTypeID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('phoneNumberTypeID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PhoneNumberTypeUpdate = withFormik<Props, PhoneNumberTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PhoneNumberTypeViewModel();\r\n    response.setProperties(\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.phoneNumberTypeID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<PhoneNumberTypeViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.phoneNumberTypeID == 0) {\r\n      errors.phoneNumberTypeID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new PhoneNumberTypeMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'phonenumbertypes/' + values.phoneNumberTypeID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.PhoneNumberTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'PhoneNumberTypeEdit',\r\n})(PhoneNumberTypeEditDisplay);\r\n\r\ninterface IParams {\r\n  phoneNumberTypeID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PhoneNumberTypeEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PhoneNumberTypeEditComponentState {\r\n  model?: PhoneNumberTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PhoneNumberTypeEditComponent extends React.Component<\r\n  PhoneNumberTypeEditComponentProps,\r\n  PhoneNumberTypeEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'phonenumbertypes/' +\r\n          this.props.match.params.phoneNumberTypeID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PhoneNumberTypeClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PhoneNumberTypeMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PhoneNumberTypeUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>08ec334e000015d7f9c85381cb8be6ce</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PhoneNumberTypeMapper from './phoneNumberTypeMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport PhoneNumberTypeViewModel from './phoneNumberTypeViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface PhoneNumberTypeSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface PhoneNumberTypeSearchComponentState {\r\n  records: Array<PhoneNumberTypeViewModel>;\r\n  filteredRecords: Array<PhoneNumberTypeViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PhoneNumberTypeSearchComponent extends React.Component<\r\n  PhoneNumberTypeSearchComponentProps,\r\n  PhoneNumberTypeSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.PhoneNumberTypeClientResponseModel>(),\r\n    filteredRecords: new Array<Api.PhoneNumberTypeClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.PhoneNumberTypeClientResponseModel) {\r\n    this.props.history.push('/phonenumbertypes/edit/' + row.phoneNumberTypeID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.PhoneNumberTypeClientResponseModel) {\r\n    this.props.history.push('/phonenumbertypes/' + row.phoneNumberTypeID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/phonenumbertypes/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PhoneNumberTypeClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'phonenumbertypes/' + row.phoneNumberTypeID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'phonenumbertypes' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.PhoneNumberTypeClientResponseModel\r\n          >;\r\n          let viewModels: Array<PhoneNumberTypeViewModel> = [];\r\n          let mapper = new PhoneNumberTypeMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PhoneNumberTypeViewModel>(),\r\n            filteredRecords: new Array<PhoneNumberTypeViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'PhoneNumberType',\r\n                columns: [\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PhoneNumberTypeID',\r\n                    accessor: 'phoneNumberTypeID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.phoneNumberTypeID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.PhoneNumberTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.PhoneNumberTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.PhoneNumberTypeClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>79c0309ae6c00c641c3bd98409b8e3d5</Hash>\r\n</Codenesium>*/","export default class StateProvinceViewModel {\r\n  countryRegionCode: string;\r\n  isOnlyStateProvinceFlag: boolean;\r\n  modifiedDate: any;\r\n  name: string;\r\n  rowguid: any;\r\n  stateProvinceCode: string;\r\n  stateProvinceID: number;\r\n  territoryID: number;\r\n\r\n  constructor() {\r\n    this.countryRegionCode = '';\r\n    this.isOnlyStateProvinceFlag = false;\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.rowguid = undefined;\r\n    this.stateProvinceCode = '';\r\n    this.stateProvinceID = 0;\r\n    this.territoryID = 0;\r\n  }\r\n\r\n  setProperties(\r\n    countryRegionCode: string,\r\n    isOnlyStateProvinceFlag: boolean,\r\n    modifiedDate: any,\r\n    name: string,\r\n    rowguid: any,\r\n    stateProvinceCode: string,\r\n    stateProvinceID: number,\r\n    territoryID: number\r\n  ): void {\r\n    this.countryRegionCode = countryRegionCode;\r\n    this.isOnlyStateProvinceFlag = isOnlyStateProvinceFlag;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.rowguid = rowguid;\r\n    this.stateProvinceCode = stateProvinceCode;\r\n    this.stateProvinceID = stateProvinceID;\r\n    this.territoryID = territoryID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>41d9e20059dab71e1499b6c13f58572c</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport StateProvinceViewModel from './stateProvinceViewModel';\r\n\r\nexport default class StateProvinceMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.StateProvinceClientResponseModel\r\n  ): StateProvinceViewModel {\r\n    let response = new StateProvinceViewModel();\r\n    response.setProperties(\r\n      dto.countryRegionCode,\r\n      dto.isOnlyStateProvinceFlag,\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.rowguid,\r\n      dto.stateProvinceCode,\r\n      dto.stateProvinceID,\r\n      dto.territoryID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: StateProvinceViewModel\r\n  ): Api.StateProvinceClientRequestModel {\r\n    let response = new Api.StateProvinceClientRequestModel();\r\n    response.setProperties(\r\n      model.countryRegionCode,\r\n      model.isOnlyStateProvinceFlag,\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.rowguid,\r\n      model.stateProvinceCode,\r\n      model.stateProvinceID,\r\n      model.territoryID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1aea8f144ac3df1de1ba459b40f457ea</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport StateProvinceMapper from './stateProvinceMapper';\r\nimport StateProvinceViewModel from './stateProvinceViewModel';\r\n\r\ninterface Props {\r\n  model?: StateProvinceViewModel;\r\n}\r\n\r\nconst StateProvinceCreateDisplay: React.SFC<\r\n  FormikProps<StateProvinceViewModel>\r\n> = (props: FormikProps<StateProvinceViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.StateProvinceClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof StateProvinceViewModel] &&\r\n      props.errors[name as keyof StateProvinceViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof StateProvinceViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('countryRegionCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CountryRegionCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"countryRegionCode\"\r\n            className={\r\n              errorExistForField('countryRegionCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('countryRegionCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('countryRegionCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('isOnlyStateProvinceFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          IsOnlyStateProvinceFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"isOnlyStateProvinceFlag\"\r\n            className={\r\n              errorExistForField('isOnlyStateProvinceFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('isOnlyStateProvinceFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('isOnlyStateProvinceFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('stateProvinceCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StateProvinceCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"stateProvinceCode\"\r\n            className={\r\n              errorExistForField('stateProvinceCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('stateProvinceCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('stateProvinceCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('territoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"territoryID\"\r\n            className={\r\n              errorExistForField('territoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('territoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('territoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst StateProvinceCreate = withFormik<Props, StateProvinceViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new StateProvinceViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.countryRegionCode,\r\n        props.model!.isOnlyStateProvinceFlag,\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.rowguid,\r\n        props.model!.stateProvinceCode,\r\n        props.model!.stateProvinceID,\r\n        props.model!.territoryID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<StateProvinceViewModel> = {};\r\n\r\n    if (values.countryRegionCode == '') {\r\n      errors.countryRegionCode = 'Required';\r\n    }\r\n    if (values.isOnlyStateProvinceFlag == false) {\r\n      errors.isOnlyStateProvinceFlag = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.stateProvinceCode == '') {\r\n      errors.stateProvinceCode = 'Required';\r\n    }\r\n    if (values.territoryID == 0) {\r\n      errors.territoryID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new StateProvinceMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'stateprovinces',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.StateProvinceClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'StateProvinceCreate',\r\n})(StateProvinceCreateDisplay);\r\n\r\ninterface StateProvinceCreateComponentProps {}\r\n\r\ninterface StateProvinceCreateComponentState {\r\n  model?: StateProvinceViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class StateProvinceCreateComponent extends React.Component<\r\n  StateProvinceCreateComponentProps,\r\n  StateProvinceCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <StateProvinceCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d64a87556f918d722309217adae32055</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport StateProvinceMapper from './stateProvinceMapper';\r\nimport StateProvinceViewModel from './stateProvinceViewModel';\r\n\r\ninterface Props {\r\n  model?: StateProvinceViewModel;\r\n}\r\n\r\nconst StateProvinceDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"countryRegionCode\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          CountryRegionCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.countryRegionCode)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"isOnlyStateProvinceFlag\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          IsOnlyStateProvinceFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.isOnlyStateProvinceFlag)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"stateProvinceCode\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          StateProvinceCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.stateProvinceCode)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"stateProvinceID\" className={'col-sm-2 col-form-label'}>\r\n          StateProvinceID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.stateProvinceID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"territoryID\" className={'col-sm-2 col-form-label'}>\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.territoryID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  stateProvinceID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface StateProvinceDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface StateProvinceDetailComponentState {\r\n  model?: StateProvinceViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class StateProvinceDetailComponent extends React.Component<\r\n  StateProvinceDetailComponentProps,\r\n  StateProvinceDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'stateprovinces/' +\r\n          this.props.match.params.stateProvinceID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.StateProvinceClientResponseModel;\r\n\r\n          let mapper = new StateProvinceMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <StateProvinceDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>021946d3c7ecddcd7039c21a1a8189e4</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport StateProvinceViewModel from './stateProvinceViewModel';\r\nimport StateProvinceMapper from './stateProvinceMapper';\r\n\r\ninterface Props {\r\n  model?: StateProvinceViewModel;\r\n}\r\n\r\nconst StateProvinceEditDisplay = (\r\n  props: FormikProps<StateProvinceViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.StateProvinceClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof StateProvinceViewModel] &&\r\n      props.errors[name as keyof StateProvinceViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof StateProvinceViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('countryRegionCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CountryRegionCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"countryRegionCode\"\r\n            className={\r\n              errorExistForField('countryRegionCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('countryRegionCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('countryRegionCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('isOnlyStateProvinceFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          IsOnlyStateProvinceFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"isOnlyStateProvinceFlag\"\r\n            className={\r\n              errorExistForField('isOnlyStateProvinceFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('isOnlyStateProvinceFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('isOnlyStateProvinceFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('stateProvinceCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StateProvinceCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"stateProvinceCode\"\r\n            className={\r\n              errorExistForField('stateProvinceCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('stateProvinceCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('stateProvinceCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('stateProvinceID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StateProvinceID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"stateProvinceID\"\r\n            className={\r\n              errorExistForField('stateProvinceID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('stateProvinceID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('stateProvinceID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('territoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"territoryID\"\r\n            className={\r\n              errorExistForField('territoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('territoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('territoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst StateProvinceUpdate = withFormik<Props, StateProvinceViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new StateProvinceViewModel();\r\n    response.setProperties(\r\n      props.model!.countryRegionCode,\r\n      props.model!.isOnlyStateProvinceFlag,\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.rowguid,\r\n      props.model!.stateProvinceCode,\r\n      props.model!.stateProvinceID,\r\n      props.model!.territoryID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<StateProvinceViewModel> = {};\r\n\r\n    if (values.countryRegionCode == '') {\r\n      errors.countryRegionCode = 'Required';\r\n    }\r\n    if (values.isOnlyStateProvinceFlag == false) {\r\n      errors.isOnlyStateProvinceFlag = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.stateProvinceCode == '') {\r\n      errors.stateProvinceCode = 'Required';\r\n    }\r\n    if (values.stateProvinceID == 0) {\r\n      errors.stateProvinceID = 'Required';\r\n    }\r\n    if (values.territoryID == 0) {\r\n      errors.territoryID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new StateProvinceMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'stateprovinces/' + values.stateProvinceID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.StateProvinceClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'StateProvinceEdit',\r\n})(StateProvinceEditDisplay);\r\n\r\ninterface IParams {\r\n  stateProvinceID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface StateProvinceEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface StateProvinceEditComponentState {\r\n  model?: StateProvinceViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class StateProvinceEditComponent extends React.Component<\r\n  StateProvinceEditComponentProps,\r\n  StateProvinceEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'stateprovinces/' +\r\n          this.props.match.params.stateProvinceID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.StateProvinceClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new StateProvinceMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <StateProvinceUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>fb15f966f77cf3668ab322951ce69bd8</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport StateProvinceMapper from './stateProvinceMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport StateProvinceViewModel from './stateProvinceViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface StateProvinceSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface StateProvinceSearchComponentState {\r\n  records: Array<StateProvinceViewModel>;\r\n  filteredRecords: Array<StateProvinceViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class StateProvinceSearchComponent extends React.Component<\r\n  StateProvinceSearchComponentProps,\r\n  StateProvinceSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.StateProvinceClientResponseModel>(),\r\n    filteredRecords: new Array<Api.StateProvinceClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.StateProvinceClientResponseModel) {\r\n    this.props.history.push('/stateprovinces/edit/' + row.stateProvinceID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.StateProvinceClientResponseModel) {\r\n    this.props.history.push('/stateprovinces/' + row.stateProvinceID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/stateprovinces/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.StateProvinceClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'stateprovinces/' + row.stateProvinceID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'stateprovinces' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.StateProvinceClientResponseModel\r\n          >;\r\n          let viewModels: Array<StateProvinceViewModel> = [];\r\n          let mapper = new StateProvinceMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<StateProvinceViewModel>(),\r\n            filteredRecords: new Array<StateProvinceViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'StateProvince',\r\n                columns: [\r\n                  {\r\n                    Header: 'CountryRegionCode',\r\n                    accessor: 'countryRegionCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.countryRegionCode)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'IsOnlyStateProvinceFlag',\r\n                    accessor: 'isOnlyStateProvinceFlag',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.isOnlyStateProvinceFlag)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StateProvinceCode',\r\n                    accessor: 'stateProvinceCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.stateProvinceCode)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StateProvinceID',\r\n                    accessor: 'stateProvinceID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.stateProvinceID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TerritoryID',\r\n                    accessor: 'territoryID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.territoryID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.StateProvinceClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.StateProvinceClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.StateProvinceClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>389956c4b6e397ff29325f39cccd38ca</Hash>\r\n</Codenesium>*/","export default class BillOfMaterialViewModel {\r\n  billOfMaterialsID: number;\r\n  bOMLevel: number;\r\n  componentID: number;\r\n  endDate: any;\r\n  modifiedDate: any;\r\n  perAssemblyQty: number;\r\n  productAssemblyID: any;\r\n  startDate: any;\r\n  unitMeasureCode: string;\r\n\r\n  constructor() {\r\n    this.billOfMaterialsID = 0;\r\n    this.bOMLevel = 0;\r\n    this.componentID = 0;\r\n    this.endDate = undefined;\r\n    this.modifiedDate = undefined;\r\n    this.perAssemblyQty = 0;\r\n    this.productAssemblyID = undefined;\r\n    this.startDate = undefined;\r\n    this.unitMeasureCode = '';\r\n  }\r\n\r\n  setProperties(\r\n    billOfMaterialsID: number,\r\n    bOMLevel: number,\r\n    componentID: number,\r\n    endDate: any,\r\n    modifiedDate: any,\r\n    perAssemblyQty: number,\r\n    productAssemblyID: any,\r\n    startDate: any,\r\n    unitMeasureCode: string\r\n  ): void {\r\n    this.billOfMaterialsID = billOfMaterialsID;\r\n    this.bOMLevel = bOMLevel;\r\n    this.componentID = componentID;\r\n    this.endDate = endDate;\r\n    this.modifiedDate = modifiedDate;\r\n    this.perAssemblyQty = perAssemblyQty;\r\n    this.productAssemblyID = productAssemblyID;\r\n    this.startDate = startDate;\r\n    this.unitMeasureCode = unitMeasureCode;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>66d06e8d912908b8097a5b5391530851</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport BillOfMaterialViewModel from './billOfMaterialViewModel';\r\n\r\nexport default class BillOfMaterialMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.BillOfMaterialClientResponseModel\r\n  ): BillOfMaterialViewModel {\r\n    let response = new BillOfMaterialViewModel();\r\n    response.setProperties(\r\n      dto.billOfMaterialsID,\r\n      dto.bOMLevel,\r\n      dto.componentID,\r\n      dto.endDate,\r\n      dto.modifiedDate,\r\n      dto.perAssemblyQty,\r\n      dto.productAssemblyID,\r\n      dto.startDate,\r\n      dto.unitMeasureCode\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: BillOfMaterialViewModel\r\n  ): Api.BillOfMaterialClientRequestModel {\r\n    let response = new Api.BillOfMaterialClientRequestModel();\r\n    response.setProperties(\r\n      model.billOfMaterialsID,\r\n      model.bOMLevel,\r\n      model.componentID,\r\n      model.endDate,\r\n      model.modifiedDate,\r\n      model.perAssemblyQty,\r\n      model.productAssemblyID,\r\n      model.startDate,\r\n      model.unitMeasureCode\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>65d4bbe4082d024fbb43e4a7b7cf3c97</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport BillOfMaterialMapper from './billOfMaterialMapper';\r\nimport BillOfMaterialViewModel from './billOfMaterialViewModel';\r\n\r\ninterface Props {\r\n  model?: BillOfMaterialViewModel;\r\n}\r\n\r\nconst BillOfMaterialCreateDisplay: React.SFC<\r\n  FormikProps<BillOfMaterialViewModel>\r\n> = (props: FormikProps<BillOfMaterialViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.BillOfMaterialClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof BillOfMaterialViewModel] &&\r\n      props.errors[name as keyof BillOfMaterialViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof BillOfMaterialViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('bOMLevel')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BOMLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"bOMLevel\"\r\n            className={\r\n              errorExistForField('bOMLevel')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('bOMLevel') && (\r\n            <small className=\"text-danger\">{errorsForField('bOMLevel')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('componentID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ComponentID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"componentID\"\r\n            className={\r\n              errorExistForField('componentID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('componentID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('componentID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endDate\"\r\n            className={\r\n              errorExistForField('endDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endDate') && (\r\n            <small className=\"text-danger\">{errorsForField('endDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('perAssemblyQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PerAssemblyQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"perAssemblyQty\"\r\n            className={\r\n              errorExistForField('perAssemblyQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('perAssemblyQty') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('perAssemblyQty')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productAssemblyID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductAssemblyID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productAssemblyID\"\r\n            className={\r\n              errorExistForField('productAssemblyID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productAssemblyID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productAssemblyID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('startDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"startDate\"\r\n            className={\r\n              errorExistForField('startDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('startDate') && (\r\n            <small className=\"text-danger\">{errorsForField('startDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('unitMeasureCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          UnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"unitMeasureCode\"\r\n            className={\r\n              errorExistForField('unitMeasureCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('unitMeasureCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('unitMeasureCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst BillOfMaterialCreate = withFormik<Props, BillOfMaterialViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new BillOfMaterialViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.billOfMaterialsID,\r\n        props.model!.bOMLevel,\r\n        props.model!.componentID,\r\n        props.model!.endDate,\r\n        props.model!.modifiedDate,\r\n        props.model!.perAssemblyQty,\r\n        props.model!.productAssemblyID,\r\n        props.model!.startDate,\r\n        props.model!.unitMeasureCode\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<BillOfMaterialViewModel> = {};\r\n\r\n    if (values.bOMLevel == 0) {\r\n      errors.bOMLevel = 'Required';\r\n    }\r\n    if (values.componentID == 0) {\r\n      errors.componentID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.perAssemblyQty == 0) {\r\n      errors.perAssemblyQty = 'Required';\r\n    }\r\n    if (values.startDate == undefined) {\r\n      errors.startDate = 'Required';\r\n    }\r\n    if (values.unitMeasureCode == '') {\r\n      errors.unitMeasureCode = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new BillOfMaterialMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'billofmaterials',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.BillOfMaterialClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'BillOfMaterialCreate',\r\n})(BillOfMaterialCreateDisplay);\r\n\r\ninterface BillOfMaterialCreateComponentProps {}\r\n\r\ninterface BillOfMaterialCreateComponentState {\r\n  model?: BillOfMaterialViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class BillOfMaterialCreateComponent extends React.Component<\r\n  BillOfMaterialCreateComponentProps,\r\n  BillOfMaterialCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <BillOfMaterialCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>42add7ad89aecfdbdb2a19682f184486</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport BillOfMaterialMapper from './billOfMaterialMapper';\r\nimport BillOfMaterialViewModel from './billOfMaterialViewModel';\r\n\r\ninterface Props {\r\n  model?: BillOfMaterialViewModel;\r\n}\r\n\r\nconst BillOfMaterialDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"billOfMaterialsID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          BillOfMaterialsID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.billOfMaterialsID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"bOMLevel\" className={'col-sm-2 col-form-label'}>\r\n          BOMLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.bOMLevel)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"componentID\" className={'col-sm-2 col-form-label'}>\r\n          ComponentID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.componentID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"endDate\" className={'col-sm-2 col-form-label'}>\r\n          EndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.endDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"perAssemblyQty\" className={'col-sm-2 col-form-label'}>\r\n          PerAssemblyQty\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.perAssemblyQty)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"productAssemblyID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ProductAssemblyID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.productAssemblyID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"startDate\" className={'col-sm-2 col-form-label'}>\r\n          StartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.startDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"unitMeasureCode\" className={'col-sm-2 col-form-label'}>\r\n          UnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.unitMeasureCode)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  billOfMaterialsID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface BillOfMaterialDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface BillOfMaterialDetailComponentState {\r\n  model?: BillOfMaterialViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class BillOfMaterialDetailComponent extends React.Component<\r\n  BillOfMaterialDetailComponentProps,\r\n  BillOfMaterialDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'billofmaterials/' +\r\n          this.props.match.params.billOfMaterialsID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.BillOfMaterialClientResponseModel;\r\n\r\n          let mapper = new BillOfMaterialMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <BillOfMaterialDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c2af291801381fb0334ff03b90948585</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport BillOfMaterialViewModel from './billOfMaterialViewModel';\r\nimport BillOfMaterialMapper from './billOfMaterialMapper';\r\n\r\ninterface Props {\r\n  model?: BillOfMaterialViewModel;\r\n}\r\n\r\nconst BillOfMaterialEditDisplay = (\r\n  props: FormikProps<BillOfMaterialViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.BillOfMaterialClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof BillOfMaterialViewModel] &&\r\n      props.errors[name as keyof BillOfMaterialViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof BillOfMaterialViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('billOfMaterialsID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BillOfMaterialsID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"billOfMaterialsID\"\r\n            className={\r\n              errorExistForField('billOfMaterialsID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('billOfMaterialsID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('billOfMaterialsID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('bOMLevel')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BOMLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"bOMLevel\"\r\n            className={\r\n              errorExistForField('bOMLevel')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('bOMLevel') && (\r\n            <small className=\"text-danger\">{errorsForField('bOMLevel')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('componentID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ComponentID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"componentID\"\r\n            className={\r\n              errorExistForField('componentID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('componentID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('componentID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endDate\"\r\n            className={\r\n              errorExistForField('endDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endDate') && (\r\n            <small className=\"text-danger\">{errorsForField('endDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('perAssemblyQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PerAssemblyQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"perAssemblyQty\"\r\n            className={\r\n              errorExistForField('perAssemblyQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('perAssemblyQty') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('perAssemblyQty')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productAssemblyID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductAssemblyID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productAssemblyID\"\r\n            className={\r\n              errorExistForField('productAssemblyID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productAssemblyID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productAssemblyID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('startDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"startDate\"\r\n            className={\r\n              errorExistForField('startDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('startDate') && (\r\n            <small className=\"text-danger\">{errorsForField('startDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('unitMeasureCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          UnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"unitMeasureCode\"\r\n            className={\r\n              errorExistForField('unitMeasureCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('unitMeasureCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('unitMeasureCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst BillOfMaterialUpdate = withFormik<Props, BillOfMaterialViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new BillOfMaterialViewModel();\r\n    response.setProperties(\r\n      props.model!.billOfMaterialsID,\r\n      props.model!.bOMLevel,\r\n      props.model!.componentID,\r\n      props.model!.endDate,\r\n      props.model!.modifiedDate,\r\n      props.model!.perAssemblyQty,\r\n      props.model!.productAssemblyID,\r\n      props.model!.startDate,\r\n      props.model!.unitMeasureCode\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<BillOfMaterialViewModel> = {};\r\n\r\n    if (values.billOfMaterialsID == 0) {\r\n      errors.billOfMaterialsID = 'Required';\r\n    }\r\n    if (values.bOMLevel == 0) {\r\n      errors.bOMLevel = 'Required';\r\n    }\r\n    if (values.componentID == 0) {\r\n      errors.componentID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.perAssemblyQty == 0) {\r\n      errors.perAssemblyQty = 'Required';\r\n    }\r\n    if (values.startDate == undefined) {\r\n      errors.startDate = 'Required';\r\n    }\r\n    if (values.unitMeasureCode == '') {\r\n      errors.unitMeasureCode = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new BillOfMaterialMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'billofmaterials/' + values.billOfMaterialsID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.BillOfMaterialClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'BillOfMaterialEdit',\r\n})(BillOfMaterialEditDisplay);\r\n\r\ninterface IParams {\r\n  billOfMaterialsID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface BillOfMaterialEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface BillOfMaterialEditComponentState {\r\n  model?: BillOfMaterialViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class BillOfMaterialEditComponent extends React.Component<\r\n  BillOfMaterialEditComponentProps,\r\n  BillOfMaterialEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'billofmaterials/' +\r\n          this.props.match.params.billOfMaterialsID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.BillOfMaterialClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new BillOfMaterialMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <BillOfMaterialUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e0f5ffe4424b1f9c4980a133857f9443</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport BillOfMaterialMapper from './billOfMaterialMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport BillOfMaterialViewModel from './billOfMaterialViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface BillOfMaterialSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface BillOfMaterialSearchComponentState {\r\n  records: Array<BillOfMaterialViewModel>;\r\n  filteredRecords: Array<BillOfMaterialViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class BillOfMaterialSearchComponent extends React.Component<\r\n  BillOfMaterialSearchComponentProps,\r\n  BillOfMaterialSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.BillOfMaterialClientResponseModel>(),\r\n    filteredRecords: new Array<Api.BillOfMaterialClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.BillOfMaterialClientResponseModel) {\r\n    this.props.history.push('/billofmaterials/edit/' + row.billOfMaterialsID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.BillOfMaterialClientResponseModel) {\r\n    this.props.history.push('/billofmaterials/' + row.billOfMaterialsID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/billofmaterials/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.BillOfMaterialClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'billofmaterials/' + row.billOfMaterialsID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'billofmaterials' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.BillOfMaterialClientResponseModel\r\n          >;\r\n          let viewModels: Array<BillOfMaterialViewModel> = [];\r\n          let mapper = new BillOfMaterialMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<BillOfMaterialViewModel>(),\r\n            filteredRecords: new Array<BillOfMaterialViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'BillOfMaterial',\r\n                columns: [\r\n                  {\r\n                    Header: 'BillOfMaterialsID',\r\n                    accessor: 'billOfMaterialsID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.billOfMaterialsID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'BOMLevel',\r\n                    accessor: 'bOMLevel',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.bOMLevel)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ComponentID',\r\n                    accessor: 'componentID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.componentID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'EndDate',\r\n                    accessor: 'endDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.endDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PerAssemblyQty',\r\n                    accessor: 'perAssemblyQty',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.perAssemblyQty)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductAssemblyID',\r\n                    accessor: 'productAssemblyID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.productAssemblyID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StartDate',\r\n                    accessor: 'startDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.startDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'UnitMeasureCode',\r\n                    accessor: 'unitMeasureCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.unitMeasureCode)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.BillOfMaterialClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.BillOfMaterialClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.BillOfMaterialClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>21213251657bce38742a3d422eb53d0f</Hash>\r\n</Codenesium>*/","export default class CultureViewModel {\r\n  cultureID: string;\r\n  modifiedDate: any;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.cultureID = '';\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(cultureID: string, modifiedDate: any, name: string): void {\r\n    this.cultureID = cultureID;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>01b45832791f34e9d1da0e4037a55901</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CultureViewModel from './cultureViewModel';\r\n\r\nexport default class CultureMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CultureClientResponseModel\r\n  ): CultureViewModel {\r\n    let response = new CultureViewModel();\r\n    response.setProperties(dto.cultureID, dto.modifiedDate, dto.name);\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CultureViewModel\r\n  ): Api.CultureClientRequestModel {\r\n    let response = new Api.CultureClientRequestModel();\r\n    response.setProperties(model.cultureID, model.modifiedDate, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>322cdfc814a0dc6330a096891a836482</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport CultureMapper from './cultureMapper';\r\nimport CultureViewModel from './cultureViewModel';\r\n\r\ninterface Props {\r\n  model?: CultureViewModel;\r\n}\r\n\r\nconst CultureCreateDisplay: React.SFC<FormikProps<CultureViewModel>> = (\r\n  props: FormikProps<CultureViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.CultureClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CultureViewModel] &&\r\n      props.errors[name as keyof CultureViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CultureViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CultureCreate = withFormik<Props, CultureViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CultureViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.cultureID,\r\n        props.model!.modifiedDate,\r\n        props.model!.name\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<CultureViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new CultureMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'cultures',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CultureClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'CultureCreate',\r\n})(CultureCreateDisplay);\r\n\r\ninterface CultureCreateComponentProps {}\r\n\r\ninterface CultureCreateComponentState {\r\n  model?: CultureViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CultureCreateComponent extends React.Component<\r\n  CultureCreateComponentProps,\r\n  CultureCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CultureCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e06b1dbb39334397b854e8e4b777c53e</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CultureMapper from './cultureMapper';\r\nimport CultureViewModel from './cultureViewModel';\r\n\r\ninterface Props {\r\n  model?: CultureViewModel;\r\n}\r\n\r\nconst CultureDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"cultureID\" className={'col-sm-2 col-form-label'}>\r\n          CultureID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.cultureID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  cultureID: string;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CultureDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CultureDetailComponentState {\r\n  model?: CultureViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CultureDetailComponent extends React.Component<\r\n  CultureDetailComponentProps,\r\n  CultureDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(Constants.ApiUrl + 'cultures/' + this.props.match.params.cultureID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CultureClientResponseModel;\r\n\r\n          let mapper = new CultureMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CultureDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6c11059be80f074d5a2bb3b73b02e4b1</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CultureViewModel from './cultureViewModel';\r\nimport CultureMapper from './cultureMapper';\r\n\r\ninterface Props {\r\n  model?: CultureViewModel;\r\n}\r\n\r\nconst CultureEditDisplay = (props: FormikProps<CultureViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.CultureClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CultureViewModel] &&\r\n      props.errors[name as keyof CultureViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CultureViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('cultureID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CultureID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"cultureID\"\r\n            className={\r\n              errorExistForField('cultureID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('cultureID') && (\r\n            <small className=\"text-danger\">{errorsForField('cultureID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CultureUpdate = withFormik<Props, CultureViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CultureViewModel();\r\n    response.setProperties(\r\n      props.model!.cultureID,\r\n      props.model!.modifiedDate,\r\n      props.model!.name\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<CultureViewModel> = {};\r\n\r\n    if (values.cultureID == '') {\r\n      errors.cultureID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new CultureMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'cultures/' + values.cultureID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.CultureClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'CultureEdit',\r\n})(CultureEditDisplay);\r\n\r\ninterface IParams {\r\n  cultureID: string;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CultureEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CultureEditComponentState {\r\n  model?: CultureViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CultureEditComponent extends React.Component<\r\n  CultureEditComponentProps,\r\n  CultureEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(Constants.ApiUrl + 'cultures/' + this.props.match.params.cultureID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CultureClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CultureMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CultureUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d70606bc7af57a396dba2a31ec42ef3e</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CultureMapper from './cultureMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport CultureViewModel from './cultureViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface CultureSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface CultureSearchComponentState {\r\n  records: Array<CultureViewModel>;\r\n  filteredRecords: Array<CultureViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class CultureSearchComponent extends React.Component<\r\n  CultureSearchComponentProps,\r\n  CultureSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.CultureClientResponseModel>(),\r\n    filteredRecords: new Array<Api.CultureClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.CultureClientResponseModel) {\r\n    this.props.history.push('/cultures/edit/' + row.cultureID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.CultureClientResponseModel) {\r\n    this.props.history.push('/cultures/' + row.cultureID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/cultures/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.CultureClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'cultures/' + row.cultureID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'cultures' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.CultureClientResponseModel>;\r\n          let viewModels: Array<CultureViewModel> = [];\r\n          let mapper = new CultureMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<CultureViewModel>(),\r\n            filteredRecords: new Array<CultureViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Culture',\r\n                columns: [\r\n                  {\r\n                    Header: 'CultureID',\r\n                    accessor: 'cultureID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.cultureID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.CultureClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.CultureClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.CultureClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1eb7eb30383615a186c0ea80ed090d05</Hash>\r\n</Codenesium>*/","export default class DocumentViewModel {\r\n  changeNumber: number;\r\n  document1: any;\r\n  documentLevel: any;\r\n  documentSummary: string;\r\n  fileExtension: string;\r\n  fileName: string;\r\n  folderFlag: boolean;\r\n  modifiedDate: any;\r\n  owner: number;\r\n  revision: string;\r\n  rowguid: any;\r\n  status: number;\r\n  title: string;\r\n\r\n  constructor() {\r\n    this.changeNumber = 0;\r\n    this.document1 = undefined;\r\n    this.documentLevel = undefined;\r\n    this.documentSummary = '';\r\n    this.fileExtension = '';\r\n    this.fileName = '';\r\n    this.folderFlag = false;\r\n    this.modifiedDate = undefined;\r\n    this.owner = 0;\r\n    this.revision = '';\r\n    this.rowguid = undefined;\r\n    this.status = 0;\r\n    this.title = '';\r\n  }\r\n\r\n  setProperties(\r\n    changeNumber: number,\r\n    document1: any,\r\n    documentLevel: any,\r\n    documentSummary: string,\r\n    fileExtension: string,\r\n    fileName: string,\r\n    folderFlag: boolean,\r\n    modifiedDate: any,\r\n    owner: number,\r\n    revision: string,\r\n    rowguid: any,\r\n    status: number,\r\n    title: string\r\n  ): void {\r\n    this.changeNumber = changeNumber;\r\n    this.document1 = document1;\r\n    this.documentLevel = documentLevel;\r\n    this.documentSummary = documentSummary;\r\n    this.fileExtension = fileExtension;\r\n    this.fileName = fileName;\r\n    this.folderFlag = folderFlag;\r\n    this.modifiedDate = modifiedDate;\r\n    this.owner = owner;\r\n    this.revision = revision;\r\n    this.rowguid = rowguid;\r\n    this.status = status;\r\n    this.title = title;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8b56974621e8dfc295de58c127337338</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport DocumentViewModel from './documentViewModel';\r\n\r\nexport default class DocumentMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.DocumentClientResponseModel\r\n  ): DocumentViewModel {\r\n    let response = new DocumentViewModel();\r\n    response.setProperties(\r\n      dto.changeNumber,\r\n      dto.document1,\r\n      dto.documentLevel,\r\n      dto.documentSummary,\r\n      dto.fileExtension,\r\n      dto.fileName,\r\n      dto.folderFlag,\r\n      dto.modifiedDate,\r\n      dto.owner,\r\n      dto.revision,\r\n      dto.rowguid,\r\n      dto.status,\r\n      dto.title\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: DocumentViewModel\r\n  ): Api.DocumentClientRequestModel {\r\n    let response = new Api.DocumentClientRequestModel();\r\n    response.setProperties(\r\n      model.changeNumber,\r\n      model.document1,\r\n      model.documentLevel,\r\n      model.documentSummary,\r\n      model.fileExtension,\r\n      model.fileName,\r\n      model.folderFlag,\r\n      model.modifiedDate,\r\n      model.owner,\r\n      model.revision,\r\n      model.rowguid,\r\n      model.status,\r\n      model.title\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>11db9d2096af2b5a5fcd7163536096e2</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport DocumentMapper from './documentMapper';\r\nimport DocumentViewModel from './documentViewModel';\r\n\r\ninterface Props {\r\n  model?: DocumentViewModel;\r\n}\r\n\r\nconst DocumentCreateDisplay: React.SFC<FormikProps<DocumentViewModel>> = (\r\n  props: FormikProps<DocumentViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.DocumentClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof DocumentViewModel] &&\r\n      props.errors[name as keyof DocumentViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof DocumentViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('changeNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ChangeNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"changeNumber\"\r\n            className={\r\n              errorExistForField('changeNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('changeNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('changeNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('document1')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Document\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"document1\"\r\n            className={\r\n              errorExistForField('document1')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('document1') && (\r\n            <small className=\"text-danger\">{errorsForField('document1')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('documentLevel')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DocumentLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"documentLevel\"\r\n            className={\r\n              errorExistForField('documentLevel')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('documentLevel') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('documentLevel')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('documentSummary')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DocumentSummary\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"documentSummary\"\r\n            className={\r\n              errorExistForField('documentSummary')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('documentSummary') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('documentSummary')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('fileExtension')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FileExtension\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"fileExtension\"\r\n            className={\r\n              errorExistForField('fileExtension')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('fileExtension') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('fileExtension')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('fileName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FileName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"fileName\"\r\n            className={\r\n              errorExistForField('fileName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('fileName') && (\r\n            <small className=\"text-danger\">{errorsForField('fileName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('folderFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FolderFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"folderFlag\"\r\n            className={\r\n              errorExistForField('folderFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('folderFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('folderFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('owner')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Owner\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"owner\"\r\n            className={\r\n              errorExistForField('owner')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('owner') && (\r\n            <small className=\"text-danger\">{errorsForField('owner')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('revision')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Revision\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"revision\"\r\n            className={\r\n              errorExistForField('revision')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('revision') && (\r\n            <small className=\"text-danger\">{errorsForField('revision')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('status')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Status\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"status\"\r\n            className={\r\n              errorExistForField('status')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('status') && (\r\n            <small className=\"text-danger\">{errorsForField('status')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('title')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Title\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"title\"\r\n            className={\r\n              errorExistForField('title')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('title') && (\r\n            <small className=\"text-danger\">{errorsForField('title')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DocumentCreate = withFormik<Props, DocumentViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new DocumentViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.changeNumber,\r\n        props.model!.document1,\r\n        props.model!.documentLevel,\r\n        props.model!.documentSummary,\r\n        props.model!.fileExtension,\r\n        props.model!.fileName,\r\n        props.model!.folderFlag,\r\n        props.model!.modifiedDate,\r\n        props.model!.owner,\r\n        props.model!.revision,\r\n        props.model!.rowguid,\r\n        props.model!.status,\r\n        props.model!.title\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<DocumentViewModel> = {};\r\n\r\n    if (values.changeNumber == 0) {\r\n      errors.changeNumber = 'Required';\r\n    }\r\n    if (values.fileExtension == '') {\r\n      errors.fileExtension = 'Required';\r\n    }\r\n    if (values.fileName == '') {\r\n      errors.fileName = 'Required';\r\n    }\r\n    if (values.folderFlag == false) {\r\n      errors.folderFlag = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.owner == 0) {\r\n      errors.owner = 'Required';\r\n    }\r\n    if (values.revision == '') {\r\n      errors.revision = 'Required';\r\n    }\r\n    if (values.status == 0) {\r\n      errors.status = 'Required';\r\n    }\r\n    if (values.title == '') {\r\n      errors.title = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new DocumentMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'documents',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.DocumentClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'DocumentCreate',\r\n})(DocumentCreateDisplay);\r\n\r\ninterface DocumentCreateComponentProps {}\r\n\r\ninterface DocumentCreateComponentState {\r\n  model?: DocumentViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class DocumentCreateComponent extends React.Component<\r\n  DocumentCreateComponentProps,\r\n  DocumentCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <DocumentCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1183e931da0adf995436d1383c06b88a</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport DocumentMapper from './documentMapper';\r\nimport DocumentViewModel from './documentViewModel';\r\n\r\ninterface Props {\r\n  model?: DocumentViewModel;\r\n}\r\n\r\nconst DocumentDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"changeNumber\" className={'col-sm-2 col-form-label'}>\r\n          ChangeNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.changeNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"document1\" className={'col-sm-2 col-form-label'}>\r\n          Document\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.document1)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"documentLevel\" className={'col-sm-2 col-form-label'}>\r\n          DocumentLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.documentLevel)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"documentSummary\" className={'col-sm-2 col-form-label'}>\r\n          DocumentSummary\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.documentSummary)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"fileExtension\" className={'col-sm-2 col-form-label'}>\r\n          FileExtension\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.fileExtension)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"fileName\" className={'col-sm-2 col-form-label'}>\r\n          FileName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.fileName)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"folderFlag\" className={'col-sm-2 col-form-label'}>\r\n          FolderFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.folderFlag)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"owner\" className={'col-sm-2 col-form-label'}>\r\n          Owner\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.owner)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"revision\" className={'col-sm-2 col-form-label'}>\r\n          Revision\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.revision)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"status\" className={'col-sm-2 col-form-label'}>\r\n          Status\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.status)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"title\" className={'col-sm-2 col-form-label'}>\r\n          Title\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.title)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  rowguid: any;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface DocumentDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface DocumentDetailComponentState {\r\n  model?: DocumentViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class DocumentDetailComponent extends React.Component<\r\n  DocumentDetailComponentProps,\r\n  DocumentDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(Constants.ApiUrl + 'documents/' + this.props.match.params.rowguid, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.DocumentClientResponseModel;\r\n\r\n          let mapper = new DocumentMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <DocumentDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>08651dbd895bbdd5ea93a364c406f2f4</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport DocumentViewModel from './documentViewModel';\r\nimport DocumentMapper from './documentMapper';\r\n\r\ninterface Props {\r\n  model?: DocumentViewModel;\r\n}\r\n\r\nconst DocumentEditDisplay = (props: FormikProps<DocumentViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.DocumentClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof DocumentViewModel] &&\r\n      props.errors[name as keyof DocumentViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof DocumentViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('changeNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ChangeNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"changeNumber\"\r\n            className={\r\n              errorExistForField('changeNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('changeNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('changeNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('document1')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Document\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"document1\"\r\n            className={\r\n              errorExistForField('document1')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('document1') && (\r\n            <small className=\"text-danger\">{errorsForField('document1')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('documentLevel')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DocumentLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"documentLevel\"\r\n            className={\r\n              errorExistForField('documentLevel')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('documentLevel') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('documentLevel')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('documentSummary')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DocumentSummary\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"documentSummary\"\r\n            className={\r\n              errorExistForField('documentSummary')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('documentSummary') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('documentSummary')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('fileExtension')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FileExtension\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"fileExtension\"\r\n            className={\r\n              errorExistForField('fileExtension')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('fileExtension') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('fileExtension')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('fileName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FileName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"fileName\"\r\n            className={\r\n              errorExistForField('fileName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('fileName') && (\r\n            <small className=\"text-danger\">{errorsForField('fileName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('folderFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FolderFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"folderFlag\"\r\n            className={\r\n              errorExistForField('folderFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('folderFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('folderFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('owner')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Owner\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"owner\"\r\n            className={\r\n              errorExistForField('owner')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('owner') && (\r\n            <small className=\"text-danger\">{errorsForField('owner')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('revision')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Revision\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"revision\"\r\n            className={\r\n              errorExistForField('revision')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('revision') && (\r\n            <small className=\"text-danger\">{errorsForField('revision')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('status')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Status\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"status\"\r\n            className={\r\n              errorExistForField('status')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('status') && (\r\n            <small className=\"text-danger\">{errorsForField('status')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('title')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Title\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"title\"\r\n            className={\r\n              errorExistForField('title')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('title') && (\r\n            <small className=\"text-danger\">{errorsForField('title')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst DocumentUpdate = withFormik<Props, DocumentViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new DocumentViewModel();\r\n    response.setProperties(\r\n      props.model!.changeNumber,\r\n      props.model!.document1,\r\n      props.model!.documentLevel,\r\n      props.model!.documentSummary,\r\n      props.model!.fileExtension,\r\n      props.model!.fileName,\r\n      props.model!.folderFlag,\r\n      props.model!.modifiedDate,\r\n      props.model!.owner,\r\n      props.model!.revision,\r\n      props.model!.rowguid,\r\n      props.model!.status,\r\n      props.model!.title\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<DocumentViewModel> = {};\r\n\r\n    if (values.changeNumber == 0) {\r\n      errors.changeNumber = 'Required';\r\n    }\r\n    if (values.fileExtension == '') {\r\n      errors.fileExtension = 'Required';\r\n    }\r\n    if (values.fileName == '') {\r\n      errors.fileName = 'Required';\r\n    }\r\n    if (values.folderFlag == false) {\r\n      errors.folderFlag = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.owner == 0) {\r\n      errors.owner = 'Required';\r\n    }\r\n    if (values.revision == '') {\r\n      errors.revision = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.status == 0) {\r\n      errors.status = 'Required';\r\n    }\r\n    if (values.title == '') {\r\n      errors.title = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new DocumentMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'documents/' + values.rowguid,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.DocumentClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'DocumentEdit',\r\n})(DocumentEditDisplay);\r\n\r\ninterface IParams {\r\n  rowguid: any;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface DocumentEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface DocumentEditComponentState {\r\n  model?: DocumentViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class DocumentEditComponent extends React.Component<\r\n  DocumentEditComponentProps,\r\n  DocumentEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(Constants.ApiUrl + 'documents/' + this.props.match.params.rowguid, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.DocumentClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new DocumentMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <DocumentUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1c755c2328a5f40c446dda23754d6a16</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport DocumentMapper from './documentMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport DocumentViewModel from './documentViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface DocumentSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface DocumentSearchComponentState {\r\n  records: Array<DocumentViewModel>;\r\n  filteredRecords: Array<DocumentViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class DocumentSearchComponent extends React.Component<\r\n  DocumentSearchComponentProps,\r\n  DocumentSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.DocumentClientResponseModel>(),\r\n    filteredRecords: new Array<Api.DocumentClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.DocumentClientResponseModel) {\r\n    this.props.history.push('/documents/edit/' + row.rowguid);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.DocumentClientResponseModel) {\r\n    this.props.history.push('/documents/' + row.rowguid);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/documents/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.DocumentClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'documents/' + row.rowguid, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'documents' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.DocumentClientResponseModel>;\r\n          let viewModels: Array<DocumentViewModel> = [];\r\n          let mapper = new DocumentMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<DocumentViewModel>(),\r\n            filteredRecords: new Array<DocumentViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Document',\r\n                columns: [\r\n                  {\r\n                    Header: 'ChangeNumber',\r\n                    accessor: 'changeNumber',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.changeNumber)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Document',\r\n                    accessor: 'document1',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.document1)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'DocumentLevel',\r\n                    accessor: 'documentLevel',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.documentLevel)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'DocumentSummary',\r\n                    accessor: 'documentSummary',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.documentSummary)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FileExtension',\r\n                    accessor: 'fileExtension',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.fileExtension)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FileName',\r\n                    accessor: 'fileName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.fileName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FolderFlag',\r\n                    accessor: 'folderFlag',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.folderFlag)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Owner',\r\n                    accessor: 'owner',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.owner)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Revision',\r\n                    accessor: 'revision',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.revision)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Status',\r\n                    accessor: 'status',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.status)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Title',\r\n                    accessor: 'title',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.title)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.DocumentClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.DocumentClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.DocumentClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>57b54d86ffcd157415999dc87cccd567</Hash>\r\n</Codenesium>*/","export default class IllustrationViewModel {\r\n  diagram: string;\r\n  illustrationID: number;\r\n  modifiedDate: any;\r\n\r\n  constructor() {\r\n    this.diagram = '';\r\n    this.illustrationID = 0;\r\n    this.modifiedDate = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    diagram: string,\r\n    illustrationID: number,\r\n    modifiedDate: any\r\n  ): void {\r\n    this.diagram = diagram;\r\n    this.illustrationID = illustrationID;\r\n    this.modifiedDate = modifiedDate;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1856702d2b25b2e3447d3c756b5df0fe</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport IllustrationViewModel from './illustrationViewModel';\r\n\r\nexport default class IllustrationMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.IllustrationClientResponseModel\r\n  ): IllustrationViewModel {\r\n    let response = new IllustrationViewModel();\r\n    response.setProperties(dto.diagram, dto.illustrationID, dto.modifiedDate);\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: IllustrationViewModel\r\n  ): Api.IllustrationClientRequestModel {\r\n    let response = new Api.IllustrationClientRequestModel();\r\n    response.setProperties(\r\n      model.diagram,\r\n      model.illustrationID,\r\n      model.modifiedDate\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2b11de1f50c55171a8d9d6134c4eb26a</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport IllustrationMapper from './illustrationMapper';\r\nimport IllustrationViewModel from './illustrationViewModel';\r\n\r\ninterface Props {\r\n  model?: IllustrationViewModel;\r\n}\r\n\r\nconst IllustrationCreateDisplay: React.SFC<\r\n  FormikProps<IllustrationViewModel>\r\n> = (props: FormikProps<IllustrationViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.IllustrationClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof IllustrationViewModel] &&\r\n      props.errors[name as keyof IllustrationViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof IllustrationViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('diagram')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Diagram\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"diagram\"\r\n            className={\r\n              errorExistForField('diagram')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('diagram') && (\r\n            <small className=\"text-danger\">{errorsForField('diagram')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst IllustrationCreate = withFormik<Props, IllustrationViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new IllustrationViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.diagram,\r\n        props.model!.illustrationID,\r\n        props.model!.modifiedDate\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<IllustrationViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new IllustrationMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'illustrations',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.IllustrationClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'IllustrationCreate',\r\n})(IllustrationCreateDisplay);\r\n\r\ninterface IllustrationCreateComponentProps {}\r\n\r\ninterface IllustrationCreateComponentState {\r\n  model?: IllustrationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class IllustrationCreateComponent extends React.Component<\r\n  IllustrationCreateComponentProps,\r\n  IllustrationCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <IllustrationCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>09df7fff40638c5a465e30ad70c01683</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport IllustrationMapper from './illustrationMapper';\r\nimport IllustrationViewModel from './illustrationViewModel';\r\n\r\ninterface Props {\r\n  model?: IllustrationViewModel;\r\n}\r\n\r\nconst IllustrationDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"diagram\" className={'col-sm-2 col-form-label'}>\r\n          Diagram\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.diagram)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"illustrationID\" className={'col-sm-2 col-form-label'}>\r\n          IllustrationID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.illustrationID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  illustrationID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface IllustrationDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface IllustrationDetailComponentState {\r\n  model?: IllustrationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class IllustrationDetailComponent extends React.Component<\r\n  IllustrationDetailComponentProps,\r\n  IllustrationDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'illustrations/' +\r\n          this.props.match.params.illustrationID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.IllustrationClientResponseModel;\r\n\r\n          let mapper = new IllustrationMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <IllustrationDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0ca256713546788432604d189d5aa584</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport IllustrationViewModel from './illustrationViewModel';\r\nimport IllustrationMapper from './illustrationMapper';\r\n\r\ninterface Props {\r\n  model?: IllustrationViewModel;\r\n}\r\n\r\nconst IllustrationEditDisplay = (props: FormikProps<IllustrationViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.IllustrationClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof IllustrationViewModel] &&\r\n      props.errors[name as keyof IllustrationViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof IllustrationViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('diagram')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Diagram\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"diagram\"\r\n            className={\r\n              errorExistForField('diagram')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('diagram') && (\r\n            <small className=\"text-danger\">{errorsForField('diagram')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('illustrationID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          IllustrationID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"illustrationID\"\r\n            className={\r\n              errorExistForField('illustrationID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('illustrationID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('illustrationID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst IllustrationUpdate = withFormik<Props, IllustrationViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new IllustrationViewModel();\r\n    response.setProperties(\r\n      props.model!.diagram,\r\n      props.model!.illustrationID,\r\n      props.model!.modifiedDate\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<IllustrationViewModel> = {};\r\n\r\n    if (values.illustrationID == 0) {\r\n      errors.illustrationID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new IllustrationMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'illustrations/' + values.illustrationID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.IllustrationClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'IllustrationEdit',\r\n})(IllustrationEditDisplay);\r\n\r\ninterface IParams {\r\n  illustrationID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface IllustrationEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface IllustrationEditComponentState {\r\n  model?: IllustrationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class IllustrationEditComponent extends React.Component<\r\n  IllustrationEditComponentProps,\r\n  IllustrationEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'illustrations/' +\r\n          this.props.match.params.illustrationID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.IllustrationClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new IllustrationMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <IllustrationUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d071b55f7d475bdc67fea5cbee45642a</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport IllustrationMapper from './illustrationMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport IllustrationViewModel from './illustrationViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface IllustrationSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface IllustrationSearchComponentState {\r\n  records: Array<IllustrationViewModel>;\r\n  filteredRecords: Array<IllustrationViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class IllustrationSearchComponent extends React.Component<\r\n  IllustrationSearchComponentProps,\r\n  IllustrationSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.IllustrationClientResponseModel>(),\r\n    filteredRecords: new Array<Api.IllustrationClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.IllustrationClientResponseModel) {\r\n    this.props.history.push('/illustrations/edit/' + row.illustrationID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.IllustrationClientResponseModel) {\r\n    this.props.history.push('/illustrations/' + row.illustrationID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/illustrations/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.IllustrationClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'illustrations/' + row.illustrationID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'illustrations' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.IllustrationClientResponseModel\r\n          >;\r\n          let viewModels: Array<IllustrationViewModel> = [];\r\n          let mapper = new IllustrationMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<IllustrationViewModel>(),\r\n            filteredRecords: new Array<IllustrationViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Illustration',\r\n                columns: [\r\n                  {\r\n                    Header: 'Diagram',\r\n                    accessor: 'diagram',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.diagram)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'IllustrationID',\r\n                    accessor: 'illustrationID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.illustrationID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.IllustrationClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.IllustrationClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.IllustrationClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>78bfb90ddb5eb7ee5fc7cfd446a86a87</Hash>\r\n</Codenesium>*/","export default class LocationViewModel {\r\n  availability: number;\r\n  costRate: number;\r\n  locationID: number;\r\n  modifiedDate: any;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.availability = 0;\r\n    this.costRate = 0;\r\n    this.locationID = 0;\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(\r\n    availability: number,\r\n    costRate: number,\r\n    locationID: number,\r\n    modifiedDate: any,\r\n    name: string\r\n  ): void {\r\n    this.availability = availability;\r\n    this.costRate = costRate;\r\n    this.locationID = locationID;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>51cc94803bdb84955bb05ba3d39019e8</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport LocationViewModel from './locationViewModel';\r\n\r\nexport default class LocationMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.LocationClientResponseModel\r\n  ): LocationViewModel {\r\n    let response = new LocationViewModel();\r\n    response.setProperties(\r\n      dto.availability,\r\n      dto.costRate,\r\n      dto.locationID,\r\n      dto.modifiedDate,\r\n      dto.name\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: LocationViewModel\r\n  ): Api.LocationClientRequestModel {\r\n    let response = new Api.LocationClientRequestModel();\r\n    response.setProperties(\r\n      model.availability,\r\n      model.costRate,\r\n      model.locationID,\r\n      model.modifiedDate,\r\n      model.name\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>cbf5d7678237b6022820fe69a9a2693e</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport LocationMapper from './locationMapper';\r\nimport LocationViewModel from './locationViewModel';\r\n\r\ninterface Props {\r\n  model?: LocationViewModel;\r\n}\r\n\r\nconst LocationCreateDisplay: React.SFC<FormikProps<LocationViewModel>> = (\r\n  props: FormikProps<LocationViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.LocationClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof LocationViewModel] &&\r\n      props.errors[name as keyof LocationViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof LocationViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('availability')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Availability\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"availability\"\r\n            className={\r\n              errorExistForField('availability')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('availability') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('availability')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('costRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CostRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"costRate\"\r\n            className={\r\n              errorExistForField('costRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('costRate') && (\r\n            <small className=\"text-danger\">{errorsForField('costRate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LocationCreate = withFormik<Props, LocationViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new LocationViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.availability,\r\n        props.model!.costRate,\r\n        props.model!.locationID,\r\n        props.model!.modifiedDate,\r\n        props.model!.name\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<LocationViewModel> = {};\r\n\r\n    if (values.availability == 0) {\r\n      errors.availability = 'Required';\r\n    }\r\n    if (values.costRate == 0) {\r\n      errors.costRate = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new LocationMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'locations',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.LocationClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'LocationCreate',\r\n})(LocationCreateDisplay);\r\n\r\ninterface LocationCreateComponentProps {}\r\n\r\ninterface LocationCreateComponentState {\r\n  model?: LocationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class LocationCreateComponent extends React.Component<\r\n  LocationCreateComponentProps,\r\n  LocationCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <LocationCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>dd69ea1997cd9dee2a3d83d09a987c29</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport LocationMapper from './locationMapper';\r\nimport LocationViewModel from './locationViewModel';\r\n\r\ninterface Props {\r\n  model?: LocationViewModel;\r\n}\r\n\r\nconst LocationDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"availability\" className={'col-sm-2 col-form-label'}>\r\n          Availability\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.availability)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"costRate\" className={'col-sm-2 col-form-label'}>\r\n          CostRate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.costRate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"locationID\" className={'col-sm-2 col-form-label'}>\r\n          LocationID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.locationID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  locationID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface LocationDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface LocationDetailComponentState {\r\n  model?: LocationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class LocationDetailComponent extends React.Component<\r\n  LocationDetailComponentProps,\r\n  LocationDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'locations/' + this.props.match.params.locationID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.LocationClientResponseModel;\r\n\r\n          let mapper = new LocationMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <LocationDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>22b839a92dca3052daacec938ae5396d</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport LocationViewModel from './locationViewModel';\r\nimport LocationMapper from './locationMapper';\r\n\r\ninterface Props {\r\n  model?: LocationViewModel;\r\n}\r\n\r\nconst LocationEditDisplay = (props: FormikProps<LocationViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.LocationClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof LocationViewModel] &&\r\n      props.errors[name as keyof LocationViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof LocationViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('availability')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Availability\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"availability\"\r\n            className={\r\n              errorExistForField('availability')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('availability') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('availability')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('costRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CostRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"costRate\"\r\n            className={\r\n              errorExistForField('costRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('costRate') && (\r\n            <small className=\"text-danger\">{errorsForField('costRate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('locationID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LocationID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"locationID\"\r\n            className={\r\n              errorExistForField('locationID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('locationID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('locationID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LocationUpdate = withFormik<Props, LocationViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new LocationViewModel();\r\n    response.setProperties(\r\n      props.model!.availability,\r\n      props.model!.costRate,\r\n      props.model!.locationID,\r\n      props.model!.modifiedDate,\r\n      props.model!.name\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<LocationViewModel> = {};\r\n\r\n    if (values.availability == 0) {\r\n      errors.availability = 'Required';\r\n    }\r\n    if (values.costRate == 0) {\r\n      errors.costRate = 'Required';\r\n    }\r\n    if (values.locationID == 0) {\r\n      errors.locationID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new LocationMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'locations/' + values.locationID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.LocationClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'LocationEdit',\r\n})(LocationEditDisplay);\r\n\r\ninterface IParams {\r\n  locationID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface LocationEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface LocationEditComponentState {\r\n  model?: LocationViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class LocationEditComponent extends React.Component<\r\n  LocationEditComponentProps,\r\n  LocationEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'locations/' + this.props.match.params.locationID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.LocationClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new LocationMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <LocationUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5ba0799a7f6cae94ba8ff71383abfa96</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport LocationMapper from './locationMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport LocationViewModel from './locationViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface LocationSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface LocationSearchComponentState {\r\n  records: Array<LocationViewModel>;\r\n  filteredRecords: Array<LocationViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class LocationSearchComponent extends React.Component<\r\n  LocationSearchComponentProps,\r\n  LocationSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.LocationClientResponseModel>(),\r\n    filteredRecords: new Array<Api.LocationClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.LocationClientResponseModel) {\r\n    this.props.history.push('/locations/edit/' + row.locationID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.LocationClientResponseModel) {\r\n    this.props.history.push('/locations/' + row.locationID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/locations/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.LocationClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'locations/' + row.locationID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'locations' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.LocationClientResponseModel>;\r\n          let viewModels: Array<LocationViewModel> = [];\r\n          let mapper = new LocationMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<LocationViewModel>(),\r\n            filteredRecords: new Array<LocationViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Location',\r\n                columns: [\r\n                  {\r\n                    Header: 'Availability',\r\n                    accessor: 'availability',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.availability)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CostRate',\r\n                    accessor: 'costRate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.costRate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'LocationID',\r\n                    accessor: 'locationID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.locationID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.LocationClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.LocationClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.LocationClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1d9d50d322f7a34cf9e30ef152799ea4</Hash>\r\n</Codenesium>*/","export default class ProductViewModel {\r\n  color: string;\r\n  daysToManufacture: number;\r\n  discontinuedDate: any;\r\n  finishedGoodsFlag: boolean;\r\n  listPrice: number;\r\n  makeFlag: boolean;\r\n  modifiedDate: any;\r\n  name: string;\r\n  productID: number;\r\n  productLine: string;\r\n  productModelID: any;\r\n  productNumber: string;\r\n  productSubcategoryID: any;\r\n  reorderPoint: number;\r\n  rowguid: any;\r\n  safetyStockLevel: number;\r\n  sellEndDate: any;\r\n  sellStartDate: any;\r\n  size: string;\r\n  sizeUnitMeasureCode: string;\r\n  standardCost: number;\r\n  style: string;\r\n  weight: any;\r\n  weightUnitMeasureCode: string;\r\n\r\n  constructor() {\r\n    this.color = '';\r\n    this.daysToManufacture = 0;\r\n    this.discontinuedDate = undefined;\r\n    this.finishedGoodsFlag = false;\r\n    this.listPrice = 0;\r\n    this.makeFlag = false;\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.productID = 0;\r\n    this.productLine = '';\r\n    this.productModelID = undefined;\r\n    this.productNumber = '';\r\n    this.productSubcategoryID = undefined;\r\n    this.reorderPoint = 0;\r\n    this.rowguid = undefined;\r\n    this.safetyStockLevel = 0;\r\n    this.sellEndDate = undefined;\r\n    this.sellStartDate = undefined;\r\n    this.size = '';\r\n    this.sizeUnitMeasureCode = '';\r\n    this.standardCost = 0;\r\n    this.style = '';\r\n    this.weight = undefined;\r\n    this.weightUnitMeasureCode = '';\r\n  }\r\n\r\n  setProperties(\r\n    color: string,\r\n    daysToManufacture: number,\r\n    discontinuedDate: any,\r\n    finishedGoodsFlag: boolean,\r\n    listPrice: number,\r\n    makeFlag: boolean,\r\n    modifiedDate: any,\r\n    name: string,\r\n    productID: number,\r\n    productLine: string,\r\n    productModelID: any,\r\n    productNumber: string,\r\n    productSubcategoryID: any,\r\n    reorderPoint: number,\r\n    rowguid: any,\r\n    safetyStockLevel: number,\r\n    sellEndDate: any,\r\n    sellStartDate: any,\r\n    size: string,\r\n    sizeUnitMeasureCode: string,\r\n    standardCost: number,\r\n    style: string,\r\n    weight: any,\r\n    weightUnitMeasureCode: string\r\n  ): void {\r\n    this.color = color;\r\n    this.daysToManufacture = daysToManufacture;\r\n    this.discontinuedDate = discontinuedDate;\r\n    this.finishedGoodsFlag = finishedGoodsFlag;\r\n    this.listPrice = listPrice;\r\n    this.makeFlag = makeFlag;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.productID = productID;\r\n    this.productLine = productLine;\r\n    this.productModelID = productModelID;\r\n    this.productNumber = productNumber;\r\n    this.productSubcategoryID = productSubcategoryID;\r\n    this.reorderPoint = reorderPoint;\r\n    this.rowguid = rowguid;\r\n    this.safetyStockLevel = safetyStockLevel;\r\n    this.sellEndDate = sellEndDate;\r\n    this.sellStartDate = sellStartDate;\r\n    this.size = size;\r\n    this.sizeUnitMeasureCode = sizeUnitMeasureCode;\r\n    this.standardCost = standardCost;\r\n    this.style = style;\r\n    this.weight = weight;\r\n    this.weightUnitMeasureCode = weightUnitMeasureCode;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9aa0db6afd695b5df24a27d2dbdf5606</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ProductViewModel from './productViewModel';\r\n\r\nexport default class ProductMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ProductClientResponseModel\r\n  ): ProductViewModel {\r\n    let response = new ProductViewModel();\r\n    response.setProperties(\r\n      dto.color,\r\n      dto.daysToManufacture,\r\n      dto.discontinuedDate,\r\n      dto.finishedGoodsFlag,\r\n      dto.listPrice,\r\n      dto.makeFlag,\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.productID,\r\n      dto.productLine,\r\n      dto.productModelID,\r\n      dto.productNumber,\r\n      dto.productSubcategoryID,\r\n      dto.reorderPoint,\r\n      dto.rowguid,\r\n      dto.safetyStockLevel,\r\n      dto.sellEndDate,\r\n      dto.sellStartDate,\r\n      dto.size,\r\n      dto.sizeUnitMeasureCode,\r\n      dto.standardCost,\r\n      dto.style,\r\n      dto.weight,\r\n      dto.weightUnitMeasureCode\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ProductViewModel\r\n  ): Api.ProductClientRequestModel {\r\n    let response = new Api.ProductClientRequestModel();\r\n    response.setProperties(\r\n      model.color,\r\n      model.daysToManufacture,\r\n      model.discontinuedDate,\r\n      model.finishedGoodsFlag,\r\n      model.listPrice,\r\n      model.makeFlag,\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.productID,\r\n      model.productLine,\r\n      model.productModelID,\r\n      model.productNumber,\r\n      model.productSubcategoryID,\r\n      model.reorderPoint,\r\n      model.rowguid,\r\n      model.safetyStockLevel,\r\n      model.sellEndDate,\r\n      model.sellStartDate,\r\n      model.size,\r\n      model.sizeUnitMeasureCode,\r\n      model.standardCost,\r\n      model.style,\r\n      model.weight,\r\n      model.weightUnitMeasureCode\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>23ae7acdd5542c5b38d9043af5f63f0f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ProductMapper from './productMapper';\r\nimport ProductViewModel from './productViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductViewModel;\r\n}\r\n\r\nconst ProductCreateDisplay: React.SFC<FormikProps<ProductViewModel>> = (\r\n  props: FormikProps<ProductViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.ProductClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductViewModel] &&\r\n      props.errors[name as keyof ProductViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('color')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Color\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"color\"\r\n            className={\r\n              errorExistForField('color')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('color') && (\r\n            <small className=\"text-danger\">{errorsForField('color')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('daysToManufacture')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DaysToManufacture\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"daysToManufacture\"\r\n            className={\r\n              errorExistForField('daysToManufacture')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('daysToManufacture') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('daysToManufacture')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('discontinuedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DiscontinuedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"discontinuedDate\"\r\n            className={\r\n              errorExistForField('discontinuedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('discontinuedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('discontinuedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('finishedGoodsFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FinishedGoodsFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"finishedGoodsFlag\"\r\n            className={\r\n              errorExistForField('finishedGoodsFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('finishedGoodsFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('finishedGoodsFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('listPrice')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ListPrice\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"listPrice\"\r\n            className={\r\n              errorExistForField('listPrice')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('listPrice') && (\r\n            <small className=\"text-danger\">{errorsForField('listPrice')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('makeFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MakeFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"makeFlag\"\r\n            className={\r\n              errorExistForField('makeFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('makeFlag') && (\r\n            <small className=\"text-danger\">{errorsForField('makeFlag')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productLine')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductLine\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productLine\"\r\n            className={\r\n              errorExistForField('productLine')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productLine') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productLine')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productModelID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductModelID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productModelID\"\r\n            className={\r\n              errorExistForField('productModelID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productModelID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productModelID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productNumber\"\r\n            className={\r\n              errorExistForField('productNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productSubcategoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductSubcategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productSubcategoryID\"\r\n            className={\r\n              errorExistForField('productSubcategoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productSubcategoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productSubcategoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('reorderPoint')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReorderPoint\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"reorderPoint\"\r\n            className={\r\n              errorExistForField('reorderPoint')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('reorderPoint') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('reorderPoint')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('safetyStockLevel')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SafetyStockLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"safetyStockLevel\"\r\n            className={\r\n              errorExistForField('safetyStockLevel')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('safetyStockLevel') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('safetyStockLevel')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('sellEndDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SellEndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"sellEndDate\"\r\n            className={\r\n              errorExistForField('sellEndDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('sellEndDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('sellEndDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('sellStartDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SellStartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"sellStartDate\"\r\n            className={\r\n              errorExistForField('sellStartDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('sellStartDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('sellStartDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('size')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Size\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"size\"\r\n            className={\r\n              errorExistForField('size')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('size') && (\r\n            <small className=\"text-danger\">{errorsForField('size')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('sizeUnitMeasureCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SizeUnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"sizeUnitMeasureCode\"\r\n            className={\r\n              errorExistForField('sizeUnitMeasureCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('sizeUnitMeasureCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('sizeUnitMeasureCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('standardCost')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StandardCost\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"standardCost\"\r\n            className={\r\n              errorExistForField('standardCost')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('standardCost') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('standardCost')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('style')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Style\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"style\"\r\n            className={\r\n              errorExistForField('style')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('style') && (\r\n            <small className=\"text-danger\">{errorsForField('style')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('weight')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Weight\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"weight\"\r\n            className={\r\n              errorExistForField('weight')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('weight') && (\r\n            <small className=\"text-danger\">{errorsForField('weight')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('weightUnitMeasureCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          WeightUnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"weightUnitMeasureCode\"\r\n            className={\r\n              errorExistForField('weightUnitMeasureCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('weightUnitMeasureCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('weightUnitMeasureCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductCreate = withFormik<Props, ProductViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.color,\r\n        props.model!.daysToManufacture,\r\n        props.model!.discontinuedDate,\r\n        props.model!.finishedGoodsFlag,\r\n        props.model!.listPrice,\r\n        props.model!.makeFlag,\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.productID,\r\n        props.model!.productLine,\r\n        props.model!.productModelID,\r\n        props.model!.productNumber,\r\n        props.model!.productSubcategoryID,\r\n        props.model!.reorderPoint,\r\n        props.model!.rowguid,\r\n        props.model!.safetyStockLevel,\r\n        props.model!.sellEndDate,\r\n        props.model!.sellStartDate,\r\n        props.model!.size,\r\n        props.model!.sizeUnitMeasureCode,\r\n        props.model!.standardCost,\r\n        props.model!.style,\r\n        props.model!.weight,\r\n        props.model!.weightUnitMeasureCode\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductViewModel> = {};\r\n\r\n    if (values.daysToManufacture == 0) {\r\n      errors.daysToManufacture = 'Required';\r\n    }\r\n    if (values.finishedGoodsFlag == false) {\r\n      errors.finishedGoodsFlag = 'Required';\r\n    }\r\n    if (values.listPrice == 0) {\r\n      errors.listPrice = 'Required';\r\n    }\r\n    if (values.makeFlag == false) {\r\n      errors.makeFlag = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.productNumber == '') {\r\n      errors.productNumber = 'Required';\r\n    }\r\n    if (values.reorderPoint == 0) {\r\n      errors.reorderPoint = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.safetyStockLevel == 0) {\r\n      errors.safetyStockLevel = 'Required';\r\n    }\r\n    if (values.sellStartDate == undefined) {\r\n      errors.sellStartDate = 'Required';\r\n    }\r\n    if (values.standardCost == 0) {\r\n      errors.standardCost = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ProductMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'products',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ProductClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ProductCreate',\r\n})(ProductCreateDisplay);\r\n\r\ninterface ProductCreateComponentProps {}\r\n\r\ninterface ProductCreateComponentState {\r\n  model?: ProductViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductCreateComponent extends React.Component<\r\n  ProductCreateComponentProps,\r\n  ProductCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>53291068068655845e32f2a84819caf2</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductMapper from './productMapper';\r\nimport ProductViewModel from './productViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductViewModel;\r\n}\r\n\r\nconst ProductDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"color\" className={'col-sm-2 col-form-label'}>\r\n          Color\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.color)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"daysToManufacture\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          DaysToManufacture\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.daysToManufacture)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"discontinuedDate\" className={'col-sm-2 col-form-label'}>\r\n          DiscontinuedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.discontinuedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"finishedGoodsFlag\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          FinishedGoodsFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.finishedGoodsFlag)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"listPrice\" className={'col-sm-2 col-form-label'}>\r\n          ListPrice\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.listPrice)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"makeFlag\" className={'col-sm-2 col-form-label'}>\r\n          MakeFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.makeFlag)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productID\" className={'col-sm-2 col-form-label'}>\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productLine\" className={'col-sm-2 col-form-label'}>\r\n          ProductLine\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productLine)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productModelID\" className={'col-sm-2 col-form-label'}>\r\n          ProductModelID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productModelID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productNumber\" className={'col-sm-2 col-form-label'}>\r\n          ProductNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"productSubcategoryID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ProductSubcategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.productSubcategoryID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"reorderPoint\" className={'col-sm-2 col-form-label'}>\r\n          ReorderPoint\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.reorderPoint)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"safetyStockLevel\" className={'col-sm-2 col-form-label'}>\r\n          SafetyStockLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.safetyStockLevel)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"sellEndDate\" className={'col-sm-2 col-form-label'}>\r\n          SellEndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.sellEndDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"sellStartDate\" className={'col-sm-2 col-form-label'}>\r\n          SellStartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.sellStartDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"size\" className={'col-sm-2 col-form-label'}>\r\n          Size\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.size)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"sizeUnitMeasureCode\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          SizeUnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.sizeUnitMeasureCode)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"standardCost\" className={'col-sm-2 col-form-label'}>\r\n          StandardCost\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.standardCost)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"style\" className={'col-sm-2 col-form-label'}>\r\n          Style\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.style)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"weight\" className={'col-sm-2 col-form-label'}>\r\n          Weight\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.weight)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"weightUnitMeasureCode\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          WeightUnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.weightUnitMeasureCode)}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  productID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductDetailComponentState {\r\n  model?: ProductViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductDetailComponent extends React.Component<\r\n  ProductDetailComponentProps,\r\n  ProductDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(Constants.ApiUrl + 'products/' + this.props.match.params.productID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductClientResponseModel;\r\n\r\n          let mapper = new ProductMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>21bcb49182c62e81012fe05b800d4627</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductViewModel from './productViewModel';\r\nimport ProductMapper from './productMapper';\r\n\r\ninterface Props {\r\n  model?: ProductViewModel;\r\n}\r\n\r\nconst ProductEditDisplay = (props: FormikProps<ProductViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.ProductClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductViewModel] &&\r\n      props.errors[name as keyof ProductViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('color')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Color\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"color\"\r\n            className={\r\n              errorExistForField('color')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('color') && (\r\n            <small className=\"text-danger\">{errorsForField('color')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('daysToManufacture')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DaysToManufacture\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"daysToManufacture\"\r\n            className={\r\n              errorExistForField('daysToManufacture')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('daysToManufacture') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('daysToManufacture')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('discontinuedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DiscontinuedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"discontinuedDate\"\r\n            className={\r\n              errorExistForField('discontinuedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('discontinuedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('discontinuedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('finishedGoodsFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FinishedGoodsFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"finishedGoodsFlag\"\r\n            className={\r\n              errorExistForField('finishedGoodsFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('finishedGoodsFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('finishedGoodsFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('listPrice')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ListPrice\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"listPrice\"\r\n            className={\r\n              errorExistForField('listPrice')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('listPrice') && (\r\n            <small className=\"text-danger\">{errorsForField('listPrice')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('makeFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MakeFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"makeFlag\"\r\n            className={\r\n              errorExistForField('makeFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('makeFlag') && (\r\n            <small className=\"text-danger\">{errorsForField('makeFlag')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productLine')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductLine\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productLine\"\r\n            className={\r\n              errorExistForField('productLine')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productLine') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productLine')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productModelID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductModelID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productModelID\"\r\n            className={\r\n              errorExistForField('productModelID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productModelID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productModelID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productNumber\"\r\n            className={\r\n              errorExistForField('productNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productSubcategoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductSubcategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productSubcategoryID\"\r\n            className={\r\n              errorExistForField('productSubcategoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productSubcategoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productSubcategoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('reorderPoint')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReorderPoint\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"reorderPoint\"\r\n            className={\r\n              errorExistForField('reorderPoint')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('reorderPoint') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('reorderPoint')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('safetyStockLevel')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SafetyStockLevel\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"safetyStockLevel\"\r\n            className={\r\n              errorExistForField('safetyStockLevel')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('safetyStockLevel') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('safetyStockLevel')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('sellEndDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SellEndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"sellEndDate\"\r\n            className={\r\n              errorExistForField('sellEndDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('sellEndDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('sellEndDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('sellStartDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SellStartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"sellStartDate\"\r\n            className={\r\n              errorExistForField('sellStartDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('sellStartDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('sellStartDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('size')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Size\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"size\"\r\n            className={\r\n              errorExistForField('size')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('size') && (\r\n            <small className=\"text-danger\">{errorsForField('size')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('sizeUnitMeasureCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SizeUnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"sizeUnitMeasureCode\"\r\n            className={\r\n              errorExistForField('sizeUnitMeasureCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('sizeUnitMeasureCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('sizeUnitMeasureCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('standardCost')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StandardCost\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"standardCost\"\r\n            className={\r\n              errorExistForField('standardCost')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('standardCost') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('standardCost')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('style')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Style\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"style\"\r\n            className={\r\n              errorExistForField('style')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('style') && (\r\n            <small className=\"text-danger\">{errorsForField('style')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('weight')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Weight\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"weight\"\r\n            className={\r\n              errorExistForField('weight')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('weight') && (\r\n            <small className=\"text-danger\">{errorsForField('weight')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('weightUnitMeasureCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          WeightUnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"weightUnitMeasureCode\"\r\n            className={\r\n              errorExistForField('weightUnitMeasureCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('weightUnitMeasureCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('weightUnitMeasureCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductUpdate = withFormik<Props, ProductViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductViewModel();\r\n    response.setProperties(\r\n      props.model!.color,\r\n      props.model!.daysToManufacture,\r\n      props.model!.discontinuedDate,\r\n      props.model!.finishedGoodsFlag,\r\n      props.model!.listPrice,\r\n      props.model!.makeFlag,\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.productID,\r\n      props.model!.productLine,\r\n      props.model!.productModelID,\r\n      props.model!.productNumber,\r\n      props.model!.productSubcategoryID,\r\n      props.model!.reorderPoint,\r\n      props.model!.rowguid,\r\n      props.model!.safetyStockLevel,\r\n      props.model!.sellEndDate,\r\n      props.model!.sellStartDate,\r\n      props.model!.size,\r\n      props.model!.sizeUnitMeasureCode,\r\n      props.model!.standardCost,\r\n      props.model!.style,\r\n      props.model!.weight,\r\n      props.model!.weightUnitMeasureCode\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductViewModel> = {};\r\n\r\n    if (values.daysToManufacture == 0) {\r\n      errors.daysToManufacture = 'Required';\r\n    }\r\n    if (values.finishedGoodsFlag == false) {\r\n      errors.finishedGoodsFlag = 'Required';\r\n    }\r\n    if (values.listPrice == 0) {\r\n      errors.listPrice = 'Required';\r\n    }\r\n    if (values.makeFlag == false) {\r\n      errors.makeFlag = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.productID == 0) {\r\n      errors.productID = 'Required';\r\n    }\r\n    if (values.productNumber == '') {\r\n      errors.productNumber = 'Required';\r\n    }\r\n    if (values.reorderPoint == 0) {\r\n      errors.reorderPoint = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.safetyStockLevel == 0) {\r\n      errors.safetyStockLevel = 'Required';\r\n    }\r\n    if (values.sellStartDate == undefined) {\r\n      errors.sellStartDate = 'Required';\r\n    }\r\n    if (values.standardCost == 0) {\r\n      errors.standardCost = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ProductMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'products/' + values.productID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ProductClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ProductEdit',\r\n})(ProductEditDisplay);\r\n\r\ninterface IParams {\r\n  productID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductEditComponentState {\r\n  model?: ProductViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductEditComponent extends React.Component<\r\n  ProductEditComponentProps,\r\n  ProductEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(Constants.ApiUrl + 'products/' + this.props.match.params.productID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ProductMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8530c4b98748da6c08e3f8bf5f16d93f</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ProductMapper from './productMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ProductViewModel from './productViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ProductSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ProductSearchComponentState {\r\n  records: Array<ProductViewModel>;\r\n  filteredRecords: Array<ProductViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ProductSearchComponent extends React.Component<\r\n  ProductSearchComponentProps,\r\n  ProductSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ProductClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ProductClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ProductClientResponseModel) {\r\n    this.props.history.push('/products/edit/' + row.productID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ProductClientResponseModel) {\r\n    this.props.history.push('/products/' + row.productID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/products/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ProductClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'products/' + row.productID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'products' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.ProductClientResponseModel>;\r\n          let viewModels: Array<ProductViewModel> = [];\r\n          let mapper = new ProductMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ProductViewModel>(),\r\n            filteredRecords: new Array<ProductViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Product',\r\n                columns: [\r\n                  {\r\n                    Header: 'Color',\r\n                    accessor: 'color',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.color)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'DaysToManufacture',\r\n                    accessor: 'daysToManufacture',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.daysToManufacture)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'DiscontinuedDate',\r\n                    accessor: 'discontinuedDate',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.discontinuedDate)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FinishedGoodsFlag',\r\n                    accessor: 'finishedGoodsFlag',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.finishedGoodsFlag)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ListPrice',\r\n                    accessor: 'listPrice',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.listPrice)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'MakeFlag',\r\n                    accessor: 'makeFlag',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.makeFlag)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductID',\r\n                    accessor: 'productID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.productID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductLine',\r\n                    accessor: 'productLine',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.productLine)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductModelID',\r\n                    accessor: 'productModelID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.productModelID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductNumber',\r\n                    accessor: 'productNumber',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.productNumber)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductSubcategoryID',\r\n                    accessor: 'productSubcategoryID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.productSubcategoryID)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ReorderPoint',\r\n                    accessor: 'reorderPoint',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.reorderPoint)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SafetyStockLevel',\r\n                    accessor: 'safetyStockLevel',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.safetyStockLevel)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SellEndDate',\r\n                    accessor: 'sellEndDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.sellEndDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SellStartDate',\r\n                    accessor: 'sellStartDate',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.sellStartDate)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Size',\r\n                    accessor: 'size',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.size)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SizeUnitMeasureCode',\r\n                    accessor: 'sizeUnitMeasureCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.sizeUnitMeasureCode)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StandardCost',\r\n                    accessor: 'standardCost',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.standardCost)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Style',\r\n                    accessor: 'style',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.style)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Weight',\r\n                    accessor: 'weight',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.weight)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'WeightUnitMeasureCode',\r\n                    accessor: 'weightUnitMeasureCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.weightUnitMeasureCode)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ProductClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ProductClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ProductClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6aec6ce760c6e4c390c7b3a5d826653c</Hash>\r\n</Codenesium>*/","export default class ProductCategoryViewModel {\r\n  modifiedDate: any;\r\n  name: string;\r\n  productCategoryID: number;\r\n  rowguid: any;\r\n\r\n  constructor() {\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.productCategoryID = 0;\r\n    this.rowguid = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    modifiedDate: any,\r\n    name: string,\r\n    productCategoryID: number,\r\n    rowguid: any\r\n  ): void {\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.productCategoryID = productCategoryID;\r\n    this.rowguid = rowguid;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4366083b347acfffb1a28a2fa0e1017b</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ProductCategoryViewModel from './productCategoryViewModel';\r\n\r\nexport default class ProductCategoryMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ProductCategoryClientResponseModel\r\n  ): ProductCategoryViewModel {\r\n    let response = new ProductCategoryViewModel();\r\n    response.setProperties(\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.productCategoryID,\r\n      dto.rowguid\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ProductCategoryViewModel\r\n  ): Api.ProductCategoryClientRequestModel {\r\n    let response = new Api.ProductCategoryClientRequestModel();\r\n    response.setProperties(\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.productCategoryID,\r\n      model.rowguid\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bb84c59420bd10c41c963a243735fc42</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ProductCategoryMapper from './productCategoryMapper';\r\nimport ProductCategoryViewModel from './productCategoryViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductCategoryViewModel;\r\n}\r\n\r\nconst ProductCategoryCreateDisplay: React.SFC<\r\n  FormikProps<ProductCategoryViewModel>\r\n> = (props: FormikProps<ProductCategoryViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.ProductCategoryClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductCategoryViewModel] &&\r\n      props.errors[name as keyof ProductCategoryViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductCategoryViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductCategoryCreate = withFormik<Props, ProductCategoryViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductCategoryViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.productCategoryID,\r\n        props.model!.rowguid\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductCategoryViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ProductCategoryMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'productcategories',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ProductCategoryClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ProductCategoryCreate',\r\n})(ProductCategoryCreateDisplay);\r\n\r\ninterface ProductCategoryCreateComponentProps {}\r\n\r\ninterface ProductCategoryCreateComponentState {\r\n  model?: ProductCategoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductCategoryCreateComponent extends React.Component<\r\n  ProductCategoryCreateComponentProps,\r\n  ProductCategoryCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductCategoryCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e4261ca4a2707c081380796ef70c745c</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductCategoryMapper from './productCategoryMapper';\r\nimport ProductCategoryViewModel from './productCategoryViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductCategoryViewModel;\r\n}\r\n\r\nconst ProductCategoryDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"productCategoryID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ProductCategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.productCategoryID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  productCategoryID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductCategoryDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductCategoryDetailComponentState {\r\n  model?: ProductCategoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductCategoryDetailComponent extends React.Component<\r\n  ProductCategoryDetailComponentProps,\r\n  ProductCategoryDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productcategories/' +\r\n          this.props.match.params.productCategoryID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductCategoryClientResponseModel;\r\n\r\n          let mapper = new ProductCategoryMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductCategoryDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bcdbc5b74ea4307efeea5a22fac2a519</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductCategoryViewModel from './productCategoryViewModel';\r\nimport ProductCategoryMapper from './productCategoryMapper';\r\n\r\ninterface Props {\r\n  model?: ProductCategoryViewModel;\r\n}\r\n\r\nconst ProductCategoryEditDisplay = (\r\n  props: FormikProps<ProductCategoryViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.ProductCategoryClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductCategoryViewModel] &&\r\n      props.errors[name as keyof ProductCategoryViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductCategoryViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productCategoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductCategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productCategoryID\"\r\n            className={\r\n              errorExistForField('productCategoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productCategoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productCategoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductCategoryUpdate = withFormik<Props, ProductCategoryViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductCategoryViewModel();\r\n    response.setProperties(\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.productCategoryID,\r\n      props.model!.rowguid\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductCategoryViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.productCategoryID == 0) {\r\n      errors.productCategoryID = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ProductCategoryMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'productcategories/' + values.productCategoryID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ProductCategoryClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ProductCategoryEdit',\r\n})(ProductCategoryEditDisplay);\r\n\r\ninterface IParams {\r\n  productCategoryID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductCategoryEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductCategoryEditComponentState {\r\n  model?: ProductCategoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductCategoryEditComponent extends React.Component<\r\n  ProductCategoryEditComponentProps,\r\n  ProductCategoryEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productcategories/' +\r\n          this.props.match.params.productCategoryID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductCategoryClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ProductCategoryMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductCategoryUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9cc87a5f506a06b3f105781771eb2b56</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ProductCategoryMapper from './productCategoryMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ProductCategoryViewModel from './productCategoryViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ProductCategorySearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ProductCategorySearchComponentState {\r\n  records: Array<ProductCategoryViewModel>;\r\n  filteredRecords: Array<ProductCategoryViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ProductCategorySearchComponent extends React.Component<\r\n  ProductCategorySearchComponentProps,\r\n  ProductCategorySearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ProductCategoryClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ProductCategoryClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ProductCategoryClientResponseModel) {\r\n    this.props.history.push('/productcategories/edit/' + row.productCategoryID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ProductCategoryClientResponseModel) {\r\n    this.props.history.push('/productcategories/' + row.productCategoryID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/productcategories/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ProductCategoryClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'productcategories/' + row.productCategoryID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'productcategories' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.ProductCategoryClientResponseModel\r\n          >;\r\n          let viewModels: Array<ProductCategoryViewModel> = [];\r\n          let mapper = new ProductCategoryMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ProductCategoryViewModel>(),\r\n            filteredRecords: new Array<ProductCategoryViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ProductCategory',\r\n                columns: [\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductCategoryID',\r\n                    accessor: 'productCategoryID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.productCategoryID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ProductCategoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ProductCategoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ProductCategoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>36ef2464a3a1903c2b4c0c830330818f</Hash>\r\n</Codenesium>*/","export default class ProductDescriptionViewModel {\r\n  description: string;\r\n  modifiedDate: any;\r\n  productDescriptionID: number;\r\n  rowguid: any;\r\n\r\n  constructor() {\r\n    this.description = '';\r\n    this.modifiedDate = undefined;\r\n    this.productDescriptionID = 0;\r\n    this.rowguid = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    description: string,\r\n    modifiedDate: any,\r\n    productDescriptionID: number,\r\n    rowguid: any\r\n  ): void {\r\n    this.description = description;\r\n    this.modifiedDate = modifiedDate;\r\n    this.productDescriptionID = productDescriptionID;\r\n    this.rowguid = rowguid;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2cb4a1a3ef018a492549fa0e15fca6e6</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ProductDescriptionViewModel from './productDescriptionViewModel';\r\n\r\nexport default class ProductDescriptionMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ProductDescriptionClientResponseModel\r\n  ): ProductDescriptionViewModel {\r\n    let response = new ProductDescriptionViewModel();\r\n    response.setProperties(\r\n      dto.description,\r\n      dto.modifiedDate,\r\n      dto.productDescriptionID,\r\n      dto.rowguid\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ProductDescriptionViewModel\r\n  ): Api.ProductDescriptionClientRequestModel {\r\n    let response = new Api.ProductDescriptionClientRequestModel();\r\n    response.setProperties(\r\n      model.description,\r\n      model.modifiedDate,\r\n      model.productDescriptionID,\r\n      model.rowguid\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b399992097b27f9d037d7170d0428b2d</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ProductDescriptionMapper from './productDescriptionMapper';\r\nimport ProductDescriptionViewModel from './productDescriptionViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductDescriptionViewModel;\r\n}\r\n\r\nconst ProductDescriptionCreateDisplay: React.SFC<\r\n  FormikProps<ProductDescriptionViewModel>\r\n> = (props: FormikProps<ProductDescriptionViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.ProductDescriptionClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductDescriptionViewModel] &&\r\n      props.errors[name as keyof ProductDescriptionViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductDescriptionViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('description')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Description\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"description\"\r\n            className={\r\n              errorExistForField('description')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('description') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('description')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductDescriptionCreate = withFormik<Props, ProductDescriptionViewModel>(\r\n  {\r\n    mapPropsToValues: props => {\r\n      let response = new ProductDescriptionViewModel();\r\n      if (props.model != undefined) {\r\n        response.setProperties(\r\n          props.model!.description,\r\n          props.model!.modifiedDate,\r\n          props.model!.productDescriptionID,\r\n          props.model!.rowguid\r\n        );\r\n      }\r\n      return response;\r\n    },\r\n\r\n    validate: values => {\r\n      let errors: FormikErrors<ProductDescriptionViewModel> = {};\r\n\r\n      if (values.description == '') {\r\n        errors.description = 'Required';\r\n      }\r\n      if (values.modifiedDate == undefined) {\r\n        errors.modifiedDate = 'Required';\r\n      }\r\n      if (values.rowguid == undefined) {\r\n        errors.rowguid = 'Required';\r\n      }\r\n\r\n      return errors;\r\n    },\r\n\r\n    handleSubmit: (values, actions) => {\r\n      actions.setStatus(undefined);\r\n      let mapper = new ProductDescriptionMapper();\r\n\r\n      axios\r\n        .post(\r\n          Constants.ApiUrl + 'productdescriptions',\r\n          mapper.mapViewModelToApiRequest(values),\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then(\r\n          resp => {\r\n            let response = resp.data as CreateResponse<\r\n              Api.ProductDescriptionClientRequestModel\r\n            >;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            actions.setStatus('Error from API');\r\n          }\r\n        );\r\n    },\r\n    displayName: 'ProductDescriptionCreate',\r\n  }\r\n)(ProductDescriptionCreateDisplay);\r\n\r\ninterface ProductDescriptionCreateComponentProps {}\r\n\r\ninterface ProductDescriptionCreateComponentState {\r\n  model?: ProductDescriptionViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductDescriptionCreateComponent extends React.Component<\r\n  ProductDescriptionCreateComponentProps,\r\n  ProductDescriptionCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductDescriptionCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>29fed335db5abbe9f8888cb89b60280f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductDescriptionMapper from './productDescriptionMapper';\r\nimport ProductDescriptionViewModel from './productDescriptionViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductDescriptionViewModel;\r\n}\r\n\r\nconst ProductDescriptionDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"description\" className={'col-sm-2 col-form-label'}>\r\n          Description\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.description)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"productDescriptionID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ProductDescriptionID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.productDescriptionID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  productDescriptionID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductDescriptionDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductDescriptionDetailComponentState {\r\n  model?: ProductDescriptionViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductDescriptionDetailComponent extends React.Component<\r\n  ProductDescriptionDetailComponentProps,\r\n  ProductDescriptionDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productdescriptions/' +\r\n          this.props.match.params.productDescriptionID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductDescriptionClientResponseModel;\r\n\r\n          let mapper = new ProductDescriptionMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductDescriptionDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0547b48459c3ff8e8533830d37e6427a</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductDescriptionViewModel from './productDescriptionViewModel';\r\nimport ProductDescriptionMapper from './productDescriptionMapper';\r\n\r\ninterface Props {\r\n  model?: ProductDescriptionViewModel;\r\n}\r\n\r\nconst ProductDescriptionEditDisplay = (\r\n  props: FormikProps<ProductDescriptionViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.ProductDescriptionClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductDescriptionViewModel] &&\r\n      props.errors[name as keyof ProductDescriptionViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductDescriptionViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('description')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Description\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"description\"\r\n            className={\r\n              errorExistForField('description')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('description') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('description')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productDescriptionID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductDescriptionID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productDescriptionID\"\r\n            className={\r\n              errorExistForField('productDescriptionID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productDescriptionID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productDescriptionID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductDescriptionUpdate = withFormik<Props, ProductDescriptionViewModel>(\r\n  {\r\n    mapPropsToValues: props => {\r\n      let response = new ProductDescriptionViewModel();\r\n      response.setProperties(\r\n        props.model!.description,\r\n        props.model!.modifiedDate,\r\n        props.model!.productDescriptionID,\r\n        props.model!.rowguid\r\n      );\r\n      return response;\r\n    },\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors: FormikErrors<ProductDescriptionViewModel> = {};\r\n\r\n      if (values.description == '') {\r\n        errors.description = 'Required';\r\n      }\r\n      if (values.modifiedDate == undefined) {\r\n        errors.modifiedDate = 'Required';\r\n      }\r\n      if (values.productDescriptionID == 0) {\r\n        errors.productDescriptionID = 'Required';\r\n      }\r\n      if (values.rowguid == undefined) {\r\n        errors.rowguid = 'Required';\r\n      }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n      actions.setStatus(undefined);\r\n\r\n      let mapper = new ProductDescriptionMapper();\r\n\r\n      axios\r\n        .put(\r\n          Constants.ApiUrl +\r\n            'productdescriptions/' +\r\n            values.productDescriptionID,\r\n\r\n          mapper.mapViewModelToApiRequest(values),\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then(\r\n          resp => {\r\n            let response = resp.data as UpdateResponse<\r\n              Api.ProductDescriptionClientRequestModel\r\n            >;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            actions.setStatus('Error from API');\r\n          }\r\n        )\r\n        .then(response => {\r\n          // cleanup\r\n        });\r\n    },\r\n\r\n    displayName: 'ProductDescriptionEdit',\r\n  }\r\n)(ProductDescriptionEditDisplay);\r\n\r\ninterface IParams {\r\n  productDescriptionID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductDescriptionEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductDescriptionEditComponentState {\r\n  model?: ProductDescriptionViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductDescriptionEditComponent extends React.Component<\r\n  ProductDescriptionEditComponentProps,\r\n  ProductDescriptionEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productdescriptions/' +\r\n          this.props.match.params.productDescriptionID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductDescriptionClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ProductDescriptionMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductDescriptionUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ce0662a5c2e56873e1c3d4663d099c6d</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ProductDescriptionMapper from './productDescriptionMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ProductDescriptionViewModel from './productDescriptionViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ProductDescriptionSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ProductDescriptionSearchComponentState {\r\n  records: Array<ProductDescriptionViewModel>;\r\n  filteredRecords: Array<ProductDescriptionViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ProductDescriptionSearchComponent extends React.Component<\r\n  ProductDescriptionSearchComponentProps,\r\n  ProductDescriptionSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ProductDescriptionClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ProductDescriptionClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ProductDescriptionClientResponseModel) {\r\n    this.props.history.push(\r\n      '/productdescriptions/edit/' + row.productDescriptionID\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ProductDescriptionClientResponseModel) {\r\n    this.props.history.push('/productdescriptions/' + row.productDescriptionID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/productdescriptions/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ProductDescriptionClientResponseModel) {\r\n    axios\r\n      .delete(\r\n        Constants.ApiUrl + 'productdescriptions/' + row.productDescriptionID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiUrl + 'productdescriptions' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.ProductDescriptionClientResponseModel\r\n          >;\r\n          let viewModels: Array<ProductDescriptionViewModel> = [];\r\n          let mapper = new ProductDescriptionMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ProductDescriptionViewModel>(),\r\n            filteredRecords: new Array<ProductDescriptionViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ProductDescription',\r\n                columns: [\r\n                  {\r\n                    Header: 'Description',\r\n                    accessor: 'description',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.description)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductDescriptionID',\r\n                    accessor: 'productDescriptionID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.productDescriptionID)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ProductDescriptionClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ProductDescriptionClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ProductDescriptionClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0c142f7841fb1afd4b8db7e485c77e9c</Hash>\r\n</Codenesium>*/","export default class ProductModelViewModel {\r\n  catalogDescription: string;\r\n  instruction: string;\r\n  modifiedDate: any;\r\n  name: string;\r\n  productModelID: number;\r\n  rowguid: any;\r\n\r\n  constructor() {\r\n    this.catalogDescription = '';\r\n    this.instruction = '';\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.productModelID = 0;\r\n    this.rowguid = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    catalogDescription: string,\r\n    instruction: string,\r\n    modifiedDate: any,\r\n    name: string,\r\n    productModelID: number,\r\n    rowguid: any\r\n  ): void {\r\n    this.catalogDescription = catalogDescription;\r\n    this.instruction = instruction;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.productModelID = productModelID;\r\n    this.rowguid = rowguid;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>60e7b1c7f2f1ff20147a46a1d8dfddd3</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ProductModelViewModel from './productModelViewModel';\r\n\r\nexport default class ProductModelMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ProductModelClientResponseModel\r\n  ): ProductModelViewModel {\r\n    let response = new ProductModelViewModel();\r\n    response.setProperties(\r\n      dto.catalogDescription,\r\n      dto.instruction,\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.productModelID,\r\n      dto.rowguid\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ProductModelViewModel\r\n  ): Api.ProductModelClientRequestModel {\r\n    let response = new Api.ProductModelClientRequestModel();\r\n    response.setProperties(\r\n      model.catalogDescription,\r\n      model.instruction,\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.productModelID,\r\n      model.rowguid\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7af5076429fb25a153388e726100871f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ProductModelMapper from './productModelMapper';\r\nimport ProductModelViewModel from './productModelViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductModelViewModel;\r\n}\r\n\r\nconst ProductModelCreateDisplay: React.SFC<\r\n  FormikProps<ProductModelViewModel>\r\n> = (props: FormikProps<ProductModelViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.ProductModelClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductModelViewModel] &&\r\n      props.errors[name as keyof ProductModelViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductModelViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('catalogDescription')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CatalogDescription\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"catalogDescription\"\r\n            className={\r\n              errorExistForField('catalogDescription')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('catalogDescription') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('catalogDescription')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('instruction')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Instructions\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"instruction\"\r\n            className={\r\n              errorExistForField('instruction')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('instruction') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('instruction')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductModelCreate = withFormik<Props, ProductModelViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductModelViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.catalogDescription,\r\n        props.model!.instruction,\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.productModelID,\r\n        props.model!.rowguid\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductModelViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ProductModelMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'productmodels',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ProductModelClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ProductModelCreate',\r\n})(ProductModelCreateDisplay);\r\n\r\ninterface ProductModelCreateComponentProps {}\r\n\r\ninterface ProductModelCreateComponentState {\r\n  model?: ProductModelViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductModelCreateComponent extends React.Component<\r\n  ProductModelCreateComponentProps,\r\n  ProductModelCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductModelCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b9050cefc62309d153898e60fb765436</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductModelMapper from './productModelMapper';\r\nimport ProductModelViewModel from './productModelViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductModelViewModel;\r\n}\r\n\r\nconst ProductModelDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"catalogDescription\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          CatalogDescription\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.catalogDescription)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"instruction\" className={'col-sm-2 col-form-label'}>\r\n          Instructions\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.instruction)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productModelID\" className={'col-sm-2 col-form-label'}>\r\n          ProductModelID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productModelID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  productModelID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductModelDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductModelDetailComponentState {\r\n  model?: ProductModelViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductModelDetailComponent extends React.Component<\r\n  ProductModelDetailComponentProps,\r\n  ProductModelDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productmodels/' +\r\n          this.props.match.params.productModelID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductModelClientResponseModel;\r\n\r\n          let mapper = new ProductModelMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductModelDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>49bd2d41c8a87605cd248511af8cae7e</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductModelViewModel from './productModelViewModel';\r\nimport ProductModelMapper from './productModelMapper';\r\n\r\ninterface Props {\r\n  model?: ProductModelViewModel;\r\n}\r\n\r\nconst ProductModelEditDisplay = (props: FormikProps<ProductModelViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.ProductModelClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductModelViewModel] &&\r\n      props.errors[name as keyof ProductModelViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductModelViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('catalogDescription')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CatalogDescription\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"catalogDescription\"\r\n            className={\r\n              errorExistForField('catalogDescription')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('catalogDescription') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('catalogDescription')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('instruction')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Instructions\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"instruction\"\r\n            className={\r\n              errorExistForField('instruction')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('instruction') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('instruction')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productModelID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductModelID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productModelID\"\r\n            className={\r\n              errorExistForField('productModelID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productModelID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productModelID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductModelUpdate = withFormik<Props, ProductModelViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductModelViewModel();\r\n    response.setProperties(\r\n      props.model!.catalogDescription,\r\n      props.model!.instruction,\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.productModelID,\r\n      props.model!.rowguid\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductModelViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.productModelID == 0) {\r\n      errors.productModelID = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ProductModelMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'productmodels/' + values.productModelID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ProductModelClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ProductModelEdit',\r\n})(ProductModelEditDisplay);\r\n\r\ninterface IParams {\r\n  productModelID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductModelEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductModelEditComponentState {\r\n  model?: ProductModelViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductModelEditComponent extends React.Component<\r\n  ProductModelEditComponentProps,\r\n  ProductModelEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productmodels/' +\r\n          this.props.match.params.productModelID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductModelClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ProductModelMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductModelUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4388b19f2beb46c6b7f77e2204cba611</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ProductModelMapper from './productModelMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ProductModelViewModel from './productModelViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ProductModelSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ProductModelSearchComponentState {\r\n  records: Array<ProductModelViewModel>;\r\n  filteredRecords: Array<ProductModelViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ProductModelSearchComponent extends React.Component<\r\n  ProductModelSearchComponentProps,\r\n  ProductModelSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ProductModelClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ProductModelClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ProductModelClientResponseModel) {\r\n    this.props.history.push('/productmodels/edit/' + row.productModelID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ProductModelClientResponseModel) {\r\n    this.props.history.push('/productmodels/' + row.productModelID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/productmodels/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ProductModelClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'productmodels/' + row.productModelID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'productmodels' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.ProductModelClientResponseModel\r\n          >;\r\n          let viewModels: Array<ProductModelViewModel> = [];\r\n          let mapper = new ProductModelMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ProductModelViewModel>(),\r\n            filteredRecords: new Array<ProductModelViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ProductModel',\r\n                columns: [\r\n                  {\r\n                    Header: 'CatalogDescription',\r\n                    accessor: 'catalogDescription',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.catalogDescription)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Instructions',\r\n                    accessor: 'instruction',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.instruction)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductModelID',\r\n                    accessor: 'productModelID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.productModelID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ProductModelClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ProductModelClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ProductModelClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0d2e07da2da63465376088f5413e1688</Hash>\r\n</Codenesium>*/","export default class ProductPhotoViewModel {\r\n  largePhoto: any;\r\n  largePhotoFileName: string;\r\n  modifiedDate: any;\r\n  productPhotoID: number;\r\n  thumbNailPhoto: any;\r\n  thumbnailPhotoFileName: string;\r\n\r\n  constructor() {\r\n    this.largePhoto = undefined;\r\n    this.largePhotoFileName = '';\r\n    this.modifiedDate = undefined;\r\n    this.productPhotoID = 0;\r\n    this.thumbNailPhoto = undefined;\r\n    this.thumbnailPhotoFileName = '';\r\n  }\r\n\r\n  setProperties(\r\n    largePhoto: any,\r\n    largePhotoFileName: string,\r\n    modifiedDate: any,\r\n    productPhotoID: number,\r\n    thumbNailPhoto: any,\r\n    thumbnailPhotoFileName: string\r\n  ): void {\r\n    this.largePhoto = largePhoto;\r\n    this.largePhotoFileName = largePhotoFileName;\r\n    this.modifiedDate = modifiedDate;\r\n    this.productPhotoID = productPhotoID;\r\n    this.thumbNailPhoto = thumbNailPhoto;\r\n    this.thumbnailPhotoFileName = thumbnailPhotoFileName;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2f2167b5a7c78c2f90bf5d070c837d00</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ProductPhotoViewModel from './productPhotoViewModel';\r\n\r\nexport default class ProductPhotoMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ProductPhotoClientResponseModel\r\n  ): ProductPhotoViewModel {\r\n    let response = new ProductPhotoViewModel();\r\n    response.setProperties(\r\n      dto.largePhoto,\r\n      dto.largePhotoFileName,\r\n      dto.modifiedDate,\r\n      dto.productPhotoID,\r\n      dto.thumbNailPhoto,\r\n      dto.thumbnailPhotoFileName\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ProductPhotoViewModel\r\n  ): Api.ProductPhotoClientRequestModel {\r\n    let response = new Api.ProductPhotoClientRequestModel();\r\n    response.setProperties(\r\n      model.largePhoto,\r\n      model.largePhotoFileName,\r\n      model.modifiedDate,\r\n      model.productPhotoID,\r\n      model.thumbNailPhoto,\r\n      model.thumbnailPhotoFileName\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9731776725173ea8df6de5f2cdc64cd5</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ProductPhotoMapper from './productPhotoMapper';\r\nimport ProductPhotoViewModel from './productPhotoViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductPhotoViewModel;\r\n}\r\n\r\nconst ProductPhotoCreateDisplay: React.SFC<\r\n  FormikProps<ProductPhotoViewModel>\r\n> = (props: FormikProps<ProductPhotoViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.ProductPhotoClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductPhotoViewModel] &&\r\n      props.errors[name as keyof ProductPhotoViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductPhotoViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('largePhoto')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LargePhoto\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"largePhoto\"\r\n            className={\r\n              errorExistForField('largePhoto')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('largePhoto') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('largePhoto')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('largePhotoFileName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LargePhotoFileName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"largePhotoFileName\"\r\n            className={\r\n              errorExistForField('largePhotoFileName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('largePhotoFileName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('largePhotoFileName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('thumbNailPhoto')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ThumbNailPhoto\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"thumbNailPhoto\"\r\n            className={\r\n              errorExistForField('thumbNailPhoto')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('thumbNailPhoto') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('thumbNailPhoto')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('thumbnailPhotoFileName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ThumbnailPhotoFileName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"thumbnailPhotoFileName\"\r\n            className={\r\n              errorExistForField('thumbnailPhotoFileName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('thumbnailPhotoFileName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('thumbnailPhotoFileName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductPhotoCreate = withFormik<Props, ProductPhotoViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductPhotoViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.largePhoto,\r\n        props.model!.largePhotoFileName,\r\n        props.model!.modifiedDate,\r\n        props.model!.productPhotoID,\r\n        props.model!.thumbNailPhoto,\r\n        props.model!.thumbnailPhotoFileName\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductPhotoViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ProductPhotoMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'productphotoes',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ProductPhotoClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ProductPhotoCreate',\r\n})(ProductPhotoCreateDisplay);\r\n\r\ninterface ProductPhotoCreateComponentProps {}\r\n\r\ninterface ProductPhotoCreateComponentState {\r\n  model?: ProductPhotoViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductPhotoCreateComponent extends React.Component<\r\n  ProductPhotoCreateComponentProps,\r\n  ProductPhotoCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductPhotoCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d627f23ac73fca8861855322d5e651f6</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductPhotoMapper from './productPhotoMapper';\r\nimport ProductPhotoViewModel from './productPhotoViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductPhotoViewModel;\r\n}\r\n\r\nconst ProductPhotoDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"largePhoto\" className={'col-sm-2 col-form-label'}>\r\n          LargePhoto\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.largePhoto)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"largePhotoFileName\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          LargePhotoFileName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.largePhotoFileName)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productPhotoID\" className={'col-sm-2 col-form-label'}>\r\n          ProductPhotoID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productPhotoID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"thumbNailPhoto\" className={'col-sm-2 col-form-label'}>\r\n          ThumbNailPhoto\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.thumbNailPhoto)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"thumbnailPhotoFileName\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ThumbnailPhotoFileName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.thumbnailPhotoFileName)}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  productPhotoID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductPhotoDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductPhotoDetailComponentState {\r\n  model?: ProductPhotoViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductPhotoDetailComponent extends React.Component<\r\n  ProductPhotoDetailComponentProps,\r\n  ProductPhotoDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productphotoes/' +\r\n          this.props.match.params.productPhotoID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductPhotoClientResponseModel;\r\n\r\n          let mapper = new ProductPhotoMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductPhotoDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0e784b39d906c0814fdded4aa170f541</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductPhotoViewModel from './productPhotoViewModel';\r\nimport ProductPhotoMapper from './productPhotoMapper';\r\n\r\ninterface Props {\r\n  model?: ProductPhotoViewModel;\r\n}\r\n\r\nconst ProductPhotoEditDisplay = (props: FormikProps<ProductPhotoViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.ProductPhotoClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductPhotoViewModel] &&\r\n      props.errors[name as keyof ProductPhotoViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductPhotoViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('largePhoto')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LargePhoto\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"largePhoto\"\r\n            className={\r\n              errorExistForField('largePhoto')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('largePhoto') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('largePhoto')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('largePhotoFileName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LargePhotoFileName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"largePhotoFileName\"\r\n            className={\r\n              errorExistForField('largePhotoFileName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('largePhotoFileName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('largePhotoFileName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productPhotoID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductPhotoID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productPhotoID\"\r\n            className={\r\n              errorExistForField('productPhotoID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productPhotoID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productPhotoID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('thumbNailPhoto')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ThumbNailPhoto\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"thumbNailPhoto\"\r\n            className={\r\n              errorExistForField('thumbNailPhoto')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('thumbNailPhoto') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('thumbNailPhoto')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('thumbnailPhotoFileName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ThumbnailPhotoFileName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"thumbnailPhotoFileName\"\r\n            className={\r\n              errorExistForField('thumbnailPhotoFileName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('thumbnailPhotoFileName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('thumbnailPhotoFileName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductPhotoUpdate = withFormik<Props, ProductPhotoViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductPhotoViewModel();\r\n    response.setProperties(\r\n      props.model!.largePhoto,\r\n      props.model!.largePhotoFileName,\r\n      props.model!.modifiedDate,\r\n      props.model!.productPhotoID,\r\n      props.model!.thumbNailPhoto,\r\n      props.model!.thumbnailPhotoFileName\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductPhotoViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.productPhotoID == 0) {\r\n      errors.productPhotoID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ProductPhotoMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'productphotoes/' + values.productPhotoID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ProductPhotoClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ProductPhotoEdit',\r\n})(ProductPhotoEditDisplay);\r\n\r\ninterface IParams {\r\n  productPhotoID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductPhotoEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductPhotoEditComponentState {\r\n  model?: ProductPhotoViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductPhotoEditComponent extends React.Component<\r\n  ProductPhotoEditComponentProps,\r\n  ProductPhotoEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productphotoes/' +\r\n          this.props.match.params.productPhotoID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductPhotoClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ProductPhotoMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductPhotoUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9588eca191afea13b6dc96874cf75d34</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ProductPhotoMapper from './productPhotoMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ProductPhotoViewModel from './productPhotoViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ProductPhotoSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ProductPhotoSearchComponentState {\r\n  records: Array<ProductPhotoViewModel>;\r\n  filteredRecords: Array<ProductPhotoViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ProductPhotoSearchComponent extends React.Component<\r\n  ProductPhotoSearchComponentProps,\r\n  ProductPhotoSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ProductPhotoClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ProductPhotoClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ProductPhotoClientResponseModel) {\r\n    this.props.history.push('/productphotoes/edit/' + row.productPhotoID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ProductPhotoClientResponseModel) {\r\n    this.props.history.push('/productphotoes/' + row.productPhotoID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/productphotoes/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ProductPhotoClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'productphotoes/' + row.productPhotoID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'productphotoes' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.ProductPhotoClientResponseModel\r\n          >;\r\n          let viewModels: Array<ProductPhotoViewModel> = [];\r\n          let mapper = new ProductPhotoMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ProductPhotoViewModel>(),\r\n            filteredRecords: new Array<ProductPhotoViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ProductPhoto',\r\n                columns: [\r\n                  {\r\n                    Header: 'LargePhoto',\r\n                    accessor: 'largePhoto',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.largePhoto)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'LargePhotoFileName',\r\n                    accessor: 'largePhotoFileName',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.largePhotoFileName)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductPhotoID',\r\n                    accessor: 'productPhotoID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.productPhotoID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ThumbNailPhoto',\r\n                    accessor: 'thumbNailPhoto',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.thumbNailPhoto)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ThumbnailPhotoFileName',\r\n                    accessor: 'thumbnailPhotoFileName',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.thumbnailPhotoFileName)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ProductPhotoClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ProductPhotoClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ProductPhotoClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5688e9c50b5907587a1a07f22c5dc046</Hash>\r\n</Codenesium>*/","export default class ProductReviewViewModel {\r\n  comment: string;\r\n  emailAddress: string;\r\n  modifiedDate: any;\r\n  productID: number;\r\n  productReviewID: number;\r\n  rating: number;\r\n  reviewDate: any;\r\n  reviewerName: string;\r\n\r\n  constructor() {\r\n    this.comment = '';\r\n    this.emailAddress = '';\r\n    this.modifiedDate = undefined;\r\n    this.productID = 0;\r\n    this.productReviewID = 0;\r\n    this.rating = 0;\r\n    this.reviewDate = undefined;\r\n    this.reviewerName = '';\r\n  }\r\n\r\n  setProperties(\r\n    comment: string,\r\n    emailAddress: string,\r\n    modifiedDate: any,\r\n    productID: number,\r\n    productReviewID: number,\r\n    rating: number,\r\n    reviewDate: any,\r\n    reviewerName: string\r\n  ): void {\r\n    this.comment = comment;\r\n    this.emailAddress = emailAddress;\r\n    this.modifiedDate = modifiedDate;\r\n    this.productID = productID;\r\n    this.productReviewID = productReviewID;\r\n    this.rating = rating;\r\n    this.reviewDate = reviewDate;\r\n    this.reviewerName = reviewerName;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e9ccb703d74410dd3d067d92577e75ff</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ProductReviewViewModel from './productReviewViewModel';\r\n\r\nexport default class ProductReviewMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ProductReviewClientResponseModel\r\n  ): ProductReviewViewModel {\r\n    let response = new ProductReviewViewModel();\r\n    response.setProperties(\r\n      dto.comment,\r\n      dto.emailAddress,\r\n      dto.modifiedDate,\r\n      dto.productID,\r\n      dto.productReviewID,\r\n      dto.rating,\r\n      dto.reviewDate,\r\n      dto.reviewerName\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ProductReviewViewModel\r\n  ): Api.ProductReviewClientRequestModel {\r\n    let response = new Api.ProductReviewClientRequestModel();\r\n    response.setProperties(\r\n      model.comment,\r\n      model.emailAddress,\r\n      model.modifiedDate,\r\n      model.productID,\r\n      model.productReviewID,\r\n      model.rating,\r\n      model.reviewDate,\r\n      model.reviewerName\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b2ce90a5225a5fb25b7adaf2da655f1c</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ProductReviewMapper from './productReviewMapper';\r\nimport ProductReviewViewModel from './productReviewViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductReviewViewModel;\r\n}\r\n\r\nconst ProductReviewCreateDisplay: React.SFC<\r\n  FormikProps<ProductReviewViewModel>\r\n> = (props: FormikProps<ProductReviewViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.ProductReviewClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductReviewViewModel] &&\r\n      props.errors[name as keyof ProductReviewViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductReviewViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('comment')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Comments\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"comment\"\r\n            className={\r\n              errorExistForField('comment')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('comment') && (\r\n            <small className=\"text-danger\">{errorsForField('comment')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('emailAddress')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EmailAddress\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"emailAddress\"\r\n            className={\r\n              errorExistForField('emailAddress')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('emailAddress') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('emailAddress')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rating')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rating\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rating\"\r\n            className={\r\n              errorExistForField('rating')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rating') && (\r\n            <small className=\"text-danger\">{errorsForField('rating')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('reviewDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReviewDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"reviewDate\"\r\n            className={\r\n              errorExistForField('reviewDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('reviewDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('reviewDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('reviewerName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReviewerName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"reviewerName\"\r\n            className={\r\n              errorExistForField('reviewerName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('reviewerName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('reviewerName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductReviewCreate = withFormik<Props, ProductReviewViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductReviewViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.comment,\r\n        props.model!.emailAddress,\r\n        props.model!.modifiedDate,\r\n        props.model!.productID,\r\n        props.model!.productReviewID,\r\n        props.model!.rating,\r\n        props.model!.reviewDate,\r\n        props.model!.reviewerName\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductReviewViewModel> = {};\r\n\r\n    if (values.emailAddress == '') {\r\n      errors.emailAddress = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.productID == 0) {\r\n      errors.productID = 'Required';\r\n    }\r\n    if (values.rating == 0) {\r\n      errors.rating = 'Required';\r\n    }\r\n    if (values.reviewDate == undefined) {\r\n      errors.reviewDate = 'Required';\r\n    }\r\n    if (values.reviewerName == '') {\r\n      errors.reviewerName = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ProductReviewMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'productreviews',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ProductReviewClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ProductReviewCreate',\r\n})(ProductReviewCreateDisplay);\r\n\r\ninterface ProductReviewCreateComponentProps {}\r\n\r\ninterface ProductReviewCreateComponentState {\r\n  model?: ProductReviewViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductReviewCreateComponent extends React.Component<\r\n  ProductReviewCreateComponentProps,\r\n  ProductReviewCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductReviewCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>387df67a8ac7bc70619a8c51827a602b</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductReviewMapper from './productReviewMapper';\r\nimport ProductReviewViewModel from './productReviewViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductReviewViewModel;\r\n}\r\n\r\nconst ProductReviewDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"comment\" className={'col-sm-2 col-form-label'}>\r\n          Comments\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.comment)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"emailAddress\" className={'col-sm-2 col-form-label'}>\r\n          EmailAddress\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.emailAddress)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productID\" className={'col-sm-2 col-form-label'}>\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productReviewID\" className={'col-sm-2 col-form-label'}>\r\n          ProductReviewID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productReviewID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rating\" className={'col-sm-2 col-form-label'}>\r\n          Rating\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rating)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"reviewDate\" className={'col-sm-2 col-form-label'}>\r\n          ReviewDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.reviewDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"reviewerName\" className={'col-sm-2 col-form-label'}>\r\n          ReviewerName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.reviewerName)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  productReviewID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductReviewDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductReviewDetailComponentState {\r\n  model?: ProductReviewViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductReviewDetailComponent extends React.Component<\r\n  ProductReviewDetailComponentProps,\r\n  ProductReviewDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productreviews/' +\r\n          this.props.match.params.productReviewID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductReviewClientResponseModel;\r\n\r\n          let mapper = new ProductReviewMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductReviewDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>20acbdc6eed4425aa758012f007827d1</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductReviewViewModel from './productReviewViewModel';\r\nimport ProductReviewMapper from './productReviewMapper';\r\n\r\ninterface Props {\r\n  model?: ProductReviewViewModel;\r\n}\r\n\r\nconst ProductReviewEditDisplay = (\r\n  props: FormikProps<ProductReviewViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.ProductReviewClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductReviewViewModel] &&\r\n      props.errors[name as keyof ProductReviewViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductReviewViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('comment')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Comments\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"comment\"\r\n            className={\r\n              errorExistForField('comment')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('comment') && (\r\n            <small className=\"text-danger\">{errorsForField('comment')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('emailAddress')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EmailAddress\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"emailAddress\"\r\n            className={\r\n              errorExistForField('emailAddress')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('emailAddress') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('emailAddress')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productReviewID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductReviewID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productReviewID\"\r\n            className={\r\n              errorExistForField('productReviewID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productReviewID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productReviewID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rating')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rating\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rating\"\r\n            className={\r\n              errorExistForField('rating')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rating') && (\r\n            <small className=\"text-danger\">{errorsForField('rating')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('reviewDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReviewDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"reviewDate\"\r\n            className={\r\n              errorExistForField('reviewDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('reviewDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('reviewDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('reviewerName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReviewerName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"reviewerName\"\r\n            className={\r\n              errorExistForField('reviewerName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('reviewerName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('reviewerName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductReviewUpdate = withFormik<Props, ProductReviewViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ProductReviewViewModel();\r\n    response.setProperties(\r\n      props.model!.comment,\r\n      props.model!.emailAddress,\r\n      props.model!.modifiedDate,\r\n      props.model!.productID,\r\n      props.model!.productReviewID,\r\n      props.model!.rating,\r\n      props.model!.reviewDate,\r\n      props.model!.reviewerName\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ProductReviewViewModel> = {};\r\n\r\n    if (values.emailAddress == '') {\r\n      errors.emailAddress = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.productID == 0) {\r\n      errors.productID = 'Required';\r\n    }\r\n    if (values.productReviewID == 0) {\r\n      errors.productReviewID = 'Required';\r\n    }\r\n    if (values.rating == 0) {\r\n      errors.rating = 'Required';\r\n    }\r\n    if (values.reviewDate == undefined) {\r\n      errors.reviewDate = 'Required';\r\n    }\r\n    if (values.reviewerName == '') {\r\n      errors.reviewerName = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ProductReviewMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'productreviews/' + values.productReviewID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ProductReviewClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ProductReviewEdit',\r\n})(ProductReviewEditDisplay);\r\n\r\ninterface IParams {\r\n  productReviewID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductReviewEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductReviewEditComponentState {\r\n  model?: ProductReviewViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductReviewEditComponent extends React.Component<\r\n  ProductReviewEditComponentProps,\r\n  ProductReviewEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productreviews/' +\r\n          this.props.match.params.productReviewID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductReviewClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ProductReviewMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductReviewUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>49efed2b2115d4787b52bb9a091d073d</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ProductReviewMapper from './productReviewMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ProductReviewViewModel from './productReviewViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ProductReviewSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ProductReviewSearchComponentState {\r\n  records: Array<ProductReviewViewModel>;\r\n  filteredRecords: Array<ProductReviewViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ProductReviewSearchComponent extends React.Component<\r\n  ProductReviewSearchComponentProps,\r\n  ProductReviewSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ProductReviewClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ProductReviewClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ProductReviewClientResponseModel) {\r\n    this.props.history.push('/productreviews/edit/' + row.productReviewID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ProductReviewClientResponseModel) {\r\n    this.props.history.push('/productreviews/' + row.productReviewID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/productreviews/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ProductReviewClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'productreviews/' + row.productReviewID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'productreviews' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.ProductReviewClientResponseModel\r\n          >;\r\n          let viewModels: Array<ProductReviewViewModel> = [];\r\n          let mapper = new ProductReviewMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ProductReviewViewModel>(),\r\n            filteredRecords: new Array<ProductReviewViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ProductReview',\r\n                columns: [\r\n                  {\r\n                    Header: 'Comments',\r\n                    accessor: 'comment',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.comment)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'EmailAddress',\r\n                    accessor: 'emailAddress',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.emailAddress)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductID',\r\n                    accessor: 'productID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.productID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductReviewID',\r\n                    accessor: 'productReviewID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.productReviewID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rating',\r\n                    accessor: 'rating',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rating)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ReviewDate',\r\n                    accessor: 'reviewDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.reviewDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ReviewerName',\r\n                    accessor: 'reviewerName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.reviewerName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ProductReviewClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ProductReviewClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ProductReviewClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4fa0a3012c185efd9c934ca801f98374</Hash>\r\n</Codenesium>*/","export default class ProductSubcategoryViewModel {\r\n  modifiedDate: any;\r\n  name: string;\r\n  productCategoryID: number;\r\n  productSubcategoryID: number;\r\n  rowguid: any;\r\n\r\n  constructor() {\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.productCategoryID = 0;\r\n    this.productSubcategoryID = 0;\r\n    this.rowguid = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    modifiedDate: any,\r\n    name: string,\r\n    productCategoryID: number,\r\n    productSubcategoryID: number,\r\n    rowguid: any\r\n  ): void {\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.productCategoryID = productCategoryID;\r\n    this.productSubcategoryID = productSubcategoryID;\r\n    this.rowguid = rowguid;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6a42a71cf9113b059390c09e25de5446</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ProductSubcategoryViewModel from './productSubcategoryViewModel';\r\n\r\nexport default class ProductSubcategoryMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ProductSubcategoryClientResponseModel\r\n  ): ProductSubcategoryViewModel {\r\n    let response = new ProductSubcategoryViewModel();\r\n    response.setProperties(\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.productCategoryID,\r\n      dto.productSubcategoryID,\r\n      dto.rowguid\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ProductSubcategoryViewModel\r\n  ): Api.ProductSubcategoryClientRequestModel {\r\n    let response = new Api.ProductSubcategoryClientRequestModel();\r\n    response.setProperties(\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.productCategoryID,\r\n      model.productSubcategoryID,\r\n      model.rowguid\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>59558648ffc6b53218767fea828ef935</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ProductSubcategoryMapper from './productSubcategoryMapper';\r\nimport ProductSubcategoryViewModel from './productSubcategoryViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductSubcategoryViewModel;\r\n}\r\n\r\nconst ProductSubcategoryCreateDisplay: React.SFC<\r\n  FormikProps<ProductSubcategoryViewModel>\r\n> = (props: FormikProps<ProductSubcategoryViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.ProductSubcategoryClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductSubcategoryViewModel] &&\r\n      props.errors[name as keyof ProductSubcategoryViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductSubcategoryViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productCategoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductCategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productCategoryID\"\r\n            className={\r\n              errorExistForField('productCategoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productCategoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productCategoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductSubcategoryCreate = withFormik<Props, ProductSubcategoryViewModel>(\r\n  {\r\n    mapPropsToValues: props => {\r\n      let response = new ProductSubcategoryViewModel();\r\n      if (props.model != undefined) {\r\n        response.setProperties(\r\n          props.model!.modifiedDate,\r\n          props.model!.name,\r\n          props.model!.productCategoryID,\r\n          props.model!.productSubcategoryID,\r\n          props.model!.rowguid\r\n        );\r\n      }\r\n      return response;\r\n    },\r\n\r\n    validate: values => {\r\n      let errors: FormikErrors<ProductSubcategoryViewModel> = {};\r\n\r\n      if (values.modifiedDate == undefined) {\r\n        errors.modifiedDate = 'Required';\r\n      }\r\n      if (values.name == '') {\r\n        errors.name = 'Required';\r\n      }\r\n      if (values.productCategoryID == 0) {\r\n        errors.productCategoryID = 'Required';\r\n      }\r\n      if (values.rowguid == undefined) {\r\n        errors.rowguid = 'Required';\r\n      }\r\n\r\n      return errors;\r\n    },\r\n\r\n    handleSubmit: (values, actions) => {\r\n      actions.setStatus(undefined);\r\n      let mapper = new ProductSubcategoryMapper();\r\n\r\n      axios\r\n        .post(\r\n          Constants.ApiUrl + 'productsubcategories',\r\n          mapper.mapViewModelToApiRequest(values),\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then(\r\n          resp => {\r\n            let response = resp.data as CreateResponse<\r\n              Api.ProductSubcategoryClientRequestModel\r\n            >;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            actions.setStatus('Error from API');\r\n          }\r\n        );\r\n    },\r\n    displayName: 'ProductSubcategoryCreate',\r\n  }\r\n)(ProductSubcategoryCreateDisplay);\r\n\r\ninterface ProductSubcategoryCreateComponentProps {}\r\n\r\ninterface ProductSubcategoryCreateComponentState {\r\n  model?: ProductSubcategoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductSubcategoryCreateComponent extends React.Component<\r\n  ProductSubcategoryCreateComponentProps,\r\n  ProductSubcategoryCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductSubcategoryCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d47a9dc9d42f957479a110aa22ad161b</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductSubcategoryMapper from './productSubcategoryMapper';\r\nimport ProductSubcategoryViewModel from './productSubcategoryViewModel';\r\n\r\ninterface Props {\r\n  model?: ProductSubcategoryViewModel;\r\n}\r\n\r\nconst ProductSubcategoryDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"productCategoryID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ProductCategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.productCategoryID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"productSubcategoryID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ProductSubcategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.productSubcategoryID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  productSubcategoryID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductSubcategoryDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductSubcategoryDetailComponentState {\r\n  model?: ProductSubcategoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductSubcategoryDetailComponent extends React.Component<\r\n  ProductSubcategoryDetailComponentProps,\r\n  ProductSubcategoryDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productsubcategories/' +\r\n          this.props.match.params.productSubcategoryID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductSubcategoryClientResponseModel;\r\n\r\n          let mapper = new ProductSubcategoryMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductSubcategoryDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7e1db596c8abf0b228f924af59547197</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ProductSubcategoryViewModel from './productSubcategoryViewModel';\r\nimport ProductSubcategoryMapper from './productSubcategoryMapper';\r\n\r\ninterface Props {\r\n  model?: ProductSubcategoryViewModel;\r\n}\r\n\r\nconst ProductSubcategoryEditDisplay = (\r\n  props: FormikProps<ProductSubcategoryViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.ProductSubcategoryClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ProductSubcategoryViewModel] &&\r\n      props.errors[name as keyof ProductSubcategoryViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ProductSubcategoryViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productCategoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductCategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productCategoryID\"\r\n            className={\r\n              errorExistForField('productCategoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productCategoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productCategoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productSubcategoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductSubcategoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productSubcategoryID\"\r\n            className={\r\n              errorExistForField('productSubcategoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productSubcategoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('productSubcategoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ProductSubcategoryUpdate = withFormik<Props, ProductSubcategoryViewModel>(\r\n  {\r\n    mapPropsToValues: props => {\r\n      let response = new ProductSubcategoryViewModel();\r\n      response.setProperties(\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.productCategoryID,\r\n        props.model!.productSubcategoryID,\r\n        props.model!.rowguid\r\n      );\r\n      return response;\r\n    },\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors: FormikErrors<ProductSubcategoryViewModel> = {};\r\n\r\n      if (values.modifiedDate == undefined) {\r\n        errors.modifiedDate = 'Required';\r\n      }\r\n      if (values.name == '') {\r\n        errors.name = 'Required';\r\n      }\r\n      if (values.productCategoryID == 0) {\r\n        errors.productCategoryID = 'Required';\r\n      }\r\n      if (values.productSubcategoryID == 0) {\r\n        errors.productSubcategoryID = 'Required';\r\n      }\r\n      if (values.rowguid == undefined) {\r\n        errors.rowguid = 'Required';\r\n      }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n      actions.setStatus(undefined);\r\n\r\n      let mapper = new ProductSubcategoryMapper();\r\n\r\n      axios\r\n        .put(\r\n          Constants.ApiUrl +\r\n            'productsubcategories/' +\r\n            values.productSubcategoryID,\r\n\r\n          mapper.mapViewModelToApiRequest(values),\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then(\r\n          resp => {\r\n            let response = resp.data as UpdateResponse<\r\n              Api.ProductSubcategoryClientRequestModel\r\n            >;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            actions.setStatus('Error from API');\r\n          }\r\n        )\r\n        .then(response => {\r\n          // cleanup\r\n        });\r\n    },\r\n\r\n    displayName: 'ProductSubcategoryEdit',\r\n  }\r\n)(ProductSubcategoryEditDisplay);\r\n\r\ninterface IParams {\r\n  productSubcategoryID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ProductSubcategoryEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ProductSubcategoryEditComponentState {\r\n  model?: ProductSubcategoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ProductSubcategoryEditComponent extends React.Component<\r\n  ProductSubcategoryEditComponentProps,\r\n  ProductSubcategoryEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'productsubcategories/' +\r\n          this.props.match.params.productSubcategoryID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ProductSubcategoryClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ProductSubcategoryMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ProductSubcategoryUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>272c2c37e45a6df226cf8ded2264f096</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ProductSubcategoryMapper from './productSubcategoryMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ProductSubcategoryViewModel from './productSubcategoryViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ProductSubcategorySearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ProductSubcategorySearchComponentState {\r\n  records: Array<ProductSubcategoryViewModel>;\r\n  filteredRecords: Array<ProductSubcategoryViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ProductSubcategorySearchComponent extends React.Component<\r\n  ProductSubcategorySearchComponentProps,\r\n  ProductSubcategorySearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ProductSubcategoryClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ProductSubcategoryClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ProductSubcategoryClientResponseModel) {\r\n    this.props.history.push(\r\n      '/productsubcategories/edit/' + row.productSubcategoryID\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ProductSubcategoryClientResponseModel) {\r\n    this.props.history.push(\r\n      '/productsubcategories/' + row.productSubcategoryID\r\n    );\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/productsubcategories/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ProductSubcategoryClientResponseModel) {\r\n    axios\r\n      .delete(\r\n        Constants.ApiUrl + 'productsubcategories/' + row.productSubcategoryID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiUrl + 'productsubcategories' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.ProductSubcategoryClientResponseModel\r\n          >;\r\n          let viewModels: Array<ProductSubcategoryViewModel> = [];\r\n          let mapper = new ProductSubcategoryMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ProductSubcategoryViewModel>(),\r\n            filteredRecords: new Array<ProductSubcategoryViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ProductSubcategory',\r\n                columns: [\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductCategoryID',\r\n                    accessor: 'productCategoryID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.productCategoryID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductSubcategoryID',\r\n                    accessor: 'productSubcategoryID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.productSubcategoryID)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ProductSubcategoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ProductSubcategoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ProductSubcategoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bc64ca10266d11510586ac061eb01460</Hash>\r\n</Codenesium>*/","export default class ScrapReasonViewModel {\r\n  modifiedDate: any;\r\n  name: string;\r\n  scrapReasonID: number;\r\n\r\n  constructor() {\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.scrapReasonID = 0;\r\n  }\r\n\r\n  setProperties(modifiedDate: any, name: string, scrapReasonID: number): void {\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.scrapReasonID = scrapReasonID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>61a8125d9bf45add25d0563c14919f41</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ScrapReasonViewModel from './scrapReasonViewModel';\r\n\r\nexport default class ScrapReasonMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ScrapReasonClientResponseModel\r\n  ): ScrapReasonViewModel {\r\n    let response = new ScrapReasonViewModel();\r\n    response.setProperties(dto.modifiedDate, dto.name, dto.scrapReasonID);\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ScrapReasonViewModel\r\n  ): Api.ScrapReasonClientRequestModel {\r\n    let response = new Api.ScrapReasonClientRequestModel();\r\n    response.setProperties(model.modifiedDate, model.name, model.scrapReasonID);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3a97facf566336a43c777ac9f67d800c</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ScrapReasonMapper from './scrapReasonMapper';\r\nimport ScrapReasonViewModel from './scrapReasonViewModel';\r\n\r\ninterface Props {\r\n  model?: ScrapReasonViewModel;\r\n}\r\n\r\nconst ScrapReasonCreateDisplay: React.SFC<FormikProps<ScrapReasonViewModel>> = (\r\n  props: FormikProps<ScrapReasonViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.ScrapReasonClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ScrapReasonViewModel] &&\r\n      props.errors[name as keyof ScrapReasonViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ScrapReasonViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ScrapReasonCreate = withFormik<Props, ScrapReasonViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ScrapReasonViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.scrapReasonID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ScrapReasonViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ScrapReasonMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'scrapreasons',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ScrapReasonClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ScrapReasonCreate',\r\n})(ScrapReasonCreateDisplay);\r\n\r\ninterface ScrapReasonCreateComponentProps {}\r\n\r\ninterface ScrapReasonCreateComponentState {\r\n  model?: ScrapReasonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ScrapReasonCreateComponent extends React.Component<\r\n  ScrapReasonCreateComponentProps,\r\n  ScrapReasonCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ScrapReasonCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5283374f379127e31168214aca389325</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ScrapReasonMapper from './scrapReasonMapper';\r\nimport ScrapReasonViewModel from './scrapReasonViewModel';\r\n\r\ninterface Props {\r\n  model?: ScrapReasonViewModel;\r\n}\r\n\r\nconst ScrapReasonDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"scrapReasonID\" className={'col-sm-2 col-form-label'}>\r\n          ScrapReasonID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.scrapReasonID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  scrapReasonID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ScrapReasonDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ScrapReasonDetailComponentState {\r\n  model?: ScrapReasonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ScrapReasonDetailComponent extends React.Component<\r\n  ScrapReasonDetailComponentProps,\r\n  ScrapReasonDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'scrapreasons/' +\r\n          this.props.match.params.scrapReasonID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ScrapReasonClientResponseModel;\r\n\r\n          let mapper = new ScrapReasonMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ScrapReasonDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bd6ae883962563a4fe4e310b03a42168</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ScrapReasonViewModel from './scrapReasonViewModel';\r\nimport ScrapReasonMapper from './scrapReasonMapper';\r\n\r\ninterface Props {\r\n  model?: ScrapReasonViewModel;\r\n}\r\n\r\nconst ScrapReasonEditDisplay = (props: FormikProps<ScrapReasonViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.ScrapReasonClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ScrapReasonViewModel] &&\r\n      props.errors[name as keyof ScrapReasonViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ScrapReasonViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('scrapReasonID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ScrapReasonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"scrapReasonID\"\r\n            className={\r\n              errorExistForField('scrapReasonID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('scrapReasonID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('scrapReasonID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ScrapReasonUpdate = withFormik<Props, ScrapReasonViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ScrapReasonViewModel();\r\n    response.setProperties(\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.scrapReasonID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ScrapReasonViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.scrapReasonID == 0) {\r\n      errors.scrapReasonID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ScrapReasonMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'scrapreasons/' + values.scrapReasonID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ScrapReasonClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ScrapReasonEdit',\r\n})(ScrapReasonEditDisplay);\r\n\r\ninterface IParams {\r\n  scrapReasonID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ScrapReasonEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ScrapReasonEditComponentState {\r\n  model?: ScrapReasonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ScrapReasonEditComponent extends React.Component<\r\n  ScrapReasonEditComponentProps,\r\n  ScrapReasonEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'scrapreasons/' +\r\n          this.props.match.params.scrapReasonID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ScrapReasonClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ScrapReasonMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ScrapReasonUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>89a2025848da75db8805955151f25343</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ScrapReasonMapper from './scrapReasonMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ScrapReasonViewModel from './scrapReasonViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ScrapReasonSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ScrapReasonSearchComponentState {\r\n  records: Array<ScrapReasonViewModel>;\r\n  filteredRecords: Array<ScrapReasonViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ScrapReasonSearchComponent extends React.Component<\r\n  ScrapReasonSearchComponentProps,\r\n  ScrapReasonSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ScrapReasonClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ScrapReasonClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ScrapReasonClientResponseModel) {\r\n    this.props.history.push('/scrapreasons/edit/' + row.scrapReasonID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ScrapReasonClientResponseModel) {\r\n    this.props.history.push('/scrapreasons/' + row.scrapReasonID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/scrapreasons/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ScrapReasonClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'scrapreasons/' + row.scrapReasonID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'scrapreasons' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.ScrapReasonClientResponseModel>;\r\n          let viewModels: Array<ScrapReasonViewModel> = [];\r\n          let mapper = new ScrapReasonMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ScrapReasonViewModel>(),\r\n            filteredRecords: new Array<ScrapReasonViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ScrapReason',\r\n                columns: [\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ScrapReasonID',\r\n                    accessor: 'scrapReasonID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.scrapReasonID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ScrapReasonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ScrapReasonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ScrapReasonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3f691422b939c11e13d2c8d97f2e1c32</Hash>\r\n</Codenesium>*/","export default class TransactionHistoryViewModel {\r\n  actualCost: number;\r\n  modifiedDate: any;\r\n  productID: number;\r\n  quantity: number;\r\n  referenceOrderID: number;\r\n  referenceOrderLineID: number;\r\n  transactionDate: any;\r\n  transactionID: number;\r\n  transactionType: string;\r\n\r\n  constructor() {\r\n    this.actualCost = 0;\r\n    this.modifiedDate = undefined;\r\n    this.productID = 0;\r\n    this.quantity = 0;\r\n    this.referenceOrderID = 0;\r\n    this.referenceOrderLineID = 0;\r\n    this.transactionDate = undefined;\r\n    this.transactionID = 0;\r\n    this.transactionType = '';\r\n  }\r\n\r\n  setProperties(\r\n    actualCost: number,\r\n    modifiedDate: any,\r\n    productID: number,\r\n    quantity: number,\r\n    referenceOrderID: number,\r\n    referenceOrderLineID: number,\r\n    transactionDate: any,\r\n    transactionID: number,\r\n    transactionType: string\r\n  ): void {\r\n    this.actualCost = actualCost;\r\n    this.modifiedDate = modifiedDate;\r\n    this.productID = productID;\r\n    this.quantity = quantity;\r\n    this.referenceOrderID = referenceOrderID;\r\n    this.referenceOrderLineID = referenceOrderLineID;\r\n    this.transactionDate = transactionDate;\r\n    this.transactionID = transactionID;\r\n    this.transactionType = transactionType;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>dcf886e7ca7502d679461d5e3d841eff</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport TransactionHistoryViewModel from './transactionHistoryViewModel';\r\n\r\nexport default class TransactionHistoryMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.TransactionHistoryClientResponseModel\r\n  ): TransactionHistoryViewModel {\r\n    let response = new TransactionHistoryViewModel();\r\n    response.setProperties(\r\n      dto.actualCost,\r\n      dto.modifiedDate,\r\n      dto.productID,\r\n      dto.quantity,\r\n      dto.referenceOrderID,\r\n      dto.referenceOrderLineID,\r\n      dto.transactionDate,\r\n      dto.transactionID,\r\n      dto.transactionType\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: TransactionHistoryViewModel\r\n  ): Api.TransactionHistoryClientRequestModel {\r\n    let response = new Api.TransactionHistoryClientRequestModel();\r\n    response.setProperties(\r\n      model.actualCost,\r\n      model.modifiedDate,\r\n      model.productID,\r\n      model.quantity,\r\n      model.referenceOrderID,\r\n      model.referenceOrderLineID,\r\n      model.transactionDate,\r\n      model.transactionID,\r\n      model.transactionType\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1ee0a8dd5d12a44deb08f811d2836a06</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport TransactionHistoryMapper from './transactionHistoryMapper';\r\nimport TransactionHistoryViewModel from './transactionHistoryViewModel';\r\n\r\ninterface Props {\r\n  model?: TransactionHistoryViewModel;\r\n}\r\n\r\nconst TransactionHistoryCreateDisplay: React.SFC<\r\n  FormikProps<TransactionHistoryViewModel>\r\n> = (props: FormikProps<TransactionHistoryViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.TransactionHistoryClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof TransactionHistoryViewModel] &&\r\n      props.errors[name as keyof TransactionHistoryViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof TransactionHistoryViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('actualCost')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ActualCost\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"actualCost\"\r\n            className={\r\n              errorExistForField('actualCost')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('actualCost') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('actualCost')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('quantity')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Quantity\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"quantity\"\r\n            className={\r\n              errorExistForField('quantity')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('quantity') && (\r\n            <small className=\"text-danger\">{errorsForField('quantity')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('referenceOrderID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReferenceOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"referenceOrderID\"\r\n            className={\r\n              errorExistForField('referenceOrderID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('referenceOrderID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('referenceOrderID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('referenceOrderLineID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReferenceOrderLineID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"referenceOrderLineID\"\r\n            className={\r\n              errorExistForField('referenceOrderLineID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('referenceOrderLineID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('referenceOrderLineID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionDate\"\r\n            className={\r\n              errorExistForField('transactionDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionType\"\r\n            className={\r\n              errorExistForField('transactionType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionType') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionType')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst TransactionHistoryCreate = withFormik<Props, TransactionHistoryViewModel>(\r\n  {\r\n    mapPropsToValues: props => {\r\n      let response = new TransactionHistoryViewModel();\r\n      if (props.model != undefined) {\r\n        response.setProperties(\r\n          props.model!.actualCost,\r\n          props.model!.modifiedDate,\r\n          props.model!.productID,\r\n          props.model!.quantity,\r\n          props.model!.referenceOrderID,\r\n          props.model!.referenceOrderLineID,\r\n          props.model!.transactionDate,\r\n          props.model!.transactionID,\r\n          props.model!.transactionType\r\n        );\r\n      }\r\n      return response;\r\n    },\r\n\r\n    validate: values => {\r\n      let errors: FormikErrors<TransactionHistoryViewModel> = {};\r\n\r\n      if (values.actualCost == 0) {\r\n        errors.actualCost = 'Required';\r\n      }\r\n      if (values.modifiedDate == undefined) {\r\n        errors.modifiedDate = 'Required';\r\n      }\r\n      if (values.productID == 0) {\r\n        errors.productID = 'Required';\r\n      }\r\n      if (values.quantity == 0) {\r\n        errors.quantity = 'Required';\r\n      }\r\n      if (values.referenceOrderID == 0) {\r\n        errors.referenceOrderID = 'Required';\r\n      }\r\n      if (values.referenceOrderLineID == 0) {\r\n        errors.referenceOrderLineID = 'Required';\r\n      }\r\n      if (values.transactionDate == undefined) {\r\n        errors.transactionDate = 'Required';\r\n      }\r\n      if (values.transactionType == '') {\r\n        errors.transactionType = 'Required';\r\n      }\r\n\r\n      return errors;\r\n    },\r\n\r\n    handleSubmit: (values, actions) => {\r\n      actions.setStatus(undefined);\r\n      let mapper = new TransactionHistoryMapper();\r\n\r\n      axios\r\n        .post(\r\n          Constants.ApiUrl + 'transactionhistories',\r\n          mapper.mapViewModelToApiRequest(values),\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then(\r\n          resp => {\r\n            let response = resp.data as CreateResponse<\r\n              Api.TransactionHistoryClientRequestModel\r\n            >;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            actions.setStatus('Error from API');\r\n          }\r\n        );\r\n    },\r\n    displayName: 'TransactionHistoryCreate',\r\n  }\r\n)(TransactionHistoryCreateDisplay);\r\n\r\ninterface TransactionHistoryCreateComponentProps {}\r\n\r\ninterface TransactionHistoryCreateComponentState {\r\n  model?: TransactionHistoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class TransactionHistoryCreateComponent extends React.Component<\r\n  TransactionHistoryCreateComponentProps,\r\n  TransactionHistoryCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <TransactionHistoryCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0e6c7a58b8705610997a80a104cda1a3</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport TransactionHistoryMapper from './transactionHistoryMapper';\r\nimport TransactionHistoryViewModel from './transactionHistoryViewModel';\r\n\r\ninterface Props {\r\n  model?: TransactionHistoryViewModel;\r\n}\r\n\r\nconst TransactionHistoryDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"actualCost\" className={'col-sm-2 col-form-label'}>\r\n          ActualCost\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.actualCost)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productID\" className={'col-sm-2 col-form-label'}>\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"quantity\" className={'col-sm-2 col-form-label'}>\r\n          Quantity\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.quantity)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"referenceOrderID\" className={'col-sm-2 col-form-label'}>\r\n          ReferenceOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.referenceOrderID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"referenceOrderLineID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ReferenceOrderLineID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.referenceOrderLineID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"transactionDate\" className={'col-sm-2 col-form-label'}>\r\n          TransactionDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.transactionDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"transactionID\" className={'col-sm-2 col-form-label'}>\r\n          TransactionID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.transactionID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"transactionType\" className={'col-sm-2 col-form-label'}>\r\n          TransactionType\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.transactionType)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  transactionID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface TransactionHistoryDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface TransactionHistoryDetailComponentState {\r\n  model?: TransactionHistoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class TransactionHistoryDetailComponent extends React.Component<\r\n  TransactionHistoryDetailComponentProps,\r\n  TransactionHistoryDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'transactionhistories/' +\r\n          this.props.match.params.transactionID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.TransactionHistoryClientResponseModel;\r\n\r\n          let mapper = new TransactionHistoryMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <TransactionHistoryDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>1249060573884d20d5c8be622bf55e7f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport TransactionHistoryViewModel from './transactionHistoryViewModel';\r\nimport TransactionHistoryMapper from './transactionHistoryMapper';\r\n\r\ninterface Props {\r\n  model?: TransactionHistoryViewModel;\r\n}\r\n\r\nconst TransactionHistoryEditDisplay = (\r\n  props: FormikProps<TransactionHistoryViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.TransactionHistoryClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof TransactionHistoryViewModel] &&\r\n      props.errors[name as keyof TransactionHistoryViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof TransactionHistoryViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('actualCost')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ActualCost\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"actualCost\"\r\n            className={\r\n              errorExistForField('actualCost')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('actualCost') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('actualCost')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('quantity')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Quantity\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"quantity\"\r\n            className={\r\n              errorExistForField('quantity')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('quantity') && (\r\n            <small className=\"text-danger\">{errorsForField('quantity')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('referenceOrderID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReferenceOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"referenceOrderID\"\r\n            className={\r\n              errorExistForField('referenceOrderID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('referenceOrderID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('referenceOrderID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('referenceOrderLineID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReferenceOrderLineID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"referenceOrderLineID\"\r\n            className={\r\n              errorExistForField('referenceOrderLineID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('referenceOrderLineID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('referenceOrderLineID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionDate\"\r\n            className={\r\n              errorExistForField('transactionDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionID\"\r\n            className={\r\n              errorExistForField('transactionID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionType\"\r\n            className={\r\n              errorExistForField('transactionType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionType') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionType')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst TransactionHistoryUpdate = withFormik<Props, TransactionHistoryViewModel>(\r\n  {\r\n    mapPropsToValues: props => {\r\n      let response = new TransactionHistoryViewModel();\r\n      response.setProperties(\r\n        props.model!.actualCost,\r\n        props.model!.modifiedDate,\r\n        props.model!.productID,\r\n        props.model!.quantity,\r\n        props.model!.referenceOrderID,\r\n        props.model!.referenceOrderLineID,\r\n        props.model!.transactionDate,\r\n        props.model!.transactionID,\r\n        props.model!.transactionType\r\n      );\r\n      return response;\r\n    },\r\n\r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors: FormikErrors<TransactionHistoryViewModel> = {};\r\n\r\n      if (values.actualCost == 0) {\r\n        errors.actualCost = 'Required';\r\n      }\r\n      if (values.modifiedDate == undefined) {\r\n        errors.modifiedDate = 'Required';\r\n      }\r\n      if (values.productID == 0) {\r\n        errors.productID = 'Required';\r\n      }\r\n      if (values.quantity == 0) {\r\n        errors.quantity = 'Required';\r\n      }\r\n      if (values.referenceOrderID == 0) {\r\n        errors.referenceOrderID = 'Required';\r\n      }\r\n      if (values.referenceOrderLineID == 0) {\r\n        errors.referenceOrderLineID = 'Required';\r\n      }\r\n      if (values.transactionDate == undefined) {\r\n        errors.transactionDate = 'Required';\r\n      }\r\n      if (values.transactionID == 0) {\r\n        errors.transactionID = 'Required';\r\n      }\r\n      if (values.transactionType == '') {\r\n        errors.transactionType = 'Required';\r\n      }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n      actions.setStatus(undefined);\r\n\r\n      let mapper = new TransactionHistoryMapper();\r\n\r\n      axios\r\n        .put(\r\n          Constants.ApiUrl + 'transactionhistories/' + values.transactionID,\r\n\r\n          mapper.mapViewModelToApiRequest(values),\r\n          {\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        )\r\n        .then(\r\n          resp => {\r\n            let response = resp.data as UpdateResponse<\r\n              Api.TransactionHistoryClientRequestModel\r\n            >;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            actions.setStatus('Error from API');\r\n          }\r\n        )\r\n        .then(response => {\r\n          // cleanup\r\n        });\r\n    },\r\n\r\n    displayName: 'TransactionHistoryEdit',\r\n  }\r\n)(TransactionHistoryEditDisplay);\r\n\r\ninterface IParams {\r\n  transactionID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface TransactionHistoryEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface TransactionHistoryEditComponentState {\r\n  model?: TransactionHistoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class TransactionHistoryEditComponent extends React.Component<\r\n  TransactionHistoryEditComponentProps,\r\n  TransactionHistoryEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'transactionhistories/' +\r\n          this.props.match.params.transactionID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.TransactionHistoryClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new TransactionHistoryMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <TransactionHistoryUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>503617737c497f8c346985f5506ac0f2</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport TransactionHistoryMapper from './transactionHistoryMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport TransactionHistoryViewModel from './transactionHistoryViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface TransactionHistorySearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface TransactionHistorySearchComponentState {\r\n  records: Array<TransactionHistoryViewModel>;\r\n  filteredRecords: Array<TransactionHistoryViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class TransactionHistorySearchComponent extends React.Component<\r\n  TransactionHistorySearchComponentProps,\r\n  TransactionHistorySearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.TransactionHistoryClientResponseModel>(),\r\n    filteredRecords: new Array<Api.TransactionHistoryClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.TransactionHistoryClientResponseModel) {\r\n    this.props.history.push('/transactionhistories/edit/' + row.transactionID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.TransactionHistoryClientResponseModel) {\r\n    this.props.history.push('/transactionhistories/' + row.transactionID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/transactionhistories/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.TransactionHistoryClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'transactionhistories/' + row.transactionID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiUrl + 'transactionhistories' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.TransactionHistoryClientResponseModel\r\n          >;\r\n          let viewModels: Array<TransactionHistoryViewModel> = [];\r\n          let mapper = new TransactionHistoryMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<TransactionHistoryViewModel>(),\r\n            filteredRecords: new Array<TransactionHistoryViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'TransactionHistory',\r\n                columns: [\r\n                  {\r\n                    Header: 'ActualCost',\r\n                    accessor: 'actualCost',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.actualCost)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductID',\r\n                    accessor: 'productID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.productID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Quantity',\r\n                    accessor: 'quantity',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.quantity)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ReferenceOrderID',\r\n                    accessor: 'referenceOrderID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.referenceOrderID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ReferenceOrderLineID',\r\n                    accessor: 'referenceOrderLineID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.referenceOrderLineID)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TransactionDate',\r\n                    accessor: 'transactionDate',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.transactionDate)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TransactionID',\r\n                    accessor: 'transactionID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.transactionID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TransactionType',\r\n                    accessor: 'transactionType',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.transactionType)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.TransactionHistoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.TransactionHistoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.TransactionHistoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>948b124e63b3e5d1b7707874392529d0</Hash>\r\n</Codenesium>*/","export default class TransactionHistoryArchiveViewModel {\r\n  actualCost: number;\r\n  modifiedDate: any;\r\n  productID: number;\r\n  quantity: number;\r\n  referenceOrderID: number;\r\n  referenceOrderLineID: number;\r\n  transactionDate: any;\r\n  transactionID: number;\r\n  transactionType: string;\r\n\r\n  constructor() {\r\n    this.actualCost = 0;\r\n    this.modifiedDate = undefined;\r\n    this.productID = 0;\r\n    this.quantity = 0;\r\n    this.referenceOrderID = 0;\r\n    this.referenceOrderLineID = 0;\r\n    this.transactionDate = undefined;\r\n    this.transactionID = 0;\r\n    this.transactionType = '';\r\n  }\r\n\r\n  setProperties(\r\n    actualCost: number,\r\n    modifiedDate: any,\r\n    productID: number,\r\n    quantity: number,\r\n    referenceOrderID: number,\r\n    referenceOrderLineID: number,\r\n    transactionDate: any,\r\n    transactionID: number,\r\n    transactionType: string\r\n  ): void {\r\n    this.actualCost = actualCost;\r\n    this.modifiedDate = modifiedDate;\r\n    this.productID = productID;\r\n    this.quantity = quantity;\r\n    this.referenceOrderID = referenceOrderID;\r\n    this.referenceOrderLineID = referenceOrderLineID;\r\n    this.transactionDate = transactionDate;\r\n    this.transactionID = transactionID;\r\n    this.transactionType = transactionType;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4ddd89bed0b4b58fdd86c9a48f4884d9</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport TransactionHistoryArchiveViewModel from './transactionHistoryArchiveViewModel';\r\n\r\nexport default class TransactionHistoryArchiveMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.TransactionHistoryArchiveClientResponseModel\r\n  ): TransactionHistoryArchiveViewModel {\r\n    let response = new TransactionHistoryArchiveViewModel();\r\n    response.setProperties(\r\n      dto.actualCost,\r\n      dto.modifiedDate,\r\n      dto.productID,\r\n      dto.quantity,\r\n      dto.referenceOrderID,\r\n      dto.referenceOrderLineID,\r\n      dto.transactionDate,\r\n      dto.transactionID,\r\n      dto.transactionType\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: TransactionHistoryArchiveViewModel\r\n  ): Api.TransactionHistoryArchiveClientRequestModel {\r\n    let response = new Api.TransactionHistoryArchiveClientRequestModel();\r\n    response.setProperties(\r\n      model.actualCost,\r\n      model.modifiedDate,\r\n      model.productID,\r\n      model.quantity,\r\n      model.referenceOrderID,\r\n      model.referenceOrderLineID,\r\n      model.transactionDate,\r\n      model.transactionID,\r\n      model.transactionType\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6a816e01932a9a6d62563e86cef09ed4</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport TransactionHistoryArchiveMapper from './transactionHistoryArchiveMapper';\r\nimport TransactionHistoryArchiveViewModel from './transactionHistoryArchiveViewModel';\r\n\r\ninterface Props {\r\n  model?: TransactionHistoryArchiveViewModel;\r\n}\r\n\r\nconst TransactionHistoryArchiveCreateDisplay: React.SFC<\r\n  FormikProps<TransactionHistoryArchiveViewModel>\r\n> = (props: FormikProps<TransactionHistoryArchiveViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.TransactionHistoryArchiveClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof TransactionHistoryArchiveViewModel] &&\r\n      props.errors[name as keyof TransactionHistoryArchiveViewModel]\r\n    ) {\r\n      response +=\r\n        props.errors[name as keyof TransactionHistoryArchiveViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('actualCost')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ActualCost\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"actualCost\"\r\n            className={\r\n              errorExistForField('actualCost')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('actualCost') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('actualCost')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('quantity')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Quantity\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"quantity\"\r\n            className={\r\n              errorExistForField('quantity')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('quantity') && (\r\n            <small className=\"text-danger\">{errorsForField('quantity')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('referenceOrderID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReferenceOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"referenceOrderID\"\r\n            className={\r\n              errorExistForField('referenceOrderID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('referenceOrderID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('referenceOrderID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('referenceOrderLineID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReferenceOrderLineID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"referenceOrderLineID\"\r\n            className={\r\n              errorExistForField('referenceOrderLineID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('referenceOrderLineID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('referenceOrderLineID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionDate\"\r\n            className={\r\n              errorExistForField('transactionDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionType\"\r\n            className={\r\n              errorExistForField('transactionType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionType') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionType')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst TransactionHistoryArchiveCreate = withFormik<\r\n  Props,\r\n  TransactionHistoryArchiveViewModel\r\n>({\r\n  mapPropsToValues: props => {\r\n    let response = new TransactionHistoryArchiveViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.actualCost,\r\n        props.model!.modifiedDate,\r\n        props.model!.productID,\r\n        props.model!.quantity,\r\n        props.model!.referenceOrderID,\r\n        props.model!.referenceOrderLineID,\r\n        props.model!.transactionDate,\r\n        props.model!.transactionID,\r\n        props.model!.transactionType\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<TransactionHistoryArchiveViewModel> = {};\r\n\r\n    if (values.actualCost == 0) {\r\n      errors.actualCost = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.productID == 0) {\r\n      errors.productID = 'Required';\r\n    }\r\n    if (values.quantity == 0) {\r\n      errors.quantity = 'Required';\r\n    }\r\n    if (values.referenceOrderID == 0) {\r\n      errors.referenceOrderID = 'Required';\r\n    }\r\n    if (values.referenceOrderLineID == 0) {\r\n      errors.referenceOrderLineID = 'Required';\r\n    }\r\n    if (values.transactionDate == undefined) {\r\n      errors.transactionDate = 'Required';\r\n    }\r\n    if (values.transactionType == '') {\r\n      errors.transactionType = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new TransactionHistoryArchiveMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'transactionhistoryarchives',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.TransactionHistoryArchiveClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'TransactionHistoryArchiveCreate',\r\n})(TransactionHistoryArchiveCreateDisplay);\r\n\r\ninterface TransactionHistoryArchiveCreateComponentProps {}\r\n\r\ninterface TransactionHistoryArchiveCreateComponentState {\r\n  model?: TransactionHistoryArchiveViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class TransactionHistoryArchiveCreateComponent extends React.Component<\r\n  TransactionHistoryArchiveCreateComponentProps,\r\n  TransactionHistoryArchiveCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <TransactionHistoryArchiveCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ef308e007bbe9728078f907b84f16831</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport TransactionHistoryArchiveMapper from './transactionHistoryArchiveMapper';\r\nimport TransactionHistoryArchiveViewModel from './transactionHistoryArchiveViewModel';\r\n\r\ninterface Props {\r\n  model?: TransactionHistoryArchiveViewModel;\r\n}\r\n\r\nconst TransactionHistoryArchiveDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"actualCost\" className={'col-sm-2 col-form-label'}>\r\n          ActualCost\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.actualCost)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productID\" className={'col-sm-2 col-form-label'}>\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"quantity\" className={'col-sm-2 col-form-label'}>\r\n          Quantity\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.quantity)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"referenceOrderID\" className={'col-sm-2 col-form-label'}>\r\n          ReferenceOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.referenceOrderID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"referenceOrderLineID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ReferenceOrderLineID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.referenceOrderLineID)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"transactionDate\" className={'col-sm-2 col-form-label'}>\r\n          TransactionDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.transactionDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"transactionID\" className={'col-sm-2 col-form-label'}>\r\n          TransactionID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.transactionID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"transactionType\" className={'col-sm-2 col-form-label'}>\r\n          TransactionType\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.transactionType)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  transactionID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface TransactionHistoryArchiveDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface TransactionHistoryArchiveDetailComponentState {\r\n  model?: TransactionHistoryArchiveViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class TransactionHistoryArchiveDetailComponent extends React.Component<\r\n  TransactionHistoryArchiveDetailComponentProps,\r\n  TransactionHistoryArchiveDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'transactionhistoryarchives/' +\r\n          this.props.match.params.transactionID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.TransactionHistoryArchiveClientResponseModel;\r\n\r\n          let mapper = new TransactionHistoryArchiveMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <TransactionHistoryArchiveDetailDisplay model={this.state.model} />\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7e435cb189c43ffbc2ca130692252a26</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport TransactionHistoryArchiveViewModel from './transactionHistoryArchiveViewModel';\r\nimport TransactionHistoryArchiveMapper from './transactionHistoryArchiveMapper';\r\n\r\ninterface Props {\r\n  model?: TransactionHistoryArchiveViewModel;\r\n}\r\n\r\nconst TransactionHistoryArchiveEditDisplay = (\r\n  props: FormikProps<TransactionHistoryArchiveViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.TransactionHistoryArchiveClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof TransactionHistoryArchiveViewModel] &&\r\n      props.errors[name as keyof TransactionHistoryArchiveViewModel]\r\n    ) {\r\n      response +=\r\n        props.errors[name as keyof TransactionHistoryArchiveViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('actualCost')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ActualCost\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"actualCost\"\r\n            className={\r\n              errorExistForField('actualCost')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('actualCost') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('actualCost')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('quantity')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Quantity\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"quantity\"\r\n            className={\r\n              errorExistForField('quantity')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('quantity') && (\r\n            <small className=\"text-danger\">{errorsForField('quantity')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('referenceOrderID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReferenceOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"referenceOrderID\"\r\n            className={\r\n              errorExistForField('referenceOrderID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('referenceOrderID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('referenceOrderID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('referenceOrderLineID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReferenceOrderLineID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"referenceOrderLineID\"\r\n            className={\r\n              errorExistForField('referenceOrderLineID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('referenceOrderLineID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('referenceOrderLineID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionDate\"\r\n            className={\r\n              errorExistForField('transactionDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionID\"\r\n            className={\r\n              errorExistForField('transactionID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('transactionType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TransactionType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"transactionType\"\r\n            className={\r\n              errorExistForField('transactionType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('transactionType') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('transactionType')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst TransactionHistoryArchiveUpdate = withFormik<\r\n  Props,\r\n  TransactionHistoryArchiveViewModel\r\n>({\r\n  mapPropsToValues: props => {\r\n    let response = new TransactionHistoryArchiveViewModel();\r\n    response.setProperties(\r\n      props.model!.actualCost,\r\n      props.model!.modifiedDate,\r\n      props.model!.productID,\r\n      props.model!.quantity,\r\n      props.model!.referenceOrderID,\r\n      props.model!.referenceOrderLineID,\r\n      props.model!.transactionDate,\r\n      props.model!.transactionID,\r\n      props.model!.transactionType\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<TransactionHistoryArchiveViewModel> = {};\r\n\r\n    if (values.actualCost == 0) {\r\n      errors.actualCost = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.productID == 0) {\r\n      errors.productID = 'Required';\r\n    }\r\n    if (values.quantity == 0) {\r\n      errors.quantity = 'Required';\r\n    }\r\n    if (values.referenceOrderID == 0) {\r\n      errors.referenceOrderID = 'Required';\r\n    }\r\n    if (values.referenceOrderLineID == 0) {\r\n      errors.referenceOrderLineID = 'Required';\r\n    }\r\n    if (values.transactionDate == undefined) {\r\n      errors.transactionDate = 'Required';\r\n    }\r\n    if (values.transactionID == 0) {\r\n      errors.transactionID = 'Required';\r\n    }\r\n    if (values.transactionType == '') {\r\n      errors.transactionType = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new TransactionHistoryArchiveMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'transactionhistoryarchives/' + values.transactionID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.TransactionHistoryArchiveClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'TransactionHistoryArchiveEdit',\r\n})(TransactionHistoryArchiveEditDisplay);\r\n\r\ninterface IParams {\r\n  transactionID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface TransactionHistoryArchiveEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface TransactionHistoryArchiveEditComponentState {\r\n  model?: TransactionHistoryArchiveViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class TransactionHistoryArchiveEditComponent extends React.Component<\r\n  TransactionHistoryArchiveEditComponentProps,\r\n  TransactionHistoryArchiveEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'transactionhistoryarchives/' +\r\n          this.props.match.params.transactionID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.TransactionHistoryArchiveClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new TransactionHistoryArchiveMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <TransactionHistoryArchiveUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>295b2c4c4887ce92ce79baa61ca731a8</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport TransactionHistoryArchiveMapper from './transactionHistoryArchiveMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport TransactionHistoryArchiveViewModel from './transactionHistoryArchiveViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface TransactionHistoryArchiveSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface TransactionHistoryArchiveSearchComponentState {\r\n  records: Array<TransactionHistoryArchiveViewModel>;\r\n  filteredRecords: Array<TransactionHistoryArchiveViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class TransactionHistoryArchiveSearchComponent extends React.Component<\r\n  TransactionHistoryArchiveSearchComponentProps,\r\n  TransactionHistoryArchiveSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.TransactionHistoryArchiveClientResponseModel>(),\r\n    filteredRecords: new Array<\r\n      Api.TransactionHistoryArchiveClientResponseModel\r\n    >(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(\r\n    e: any,\r\n    row: Api.TransactionHistoryArchiveClientResponseModel\r\n  ) {\r\n    this.props.history.push(\r\n      '/transactionhistoryarchives/edit/' + row.transactionID\r\n    );\r\n  }\r\n\r\n  handleDetailClick(\r\n    e: any,\r\n    row: Api.TransactionHistoryArchiveClientResponseModel\r\n  ) {\r\n    this.props.history.push('/transactionhistoryarchives/' + row.transactionID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/transactionhistoryarchives/create');\r\n  }\r\n\r\n  handleDeleteClick(\r\n    e: any,\r\n    row: Api.TransactionHistoryArchiveClientResponseModel\r\n  ) {\r\n    axios\r\n      .delete(\r\n        Constants.ApiUrl + 'transactionhistoryarchives/' + row.transactionID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiUrl + 'transactionhistoryarchives' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.TransactionHistoryArchiveClientResponseModel\r\n          >;\r\n          let viewModels: Array<TransactionHistoryArchiveViewModel> = [];\r\n          let mapper = new TransactionHistoryArchiveMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<TransactionHistoryArchiveViewModel>(),\r\n            filteredRecords: new Array<TransactionHistoryArchiveViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'TransactionHistoryArchive',\r\n                columns: [\r\n                  {\r\n                    Header: 'ActualCost',\r\n                    accessor: 'actualCost',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.actualCost)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductID',\r\n                    accessor: 'productID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.productID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Quantity',\r\n                    accessor: 'quantity',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.quantity)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ReferenceOrderID',\r\n                    accessor: 'referenceOrderID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.referenceOrderID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ReferenceOrderLineID',\r\n                    accessor: 'referenceOrderLineID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.referenceOrderLineID)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TransactionDate',\r\n                    accessor: 'transactionDate',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.transactionDate)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TransactionID',\r\n                    accessor: 'transactionID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.transactionID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TransactionType',\r\n                    accessor: 'transactionType',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.transactionType)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.TransactionHistoryArchiveClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.TransactionHistoryArchiveClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.TransactionHistoryArchiveClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>a3b8de36c3f232e536a66e90988e3f82</Hash>\r\n</Codenesium>*/","export default class UnitMeasureViewModel {\r\n  modifiedDate: any;\r\n  name: string;\r\n  unitMeasureCode: string;\r\n\r\n  constructor() {\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.unitMeasureCode = '';\r\n  }\r\n\r\n  setProperties(\r\n    modifiedDate: any,\r\n    name: string,\r\n    unitMeasureCode: string\r\n  ): void {\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.unitMeasureCode = unitMeasureCode;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bd5af0615891df52b9f1e29f9a8fe502</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport UnitMeasureViewModel from './unitMeasureViewModel';\r\n\r\nexport default class UnitMeasureMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.UnitMeasureClientResponseModel\r\n  ): UnitMeasureViewModel {\r\n    let response = new UnitMeasureViewModel();\r\n    response.setProperties(dto.modifiedDate, dto.name, dto.unitMeasureCode);\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: UnitMeasureViewModel\r\n  ): Api.UnitMeasureClientRequestModel {\r\n    let response = new Api.UnitMeasureClientRequestModel();\r\n    response.setProperties(\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.unitMeasureCode\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>a201ffbf23f2d77a6e78f9472ba2bbe8</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport UnitMeasureMapper from './unitMeasureMapper';\r\nimport UnitMeasureViewModel from './unitMeasureViewModel';\r\n\r\ninterface Props {\r\n  model?: UnitMeasureViewModel;\r\n}\r\n\r\nconst UnitMeasureCreateDisplay: React.SFC<FormikProps<UnitMeasureViewModel>> = (\r\n  props: FormikProps<UnitMeasureViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.UnitMeasureClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof UnitMeasureViewModel] &&\r\n      props.errors[name as keyof UnitMeasureViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof UnitMeasureViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst UnitMeasureCreate = withFormik<Props, UnitMeasureViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new UnitMeasureViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.unitMeasureCode\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<UnitMeasureViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new UnitMeasureMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'unitmeasures',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.UnitMeasureClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'UnitMeasureCreate',\r\n})(UnitMeasureCreateDisplay);\r\n\r\ninterface UnitMeasureCreateComponentProps {}\r\n\r\ninterface UnitMeasureCreateComponentState {\r\n  model?: UnitMeasureViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class UnitMeasureCreateComponent extends React.Component<\r\n  UnitMeasureCreateComponentProps,\r\n  UnitMeasureCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <UnitMeasureCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d559b4d2b7500314dc3d1987e2d4fe3d</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport UnitMeasureMapper from './unitMeasureMapper';\r\nimport UnitMeasureViewModel from './unitMeasureViewModel';\r\n\r\ninterface Props {\r\n  model?: UnitMeasureViewModel;\r\n}\r\n\r\nconst UnitMeasureDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"unitMeasureCode\" className={'col-sm-2 col-form-label'}>\r\n          UnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.unitMeasureCode)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  unitMeasureCode: string;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface UnitMeasureDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface UnitMeasureDetailComponentState {\r\n  model?: UnitMeasureViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class UnitMeasureDetailComponent extends React.Component<\r\n  UnitMeasureDetailComponentProps,\r\n  UnitMeasureDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'unitmeasures/' +\r\n          this.props.match.params.unitMeasureCode,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.UnitMeasureClientResponseModel;\r\n\r\n          let mapper = new UnitMeasureMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <UnitMeasureDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2e59cb0cf05212d8e3a3351472d20a4a</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport UnitMeasureViewModel from './unitMeasureViewModel';\r\nimport UnitMeasureMapper from './unitMeasureMapper';\r\n\r\ninterface Props {\r\n  model?: UnitMeasureViewModel;\r\n}\r\n\r\nconst UnitMeasureEditDisplay = (props: FormikProps<UnitMeasureViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.UnitMeasureClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof UnitMeasureViewModel] &&\r\n      props.errors[name as keyof UnitMeasureViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof UnitMeasureViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('unitMeasureCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          UnitMeasureCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"unitMeasureCode\"\r\n            className={\r\n              errorExistForField('unitMeasureCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('unitMeasureCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('unitMeasureCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst UnitMeasureUpdate = withFormik<Props, UnitMeasureViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new UnitMeasureViewModel();\r\n    response.setProperties(\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.unitMeasureCode\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<UnitMeasureViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.unitMeasureCode == '') {\r\n      errors.unitMeasureCode = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new UnitMeasureMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'unitmeasures/' + values.unitMeasureCode,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.UnitMeasureClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'UnitMeasureEdit',\r\n})(UnitMeasureEditDisplay);\r\n\r\ninterface IParams {\r\n  unitMeasureCode: string;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface UnitMeasureEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface UnitMeasureEditComponentState {\r\n  model?: UnitMeasureViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class UnitMeasureEditComponent extends React.Component<\r\n  UnitMeasureEditComponentProps,\r\n  UnitMeasureEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'unitmeasures/' +\r\n          this.props.match.params.unitMeasureCode,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.UnitMeasureClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new UnitMeasureMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <UnitMeasureUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>98226e2d3ecc1554f6b8a49b3499284e</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport UnitMeasureMapper from './unitMeasureMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport UnitMeasureViewModel from './unitMeasureViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface UnitMeasureSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface UnitMeasureSearchComponentState {\r\n  records: Array<UnitMeasureViewModel>;\r\n  filteredRecords: Array<UnitMeasureViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class UnitMeasureSearchComponent extends React.Component<\r\n  UnitMeasureSearchComponentProps,\r\n  UnitMeasureSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.UnitMeasureClientResponseModel>(),\r\n    filteredRecords: new Array<Api.UnitMeasureClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.UnitMeasureClientResponseModel) {\r\n    this.props.history.push('/unitmeasures/edit/' + row.unitMeasureCode);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.UnitMeasureClientResponseModel) {\r\n    this.props.history.push('/unitmeasures/' + row.unitMeasureCode);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/unitmeasures/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.UnitMeasureClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'unitmeasures/' + row.unitMeasureCode, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'unitmeasures' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.UnitMeasureClientResponseModel>;\r\n          let viewModels: Array<UnitMeasureViewModel> = [];\r\n          let mapper = new UnitMeasureMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<UnitMeasureViewModel>(),\r\n            filteredRecords: new Array<UnitMeasureViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'UnitMeasure',\r\n                columns: [\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'UnitMeasureCode',\r\n                    accessor: 'unitMeasureCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.unitMeasureCode)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.UnitMeasureClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.UnitMeasureClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.UnitMeasureClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>598f38c2f79a8e586a96608e35ed617e</Hash>\r\n</Codenesium>*/","export default class WorkOrderViewModel {\r\n  dueDate: any;\r\n  endDate: any;\r\n  modifiedDate: any;\r\n  orderQty: number;\r\n  productID: number;\r\n  scrappedQty: number;\r\n  scrapReasonID: any;\r\n  startDate: any;\r\n  stockedQty: number;\r\n  workOrderID: number;\r\n\r\n  constructor() {\r\n    this.dueDate = undefined;\r\n    this.endDate = undefined;\r\n    this.modifiedDate = undefined;\r\n    this.orderQty = 0;\r\n    this.productID = 0;\r\n    this.scrappedQty = 0;\r\n    this.scrapReasonID = undefined;\r\n    this.startDate = undefined;\r\n    this.stockedQty = 0;\r\n    this.workOrderID = 0;\r\n  }\r\n\r\n  setProperties(\r\n    dueDate: any,\r\n    endDate: any,\r\n    modifiedDate: any,\r\n    orderQty: number,\r\n    productID: number,\r\n    scrappedQty: number,\r\n    scrapReasonID: any,\r\n    startDate: any,\r\n    stockedQty: number,\r\n    workOrderID: number\r\n  ): void {\r\n    this.dueDate = dueDate;\r\n    this.endDate = endDate;\r\n    this.modifiedDate = modifiedDate;\r\n    this.orderQty = orderQty;\r\n    this.productID = productID;\r\n    this.scrappedQty = scrappedQty;\r\n    this.scrapReasonID = scrapReasonID;\r\n    this.startDate = startDate;\r\n    this.stockedQty = stockedQty;\r\n    this.workOrderID = workOrderID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>75050a4557a06840af602bf21fbb7d3f</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport WorkOrderViewModel from './workOrderViewModel';\r\n\r\nexport default class WorkOrderMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.WorkOrderClientResponseModel\r\n  ): WorkOrderViewModel {\r\n    let response = new WorkOrderViewModel();\r\n    response.setProperties(\r\n      dto.dueDate,\r\n      dto.endDate,\r\n      dto.modifiedDate,\r\n      dto.orderQty,\r\n      dto.productID,\r\n      dto.scrappedQty,\r\n      dto.scrapReasonID,\r\n      dto.startDate,\r\n      dto.stockedQty,\r\n      dto.workOrderID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: WorkOrderViewModel\r\n  ): Api.WorkOrderClientRequestModel {\r\n    let response = new Api.WorkOrderClientRequestModel();\r\n    response.setProperties(\r\n      model.dueDate,\r\n      model.endDate,\r\n      model.modifiedDate,\r\n      model.orderQty,\r\n      model.productID,\r\n      model.scrappedQty,\r\n      model.scrapReasonID,\r\n      model.startDate,\r\n      model.stockedQty,\r\n      model.workOrderID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9c08c5abc0d7f9d4c127feba6d50a6fa</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport WorkOrderMapper from './workOrderMapper';\r\nimport WorkOrderViewModel from './workOrderViewModel';\r\n\r\ninterface Props {\r\n  model?: WorkOrderViewModel;\r\n}\r\n\r\nconst WorkOrderCreateDisplay: React.SFC<FormikProps<WorkOrderViewModel>> = (\r\n  props: FormikProps<WorkOrderViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.WorkOrderClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof WorkOrderViewModel] &&\r\n      props.errors[name as keyof WorkOrderViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof WorkOrderViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('dueDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DueDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"dueDate\"\r\n            className={\r\n              errorExistForField('dueDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('dueDate') && (\r\n            <small className=\"text-danger\">{errorsForField('dueDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endDate\"\r\n            className={\r\n              errorExistForField('endDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endDate') && (\r\n            <small className=\"text-danger\">{errorsForField('endDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('orderQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OrderQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"orderQty\"\r\n            className={\r\n              errorExistForField('orderQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('orderQty') && (\r\n            <small className=\"text-danger\">{errorsForField('orderQty')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('scrappedQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ScrappedQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"scrappedQty\"\r\n            className={\r\n              errorExistForField('scrappedQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('scrappedQty') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('scrappedQty')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('scrapReasonID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ScrapReasonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"scrapReasonID\"\r\n            className={\r\n              errorExistForField('scrapReasonID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('scrapReasonID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('scrapReasonID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('startDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"startDate\"\r\n            className={\r\n              errorExistForField('startDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('startDate') && (\r\n            <small className=\"text-danger\">{errorsForField('startDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('stockedQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StockedQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"stockedQty\"\r\n            className={\r\n              errorExistForField('stockedQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('stockedQty') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('stockedQty')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst WorkOrderCreate = withFormik<Props, WorkOrderViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new WorkOrderViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.dueDate,\r\n        props.model!.endDate,\r\n        props.model!.modifiedDate,\r\n        props.model!.orderQty,\r\n        props.model!.productID,\r\n        props.model!.scrappedQty,\r\n        props.model!.scrapReasonID,\r\n        props.model!.startDate,\r\n        props.model!.stockedQty,\r\n        props.model!.workOrderID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<WorkOrderViewModel> = {};\r\n\r\n    if (values.dueDate == undefined) {\r\n      errors.dueDate = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.orderQty == 0) {\r\n      errors.orderQty = 'Required';\r\n    }\r\n    if (values.productID == 0) {\r\n      errors.productID = 'Required';\r\n    }\r\n    if (values.scrappedQty == 0) {\r\n      errors.scrappedQty = 'Required';\r\n    }\r\n    if (values.startDate == undefined) {\r\n      errors.startDate = 'Required';\r\n    }\r\n    if (values.stockedQty == 0) {\r\n      errors.stockedQty = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new WorkOrderMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'workorders',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.WorkOrderClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'WorkOrderCreate',\r\n})(WorkOrderCreateDisplay);\r\n\r\ninterface WorkOrderCreateComponentProps {}\r\n\r\ninterface WorkOrderCreateComponentState {\r\n  model?: WorkOrderViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class WorkOrderCreateComponent extends React.Component<\r\n  WorkOrderCreateComponentProps,\r\n  WorkOrderCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <WorkOrderCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e7973ab16056ebd56f48a5c91acbf509</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport WorkOrderMapper from './workOrderMapper';\r\nimport WorkOrderViewModel from './workOrderViewModel';\r\n\r\ninterface Props {\r\n  model?: WorkOrderViewModel;\r\n}\r\n\r\nconst WorkOrderDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"dueDate\" className={'col-sm-2 col-form-label'}>\r\n          DueDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.dueDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"endDate\" className={'col-sm-2 col-form-label'}>\r\n          EndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.endDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"orderQty\" className={'col-sm-2 col-form-label'}>\r\n          OrderQty\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.orderQty)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productID\" className={'col-sm-2 col-form-label'}>\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"scrappedQty\" className={'col-sm-2 col-form-label'}>\r\n          ScrappedQty\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.scrappedQty)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"scrapReasonID\" className={'col-sm-2 col-form-label'}>\r\n          ScrapReasonID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.scrapReasonID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"startDate\" className={'col-sm-2 col-form-label'}>\r\n          StartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.startDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"stockedQty\" className={'col-sm-2 col-form-label'}>\r\n          StockedQty\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.stockedQty)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"workOrderID\" className={'col-sm-2 col-form-label'}>\r\n          WorkOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.workOrderID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  workOrderID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface WorkOrderDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface WorkOrderDetailComponentState {\r\n  model?: WorkOrderViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class WorkOrderDetailComponent extends React.Component<\r\n  WorkOrderDetailComponentProps,\r\n  WorkOrderDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'workorders/' + this.props.match.params.workOrderID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.WorkOrderClientResponseModel;\r\n\r\n          let mapper = new WorkOrderMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <WorkOrderDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8f34a067e8b986a1fad0ee41f82dcdfd</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport WorkOrderViewModel from './workOrderViewModel';\r\nimport WorkOrderMapper from './workOrderMapper';\r\n\r\ninterface Props {\r\n  model?: WorkOrderViewModel;\r\n}\r\n\r\nconst WorkOrderEditDisplay = (props: FormikProps<WorkOrderViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.WorkOrderClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof WorkOrderViewModel] &&\r\n      props.errors[name as keyof WorkOrderViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof WorkOrderViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('dueDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DueDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"dueDate\"\r\n            className={\r\n              errorExistForField('dueDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('dueDate') && (\r\n            <small className=\"text-danger\">{errorsForField('dueDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endDate\"\r\n            className={\r\n              errorExistForField('endDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endDate') && (\r\n            <small className=\"text-danger\">{errorsForField('endDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('orderQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OrderQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"orderQty\"\r\n            className={\r\n              errorExistForField('orderQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('orderQty') && (\r\n            <small className=\"text-danger\">{errorsForField('orderQty')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('scrappedQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ScrappedQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"scrappedQty\"\r\n            className={\r\n              errorExistForField('scrappedQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('scrappedQty') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('scrappedQty')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('scrapReasonID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ScrapReasonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"scrapReasonID\"\r\n            className={\r\n              errorExistForField('scrapReasonID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('scrapReasonID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('scrapReasonID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('startDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"startDate\"\r\n            className={\r\n              errorExistForField('startDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('startDate') && (\r\n            <small className=\"text-danger\">{errorsForField('startDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('stockedQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StockedQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"stockedQty\"\r\n            className={\r\n              errorExistForField('stockedQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('stockedQty') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('stockedQty')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('workOrderID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          WorkOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"workOrderID\"\r\n            className={\r\n              errorExistForField('workOrderID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('workOrderID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('workOrderID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst WorkOrderUpdate = withFormik<Props, WorkOrderViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new WorkOrderViewModel();\r\n    response.setProperties(\r\n      props.model!.dueDate,\r\n      props.model!.endDate,\r\n      props.model!.modifiedDate,\r\n      props.model!.orderQty,\r\n      props.model!.productID,\r\n      props.model!.scrappedQty,\r\n      props.model!.scrapReasonID,\r\n      props.model!.startDate,\r\n      props.model!.stockedQty,\r\n      props.model!.workOrderID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<WorkOrderViewModel> = {};\r\n\r\n    if (values.dueDate == undefined) {\r\n      errors.dueDate = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.orderQty == 0) {\r\n      errors.orderQty = 'Required';\r\n    }\r\n    if (values.productID == 0) {\r\n      errors.productID = 'Required';\r\n    }\r\n    if (values.scrappedQty == 0) {\r\n      errors.scrappedQty = 'Required';\r\n    }\r\n    if (values.startDate == undefined) {\r\n      errors.startDate = 'Required';\r\n    }\r\n    if (values.stockedQty == 0) {\r\n      errors.stockedQty = 'Required';\r\n    }\r\n    if (values.workOrderID == 0) {\r\n      errors.workOrderID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new WorkOrderMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'workorders/' + values.workOrderID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.WorkOrderClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'WorkOrderEdit',\r\n})(WorkOrderEditDisplay);\r\n\r\ninterface IParams {\r\n  workOrderID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface WorkOrderEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface WorkOrderEditComponentState {\r\n  model?: WorkOrderViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class WorkOrderEditComponent extends React.Component<\r\n  WorkOrderEditComponentProps,\r\n  WorkOrderEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'workorders/' + this.props.match.params.workOrderID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.WorkOrderClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new WorkOrderMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <WorkOrderUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4342266e6069d4b59debc55b0ade6282</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport WorkOrderMapper from './workOrderMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport WorkOrderViewModel from './workOrderViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface WorkOrderSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface WorkOrderSearchComponentState {\r\n  records: Array<WorkOrderViewModel>;\r\n  filteredRecords: Array<WorkOrderViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class WorkOrderSearchComponent extends React.Component<\r\n  WorkOrderSearchComponentProps,\r\n  WorkOrderSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.WorkOrderClientResponseModel>(),\r\n    filteredRecords: new Array<Api.WorkOrderClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.WorkOrderClientResponseModel) {\r\n    this.props.history.push('/workorders/edit/' + row.workOrderID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.WorkOrderClientResponseModel) {\r\n    this.props.history.push('/workorders/' + row.workOrderID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/workorders/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.WorkOrderClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'workorders/' + row.workOrderID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'workorders' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.WorkOrderClientResponseModel>;\r\n          let viewModels: Array<WorkOrderViewModel> = [];\r\n          let mapper = new WorkOrderMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<WorkOrderViewModel>(),\r\n            filteredRecords: new Array<WorkOrderViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'WorkOrder',\r\n                columns: [\r\n                  {\r\n                    Header: 'DueDate',\r\n                    accessor: 'dueDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.dueDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'EndDate',\r\n                    accessor: 'endDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.endDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'OrderQty',\r\n                    accessor: 'orderQty',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.orderQty)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductID',\r\n                    accessor: 'productID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.productID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ScrappedQty',\r\n                    accessor: 'scrappedQty',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.scrappedQty)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ScrapReasonID',\r\n                    accessor: 'scrapReasonID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.scrapReasonID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StartDate',\r\n                    accessor: 'startDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.startDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StockedQty',\r\n                    accessor: 'stockedQty',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.stockedQty)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'WorkOrderID',\r\n                    accessor: 'workOrderID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.workOrderID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.WorkOrderClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.WorkOrderClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.WorkOrderClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f505d4252e25b26848b59c99a0b98c81</Hash>\r\n</Codenesium>*/","export default class PurchaseOrderHeaderViewModel {\r\n  employeeID: number;\r\n  freight: number;\r\n  modifiedDate: any;\r\n  orderDate: any;\r\n  purchaseOrderID: number;\r\n  revisionNumber: number;\r\n  shipDate: any;\r\n  shipMethodID: number;\r\n  status: number;\r\n  subTotal: number;\r\n  taxAmt: number;\r\n  totalDue: number;\r\n  vendorID: number;\r\n\r\n  constructor() {\r\n    this.employeeID = 0;\r\n    this.freight = 0;\r\n    this.modifiedDate = undefined;\r\n    this.orderDate = undefined;\r\n    this.purchaseOrderID = 0;\r\n    this.revisionNumber = 0;\r\n    this.shipDate = undefined;\r\n    this.shipMethodID = 0;\r\n    this.status = 0;\r\n    this.subTotal = 0;\r\n    this.taxAmt = 0;\r\n    this.totalDue = 0;\r\n    this.vendorID = 0;\r\n  }\r\n\r\n  setProperties(\r\n    employeeID: number,\r\n    freight: number,\r\n    modifiedDate: any,\r\n    orderDate: any,\r\n    purchaseOrderID: number,\r\n    revisionNumber: number,\r\n    shipDate: any,\r\n    shipMethodID: number,\r\n    status: number,\r\n    subTotal: number,\r\n    taxAmt: number,\r\n    totalDue: number,\r\n    vendorID: number\r\n  ): void {\r\n    this.employeeID = employeeID;\r\n    this.freight = freight;\r\n    this.modifiedDate = modifiedDate;\r\n    this.orderDate = orderDate;\r\n    this.purchaseOrderID = purchaseOrderID;\r\n    this.revisionNumber = revisionNumber;\r\n    this.shipDate = shipDate;\r\n    this.shipMethodID = shipMethodID;\r\n    this.status = status;\r\n    this.subTotal = subTotal;\r\n    this.taxAmt = taxAmt;\r\n    this.totalDue = totalDue;\r\n    this.vendorID = vendorID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b0e2ad7145a75918cc1910929d16c7d8</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PurchaseOrderHeaderViewModel from './purchaseOrderHeaderViewModel';\r\n\r\nexport default class PurchaseOrderHeaderMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PurchaseOrderHeaderClientResponseModel\r\n  ): PurchaseOrderHeaderViewModel {\r\n    let response = new PurchaseOrderHeaderViewModel();\r\n    response.setProperties(\r\n      dto.employeeID,\r\n      dto.freight,\r\n      dto.modifiedDate,\r\n      dto.orderDate,\r\n      dto.purchaseOrderID,\r\n      dto.revisionNumber,\r\n      dto.shipDate,\r\n      dto.shipMethodID,\r\n      dto.status,\r\n      dto.subTotal,\r\n      dto.taxAmt,\r\n      dto.totalDue,\r\n      dto.vendorID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PurchaseOrderHeaderViewModel\r\n  ): Api.PurchaseOrderHeaderClientRequestModel {\r\n    let response = new Api.PurchaseOrderHeaderClientRequestModel();\r\n    response.setProperties(\r\n      model.employeeID,\r\n      model.freight,\r\n      model.modifiedDate,\r\n      model.orderDate,\r\n      model.purchaseOrderID,\r\n      model.revisionNumber,\r\n      model.shipDate,\r\n      model.shipMethodID,\r\n      model.status,\r\n      model.subTotal,\r\n      model.taxAmt,\r\n      model.totalDue,\r\n      model.vendorID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>eb933e0a34d1d665081050f0651869f7</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport PurchaseOrderHeaderMapper from './purchaseOrderHeaderMapper';\r\nimport PurchaseOrderHeaderViewModel from './purchaseOrderHeaderViewModel';\r\n\r\ninterface Props {\r\n  model?: PurchaseOrderHeaderViewModel;\r\n}\r\n\r\nconst PurchaseOrderHeaderCreateDisplay: React.SFC<\r\n  FormikProps<PurchaseOrderHeaderViewModel>\r\n> = (props: FormikProps<PurchaseOrderHeaderViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.PurchaseOrderHeaderClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PurchaseOrderHeaderViewModel] &&\r\n      props.errors[name as keyof PurchaseOrderHeaderViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PurchaseOrderHeaderViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('employeeID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EmployeeID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"employeeID\"\r\n            className={\r\n              errorExistForField('employeeID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('employeeID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('employeeID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('freight')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Freight\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"freight\"\r\n            className={\r\n              errorExistForField('freight')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('freight') && (\r\n            <small className=\"text-danger\">{errorsForField('freight')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('orderDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OrderDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"orderDate\"\r\n            className={\r\n              errorExistForField('orderDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('orderDate') && (\r\n            <small className=\"text-danger\">{errorsForField('orderDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('revisionNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          RevisionNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"revisionNumber\"\r\n            className={\r\n              errorExistForField('revisionNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('revisionNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('revisionNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipDate\"\r\n            className={\r\n              errorExistForField('shipDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipDate') && (\r\n            <small className=\"text-danger\">{errorsForField('shipDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipMethodID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipMethodID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipMethodID\"\r\n            className={\r\n              errorExistForField('shipMethodID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipMethodID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shipMethodID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('status')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Status\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"status\"\r\n            className={\r\n              errorExistForField('status')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('status') && (\r\n            <small className=\"text-danger\">{errorsForField('status')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('subTotal')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SubTotal\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"subTotal\"\r\n            className={\r\n              errorExistForField('subTotal')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('subTotal') && (\r\n            <small className=\"text-danger\">{errorsForField('subTotal')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('taxAmt')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TaxAmt\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"taxAmt\"\r\n            className={\r\n              errorExistForField('taxAmt')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('taxAmt') && (\r\n            <small className=\"text-danger\">{errorsForField('taxAmt')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('totalDue')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TotalDue\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"totalDue\"\r\n            className={\r\n              errorExistForField('totalDue')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('totalDue') && (\r\n            <small className=\"text-danger\">{errorsForField('totalDue')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('vendorID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          VendorID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"vendorID\"\r\n            className={\r\n              errorExistForField('vendorID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('vendorID') && (\r\n            <small className=\"text-danger\">{errorsForField('vendorID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PurchaseOrderHeaderCreate = withFormik<\r\n  Props,\r\n  PurchaseOrderHeaderViewModel\r\n>({\r\n  mapPropsToValues: props => {\r\n    let response = new PurchaseOrderHeaderViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.employeeID,\r\n        props.model!.freight,\r\n        props.model!.modifiedDate,\r\n        props.model!.orderDate,\r\n        props.model!.purchaseOrderID,\r\n        props.model!.revisionNumber,\r\n        props.model!.shipDate,\r\n        props.model!.shipMethodID,\r\n        props.model!.status,\r\n        props.model!.subTotal,\r\n        props.model!.taxAmt,\r\n        props.model!.totalDue,\r\n        props.model!.vendorID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<PurchaseOrderHeaderViewModel> = {};\r\n\r\n    if (values.employeeID == 0) {\r\n      errors.employeeID = 'Required';\r\n    }\r\n    if (values.freight == 0) {\r\n      errors.freight = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.orderDate == undefined) {\r\n      errors.orderDate = 'Required';\r\n    }\r\n    if (values.revisionNumber == 0) {\r\n      errors.revisionNumber = 'Required';\r\n    }\r\n    if (values.shipMethodID == 0) {\r\n      errors.shipMethodID = 'Required';\r\n    }\r\n    if (values.status == 0) {\r\n      errors.status = 'Required';\r\n    }\r\n    if (values.subTotal == 0) {\r\n      errors.subTotal = 'Required';\r\n    }\r\n    if (values.taxAmt == 0) {\r\n      errors.taxAmt = 'Required';\r\n    }\r\n    if (values.totalDue == 0) {\r\n      errors.totalDue = 'Required';\r\n    }\r\n    if (values.vendorID == 0) {\r\n      errors.vendorID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new PurchaseOrderHeaderMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'purchaseorderheaders',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PurchaseOrderHeaderClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'PurchaseOrderHeaderCreate',\r\n})(PurchaseOrderHeaderCreateDisplay);\r\n\r\ninterface PurchaseOrderHeaderCreateComponentProps {}\r\n\r\ninterface PurchaseOrderHeaderCreateComponentState {\r\n  model?: PurchaseOrderHeaderViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PurchaseOrderHeaderCreateComponent extends React.Component<\r\n  PurchaseOrderHeaderCreateComponentProps,\r\n  PurchaseOrderHeaderCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PurchaseOrderHeaderCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>32e7f2d559f5633ba1444e222becc820</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport PurchaseOrderHeaderMapper from './purchaseOrderHeaderMapper';\r\nimport PurchaseOrderHeaderViewModel from './purchaseOrderHeaderViewModel';\r\n\r\ninterface Props {\r\n  model?: PurchaseOrderHeaderViewModel;\r\n}\r\n\r\nconst PurchaseOrderHeaderDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"employeeID\" className={'col-sm-2 col-form-label'}>\r\n          EmployeeID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.employeeID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"freight\" className={'col-sm-2 col-form-label'}>\r\n          Freight\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.freight)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"orderDate\" className={'col-sm-2 col-form-label'}>\r\n          OrderDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.orderDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"purchaseOrderID\" className={'col-sm-2 col-form-label'}>\r\n          PurchaseOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.purchaseOrderID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"revisionNumber\" className={'col-sm-2 col-form-label'}>\r\n          RevisionNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.revisionNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shipDate\" className={'col-sm-2 col-form-label'}>\r\n          ShipDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shipDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shipMethodID\" className={'col-sm-2 col-form-label'}>\r\n          ShipMethodID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shipMethodID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"status\" className={'col-sm-2 col-form-label'}>\r\n          Status\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.status)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"subTotal\" className={'col-sm-2 col-form-label'}>\r\n          SubTotal\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.subTotal)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"taxAmt\" className={'col-sm-2 col-form-label'}>\r\n          TaxAmt\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.taxAmt)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"totalDue\" className={'col-sm-2 col-form-label'}>\r\n          TotalDue\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.totalDue)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"vendorID\" className={'col-sm-2 col-form-label'}>\r\n          VendorID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.vendorID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  purchaseOrderID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PurchaseOrderHeaderDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PurchaseOrderHeaderDetailComponentState {\r\n  model?: PurchaseOrderHeaderViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PurchaseOrderHeaderDetailComponent extends React.Component<\r\n  PurchaseOrderHeaderDetailComponentProps,\r\n  PurchaseOrderHeaderDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'purchaseorderheaders/' +\r\n          this.props.match.params.purchaseOrderID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PurchaseOrderHeaderClientResponseModel;\r\n\r\n          let mapper = new PurchaseOrderHeaderMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PurchaseOrderHeaderDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5be4b723c13ccf1810c94f0e42edf4c1</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport PurchaseOrderHeaderViewModel from './purchaseOrderHeaderViewModel';\r\nimport PurchaseOrderHeaderMapper from './purchaseOrderHeaderMapper';\r\n\r\ninterface Props {\r\n  model?: PurchaseOrderHeaderViewModel;\r\n}\r\n\r\nconst PurchaseOrderHeaderEditDisplay = (\r\n  props: FormikProps<PurchaseOrderHeaderViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.PurchaseOrderHeaderClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PurchaseOrderHeaderViewModel] &&\r\n      props.errors[name as keyof PurchaseOrderHeaderViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PurchaseOrderHeaderViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('employeeID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EmployeeID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"employeeID\"\r\n            className={\r\n              errorExistForField('employeeID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('employeeID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('employeeID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('freight')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Freight\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"freight\"\r\n            className={\r\n              errorExistForField('freight')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('freight') && (\r\n            <small className=\"text-danger\">{errorsForField('freight')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('orderDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OrderDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"orderDate\"\r\n            className={\r\n              errorExistForField('orderDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('orderDate') && (\r\n            <small className=\"text-danger\">{errorsForField('orderDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('purchaseOrderID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PurchaseOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"purchaseOrderID\"\r\n            className={\r\n              errorExistForField('purchaseOrderID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('purchaseOrderID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('purchaseOrderID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('revisionNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          RevisionNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"revisionNumber\"\r\n            className={\r\n              errorExistForField('revisionNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('revisionNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('revisionNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipDate\"\r\n            className={\r\n              errorExistForField('shipDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipDate') && (\r\n            <small className=\"text-danger\">{errorsForField('shipDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipMethodID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipMethodID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipMethodID\"\r\n            className={\r\n              errorExistForField('shipMethodID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipMethodID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shipMethodID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('status')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Status\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"status\"\r\n            className={\r\n              errorExistForField('status')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('status') && (\r\n            <small className=\"text-danger\">{errorsForField('status')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('subTotal')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SubTotal\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"subTotal\"\r\n            className={\r\n              errorExistForField('subTotal')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('subTotal') && (\r\n            <small className=\"text-danger\">{errorsForField('subTotal')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('taxAmt')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TaxAmt\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"taxAmt\"\r\n            className={\r\n              errorExistForField('taxAmt')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('taxAmt') && (\r\n            <small className=\"text-danger\">{errorsForField('taxAmt')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('totalDue')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TotalDue\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"totalDue\"\r\n            className={\r\n              errorExistForField('totalDue')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('totalDue') && (\r\n            <small className=\"text-danger\">{errorsForField('totalDue')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('vendorID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          VendorID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"vendorID\"\r\n            className={\r\n              errorExistForField('vendorID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('vendorID') && (\r\n            <small className=\"text-danger\">{errorsForField('vendorID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PurchaseOrderHeaderUpdate = withFormik<\r\n  Props,\r\n  PurchaseOrderHeaderViewModel\r\n>({\r\n  mapPropsToValues: props => {\r\n    let response = new PurchaseOrderHeaderViewModel();\r\n    response.setProperties(\r\n      props.model!.employeeID,\r\n      props.model!.freight,\r\n      props.model!.modifiedDate,\r\n      props.model!.orderDate,\r\n      props.model!.purchaseOrderID,\r\n      props.model!.revisionNumber,\r\n      props.model!.shipDate,\r\n      props.model!.shipMethodID,\r\n      props.model!.status,\r\n      props.model!.subTotal,\r\n      props.model!.taxAmt,\r\n      props.model!.totalDue,\r\n      props.model!.vendorID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<PurchaseOrderHeaderViewModel> = {};\r\n\r\n    if (values.employeeID == 0) {\r\n      errors.employeeID = 'Required';\r\n    }\r\n    if (values.freight == 0) {\r\n      errors.freight = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.orderDate == undefined) {\r\n      errors.orderDate = 'Required';\r\n    }\r\n    if (values.purchaseOrderID == 0) {\r\n      errors.purchaseOrderID = 'Required';\r\n    }\r\n    if (values.revisionNumber == 0) {\r\n      errors.revisionNumber = 'Required';\r\n    }\r\n    if (values.shipMethodID == 0) {\r\n      errors.shipMethodID = 'Required';\r\n    }\r\n    if (values.status == 0) {\r\n      errors.status = 'Required';\r\n    }\r\n    if (values.subTotal == 0) {\r\n      errors.subTotal = 'Required';\r\n    }\r\n    if (values.taxAmt == 0) {\r\n      errors.taxAmt = 'Required';\r\n    }\r\n    if (values.totalDue == 0) {\r\n      errors.totalDue = 'Required';\r\n    }\r\n    if (values.vendorID == 0) {\r\n      errors.vendorID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new PurchaseOrderHeaderMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'purchaseorderheaders/' + values.purchaseOrderID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.PurchaseOrderHeaderClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'PurchaseOrderHeaderEdit',\r\n})(PurchaseOrderHeaderEditDisplay);\r\n\r\ninterface IParams {\r\n  purchaseOrderID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PurchaseOrderHeaderEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PurchaseOrderHeaderEditComponentState {\r\n  model?: PurchaseOrderHeaderViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PurchaseOrderHeaderEditComponent extends React.Component<\r\n  PurchaseOrderHeaderEditComponentProps,\r\n  PurchaseOrderHeaderEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'purchaseorderheaders/' +\r\n          this.props.match.params.purchaseOrderID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PurchaseOrderHeaderClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PurchaseOrderHeaderMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <PurchaseOrderHeaderUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ea0b04309d953f77522f8cc41a342ba9</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PurchaseOrderHeaderMapper from './purchaseOrderHeaderMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport PurchaseOrderHeaderViewModel from './purchaseOrderHeaderViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface PurchaseOrderHeaderSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface PurchaseOrderHeaderSearchComponentState {\r\n  records: Array<PurchaseOrderHeaderViewModel>;\r\n  filteredRecords: Array<PurchaseOrderHeaderViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PurchaseOrderHeaderSearchComponent extends React.Component<\r\n  PurchaseOrderHeaderSearchComponentProps,\r\n  PurchaseOrderHeaderSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.PurchaseOrderHeaderClientResponseModel>(),\r\n    filteredRecords: new Array<Api.PurchaseOrderHeaderClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.PurchaseOrderHeaderClientResponseModel) {\r\n    this.props.history.push(\r\n      '/purchaseorderheaders/edit/' + row.purchaseOrderID\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.PurchaseOrderHeaderClientResponseModel) {\r\n    this.props.history.push('/purchaseorderheaders/' + row.purchaseOrderID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/purchaseorderheaders/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PurchaseOrderHeaderClientResponseModel) {\r\n    axios\r\n      .delete(\r\n        Constants.ApiUrl + 'purchaseorderheaders/' + row.purchaseOrderID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiUrl + 'purchaseorderheaders' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.PurchaseOrderHeaderClientResponseModel\r\n          >;\r\n          let viewModels: Array<PurchaseOrderHeaderViewModel> = [];\r\n          let mapper = new PurchaseOrderHeaderMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PurchaseOrderHeaderViewModel>(),\r\n            filteredRecords: new Array<PurchaseOrderHeaderViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'PurchaseOrderHeader',\r\n                columns: [\r\n                  {\r\n                    Header: 'EmployeeID',\r\n                    accessor: 'employeeID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.employeeID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Freight',\r\n                    accessor: 'freight',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.freight)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'OrderDate',\r\n                    accessor: 'orderDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.orderDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PurchaseOrderID',\r\n                    accessor: 'purchaseOrderID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.purchaseOrderID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'RevisionNumber',\r\n                    accessor: 'revisionNumber',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.revisionNumber)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShipDate',\r\n                    accessor: 'shipDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.shipDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShipMethodID',\r\n                    accessor: 'shipMethodID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.shipMethodID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Status',\r\n                    accessor: 'status',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.status)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SubTotal',\r\n                    accessor: 'subTotal',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.subTotal)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TaxAmt',\r\n                    accessor: 'taxAmt',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.taxAmt)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TotalDue',\r\n                    accessor: 'totalDue',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.totalDue)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'VendorID',\r\n                    accessor: 'vendorID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.vendorID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.PurchaseOrderHeaderClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.PurchaseOrderHeaderClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.PurchaseOrderHeaderClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7990d56a53e229ddfe38b08f879d9897</Hash>\r\n</Codenesium>*/","export default class ShipMethodViewModel {\r\n  modifiedDate: any;\r\n  name: string;\r\n  rowguid: any;\r\n  shipBase: number;\r\n  shipMethodID: number;\r\n  shipRate: number;\r\n\r\n  constructor() {\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.rowguid = undefined;\r\n    this.shipBase = 0;\r\n    this.shipMethodID = 0;\r\n    this.shipRate = 0;\r\n  }\r\n\r\n  setProperties(\r\n    modifiedDate: any,\r\n    name: string,\r\n    rowguid: any,\r\n    shipBase: number,\r\n    shipMethodID: number,\r\n    shipRate: number\r\n  ): void {\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.rowguid = rowguid;\r\n    this.shipBase = shipBase;\r\n    this.shipMethodID = shipMethodID;\r\n    this.shipRate = shipRate;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>65a95768cb61b8519fda480f7339f39f</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ShipMethodViewModel from './shipMethodViewModel';\r\n\r\nexport default class ShipMethodMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ShipMethodClientResponseModel\r\n  ): ShipMethodViewModel {\r\n    let response = new ShipMethodViewModel();\r\n    response.setProperties(\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.rowguid,\r\n      dto.shipBase,\r\n      dto.shipMethodID,\r\n      dto.shipRate\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ShipMethodViewModel\r\n  ): Api.ShipMethodClientRequestModel {\r\n    let response = new Api.ShipMethodClientRequestModel();\r\n    response.setProperties(\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.rowguid,\r\n      model.shipBase,\r\n      model.shipMethodID,\r\n      model.shipRate\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5d3c7cd57174d7f0bfcf0f6a25f6bb02</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ShipMethodMapper from './shipMethodMapper';\r\nimport ShipMethodViewModel from './shipMethodViewModel';\r\n\r\ninterface Props {\r\n  model?: ShipMethodViewModel;\r\n}\r\n\r\nconst ShipMethodCreateDisplay: React.SFC<FormikProps<ShipMethodViewModel>> = (\r\n  props: FormikProps<ShipMethodViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.ShipMethodClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ShipMethodViewModel] &&\r\n      props.errors[name as keyof ShipMethodViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ShipMethodViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipBase')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipBase\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipBase\"\r\n            className={\r\n              errorExistForField('shipBase')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipBase') && (\r\n            <small className=\"text-danger\">{errorsForField('shipBase')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipRate\"\r\n            className={\r\n              errorExistForField('shipRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipRate') && (\r\n            <small className=\"text-danger\">{errorsForField('shipRate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ShipMethodCreate = withFormik<Props, ShipMethodViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ShipMethodViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.rowguid,\r\n        props.model!.shipBase,\r\n        props.model!.shipMethodID,\r\n        props.model!.shipRate\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ShipMethodViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.shipBase == 0) {\r\n      errors.shipBase = 'Required';\r\n    }\r\n    if (values.shipRate == 0) {\r\n      errors.shipRate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ShipMethodMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'shipmethods',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ShipMethodClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ShipMethodCreate',\r\n})(ShipMethodCreateDisplay);\r\n\r\ninterface ShipMethodCreateComponentProps {}\r\n\r\ninterface ShipMethodCreateComponentState {\r\n  model?: ShipMethodViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ShipMethodCreateComponent extends React.Component<\r\n  ShipMethodCreateComponentProps,\r\n  ShipMethodCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ShipMethodCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9db3d73770fb3c0ca74c4fa087aef65e</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ShipMethodMapper from './shipMethodMapper';\r\nimport ShipMethodViewModel from './shipMethodViewModel';\r\n\r\ninterface Props {\r\n  model?: ShipMethodViewModel;\r\n}\r\n\r\nconst ShipMethodDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shipBase\" className={'col-sm-2 col-form-label'}>\r\n          ShipBase\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shipBase)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shipMethodID\" className={'col-sm-2 col-form-label'}>\r\n          ShipMethodID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shipMethodID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shipRate\" className={'col-sm-2 col-form-label'}>\r\n          ShipRate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shipRate)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  shipMethodID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ShipMethodDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ShipMethodDetailComponentState {\r\n  model?: ShipMethodViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ShipMethodDetailComponent extends React.Component<\r\n  ShipMethodDetailComponentProps,\r\n  ShipMethodDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'shipmethods/' +\r\n          this.props.match.params.shipMethodID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ShipMethodClientResponseModel;\r\n\r\n          let mapper = new ShipMethodMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ShipMethodDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>264d817eeda28167e3479e70af59a523</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ShipMethodViewModel from './shipMethodViewModel';\r\nimport ShipMethodMapper from './shipMethodMapper';\r\n\r\ninterface Props {\r\n  model?: ShipMethodViewModel;\r\n}\r\n\r\nconst ShipMethodEditDisplay = (props: FormikProps<ShipMethodViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.ShipMethodClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ShipMethodViewModel] &&\r\n      props.errors[name as keyof ShipMethodViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ShipMethodViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipBase')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipBase\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipBase\"\r\n            className={\r\n              errorExistForField('shipBase')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipBase') && (\r\n            <small className=\"text-danger\">{errorsForField('shipBase')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipMethodID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipMethodID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipMethodID\"\r\n            className={\r\n              errorExistForField('shipMethodID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipMethodID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shipMethodID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipRate\"\r\n            className={\r\n              errorExistForField('shipRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipRate') && (\r\n            <small className=\"text-danger\">{errorsForField('shipRate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ShipMethodUpdate = withFormik<Props, ShipMethodViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ShipMethodViewModel();\r\n    response.setProperties(\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.rowguid,\r\n      props.model!.shipBase,\r\n      props.model!.shipMethodID,\r\n      props.model!.shipRate\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ShipMethodViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.shipBase == 0) {\r\n      errors.shipBase = 'Required';\r\n    }\r\n    if (values.shipMethodID == 0) {\r\n      errors.shipMethodID = 'Required';\r\n    }\r\n    if (values.shipRate == 0) {\r\n      errors.shipRate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ShipMethodMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'shipmethods/' + values.shipMethodID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ShipMethodClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ShipMethodEdit',\r\n})(ShipMethodEditDisplay);\r\n\r\ninterface IParams {\r\n  shipMethodID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ShipMethodEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ShipMethodEditComponentState {\r\n  model?: ShipMethodViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ShipMethodEditComponent extends React.Component<\r\n  ShipMethodEditComponentProps,\r\n  ShipMethodEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'shipmethods/' +\r\n          this.props.match.params.shipMethodID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ShipMethodClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ShipMethodMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ShipMethodUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3743d2ad621d595882b63a57e69b37f4</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ShipMethodMapper from './shipMethodMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ShipMethodViewModel from './shipMethodViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ShipMethodSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ShipMethodSearchComponentState {\r\n  records: Array<ShipMethodViewModel>;\r\n  filteredRecords: Array<ShipMethodViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ShipMethodSearchComponent extends React.Component<\r\n  ShipMethodSearchComponentProps,\r\n  ShipMethodSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ShipMethodClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ShipMethodClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ShipMethodClientResponseModel) {\r\n    this.props.history.push('/shipmethods/edit/' + row.shipMethodID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ShipMethodClientResponseModel) {\r\n    this.props.history.push('/shipmethods/' + row.shipMethodID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/shipmethods/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ShipMethodClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'shipmethods/' + row.shipMethodID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'shipmethods' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.ShipMethodClientResponseModel>;\r\n          let viewModels: Array<ShipMethodViewModel> = [];\r\n          let mapper = new ShipMethodMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ShipMethodViewModel>(),\r\n            filteredRecords: new Array<ShipMethodViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ShipMethod',\r\n                columns: [\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShipBase',\r\n                    accessor: 'shipBase',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.shipBase)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShipMethodID',\r\n                    accessor: 'shipMethodID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.shipMethodID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShipRate',\r\n                    accessor: 'shipRate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.shipRate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ShipMethodClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ShipMethodClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ShipMethodClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>09e013e52520170062c0f1cee3fd5422</Hash>\r\n</Codenesium>*/","export default class VendorViewModel {\r\n  accountNumber: string;\r\n  activeFlag: boolean;\r\n  businessEntityID: number;\r\n  creditRating: number;\r\n  modifiedDate: any;\r\n  name: string;\r\n  preferredVendorStatu: boolean;\r\n  purchasingWebServiceURL: string;\r\n\r\n  constructor() {\r\n    this.accountNumber = '';\r\n    this.activeFlag = false;\r\n    this.businessEntityID = 0;\r\n    this.creditRating = 0;\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.preferredVendorStatu = false;\r\n    this.purchasingWebServiceURL = '';\r\n  }\r\n\r\n  setProperties(\r\n    accountNumber: string,\r\n    activeFlag: boolean,\r\n    businessEntityID: number,\r\n    creditRating: number,\r\n    modifiedDate: any,\r\n    name: string,\r\n    preferredVendorStatu: boolean,\r\n    purchasingWebServiceURL: string\r\n  ): void {\r\n    this.accountNumber = accountNumber;\r\n    this.activeFlag = activeFlag;\r\n    this.businessEntityID = businessEntityID;\r\n    this.creditRating = creditRating;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.preferredVendorStatu = preferredVendorStatu;\r\n    this.purchasingWebServiceURL = purchasingWebServiceURL;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>064e0b20403608eb882cc2431db79e73</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport VendorViewModel from './vendorViewModel';\r\n\r\nexport default class VendorMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.VendorClientResponseModel\r\n  ): VendorViewModel {\r\n    let response = new VendorViewModel();\r\n    response.setProperties(\r\n      dto.accountNumber,\r\n      dto.activeFlag,\r\n      dto.businessEntityID,\r\n      dto.creditRating,\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.preferredVendorStatu,\r\n      dto.purchasingWebServiceURL\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: VendorViewModel\r\n  ): Api.VendorClientRequestModel {\r\n    let response = new Api.VendorClientRequestModel();\r\n    response.setProperties(\r\n      model.accountNumber,\r\n      model.activeFlag,\r\n      model.businessEntityID,\r\n      model.creditRating,\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.preferredVendorStatu,\r\n      model.purchasingWebServiceURL\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>125c8ad333c7361c59da2eeef8216fa4</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport VendorMapper from './vendorMapper';\r\nimport VendorViewModel from './vendorViewModel';\r\n\r\ninterface Props {\r\n  model?: VendorViewModel;\r\n}\r\n\r\nconst VendorCreateDisplay: React.SFC<FormikProps<VendorViewModel>> = (\r\n  props: FormikProps<VendorViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.VendorClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof VendorViewModel] &&\r\n      props.errors[name as keyof VendorViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof VendorViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('accountNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AccountNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"accountNumber\"\r\n            className={\r\n              errorExistForField('accountNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('accountNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('accountNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('activeFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ActiveFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"activeFlag\"\r\n            className={\r\n              errorExistForField('activeFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('activeFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('activeFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creditRating')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreditRating\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creditRating\"\r\n            className={\r\n              errorExistForField('creditRating')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creditRating') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creditRating')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('preferredVendorStatu')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PreferredVendorStatus\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"preferredVendorStatu\"\r\n            className={\r\n              errorExistForField('preferredVendorStatu')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('preferredVendorStatu') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('preferredVendorStatu')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('purchasingWebServiceURL')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PurchasingWebServiceURL\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"purchasingWebServiceURL\"\r\n            className={\r\n              errorExistForField('purchasingWebServiceURL')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('purchasingWebServiceURL') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('purchasingWebServiceURL')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst VendorCreate = withFormik<Props, VendorViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new VendorViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.accountNumber,\r\n        props.model!.activeFlag,\r\n        props.model!.businessEntityID,\r\n        props.model!.creditRating,\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.preferredVendorStatu,\r\n        props.model!.purchasingWebServiceURL\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<VendorViewModel> = {};\r\n\r\n    if (values.accountNumber == '') {\r\n      errors.accountNumber = 'Required';\r\n    }\r\n    if (values.activeFlag == false) {\r\n      errors.activeFlag = 'Required';\r\n    }\r\n    if (values.creditRating == 0) {\r\n      errors.creditRating = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.preferredVendorStatu == false) {\r\n      errors.preferredVendorStatu = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new VendorMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'vendors',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.VendorClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'VendorCreate',\r\n})(VendorCreateDisplay);\r\n\r\ninterface VendorCreateComponentProps {}\r\n\r\ninterface VendorCreateComponentState {\r\n  model?: VendorViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class VendorCreateComponent extends React.Component<\r\n  VendorCreateComponentProps,\r\n  VendorCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <VendorCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>eca6cfea8129fc4941324ce2c825e174</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport VendorMapper from './vendorMapper';\r\nimport VendorViewModel from './vendorViewModel';\r\n\r\ninterface Props {\r\n  model?: VendorViewModel;\r\n}\r\n\r\nconst VendorDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"accountNumber\" className={'col-sm-2 col-form-label'}>\r\n          AccountNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.accountNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"activeFlag\" className={'col-sm-2 col-form-label'}>\r\n          ActiveFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.activeFlag)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"businessEntityID\" className={'col-sm-2 col-form-label'}>\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.businessEntityID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"creditRating\" className={'col-sm-2 col-form-label'}>\r\n          CreditRating\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.creditRating)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"preferredVendorStatu\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          PreferredVendorStatus\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.preferredVendorStatu)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"purchasingWebServiceURL\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          PurchasingWebServiceURL\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.purchasingWebServiceURL)}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface VendorDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface VendorDetailComponentState {\r\n  model?: VendorViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class VendorDetailComponent extends React.Component<\r\n  VendorDetailComponentProps,\r\n  VendorDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'vendors/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.VendorClientResponseModel;\r\n\r\n          let mapper = new VendorMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <VendorDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7fdb932b270d510a272a69f6ad1b2f0e</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport VendorViewModel from './vendorViewModel';\r\nimport VendorMapper from './vendorMapper';\r\n\r\ninterface Props {\r\n  model?: VendorViewModel;\r\n}\r\n\r\nconst VendorEditDisplay = (props: FormikProps<VendorViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.VendorClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof VendorViewModel] &&\r\n      props.errors[name as keyof VendorViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof VendorViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('accountNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AccountNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"accountNumber\"\r\n            className={\r\n              errorExistForField('accountNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('accountNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('accountNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('activeFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ActiveFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"activeFlag\"\r\n            className={\r\n              errorExistForField('activeFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('activeFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('activeFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('businessEntityID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"businessEntityID\"\r\n            className={\r\n              errorExistForField('businessEntityID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('businessEntityID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('businessEntityID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creditRating')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreditRating\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creditRating\"\r\n            className={\r\n              errorExistForField('creditRating')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creditRating') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creditRating')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('preferredVendorStatu')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PreferredVendorStatus\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"preferredVendorStatu\"\r\n            className={\r\n              errorExistForField('preferredVendorStatu')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('preferredVendorStatu') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('preferredVendorStatu')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('purchasingWebServiceURL')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PurchasingWebServiceURL\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"purchasingWebServiceURL\"\r\n            className={\r\n              errorExistForField('purchasingWebServiceURL')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('purchasingWebServiceURL') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('purchasingWebServiceURL')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst VendorUpdate = withFormik<Props, VendorViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new VendorViewModel();\r\n    response.setProperties(\r\n      props.model!.accountNumber,\r\n      props.model!.activeFlag,\r\n      props.model!.businessEntityID,\r\n      props.model!.creditRating,\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.preferredVendorStatu,\r\n      props.model!.purchasingWebServiceURL\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<VendorViewModel> = {};\r\n\r\n    if (values.accountNumber == '') {\r\n      errors.accountNumber = 'Required';\r\n    }\r\n    if (values.activeFlag == false) {\r\n      errors.activeFlag = 'Required';\r\n    }\r\n    if (values.businessEntityID == 0) {\r\n      errors.businessEntityID = 'Required';\r\n    }\r\n    if (values.creditRating == 0) {\r\n      errors.creditRating = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.preferredVendorStatu == false) {\r\n      errors.preferredVendorStatu = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new VendorMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'vendors/' + values.businessEntityID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.VendorClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'VendorEdit',\r\n})(VendorEditDisplay);\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface VendorEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface VendorEditComponentState {\r\n  model?: VendorViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class VendorEditComponent extends React.Component<\r\n  VendorEditComponentProps,\r\n  VendorEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'vendors/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.VendorClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new VendorMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <VendorUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e38b411a12431631c6c2519aff9eddf2</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport VendorMapper from './vendorMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport VendorViewModel from './vendorViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface VendorSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface VendorSearchComponentState {\r\n  records: Array<VendorViewModel>;\r\n  filteredRecords: Array<VendorViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class VendorSearchComponent extends React.Component<\r\n  VendorSearchComponentProps,\r\n  VendorSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.VendorClientResponseModel>(),\r\n    filteredRecords: new Array<Api.VendorClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.VendorClientResponseModel) {\r\n    this.props.history.push('/vendors/edit/' + row.businessEntityID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.VendorClientResponseModel) {\r\n    this.props.history.push('/vendors/' + row.businessEntityID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/vendors/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.VendorClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'vendors/' + row.businessEntityID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'vendors' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.VendorClientResponseModel>;\r\n          let viewModels: Array<VendorViewModel> = [];\r\n          let mapper = new VendorMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<VendorViewModel>(),\r\n            filteredRecords: new Array<VendorViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Vendor',\r\n                columns: [\r\n                  {\r\n                    Header: 'AccountNumber',\r\n                    accessor: 'accountNumber',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.accountNumber)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ActiveFlag',\r\n                    accessor: 'activeFlag',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.activeFlag)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'BusinessEntityID',\r\n                    accessor: 'businessEntityID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.businessEntityID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CreditRating',\r\n                    accessor: 'creditRating',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.creditRating)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PreferredVendorStatus',\r\n                    accessor: 'preferredVendorStatu',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.preferredVendorStatu)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PurchasingWebServiceURL',\r\n                    accessor: 'purchasingWebServiceURL',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.purchasingWebServiceURL)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.VendorClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.VendorClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.VendorClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>383d28c5d874b7c8b3a151344009c93c</Hash>\r\n</Codenesium>*/","export default class CreditCardViewModel {\r\n  cardNumber: string;\r\n  cardType: string;\r\n  creditCardID: number;\r\n  expMonth: number;\r\n  expYear: number;\r\n  modifiedDate: any;\r\n\r\n  constructor() {\r\n    this.cardNumber = '';\r\n    this.cardType = '';\r\n    this.creditCardID = 0;\r\n    this.expMonth = 0;\r\n    this.expYear = 0;\r\n    this.modifiedDate = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    cardNumber: string,\r\n    cardType: string,\r\n    creditCardID: number,\r\n    expMonth: number,\r\n    expYear: number,\r\n    modifiedDate: any\r\n  ): void {\r\n    this.cardNumber = cardNumber;\r\n    this.cardType = cardType;\r\n    this.creditCardID = creditCardID;\r\n    this.expMonth = expMonth;\r\n    this.expYear = expYear;\r\n    this.modifiedDate = modifiedDate;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>082d2eb90ea74de380cb0ea4867fed76</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CreditCardViewModel from './creditCardViewModel';\r\n\r\nexport default class CreditCardMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CreditCardClientResponseModel\r\n  ): CreditCardViewModel {\r\n    let response = new CreditCardViewModel();\r\n    response.setProperties(\r\n      dto.cardNumber,\r\n      dto.cardType,\r\n      dto.creditCardID,\r\n      dto.expMonth,\r\n      dto.expYear,\r\n      dto.modifiedDate\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CreditCardViewModel\r\n  ): Api.CreditCardClientRequestModel {\r\n    let response = new Api.CreditCardClientRequestModel();\r\n    response.setProperties(\r\n      model.cardNumber,\r\n      model.cardType,\r\n      model.creditCardID,\r\n      model.expMonth,\r\n      model.expYear,\r\n      model.modifiedDate\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2326287a0d651f77d84477ba3c562602</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport CreditCardMapper from './creditCardMapper';\r\nimport CreditCardViewModel from './creditCardViewModel';\r\n\r\ninterface Props {\r\n  model?: CreditCardViewModel;\r\n}\r\n\r\nconst CreditCardCreateDisplay: React.SFC<FormikProps<CreditCardViewModel>> = (\r\n  props: FormikProps<CreditCardViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.CreditCardClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CreditCardViewModel] &&\r\n      props.errors[name as keyof CreditCardViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CreditCardViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('cardNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CardNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"cardNumber\"\r\n            className={\r\n              errorExistForField('cardNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('cardNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('cardNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('cardType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CardType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"cardType\"\r\n            className={\r\n              errorExistForField('cardType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('cardType') && (\r\n            <small className=\"text-danger\">{errorsForField('cardType')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('expMonth')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ExpMonth\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"expMonth\"\r\n            className={\r\n              errorExistForField('expMonth')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('expMonth') && (\r\n            <small className=\"text-danger\">{errorsForField('expMonth')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('expYear')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ExpYear\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"expYear\"\r\n            className={\r\n              errorExistForField('expYear')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('expYear') && (\r\n            <small className=\"text-danger\">{errorsForField('expYear')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CreditCardCreate = withFormik<Props, CreditCardViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CreditCardViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.cardNumber,\r\n        props.model!.cardType,\r\n        props.model!.creditCardID,\r\n        props.model!.expMonth,\r\n        props.model!.expYear,\r\n        props.model!.modifiedDate\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<CreditCardViewModel> = {};\r\n\r\n    if (values.cardNumber == '') {\r\n      errors.cardNumber = 'Required';\r\n    }\r\n    if (values.cardType == '') {\r\n      errors.cardType = 'Required';\r\n    }\r\n    if (values.expMonth == 0) {\r\n      errors.expMonth = 'Required';\r\n    }\r\n    if (values.expYear == 0) {\r\n      errors.expYear = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new CreditCardMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'creditcards',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CreditCardClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'CreditCardCreate',\r\n})(CreditCardCreateDisplay);\r\n\r\ninterface CreditCardCreateComponentProps {}\r\n\r\ninterface CreditCardCreateComponentState {\r\n  model?: CreditCardViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CreditCardCreateComponent extends React.Component<\r\n  CreditCardCreateComponentProps,\r\n  CreditCardCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CreditCardCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>56e33f18c0db440e35a100a8253e3a91</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CreditCardMapper from './creditCardMapper';\r\nimport CreditCardViewModel from './creditCardViewModel';\r\n\r\ninterface Props {\r\n  model?: CreditCardViewModel;\r\n}\r\n\r\nconst CreditCardDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"cardNumber\" className={'col-sm-2 col-form-label'}>\r\n          CardNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.cardNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"cardType\" className={'col-sm-2 col-form-label'}>\r\n          CardType\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.cardType)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"creditCardID\" className={'col-sm-2 col-form-label'}>\r\n          CreditCardID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.creditCardID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"expMonth\" className={'col-sm-2 col-form-label'}>\r\n          ExpMonth\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.expMonth)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"expYear\" className={'col-sm-2 col-form-label'}>\r\n          ExpYear\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.expYear)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  creditCardID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CreditCardDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CreditCardDetailComponentState {\r\n  model?: CreditCardViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CreditCardDetailComponent extends React.Component<\r\n  CreditCardDetailComponentProps,\r\n  CreditCardDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'creditcards/' +\r\n          this.props.match.params.creditCardID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CreditCardClientResponseModel;\r\n\r\n          let mapper = new CreditCardMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CreditCardDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>707114eac627ca8e91e0b052898e3c72</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CreditCardViewModel from './creditCardViewModel';\r\nimport CreditCardMapper from './creditCardMapper';\r\n\r\ninterface Props {\r\n  model?: CreditCardViewModel;\r\n}\r\n\r\nconst CreditCardEditDisplay = (props: FormikProps<CreditCardViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.CreditCardClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CreditCardViewModel] &&\r\n      props.errors[name as keyof CreditCardViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CreditCardViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('cardNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CardNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"cardNumber\"\r\n            className={\r\n              errorExistForField('cardNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('cardNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('cardNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('cardType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CardType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"cardType\"\r\n            className={\r\n              errorExistForField('cardType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('cardType') && (\r\n            <small className=\"text-danger\">{errorsForField('cardType')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creditCardID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreditCardID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creditCardID\"\r\n            className={\r\n              errorExistForField('creditCardID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creditCardID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creditCardID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('expMonth')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ExpMonth\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"expMonth\"\r\n            className={\r\n              errorExistForField('expMonth')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('expMonth') && (\r\n            <small className=\"text-danger\">{errorsForField('expMonth')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('expYear')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ExpYear\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"expYear\"\r\n            className={\r\n              errorExistForField('expYear')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('expYear') && (\r\n            <small className=\"text-danger\">{errorsForField('expYear')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CreditCardUpdate = withFormik<Props, CreditCardViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CreditCardViewModel();\r\n    response.setProperties(\r\n      props.model!.cardNumber,\r\n      props.model!.cardType,\r\n      props.model!.creditCardID,\r\n      props.model!.expMonth,\r\n      props.model!.expYear,\r\n      props.model!.modifiedDate\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<CreditCardViewModel> = {};\r\n\r\n    if (values.cardNumber == '') {\r\n      errors.cardNumber = 'Required';\r\n    }\r\n    if (values.cardType == '') {\r\n      errors.cardType = 'Required';\r\n    }\r\n    if (values.creditCardID == 0) {\r\n      errors.creditCardID = 'Required';\r\n    }\r\n    if (values.expMonth == 0) {\r\n      errors.expMonth = 'Required';\r\n    }\r\n    if (values.expYear == 0) {\r\n      errors.expYear = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new CreditCardMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'creditcards/' + values.creditCardID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.CreditCardClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'CreditCardEdit',\r\n})(CreditCardEditDisplay);\r\n\r\ninterface IParams {\r\n  creditCardID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CreditCardEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CreditCardEditComponentState {\r\n  model?: CreditCardViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CreditCardEditComponent extends React.Component<\r\n  CreditCardEditComponentProps,\r\n  CreditCardEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'creditcards/' +\r\n          this.props.match.params.creditCardID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CreditCardClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CreditCardMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CreditCardUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>22ffca6ceff576a83810903ccfd273b1</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CreditCardMapper from './creditCardMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport CreditCardViewModel from './creditCardViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface CreditCardSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface CreditCardSearchComponentState {\r\n  records: Array<CreditCardViewModel>;\r\n  filteredRecords: Array<CreditCardViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class CreditCardSearchComponent extends React.Component<\r\n  CreditCardSearchComponentProps,\r\n  CreditCardSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.CreditCardClientResponseModel>(),\r\n    filteredRecords: new Array<Api.CreditCardClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.CreditCardClientResponseModel) {\r\n    this.props.history.push('/creditcards/edit/' + row.creditCardID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.CreditCardClientResponseModel) {\r\n    this.props.history.push('/creditcards/' + row.creditCardID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/creditcards/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.CreditCardClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'creditcards/' + row.creditCardID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'creditcards' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.CreditCardClientResponseModel>;\r\n          let viewModels: Array<CreditCardViewModel> = [];\r\n          let mapper = new CreditCardMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<CreditCardViewModel>(),\r\n            filteredRecords: new Array<CreditCardViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'CreditCard',\r\n                columns: [\r\n                  {\r\n                    Header: 'CardNumber',\r\n                    accessor: 'cardNumber',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.cardNumber)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CardType',\r\n                    accessor: 'cardType',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.cardType)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CreditCardID',\r\n                    accessor: 'creditCardID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.creditCardID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ExpMonth',\r\n                    accessor: 'expMonth',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.expMonth)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ExpYear',\r\n                    accessor: 'expYear',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.expYear)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.CreditCardClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.CreditCardClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.CreditCardClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>628b3fde4290123fc76e25ca21ceae63</Hash>\r\n</Codenesium>*/","export default class CurrencyViewModel {\r\n  currencyCode: string;\r\n  modifiedDate: any;\r\n  name: string;\r\n\r\n  constructor() {\r\n    this.currencyCode = '';\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n  }\r\n\r\n  setProperties(currencyCode: string, modifiedDate: any, name: string): void {\r\n    this.currencyCode = currencyCode;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e0e9fddde189f9d516c2512bd4067fb0</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CurrencyViewModel from './currencyViewModel';\r\n\r\nexport default class CurrencyMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CurrencyClientResponseModel\r\n  ): CurrencyViewModel {\r\n    let response = new CurrencyViewModel();\r\n    response.setProperties(dto.currencyCode, dto.modifiedDate, dto.name);\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CurrencyViewModel\r\n  ): Api.CurrencyClientRequestModel {\r\n    let response = new Api.CurrencyClientRequestModel();\r\n    response.setProperties(model.currencyCode, model.modifiedDate, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>4672325f1e1f981a1d9fb3f128207093</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport CurrencyMapper from './currencyMapper';\r\nimport CurrencyViewModel from './currencyViewModel';\r\n\r\ninterface Props {\r\n  model?: CurrencyViewModel;\r\n}\r\n\r\nconst CurrencyCreateDisplay: React.SFC<FormikProps<CurrencyViewModel>> = (\r\n  props: FormikProps<CurrencyViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.CurrencyClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CurrencyViewModel] &&\r\n      props.errors[name as keyof CurrencyViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CurrencyViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CurrencyCreate = withFormik<Props, CurrencyViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CurrencyViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.currencyCode,\r\n        props.model!.modifiedDate,\r\n        props.model!.name\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<CurrencyViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new CurrencyMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'currencies',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CurrencyClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'CurrencyCreate',\r\n})(CurrencyCreateDisplay);\r\n\r\ninterface CurrencyCreateComponentProps {}\r\n\r\ninterface CurrencyCreateComponentState {\r\n  model?: CurrencyViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CurrencyCreateComponent extends React.Component<\r\n  CurrencyCreateComponentProps,\r\n  CurrencyCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CurrencyCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>796dcc47dbc5e36dbf514771df477001</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CurrencyMapper from './currencyMapper';\r\nimport CurrencyViewModel from './currencyViewModel';\r\n\r\ninterface Props {\r\n  model?: CurrencyViewModel;\r\n}\r\n\r\nconst CurrencyDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"currencyCode\" className={'col-sm-2 col-form-label'}>\r\n          CurrencyCode\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.currencyCode)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  currencyCode: string;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CurrencyDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CurrencyDetailComponentState {\r\n  model?: CurrencyViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CurrencyDetailComponent extends React.Component<\r\n  CurrencyDetailComponentProps,\r\n  CurrencyDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'currencies/' + this.props.match.params.currencyCode,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CurrencyClientResponseModel;\r\n\r\n          let mapper = new CurrencyMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CurrencyDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b7b251e0bd98b1346607fdb449d0338c</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CurrencyViewModel from './currencyViewModel';\r\nimport CurrencyMapper from './currencyMapper';\r\n\r\ninterface Props {\r\n  model?: CurrencyViewModel;\r\n}\r\n\r\nconst CurrencyEditDisplay = (props: FormikProps<CurrencyViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.CurrencyClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CurrencyViewModel] &&\r\n      props.errors[name as keyof CurrencyViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CurrencyViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('currencyCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CurrencyCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"currencyCode\"\r\n            className={\r\n              errorExistForField('currencyCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('currencyCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('currencyCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CurrencyUpdate = withFormik<Props, CurrencyViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CurrencyViewModel();\r\n    response.setProperties(\r\n      props.model!.currencyCode,\r\n      props.model!.modifiedDate,\r\n      props.model!.name\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<CurrencyViewModel> = {};\r\n\r\n    if (values.currencyCode == '') {\r\n      errors.currencyCode = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new CurrencyMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'currencies/' + values.currencyCode,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.CurrencyClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'CurrencyEdit',\r\n})(CurrencyEditDisplay);\r\n\r\ninterface IParams {\r\n  currencyCode: string;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CurrencyEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CurrencyEditComponentState {\r\n  model?: CurrencyViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CurrencyEditComponent extends React.Component<\r\n  CurrencyEditComponentProps,\r\n  CurrencyEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'currencies/' + this.props.match.params.currencyCode,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CurrencyClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CurrencyMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CurrencyUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>de9e52cf246fd2799f925c632d9b5a6f</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CurrencyMapper from './currencyMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport CurrencyViewModel from './currencyViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface CurrencySearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface CurrencySearchComponentState {\r\n  records: Array<CurrencyViewModel>;\r\n  filteredRecords: Array<CurrencyViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class CurrencySearchComponent extends React.Component<\r\n  CurrencySearchComponentProps,\r\n  CurrencySearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.CurrencyClientResponseModel>(),\r\n    filteredRecords: new Array<Api.CurrencyClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.CurrencyClientResponseModel) {\r\n    this.props.history.push('/currencies/edit/' + row.currencyCode);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.CurrencyClientResponseModel) {\r\n    this.props.history.push('/currencies/' + row.currencyCode);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/currencies/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.CurrencyClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'currencies/' + row.currencyCode, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'currencies' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.CurrencyClientResponseModel>;\r\n          let viewModels: Array<CurrencyViewModel> = [];\r\n          let mapper = new CurrencyMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<CurrencyViewModel>(),\r\n            filteredRecords: new Array<CurrencyViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Currency',\r\n                columns: [\r\n                  {\r\n                    Header: 'CurrencyCode',\r\n                    accessor: 'currencyCode',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.currencyCode)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.CurrencyClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.CurrencyClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.CurrencyClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0d60398b785332636a5e93afbec85fbb</Hash>\r\n</Codenesium>*/","export default class CurrencyRateViewModel {\r\n  averageRate: number;\r\n  currencyRateDate: any;\r\n  currencyRateID: number;\r\n  endOfDayRate: number;\r\n  fromCurrencyCode: string;\r\n  fromCurrencyCodeEntity: string;\r\n  modifiedDate: any;\r\n  toCurrencyCode: string;\r\n  toCurrencyCodeEntity: string;\r\n\r\n  constructor() {\r\n    this.averageRate = 0;\r\n    this.currencyRateDate = undefined;\r\n    this.currencyRateID = 0;\r\n    this.endOfDayRate = 0;\r\n    this.fromCurrencyCode = '';\r\n    this.fromCurrencyCodeEntity = '';\r\n    this.modifiedDate = undefined;\r\n    this.toCurrencyCode = '';\r\n    this.toCurrencyCodeEntity = '';\r\n  }\r\n\r\n  setProperties(\r\n    averageRate: number,\r\n    currencyRateDate: any,\r\n    currencyRateID: number,\r\n    endOfDayRate: number,\r\n    fromCurrencyCode: string,\r\n    modifiedDate: any,\r\n    toCurrencyCode: string\r\n  ): void {\r\n    this.averageRate = averageRate;\r\n    this.currencyRateDate = currencyRateDate;\r\n    this.currencyRateID = currencyRateID;\r\n    this.endOfDayRate = endOfDayRate;\r\n    this.fromCurrencyCode = fromCurrencyCode;\r\n    this.modifiedDate = modifiedDate;\r\n    this.toCurrencyCode = toCurrencyCode;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0b5bb4b02e72498ab79d68e5d0367e35</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CurrencyRateViewModel from './currencyRateViewModel';\r\n\r\nexport default class CurrencyRateMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CurrencyRateClientResponseModel\r\n  ): CurrencyRateViewModel {\r\n    let response = new CurrencyRateViewModel();\r\n    response.setProperties(\r\n      dto.averageRate,\r\n      dto.currencyRateDate,\r\n      dto.currencyRateID,\r\n      dto.endOfDayRate,\r\n      dto.fromCurrencyCode,\r\n      dto.modifiedDate,\r\n      dto.toCurrencyCode\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CurrencyRateViewModel\r\n  ): Api.CurrencyRateClientRequestModel {\r\n    let response = new Api.CurrencyRateClientRequestModel();\r\n    response.setProperties(\r\n      model.averageRate,\r\n      model.currencyRateDate,\r\n      model.currencyRateID,\r\n      model.endOfDayRate,\r\n      model.fromCurrencyCode,\r\n      model.modifiedDate,\r\n      model.toCurrencyCode\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f44107e4586aee42dbb6e52a14174984</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport CurrencyRateMapper from './currencyRateMapper';\r\nimport CurrencyRateViewModel from './currencyRateViewModel';\r\n\r\ninterface Props {\r\n  model?: CurrencyRateViewModel;\r\n}\r\n\r\nconst CurrencyRateCreateDisplay: React.SFC<\r\n  FormikProps<CurrencyRateViewModel>\r\n> = (props: FormikProps<CurrencyRateViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.CurrencyRateClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CurrencyRateViewModel] &&\r\n      props.errors[name as keyof CurrencyRateViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CurrencyRateViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('averageRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AverageRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"averageRate\"\r\n            className={\r\n              errorExistForField('averageRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('averageRate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('averageRate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('currencyRateDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CurrencyRateDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"currencyRateDate\"\r\n            className={\r\n              errorExistForField('currencyRateDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('currencyRateDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('currencyRateDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endOfDayRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndOfDayRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endOfDayRate\"\r\n            className={\r\n              errorExistForField('endOfDayRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endOfDayRate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('endOfDayRate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('fromCurrencyCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FromCurrencyCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"fromCurrencyCode\"\r\n            className={\r\n              errorExistForField('fromCurrencyCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('fromCurrencyCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('fromCurrencyCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('toCurrencyCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ToCurrencyCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"toCurrencyCode\"\r\n            className={\r\n              errorExistForField('toCurrencyCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('toCurrencyCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('toCurrencyCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CurrencyRateCreate = withFormik<Props, CurrencyRateViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CurrencyRateViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.averageRate,\r\n        props.model!.currencyRateDate,\r\n        props.model!.currencyRateID,\r\n        props.model!.endOfDayRate,\r\n        props.model!.fromCurrencyCode,\r\n        props.model!.modifiedDate,\r\n        props.model!.toCurrencyCode\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<CurrencyRateViewModel> = {};\r\n\r\n    if (values.averageRate == 0) {\r\n      errors.averageRate = 'Required';\r\n    }\r\n    if (values.currencyRateDate == undefined) {\r\n      errors.currencyRateDate = 'Required';\r\n    }\r\n    if (values.endOfDayRate == 0) {\r\n      errors.endOfDayRate = 'Required';\r\n    }\r\n    if (values.fromCurrencyCode == '') {\r\n      errors.fromCurrencyCode = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.toCurrencyCode == '') {\r\n      errors.toCurrencyCode = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new CurrencyRateMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'currencyrates',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CurrencyRateClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'CurrencyRateCreate',\r\n})(CurrencyRateCreateDisplay);\r\n\r\ninterface CurrencyRateCreateComponentProps {}\r\n\r\ninterface CurrencyRateCreateComponentState {\r\n  model?: CurrencyRateViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CurrencyRateCreateComponent extends React.Component<\r\n  CurrencyRateCreateComponentProps,\r\n  CurrencyRateCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CurrencyRateCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0d6deb5b72d67a06a0a2d02adb5f59b8</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CurrencyRateMapper from './currencyRateMapper';\r\nimport CurrencyRateViewModel from './currencyRateViewModel';\r\n\r\ninterface Props {\r\n  model?: CurrencyRateViewModel;\r\n}\r\n\r\nconst CurrencyRateDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"averageRate\" className={'col-sm-2 col-form-label'}>\r\n          AverageRate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.averageRate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"currencyRateDate\" className={'col-sm-2 col-form-label'}>\r\n          CurrencyRateDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.currencyRateDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"currencyRateID\" className={'col-sm-2 col-form-label'}>\r\n          CurrencyRateID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.currencyRateID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"endOfDayRate\" className={'col-sm-2 col-form-label'}>\r\n          EndOfDayRate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.endOfDayRate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"fromCurrencyCode\" className={'col-sm-2 col-form-label'}>\r\n          FromCurrencyCode\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.fromCurrencyCode)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"toCurrencyCode\" className={'col-sm-2 col-form-label'}>\r\n          ToCurrencyCode\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.toCurrencyCode)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  currencyRateID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CurrencyRateDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CurrencyRateDetailComponentState {\r\n  model?: CurrencyRateViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CurrencyRateDetailComponent extends React.Component<\r\n  CurrencyRateDetailComponentProps,\r\n  CurrencyRateDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'currencyrates/' +\r\n          this.props.match.params.currencyRateID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CurrencyRateClientResponseModel;\r\n\r\n          let mapper = new CurrencyRateMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CurrencyRateDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b554278d73143bb54794b12270373a1f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CurrencyRateViewModel from './currencyRateViewModel';\r\nimport CurrencyRateMapper from './currencyRateMapper';\r\n\r\ninterface Props {\r\n  model?: CurrencyRateViewModel;\r\n}\r\n\r\nconst CurrencyRateEditDisplay = (props: FormikProps<CurrencyRateViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.CurrencyRateClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CurrencyRateViewModel] &&\r\n      props.errors[name as keyof CurrencyRateViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CurrencyRateViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('averageRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AverageRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"averageRate\"\r\n            className={\r\n              errorExistForField('averageRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('averageRate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('averageRate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('currencyRateDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CurrencyRateDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"currencyRateDate\"\r\n            className={\r\n              errorExistForField('currencyRateDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('currencyRateDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('currencyRateDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('currencyRateID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CurrencyRateID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"currencyRateID\"\r\n            className={\r\n              errorExistForField('currencyRateID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('currencyRateID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('currencyRateID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endOfDayRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndOfDayRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endOfDayRate\"\r\n            className={\r\n              errorExistForField('endOfDayRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endOfDayRate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('endOfDayRate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('fromCurrencyCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          FromCurrencyCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"fromCurrencyCode\"\r\n            className={\r\n              errorExistForField('fromCurrencyCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('fromCurrencyCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('fromCurrencyCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('toCurrencyCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ToCurrencyCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"toCurrencyCode\"\r\n            className={\r\n              errorExistForField('toCurrencyCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('toCurrencyCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('toCurrencyCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CurrencyRateUpdate = withFormik<Props, CurrencyRateViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CurrencyRateViewModel();\r\n    response.setProperties(\r\n      props.model!.averageRate,\r\n      props.model!.currencyRateDate,\r\n      props.model!.currencyRateID,\r\n      props.model!.endOfDayRate,\r\n      props.model!.fromCurrencyCode,\r\n      props.model!.modifiedDate,\r\n      props.model!.toCurrencyCode\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<CurrencyRateViewModel> = {};\r\n\r\n    if (values.averageRate == 0) {\r\n      errors.averageRate = 'Required';\r\n    }\r\n    if (values.currencyRateDate == undefined) {\r\n      errors.currencyRateDate = 'Required';\r\n    }\r\n    if (values.currencyRateID == 0) {\r\n      errors.currencyRateID = 'Required';\r\n    }\r\n    if (values.endOfDayRate == 0) {\r\n      errors.endOfDayRate = 'Required';\r\n    }\r\n    if (values.fromCurrencyCode == '') {\r\n      errors.fromCurrencyCode = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.toCurrencyCode == '') {\r\n      errors.toCurrencyCode = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new CurrencyRateMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'currencyrates/' + values.currencyRateID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.CurrencyRateClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'CurrencyRateEdit',\r\n})(CurrencyRateEditDisplay);\r\n\r\ninterface IParams {\r\n  currencyRateID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CurrencyRateEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CurrencyRateEditComponentState {\r\n  model?: CurrencyRateViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CurrencyRateEditComponent extends React.Component<\r\n  CurrencyRateEditComponentProps,\r\n  CurrencyRateEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'currencyrates/' +\r\n          this.props.match.params.currencyRateID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CurrencyRateClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CurrencyRateMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CurrencyRateUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b37991c37f34e782a1312b6e66acdde0</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CurrencyRateMapper from './currencyRateMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport CurrencyRateViewModel from './currencyRateViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface CurrencyRateSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface CurrencyRateSearchComponentState {\r\n  records: Array<CurrencyRateViewModel>;\r\n  filteredRecords: Array<CurrencyRateViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class CurrencyRateSearchComponent extends React.Component<\r\n  CurrencyRateSearchComponentProps,\r\n  CurrencyRateSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.CurrencyRateClientResponseModel>(),\r\n    filteredRecords: new Array<Api.CurrencyRateClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.CurrencyRateClientResponseModel) {\r\n    this.props.history.push('/currencyrates/edit/' + row.currencyRateID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.CurrencyRateClientResponseModel) {\r\n    this.props.history.push('/currencyrates/' + row.currencyRateID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/currencyrates/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.CurrencyRateClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'currencyrates/' + row.currencyRateID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'currencyrates' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.CurrencyRateClientResponseModel\r\n          >;\r\n          let viewModels: Array<CurrencyRateViewModel> = [];\r\n          let mapper = new CurrencyRateMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<CurrencyRateViewModel>(),\r\n            filteredRecords: new Array<CurrencyRateViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'CurrencyRate',\r\n                columns: [\r\n                  {\r\n                    Header: 'AverageRate',\r\n                    accessor: 'averageRate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.averageRate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CurrencyRateDate',\r\n                    accessor: 'currencyRateDate',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.currencyRateDate)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CurrencyRateID',\r\n                    accessor: 'currencyRateID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.currencyRateID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'EndOfDayRate',\r\n                    accessor: 'endOfDayRate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.endOfDayRate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'FromCurrencyCode',\r\n                    accessor: 'fromCurrencyCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.fromCurrencyCode)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ToCurrencyCode',\r\n                    accessor: 'toCurrencyCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.toCurrencyCode)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.CurrencyRateClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.CurrencyRateClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.CurrencyRateClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5155bb74b6f5372c4dc99f86901a99fd</Hash>\r\n</Codenesium>*/","export default class CustomerViewModel {\r\n  accountNumber: string;\r\n  customerID: number;\r\n  modifiedDate: any;\r\n  personID: any;\r\n  rowguid: any;\r\n  storeID: any;\r\n  storeIDEntity: string;\r\n  territoryID: any;\r\n  territoryIDEntity: string;\r\n\r\n  constructor() {\r\n    this.accountNumber = '';\r\n    this.customerID = 0;\r\n    this.modifiedDate = undefined;\r\n    this.personID = undefined;\r\n    this.rowguid = undefined;\r\n    this.storeID = undefined;\r\n    this.storeIDEntity = '';\r\n    this.territoryID = undefined;\r\n    this.territoryIDEntity = '';\r\n  }\r\n\r\n  setProperties(\r\n    accountNumber: string,\r\n    customerID: number,\r\n    modifiedDate: any,\r\n    personID: any,\r\n    rowguid: any,\r\n    storeID: any,\r\n    territoryID: any\r\n  ): void {\r\n    this.accountNumber = accountNumber;\r\n    this.customerID = customerID;\r\n    this.modifiedDate = modifiedDate;\r\n    this.personID = personID;\r\n    this.rowguid = rowguid;\r\n    this.storeID = storeID;\r\n    this.territoryID = territoryID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c2571399994fb41aafab4278534b367c</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CustomerViewModel from './customerViewModel';\r\n\r\nexport default class CustomerMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CustomerClientResponseModel\r\n  ): CustomerViewModel {\r\n    let response = new CustomerViewModel();\r\n    response.setProperties(\r\n      dto.accountNumber,\r\n      dto.customerID,\r\n      dto.modifiedDate,\r\n      dto.personID,\r\n      dto.rowguid,\r\n      dto.storeID,\r\n      dto.territoryID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CustomerViewModel\r\n  ): Api.CustomerClientRequestModel {\r\n    let response = new Api.CustomerClientRequestModel();\r\n    response.setProperties(\r\n      model.accountNumber,\r\n      model.customerID,\r\n      model.modifiedDate,\r\n      model.personID,\r\n      model.rowguid,\r\n      model.storeID,\r\n      model.territoryID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>fe9e09b44ad70e59048bc0ded8da78b3</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport CustomerMapper from './customerMapper';\r\nimport CustomerViewModel from './customerViewModel';\r\n\r\ninterface Props {\r\n  model?: CustomerViewModel;\r\n}\r\n\r\nconst CustomerCreateDisplay: React.SFC<FormikProps<CustomerViewModel>> = (\r\n  props: FormikProps<CustomerViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.CustomerClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CustomerViewModel] &&\r\n      props.errors[name as keyof CustomerViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CustomerViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('accountNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AccountNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"accountNumber\"\r\n            className={\r\n              errorExistForField('accountNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('accountNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('accountNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('personID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PersonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"personID\"\r\n            className={\r\n              errorExistForField('personID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('personID') && (\r\n            <small className=\"text-danger\">{errorsForField('personID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('storeID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StoreID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"storeID\"\r\n            className={\r\n              errorExistForField('storeID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('storeID') && (\r\n            <small className=\"text-danger\">{errorsForField('storeID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('territoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"territoryID\"\r\n            className={\r\n              errorExistForField('territoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('territoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('territoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CustomerCreate = withFormik<Props, CustomerViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CustomerViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.accountNumber,\r\n        props.model!.customerID,\r\n        props.model!.modifiedDate,\r\n        props.model!.personID,\r\n        props.model!.rowguid,\r\n        props.model!.storeID,\r\n        props.model!.territoryID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<CustomerViewModel> = {};\r\n\r\n    if (values.accountNumber == '') {\r\n      errors.accountNumber = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new CustomerMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'customers',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.CustomerClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'CustomerCreate',\r\n})(CustomerCreateDisplay);\r\n\r\ninterface CustomerCreateComponentProps {}\r\n\r\ninterface CustomerCreateComponentState {\r\n  model?: CustomerViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CustomerCreateComponent extends React.Component<\r\n  CustomerCreateComponentProps,\r\n  CustomerCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CustomerCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>34dc645b527c0137c526e0606b54d069</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CustomerMapper from './customerMapper';\r\nimport CustomerViewModel from './customerViewModel';\r\n\r\ninterface Props {\r\n  model?: CustomerViewModel;\r\n}\r\n\r\nconst CustomerDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"accountNumber\" className={'col-sm-2 col-form-label'}>\r\n          AccountNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.accountNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"customerID\" className={'col-sm-2 col-form-label'}>\r\n          CustomerID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.customerID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"personID\" className={'col-sm-2 col-form-label'}>\r\n          PersonID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.personID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"storeID\" className={'col-sm-2 col-form-label'}>\r\n          StoreID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.storeID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"territoryID\" className={'col-sm-2 col-form-label'}>\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.territoryID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  customerID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CustomerDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CustomerDetailComponentState {\r\n  model?: CustomerViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CustomerDetailComponent extends React.Component<\r\n  CustomerDetailComponentProps,\r\n  CustomerDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'customers/' + this.props.match.params.customerID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CustomerClientResponseModel;\r\n\r\n          let mapper = new CustomerMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CustomerDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>21fab1567a70df565d2c5a4bc17b3d91</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport CustomerViewModel from './customerViewModel';\r\nimport CustomerMapper from './customerMapper';\r\n\r\ninterface Props {\r\n  model?: CustomerViewModel;\r\n}\r\n\r\nconst CustomerEditDisplay = (props: FormikProps<CustomerViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.CustomerClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof CustomerViewModel] &&\r\n      props.errors[name as keyof CustomerViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof CustomerViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('accountNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AccountNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"accountNumber\"\r\n            className={\r\n              errorExistForField('accountNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('accountNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('accountNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('customerID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CustomerID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"customerID\"\r\n            className={\r\n              errorExistForField('customerID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('customerID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('customerID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('personID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PersonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"personID\"\r\n            className={\r\n              errorExistForField('personID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('personID') && (\r\n            <small className=\"text-danger\">{errorsForField('personID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('storeID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StoreID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"storeID\"\r\n            className={\r\n              errorExistForField('storeID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('storeID') && (\r\n            <small className=\"text-danger\">{errorsForField('storeID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('territoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"territoryID\"\r\n            className={\r\n              errorExistForField('territoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('territoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('territoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst CustomerUpdate = withFormik<Props, CustomerViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new CustomerViewModel();\r\n    response.setProperties(\r\n      props.model!.accountNumber,\r\n      props.model!.customerID,\r\n      props.model!.modifiedDate,\r\n      props.model!.personID,\r\n      props.model!.rowguid,\r\n      props.model!.storeID,\r\n      props.model!.territoryID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<CustomerViewModel> = {};\r\n\r\n    if (values.accountNumber == '') {\r\n      errors.accountNumber = 'Required';\r\n    }\r\n    if (values.customerID == 0) {\r\n      errors.customerID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new CustomerMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'customers/' + values.customerID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.CustomerClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'CustomerEdit',\r\n})(CustomerEditDisplay);\r\n\r\ninterface IParams {\r\n  customerID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CustomerEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface CustomerEditComponentState {\r\n  model?: CustomerViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CustomerEditComponent extends React.Component<\r\n  CustomerEditComponentProps,\r\n  CustomerEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'customers/' + this.props.match.params.customerID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CustomerClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new CustomerMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <CustomerUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>41dfd6fc211e86e0c30224db91dbf7c2</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CustomerMapper from './customerMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport CustomerViewModel from './customerViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface CustomerSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface CustomerSearchComponentState {\r\n  records: Array<CustomerViewModel>;\r\n  filteredRecords: Array<CustomerViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class CustomerSearchComponent extends React.Component<\r\n  CustomerSearchComponentProps,\r\n  CustomerSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.CustomerClientResponseModel>(),\r\n    filteredRecords: new Array<Api.CustomerClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.CustomerClientResponseModel) {\r\n    this.props.history.push('/customers/edit/' + row.customerID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.CustomerClientResponseModel) {\r\n    this.props.history.push('/customers/' + row.customerID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/customers/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.CustomerClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'customers/' + row.customerID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'customers' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.CustomerClientResponseModel>;\r\n          let viewModels: Array<CustomerViewModel> = [];\r\n          let mapper = new CustomerMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<CustomerViewModel>(),\r\n            filteredRecords: new Array<CustomerViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Customer',\r\n                columns: [\r\n                  {\r\n                    Header: 'AccountNumber',\r\n                    accessor: 'accountNumber',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.accountNumber)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CustomerID',\r\n                    accessor: 'customerID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.customerID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PersonID',\r\n                    accessor: 'personID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.personID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StoreID',\r\n                    accessor: 'storeID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.storeID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TerritoryID',\r\n                    accessor: 'territoryID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.territoryID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.CustomerClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.CustomerClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.CustomerClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>520858657917e548b537c2732db25580</Hash>\r\n</Codenesium>*/","export default class SalesOrderHeaderViewModel {\r\n  accountNumber: string;\r\n  billToAddressID: number;\r\n  comment: string;\r\n  creditCardApprovalCode: string;\r\n  creditCardID: any;\r\n  creditCardIDEntity: string;\r\n  currencyRateID: any;\r\n  currencyRateIDEntity: string;\r\n  customerID: number;\r\n  customerIDEntity: string;\r\n  dueDate: any;\r\n  freight: number;\r\n  modifiedDate: any;\r\n  onlineOrderFlag: boolean;\r\n  orderDate: any;\r\n  purchaseOrderNumber: string;\r\n  revisionNumber: number;\r\n  rowguid: any;\r\n  salesOrderID: number;\r\n  salesOrderNumber: string;\r\n  salesPersonID: any;\r\n  salesPersonIDEntity: string;\r\n  shipDate: any;\r\n  shipMethodID: number;\r\n  shipToAddressID: number;\r\n  status: number;\r\n  subTotal: number;\r\n  taxAmt: number;\r\n  territoryID: any;\r\n  territoryIDEntity: string;\r\n  totalDue: number;\r\n\r\n  constructor() {\r\n    this.accountNumber = '';\r\n    this.billToAddressID = 0;\r\n    this.comment = '';\r\n    this.creditCardApprovalCode = '';\r\n    this.creditCardID = undefined;\r\n    this.creditCardIDEntity = '';\r\n    this.currencyRateID = undefined;\r\n    this.currencyRateIDEntity = '';\r\n    this.customerID = 0;\r\n    this.customerIDEntity = '';\r\n    this.dueDate = undefined;\r\n    this.freight = 0;\r\n    this.modifiedDate = undefined;\r\n    this.onlineOrderFlag = false;\r\n    this.orderDate = undefined;\r\n    this.purchaseOrderNumber = '';\r\n    this.revisionNumber = 0;\r\n    this.rowguid = undefined;\r\n    this.salesOrderID = 0;\r\n    this.salesOrderNumber = '';\r\n    this.salesPersonID = undefined;\r\n    this.salesPersonIDEntity = '';\r\n    this.shipDate = undefined;\r\n    this.shipMethodID = 0;\r\n    this.shipToAddressID = 0;\r\n    this.status = 0;\r\n    this.subTotal = 0;\r\n    this.taxAmt = 0;\r\n    this.territoryID = undefined;\r\n    this.territoryIDEntity = '';\r\n    this.totalDue = 0;\r\n  }\r\n\r\n  setProperties(\r\n    accountNumber: string,\r\n    billToAddressID: number,\r\n    comment: string,\r\n    creditCardApprovalCode: string,\r\n    creditCardID: any,\r\n    currencyRateID: any,\r\n    customerID: number,\r\n    dueDate: any,\r\n    freight: number,\r\n    modifiedDate: any,\r\n    onlineOrderFlag: boolean,\r\n    orderDate: any,\r\n    purchaseOrderNumber: string,\r\n    revisionNumber: number,\r\n    rowguid: any,\r\n    salesOrderID: number,\r\n    salesOrderNumber: string,\r\n    salesPersonID: any,\r\n    shipDate: any,\r\n    shipMethodID: number,\r\n    shipToAddressID: number,\r\n    status: number,\r\n    subTotal: number,\r\n    taxAmt: number,\r\n    territoryID: any,\r\n    totalDue: number\r\n  ): void {\r\n    this.accountNumber = accountNumber;\r\n    this.billToAddressID = billToAddressID;\r\n    this.comment = comment;\r\n    this.creditCardApprovalCode = creditCardApprovalCode;\r\n    this.creditCardID = creditCardID;\r\n    this.currencyRateID = currencyRateID;\r\n    this.customerID = customerID;\r\n    this.dueDate = dueDate;\r\n    this.freight = freight;\r\n    this.modifiedDate = modifiedDate;\r\n    this.onlineOrderFlag = onlineOrderFlag;\r\n    this.orderDate = orderDate;\r\n    this.purchaseOrderNumber = purchaseOrderNumber;\r\n    this.revisionNumber = revisionNumber;\r\n    this.rowguid = rowguid;\r\n    this.salesOrderID = salesOrderID;\r\n    this.salesOrderNumber = salesOrderNumber;\r\n    this.salesPersonID = salesPersonID;\r\n    this.shipDate = shipDate;\r\n    this.shipMethodID = shipMethodID;\r\n    this.shipToAddressID = shipToAddressID;\r\n    this.status = status;\r\n    this.subTotal = subTotal;\r\n    this.taxAmt = taxAmt;\r\n    this.territoryID = territoryID;\r\n    this.totalDue = totalDue;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>cf89d6054e755d1f75c34af8639e31ba</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SalesOrderHeaderViewModel from './salesOrderHeaderViewModel';\r\n\r\nexport default class SalesOrderHeaderMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.SalesOrderHeaderClientResponseModel\r\n  ): SalesOrderHeaderViewModel {\r\n    let response = new SalesOrderHeaderViewModel();\r\n    response.setProperties(\r\n      dto.accountNumber,\r\n      dto.billToAddressID,\r\n      dto.comment,\r\n      dto.creditCardApprovalCode,\r\n      dto.creditCardID,\r\n      dto.currencyRateID,\r\n      dto.customerID,\r\n      dto.dueDate,\r\n      dto.freight,\r\n      dto.modifiedDate,\r\n      dto.onlineOrderFlag,\r\n      dto.orderDate,\r\n      dto.purchaseOrderNumber,\r\n      dto.revisionNumber,\r\n      dto.rowguid,\r\n      dto.salesOrderID,\r\n      dto.salesOrderNumber,\r\n      dto.salesPersonID,\r\n      dto.shipDate,\r\n      dto.shipMethodID,\r\n      dto.shipToAddressID,\r\n      dto.status,\r\n      dto.subTotal,\r\n      dto.taxAmt,\r\n      dto.territoryID,\r\n      dto.totalDue\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: SalesOrderHeaderViewModel\r\n  ): Api.SalesOrderHeaderClientRequestModel {\r\n    let response = new Api.SalesOrderHeaderClientRequestModel();\r\n    response.setProperties(\r\n      model.accountNumber,\r\n      model.billToAddressID,\r\n      model.comment,\r\n      model.creditCardApprovalCode,\r\n      model.creditCardID,\r\n      model.currencyRateID,\r\n      model.customerID,\r\n      model.dueDate,\r\n      model.freight,\r\n      model.modifiedDate,\r\n      model.onlineOrderFlag,\r\n      model.orderDate,\r\n      model.purchaseOrderNumber,\r\n      model.revisionNumber,\r\n      model.rowguid,\r\n      model.salesOrderID,\r\n      model.salesOrderNumber,\r\n      model.salesPersonID,\r\n      model.shipDate,\r\n      model.shipMethodID,\r\n      model.shipToAddressID,\r\n      model.status,\r\n      model.subTotal,\r\n      model.taxAmt,\r\n      model.territoryID,\r\n      model.totalDue\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3c82a0055d2c7fce68e57ebe827c4798</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport SalesOrderHeaderMapper from './salesOrderHeaderMapper';\r\nimport SalesOrderHeaderViewModel from './salesOrderHeaderViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesOrderHeaderViewModel;\r\n}\r\n\r\nconst SalesOrderHeaderCreateDisplay: React.SFC<\r\n  FormikProps<SalesOrderHeaderViewModel>\r\n> = (props: FormikProps<SalesOrderHeaderViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.SalesOrderHeaderClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesOrderHeaderViewModel] &&\r\n      props.errors[name as keyof SalesOrderHeaderViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesOrderHeaderViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('accountNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AccountNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"accountNumber\"\r\n            className={\r\n              errorExistForField('accountNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('accountNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('accountNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('billToAddressID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BillToAddressID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"billToAddressID\"\r\n            className={\r\n              errorExistForField('billToAddressID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('billToAddressID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('billToAddressID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('comment')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Comment\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"comment\"\r\n            className={\r\n              errorExistForField('comment')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('comment') && (\r\n            <small className=\"text-danger\">{errorsForField('comment')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creditCardApprovalCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreditCardApprovalCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creditCardApprovalCode\"\r\n            className={\r\n              errorExistForField('creditCardApprovalCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creditCardApprovalCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creditCardApprovalCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creditCardID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreditCardID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creditCardID\"\r\n            className={\r\n              errorExistForField('creditCardID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creditCardID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creditCardID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('currencyRateID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CurrencyRateID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"currencyRateID\"\r\n            className={\r\n              errorExistForField('currencyRateID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('currencyRateID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('currencyRateID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('customerID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CustomerID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"customerID\"\r\n            className={\r\n              errorExistForField('customerID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('customerID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('customerID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('dueDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DueDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"dueDate\"\r\n            className={\r\n              errorExistForField('dueDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('dueDate') && (\r\n            <small className=\"text-danger\">{errorsForField('dueDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('freight')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Freight\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"freight\"\r\n            className={\r\n              errorExistForField('freight')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('freight') && (\r\n            <small className=\"text-danger\">{errorsForField('freight')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('onlineOrderFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OnlineOrderFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"onlineOrderFlag\"\r\n            className={\r\n              errorExistForField('onlineOrderFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('onlineOrderFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('onlineOrderFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('orderDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OrderDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"orderDate\"\r\n            className={\r\n              errorExistForField('orderDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('orderDate') && (\r\n            <small className=\"text-danger\">{errorsForField('orderDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('purchaseOrderNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PurchaseOrderNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"purchaseOrderNumber\"\r\n            className={\r\n              errorExistForField('purchaseOrderNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('purchaseOrderNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('purchaseOrderNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('revisionNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          RevisionNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"revisionNumber\"\r\n            className={\r\n              errorExistForField('revisionNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('revisionNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('revisionNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesOrderNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesOrderNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesOrderNumber\"\r\n            className={\r\n              errorExistForField('salesOrderNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesOrderNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesOrderNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesPersonID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesPersonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesPersonID\"\r\n            className={\r\n              errorExistForField('salesPersonID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesPersonID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesPersonID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipDate\"\r\n            className={\r\n              errorExistForField('shipDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipDate') && (\r\n            <small className=\"text-danger\">{errorsForField('shipDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipMethodID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipMethodID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipMethodID\"\r\n            className={\r\n              errorExistForField('shipMethodID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipMethodID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shipMethodID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipToAddressID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipToAddressID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipToAddressID\"\r\n            className={\r\n              errorExistForField('shipToAddressID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipToAddressID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shipToAddressID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('status')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Status\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"status\"\r\n            className={\r\n              errorExistForField('status')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('status') && (\r\n            <small className=\"text-danger\">{errorsForField('status')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('subTotal')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SubTotal\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"subTotal\"\r\n            className={\r\n              errorExistForField('subTotal')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('subTotal') && (\r\n            <small className=\"text-danger\">{errorsForField('subTotal')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('taxAmt')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TaxAmt\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"taxAmt\"\r\n            className={\r\n              errorExistForField('taxAmt')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('taxAmt') && (\r\n            <small className=\"text-danger\">{errorsForField('taxAmt')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('territoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"territoryID\"\r\n            className={\r\n              errorExistForField('territoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('territoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('territoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('totalDue')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TotalDue\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"totalDue\"\r\n            className={\r\n              errorExistForField('totalDue')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('totalDue') && (\r\n            <small className=\"text-danger\">{errorsForField('totalDue')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesOrderHeaderCreate = withFormik<Props, SalesOrderHeaderViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesOrderHeaderViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.accountNumber,\r\n        props.model!.billToAddressID,\r\n        props.model!.comment,\r\n        props.model!.creditCardApprovalCode,\r\n        props.model!.creditCardID,\r\n        props.model!.currencyRateID,\r\n        props.model!.customerID,\r\n        props.model!.dueDate,\r\n        props.model!.freight,\r\n        props.model!.modifiedDate,\r\n        props.model!.onlineOrderFlag,\r\n        props.model!.orderDate,\r\n        props.model!.purchaseOrderNumber,\r\n        props.model!.revisionNumber,\r\n        props.model!.rowguid,\r\n        props.model!.salesOrderID,\r\n        props.model!.salesOrderNumber,\r\n        props.model!.salesPersonID,\r\n        props.model!.shipDate,\r\n        props.model!.shipMethodID,\r\n        props.model!.shipToAddressID,\r\n        props.model!.status,\r\n        props.model!.subTotal,\r\n        props.model!.taxAmt,\r\n        props.model!.territoryID,\r\n        props.model!.totalDue\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesOrderHeaderViewModel> = {};\r\n\r\n    if (values.billToAddressID == 0) {\r\n      errors.billToAddressID = 'Required';\r\n    }\r\n    if (values.customerID == 0) {\r\n      errors.customerID = 'Required';\r\n    }\r\n    if (values.dueDate == undefined) {\r\n      errors.dueDate = 'Required';\r\n    }\r\n    if (values.freight == 0) {\r\n      errors.freight = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.onlineOrderFlag == false) {\r\n      errors.onlineOrderFlag = 'Required';\r\n    }\r\n    if (values.orderDate == undefined) {\r\n      errors.orderDate = 'Required';\r\n    }\r\n    if (values.revisionNumber == 0) {\r\n      errors.revisionNumber = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.salesOrderNumber == '') {\r\n      errors.salesOrderNumber = 'Required';\r\n    }\r\n    if (values.shipMethodID == 0) {\r\n      errors.shipMethodID = 'Required';\r\n    }\r\n    if (values.shipToAddressID == 0) {\r\n      errors.shipToAddressID = 'Required';\r\n    }\r\n    if (values.status == 0) {\r\n      errors.status = 'Required';\r\n    }\r\n    if (values.subTotal == 0) {\r\n      errors.subTotal = 'Required';\r\n    }\r\n    if (values.taxAmt == 0) {\r\n      errors.taxAmt = 'Required';\r\n    }\r\n    if (values.totalDue == 0) {\r\n      errors.totalDue = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new SalesOrderHeaderMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'salesorderheaders',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SalesOrderHeaderClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'SalesOrderHeaderCreate',\r\n})(SalesOrderHeaderCreateDisplay);\r\n\r\ninterface SalesOrderHeaderCreateComponentProps {}\r\n\r\ninterface SalesOrderHeaderCreateComponentState {\r\n  model?: SalesOrderHeaderViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesOrderHeaderCreateComponent extends React.Component<\r\n  SalesOrderHeaderCreateComponentProps,\r\n  SalesOrderHeaderCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesOrderHeaderCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8469250582ba0df958bfd032e6143995</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesOrderHeaderMapper from './salesOrderHeaderMapper';\r\nimport SalesOrderHeaderViewModel from './salesOrderHeaderViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesOrderHeaderViewModel;\r\n}\r\n\r\nconst SalesOrderHeaderDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"accountNumber\" className={'col-sm-2 col-form-label'}>\r\n          AccountNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.accountNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"billToAddressID\" className={'col-sm-2 col-form-label'}>\r\n          BillToAddressID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.billToAddressID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"comment\" className={'col-sm-2 col-form-label'}>\r\n          Comment\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.comment)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"creditCardApprovalCode\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          CreditCardApprovalCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.creditCardApprovalCode)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"creditCardID\" className={'col-sm-2 col-form-label'}>\r\n          CreditCardID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.creditCardID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"currencyRateID\" className={'col-sm-2 col-form-label'}>\r\n          CurrencyRateID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.currencyRateID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"customerID\" className={'col-sm-2 col-form-label'}>\r\n          CustomerID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.customerID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"dueDate\" className={'col-sm-2 col-form-label'}>\r\n          DueDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.dueDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"freight\" className={'col-sm-2 col-form-label'}>\r\n          Freight\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.freight)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"onlineOrderFlag\" className={'col-sm-2 col-form-label'}>\r\n          OnlineOrderFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.onlineOrderFlag)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"orderDate\" className={'col-sm-2 col-form-label'}>\r\n          OrderDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.orderDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"purchaseOrderNumber\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          PurchaseOrderNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.purchaseOrderNumber)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"revisionNumber\" className={'col-sm-2 col-form-label'}>\r\n          RevisionNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.revisionNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesOrderID\" className={'col-sm-2 col-form-label'}>\r\n          SalesOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesOrderID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesOrderNumber\" className={'col-sm-2 col-form-label'}>\r\n          SalesOrderNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesOrderNumber)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesPersonID\" className={'col-sm-2 col-form-label'}>\r\n          SalesPersonID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesPersonID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shipDate\" className={'col-sm-2 col-form-label'}>\r\n          ShipDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shipDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shipMethodID\" className={'col-sm-2 col-form-label'}>\r\n          ShipMethodID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shipMethodID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shipToAddressID\" className={'col-sm-2 col-form-label'}>\r\n          ShipToAddressID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shipToAddressID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"status\" className={'col-sm-2 col-form-label'}>\r\n          Status\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.status)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"subTotal\" className={'col-sm-2 col-form-label'}>\r\n          SubTotal\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.subTotal)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"taxAmt\" className={'col-sm-2 col-form-label'}>\r\n          TaxAmt\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.taxAmt)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"territoryID\" className={'col-sm-2 col-form-label'}>\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.territoryID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"totalDue\" className={'col-sm-2 col-form-label'}>\r\n          TotalDue\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.totalDue)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  salesOrderID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesOrderHeaderDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesOrderHeaderDetailComponentState {\r\n  model?: SalesOrderHeaderViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesOrderHeaderDetailComponent extends React.Component<\r\n  SalesOrderHeaderDetailComponentProps,\r\n  SalesOrderHeaderDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salesorderheaders/' +\r\n          this.props.match.params.salesOrderID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesOrderHeaderClientResponseModel;\r\n\r\n          let mapper = new SalesOrderHeaderMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesOrderHeaderDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>583035bd8a941e353fea1c8a49e49e1b</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesOrderHeaderViewModel from './salesOrderHeaderViewModel';\r\nimport SalesOrderHeaderMapper from './salesOrderHeaderMapper';\r\n\r\ninterface Props {\r\n  model?: SalesOrderHeaderViewModel;\r\n}\r\n\r\nconst SalesOrderHeaderEditDisplay = (\r\n  props: FormikProps<SalesOrderHeaderViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.SalesOrderHeaderClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesOrderHeaderViewModel] &&\r\n      props.errors[name as keyof SalesOrderHeaderViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesOrderHeaderViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('accountNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AccountNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"accountNumber\"\r\n            className={\r\n              errorExistForField('accountNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('accountNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('accountNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('billToAddressID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BillToAddressID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"billToAddressID\"\r\n            className={\r\n              errorExistForField('billToAddressID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('billToAddressID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('billToAddressID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('comment')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Comment\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"comment\"\r\n            className={\r\n              errorExistForField('comment')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('comment') && (\r\n            <small className=\"text-danger\">{errorsForField('comment')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creditCardApprovalCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreditCardApprovalCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creditCardApprovalCode\"\r\n            className={\r\n              errorExistForField('creditCardApprovalCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creditCardApprovalCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creditCardApprovalCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creditCardID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreditCardID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creditCardID\"\r\n            className={\r\n              errorExistForField('creditCardID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creditCardID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creditCardID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('currencyRateID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CurrencyRateID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"currencyRateID\"\r\n            className={\r\n              errorExistForField('currencyRateID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('currencyRateID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('currencyRateID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('customerID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CustomerID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"customerID\"\r\n            className={\r\n              errorExistForField('customerID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('customerID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('customerID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('dueDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DueDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"dueDate\"\r\n            className={\r\n              errorExistForField('dueDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('dueDate') && (\r\n            <small className=\"text-danger\">{errorsForField('dueDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('freight')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Freight\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"freight\"\r\n            className={\r\n              errorExistForField('freight')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('freight') && (\r\n            <small className=\"text-danger\">{errorsForField('freight')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('onlineOrderFlag')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OnlineOrderFlag\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"onlineOrderFlag\"\r\n            className={\r\n              errorExistForField('onlineOrderFlag')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('onlineOrderFlag') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('onlineOrderFlag')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('orderDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          OrderDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"orderDate\"\r\n            className={\r\n              errorExistForField('orderDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('orderDate') && (\r\n            <small className=\"text-danger\">{errorsForField('orderDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('purchaseOrderNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PurchaseOrderNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"purchaseOrderNumber\"\r\n            className={\r\n              errorExistForField('purchaseOrderNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('purchaseOrderNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('purchaseOrderNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('revisionNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          RevisionNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"revisionNumber\"\r\n            className={\r\n              errorExistForField('revisionNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('revisionNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('revisionNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesOrderID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesOrderID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesOrderID\"\r\n            className={\r\n              errorExistForField('salesOrderID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesOrderID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesOrderID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesOrderNumber')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesOrderNumber\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesOrderNumber\"\r\n            className={\r\n              errorExistForField('salesOrderNumber')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesOrderNumber') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesOrderNumber')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesPersonID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesPersonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesPersonID\"\r\n            className={\r\n              errorExistForField('salesPersonID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesPersonID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesPersonID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipDate\"\r\n            className={\r\n              errorExistForField('shipDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipDate') && (\r\n            <small className=\"text-danger\">{errorsForField('shipDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipMethodID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipMethodID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipMethodID\"\r\n            className={\r\n              errorExistForField('shipMethodID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipMethodID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shipMethodID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shipToAddressID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShipToAddressID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shipToAddressID\"\r\n            className={\r\n              errorExistForField('shipToAddressID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shipToAddressID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shipToAddressID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('status')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Status\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"status\"\r\n            className={\r\n              errorExistForField('status')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('status') && (\r\n            <small className=\"text-danger\">{errorsForField('status')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('subTotal')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SubTotal\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"subTotal\"\r\n            className={\r\n              errorExistForField('subTotal')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('subTotal') && (\r\n            <small className=\"text-danger\">{errorsForField('subTotal')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('taxAmt')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TaxAmt\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"taxAmt\"\r\n            className={\r\n              errorExistForField('taxAmt')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('taxAmt') && (\r\n            <small className=\"text-danger\">{errorsForField('taxAmt')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('territoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"territoryID\"\r\n            className={\r\n              errorExistForField('territoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('territoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('territoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('totalDue')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TotalDue\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"totalDue\"\r\n            className={\r\n              errorExistForField('totalDue')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('totalDue') && (\r\n            <small className=\"text-danger\">{errorsForField('totalDue')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesOrderHeaderUpdate = withFormik<Props, SalesOrderHeaderViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesOrderHeaderViewModel();\r\n    response.setProperties(\r\n      props.model!.accountNumber,\r\n      props.model!.billToAddressID,\r\n      props.model!.comment,\r\n      props.model!.creditCardApprovalCode,\r\n      props.model!.creditCardID,\r\n      props.model!.currencyRateID,\r\n      props.model!.customerID,\r\n      props.model!.dueDate,\r\n      props.model!.freight,\r\n      props.model!.modifiedDate,\r\n      props.model!.onlineOrderFlag,\r\n      props.model!.orderDate,\r\n      props.model!.purchaseOrderNumber,\r\n      props.model!.revisionNumber,\r\n      props.model!.rowguid,\r\n      props.model!.salesOrderID,\r\n      props.model!.salesOrderNumber,\r\n      props.model!.salesPersonID,\r\n      props.model!.shipDate,\r\n      props.model!.shipMethodID,\r\n      props.model!.shipToAddressID,\r\n      props.model!.status,\r\n      props.model!.subTotal,\r\n      props.model!.taxAmt,\r\n      props.model!.territoryID,\r\n      props.model!.totalDue\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesOrderHeaderViewModel> = {};\r\n\r\n    if (values.billToAddressID == 0) {\r\n      errors.billToAddressID = 'Required';\r\n    }\r\n    if (values.customerID == 0) {\r\n      errors.customerID = 'Required';\r\n    }\r\n    if (values.dueDate == undefined) {\r\n      errors.dueDate = 'Required';\r\n    }\r\n    if (values.freight == 0) {\r\n      errors.freight = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.onlineOrderFlag == false) {\r\n      errors.onlineOrderFlag = 'Required';\r\n    }\r\n    if (values.orderDate == undefined) {\r\n      errors.orderDate = 'Required';\r\n    }\r\n    if (values.revisionNumber == 0) {\r\n      errors.revisionNumber = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.salesOrderID == 0) {\r\n      errors.salesOrderID = 'Required';\r\n    }\r\n    if (values.salesOrderNumber == '') {\r\n      errors.salesOrderNumber = 'Required';\r\n    }\r\n    if (values.shipMethodID == 0) {\r\n      errors.shipMethodID = 'Required';\r\n    }\r\n    if (values.shipToAddressID == 0) {\r\n      errors.shipToAddressID = 'Required';\r\n    }\r\n    if (values.status == 0) {\r\n      errors.status = 'Required';\r\n    }\r\n    if (values.subTotal == 0) {\r\n      errors.subTotal = 'Required';\r\n    }\r\n    if (values.taxAmt == 0) {\r\n      errors.taxAmt = 'Required';\r\n    }\r\n    if (values.totalDue == 0) {\r\n      errors.totalDue = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new SalesOrderHeaderMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'salesorderheaders/' + values.salesOrderID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.SalesOrderHeaderClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'SalesOrderHeaderEdit',\r\n})(SalesOrderHeaderEditDisplay);\r\n\r\ninterface IParams {\r\n  salesOrderID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesOrderHeaderEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesOrderHeaderEditComponentState {\r\n  model?: SalesOrderHeaderViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesOrderHeaderEditComponent extends React.Component<\r\n  SalesOrderHeaderEditComponentProps,\r\n  SalesOrderHeaderEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salesorderheaders/' +\r\n          this.props.match.params.salesOrderID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesOrderHeaderClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SalesOrderHeaderMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesOrderHeaderUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6f40e3a6466edcded6b4f767d3dbc4ca</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SalesOrderHeaderMapper from './salesOrderHeaderMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport SalesOrderHeaderViewModel from './salesOrderHeaderViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface SalesOrderHeaderSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface SalesOrderHeaderSearchComponentState {\r\n  records: Array<SalesOrderHeaderViewModel>;\r\n  filteredRecords: Array<SalesOrderHeaderViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class SalesOrderHeaderSearchComponent extends React.Component<\r\n  SalesOrderHeaderSearchComponentProps,\r\n  SalesOrderHeaderSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.SalesOrderHeaderClientResponseModel>(),\r\n    filteredRecords: new Array<Api.SalesOrderHeaderClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.SalesOrderHeaderClientResponseModel) {\r\n    this.props.history.push('/salesorderheaders/edit/' + row.salesOrderID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.SalesOrderHeaderClientResponseModel) {\r\n    this.props.history.push('/salesorderheaders/' + row.salesOrderID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/salesorderheaders/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.SalesOrderHeaderClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'salesorderheaders/' + row.salesOrderID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'salesorderheaders' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.SalesOrderHeaderClientResponseModel\r\n          >;\r\n          let viewModels: Array<SalesOrderHeaderViewModel> = [];\r\n          let mapper = new SalesOrderHeaderMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<SalesOrderHeaderViewModel>(),\r\n            filteredRecords: new Array<SalesOrderHeaderViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'SalesOrderHeader',\r\n                columns: [\r\n                  {\r\n                    Header: 'AccountNumber',\r\n                    accessor: 'accountNumber',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.accountNumber)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'BillToAddressID',\r\n                    accessor: 'billToAddressID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.billToAddressID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Comment',\r\n                    accessor: 'comment',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.comment)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CreditCardApprovalCode',\r\n                    accessor: 'creditCardApprovalCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.creditCardApprovalCode)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CreditCardID',\r\n                    accessor: 'creditCardID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.creditCardID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CurrencyRateID',\r\n                    accessor: 'currencyRateID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.currencyRateID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CustomerID',\r\n                    accessor: 'customerID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.customerID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'DueDate',\r\n                    accessor: 'dueDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.dueDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Freight',\r\n                    accessor: 'freight',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.freight)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'OnlineOrderFlag',\r\n                    accessor: 'onlineOrderFlag',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.onlineOrderFlag)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'OrderDate',\r\n                    accessor: 'orderDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.orderDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PurchaseOrderNumber',\r\n                    accessor: 'purchaseOrderNumber',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>\r\n                          {String(props.original.purchaseOrderNumber)}\r\n                        </span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'RevisionNumber',\r\n                    accessor: 'revisionNumber',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.revisionNumber)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesOrderID',\r\n                    accessor: 'salesOrderID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.salesOrderID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesOrderNumber',\r\n                    accessor: 'salesOrderNumber',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.salesOrderNumber)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesPersonID',\r\n                    accessor: 'salesPersonID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.salesPersonID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShipDate',\r\n                    accessor: 'shipDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.shipDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShipMethodID',\r\n                    accessor: 'shipMethodID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.shipMethodID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShipToAddressID',\r\n                    accessor: 'shipToAddressID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.shipToAddressID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Status',\r\n                    accessor: 'status',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.status)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SubTotal',\r\n                    accessor: 'subTotal',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.subTotal)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TaxAmt',\r\n                    accessor: 'taxAmt',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.taxAmt)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TerritoryID',\r\n                    accessor: 'territoryID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.territoryID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TotalDue',\r\n                    accessor: 'totalDue',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.totalDue)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.SalesOrderHeaderClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.SalesOrderHeaderClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.SalesOrderHeaderClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f623e24b019aea2cd7abb0d39e867132</Hash>\r\n</Codenesium>*/","export default class SalesPersonViewModel {\r\n  bonus: number;\r\n  businessEntityID: number;\r\n  commissionPct: number;\r\n  modifiedDate: any;\r\n  rowguid: any;\r\n  salesLastYear: number;\r\n  salesQuota: any;\r\n  salesYTD: number;\r\n  territoryID: any;\r\n  territoryIDEntity: string;\r\n\r\n  constructor() {\r\n    this.bonus = 0;\r\n    this.businessEntityID = 0;\r\n    this.commissionPct = 0;\r\n    this.modifiedDate = undefined;\r\n    this.rowguid = undefined;\r\n    this.salesLastYear = 0;\r\n    this.salesQuota = undefined;\r\n    this.salesYTD = 0;\r\n    this.territoryID = undefined;\r\n    this.territoryIDEntity = '';\r\n  }\r\n\r\n  setProperties(\r\n    bonus: number,\r\n    businessEntityID: number,\r\n    commissionPct: number,\r\n    modifiedDate: any,\r\n    rowguid: any,\r\n    salesLastYear: number,\r\n    salesQuota: any,\r\n    salesYTD: number,\r\n    territoryID: any\r\n  ): void {\r\n    this.bonus = bonus;\r\n    this.businessEntityID = businessEntityID;\r\n    this.commissionPct = commissionPct;\r\n    this.modifiedDate = modifiedDate;\r\n    this.rowguid = rowguid;\r\n    this.salesLastYear = salesLastYear;\r\n    this.salesQuota = salesQuota;\r\n    this.salesYTD = salesYTD;\r\n    this.territoryID = territoryID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6d6e2bc371bc01d5bc3c5d1d10c65e92</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SalesPersonViewModel from './salesPersonViewModel';\r\n\r\nexport default class SalesPersonMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.SalesPersonClientResponseModel\r\n  ): SalesPersonViewModel {\r\n    let response = new SalesPersonViewModel();\r\n    response.setProperties(\r\n      dto.bonus,\r\n      dto.businessEntityID,\r\n      dto.commissionPct,\r\n      dto.modifiedDate,\r\n      dto.rowguid,\r\n      dto.salesLastYear,\r\n      dto.salesQuota,\r\n      dto.salesYTD,\r\n      dto.territoryID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: SalesPersonViewModel\r\n  ): Api.SalesPersonClientRequestModel {\r\n    let response = new Api.SalesPersonClientRequestModel();\r\n    response.setProperties(\r\n      model.bonus,\r\n      model.businessEntityID,\r\n      model.commissionPct,\r\n      model.modifiedDate,\r\n      model.rowguid,\r\n      model.salesLastYear,\r\n      model.salesQuota,\r\n      model.salesYTD,\r\n      model.territoryID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0c2fedcac6b5a914505a1bd1bf7f036f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport SalesPersonMapper from './salesPersonMapper';\r\nimport SalesPersonViewModel from './salesPersonViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesPersonViewModel;\r\n}\r\n\r\nconst SalesPersonCreateDisplay: React.SFC<FormikProps<SalesPersonViewModel>> = (\r\n  props: FormikProps<SalesPersonViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.SalesPersonClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesPersonViewModel] &&\r\n      props.errors[name as keyof SalesPersonViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesPersonViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('bonus')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Bonus\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"bonus\"\r\n            className={\r\n              errorExistForField('bonus')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('bonus') && (\r\n            <small className=\"text-danger\">{errorsForField('bonus')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('commissionPct')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CommissionPct\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"commissionPct\"\r\n            className={\r\n              errorExistForField('commissionPct')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('commissionPct') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('commissionPct')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesLastYear')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesLastYear\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesLastYear\"\r\n            className={\r\n              errorExistForField('salesLastYear')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesLastYear') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesLastYear')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesQuota')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesQuota\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesQuota\"\r\n            className={\r\n              errorExistForField('salesQuota')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesQuota') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesQuota')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesYTD')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesYTD\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesYTD\"\r\n            className={\r\n              errorExistForField('salesYTD')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesYTD') && (\r\n            <small className=\"text-danger\">{errorsForField('salesYTD')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('territoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"territoryID\"\r\n            className={\r\n              errorExistForField('territoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('territoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('territoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesPersonCreate = withFormik<Props, SalesPersonViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesPersonViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.bonus,\r\n        props.model!.businessEntityID,\r\n        props.model!.commissionPct,\r\n        props.model!.modifiedDate,\r\n        props.model!.rowguid,\r\n        props.model!.salesLastYear,\r\n        props.model!.salesQuota,\r\n        props.model!.salesYTD,\r\n        props.model!.territoryID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesPersonViewModel> = {};\r\n\r\n    if (values.bonus == 0) {\r\n      errors.bonus = 'Required';\r\n    }\r\n    if (values.commissionPct == 0) {\r\n      errors.commissionPct = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.salesLastYear == 0) {\r\n      errors.salesLastYear = 'Required';\r\n    }\r\n    if (values.salesYTD == 0) {\r\n      errors.salesYTD = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new SalesPersonMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'salespersons',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SalesPersonClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'SalesPersonCreate',\r\n})(SalesPersonCreateDisplay);\r\n\r\ninterface SalesPersonCreateComponentProps {}\r\n\r\ninterface SalesPersonCreateComponentState {\r\n  model?: SalesPersonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesPersonCreateComponent extends React.Component<\r\n  SalesPersonCreateComponentProps,\r\n  SalesPersonCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesPersonCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>db9880000d98ad1ac98d351501e2c693</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesPersonMapper from './salesPersonMapper';\r\nimport SalesPersonViewModel from './salesPersonViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesPersonViewModel;\r\n}\r\n\r\nconst SalesPersonDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"bonus\" className={'col-sm-2 col-form-label'}>\r\n          Bonus\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.bonus)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"businessEntityID\" className={'col-sm-2 col-form-label'}>\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.businessEntityID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"commissionPct\" className={'col-sm-2 col-form-label'}>\r\n          CommissionPct\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.commissionPct)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesLastYear\" className={'col-sm-2 col-form-label'}>\r\n          SalesLastYear\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesLastYear)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesQuota\" className={'col-sm-2 col-form-label'}>\r\n          SalesQuota\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesQuota)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesYTD\" className={'col-sm-2 col-form-label'}>\r\n          SalesYTD\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesYTD)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"territoryID\" className={'col-sm-2 col-form-label'}>\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.territoryID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesPersonDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesPersonDetailComponentState {\r\n  model?: SalesPersonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesPersonDetailComponent extends React.Component<\r\n  SalesPersonDetailComponentProps,\r\n  SalesPersonDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salespersons/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesPersonClientResponseModel;\r\n\r\n          let mapper = new SalesPersonMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesPersonDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>45165f798f2b63096dd9695142cafa97</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesPersonViewModel from './salesPersonViewModel';\r\nimport SalesPersonMapper from './salesPersonMapper';\r\n\r\ninterface Props {\r\n  model?: SalesPersonViewModel;\r\n}\r\n\r\nconst SalesPersonEditDisplay = (props: FormikProps<SalesPersonViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.SalesPersonClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesPersonViewModel] &&\r\n      props.errors[name as keyof SalesPersonViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesPersonViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('bonus')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Bonus\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"bonus\"\r\n            className={\r\n              errorExistForField('bonus')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('bonus') && (\r\n            <small className=\"text-danger\">{errorsForField('bonus')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('businessEntityID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"businessEntityID\"\r\n            className={\r\n              errorExistForField('businessEntityID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('businessEntityID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('businessEntityID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('commissionPct')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CommissionPct\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"commissionPct\"\r\n            className={\r\n              errorExistForField('commissionPct')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('commissionPct') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('commissionPct')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesLastYear')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesLastYear\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesLastYear\"\r\n            className={\r\n              errorExistForField('salesLastYear')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesLastYear') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesLastYear')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesQuota')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesQuota\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesQuota\"\r\n            className={\r\n              errorExistForField('salesQuota')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesQuota') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesQuota')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesYTD')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesYTD\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesYTD\"\r\n            className={\r\n              errorExistForField('salesYTD')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesYTD') && (\r\n            <small className=\"text-danger\">{errorsForField('salesYTD')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('territoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"territoryID\"\r\n            className={\r\n              errorExistForField('territoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('territoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('territoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesPersonUpdate = withFormik<Props, SalesPersonViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesPersonViewModel();\r\n    response.setProperties(\r\n      props.model!.bonus,\r\n      props.model!.businessEntityID,\r\n      props.model!.commissionPct,\r\n      props.model!.modifiedDate,\r\n      props.model!.rowguid,\r\n      props.model!.salesLastYear,\r\n      props.model!.salesQuota,\r\n      props.model!.salesYTD,\r\n      props.model!.territoryID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesPersonViewModel> = {};\r\n\r\n    if (values.bonus == 0) {\r\n      errors.bonus = 'Required';\r\n    }\r\n    if (values.businessEntityID == 0) {\r\n      errors.businessEntityID = 'Required';\r\n    }\r\n    if (values.commissionPct == 0) {\r\n      errors.commissionPct = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.salesLastYear == 0) {\r\n      errors.salesLastYear = 'Required';\r\n    }\r\n    if (values.salesYTD == 0) {\r\n      errors.salesYTD = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new SalesPersonMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'salespersons/' + values.businessEntityID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.SalesPersonClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'SalesPersonEdit',\r\n})(SalesPersonEditDisplay);\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesPersonEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesPersonEditComponentState {\r\n  model?: SalesPersonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesPersonEditComponent extends React.Component<\r\n  SalesPersonEditComponentProps,\r\n  SalesPersonEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salespersons/' +\r\n          this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesPersonClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SalesPersonMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesPersonUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7e645184679b6c123e5ad690f4b0c646</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SalesPersonMapper from './salesPersonMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport SalesPersonViewModel from './salesPersonViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface SalesPersonSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface SalesPersonSearchComponentState {\r\n  records: Array<SalesPersonViewModel>;\r\n  filteredRecords: Array<SalesPersonViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class SalesPersonSearchComponent extends React.Component<\r\n  SalesPersonSearchComponentProps,\r\n  SalesPersonSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.SalesPersonClientResponseModel>(),\r\n    filteredRecords: new Array<Api.SalesPersonClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.SalesPersonClientResponseModel) {\r\n    this.props.history.push('/salespersons/edit/' + row.businessEntityID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.SalesPersonClientResponseModel) {\r\n    this.props.history.push('/salespersons/' + row.businessEntityID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/salespersons/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.SalesPersonClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'salespersons/' + row.businessEntityID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'salespersons' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.SalesPersonClientResponseModel>;\r\n          let viewModels: Array<SalesPersonViewModel> = [];\r\n          let mapper = new SalesPersonMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<SalesPersonViewModel>(),\r\n            filteredRecords: new Array<SalesPersonViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'SalesPerson',\r\n                columns: [\r\n                  {\r\n                    Header: 'Bonus',\r\n                    accessor: 'bonus',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.bonus)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'BusinessEntityID',\r\n                    accessor: 'businessEntityID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.businessEntityID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CommissionPct',\r\n                    accessor: 'commissionPct',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.commissionPct)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesLastYear',\r\n                    accessor: 'salesLastYear',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.salesLastYear)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesQuota',\r\n                    accessor: 'salesQuota',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.salesQuota)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesYTD',\r\n                    accessor: 'salesYTD',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.salesYTD)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TerritoryID',\r\n                    accessor: 'territoryID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.territoryID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.SalesPersonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.SalesPersonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.SalesPersonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>fa3e686964d9c4ae2e3cf834f50eb0c7</Hash>\r\n</Codenesium>*/","export default class SalesReasonViewModel {\r\n  modifiedDate: any;\r\n  name: string;\r\n  reasonType: string;\r\n  salesReasonID: number;\r\n\r\n  constructor() {\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.reasonType = '';\r\n    this.salesReasonID = 0;\r\n  }\r\n\r\n  setProperties(\r\n    modifiedDate: any,\r\n    name: string,\r\n    reasonType: string,\r\n    salesReasonID: number\r\n  ): void {\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.reasonType = reasonType;\r\n    this.salesReasonID = salesReasonID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>197d2178d7bd9b2f00277ad43c98c62e</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SalesReasonViewModel from './salesReasonViewModel';\r\n\r\nexport default class SalesReasonMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.SalesReasonClientResponseModel\r\n  ): SalesReasonViewModel {\r\n    let response = new SalesReasonViewModel();\r\n    response.setProperties(\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.reasonType,\r\n      dto.salesReasonID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: SalesReasonViewModel\r\n  ): Api.SalesReasonClientRequestModel {\r\n    let response = new Api.SalesReasonClientRequestModel();\r\n    response.setProperties(\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.reasonType,\r\n      model.salesReasonID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>466341d1f66bfe435ed125197a37d82e</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport SalesReasonMapper from './salesReasonMapper';\r\nimport SalesReasonViewModel from './salesReasonViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesReasonViewModel;\r\n}\r\n\r\nconst SalesReasonCreateDisplay: React.SFC<FormikProps<SalesReasonViewModel>> = (\r\n  props: FormikProps<SalesReasonViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.SalesReasonClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesReasonViewModel] &&\r\n      props.errors[name as keyof SalesReasonViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesReasonViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('reasonType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReasonType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"reasonType\"\r\n            className={\r\n              errorExistForField('reasonType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('reasonType') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('reasonType')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesReasonCreate = withFormik<Props, SalesReasonViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesReasonViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.reasonType,\r\n        props.model!.salesReasonID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesReasonViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.reasonType == '') {\r\n      errors.reasonType = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new SalesReasonMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'salesreasons',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SalesReasonClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'SalesReasonCreate',\r\n})(SalesReasonCreateDisplay);\r\n\r\ninterface SalesReasonCreateComponentProps {}\r\n\r\ninterface SalesReasonCreateComponentState {\r\n  model?: SalesReasonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesReasonCreateComponent extends React.Component<\r\n  SalesReasonCreateComponentProps,\r\n  SalesReasonCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesReasonCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7f0ef48e7854660227b74447a2bc55e4</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesReasonMapper from './salesReasonMapper';\r\nimport SalesReasonViewModel from './salesReasonViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesReasonViewModel;\r\n}\r\n\r\nconst SalesReasonDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"reasonType\" className={'col-sm-2 col-form-label'}>\r\n          ReasonType\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.reasonType)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesReasonID\" className={'col-sm-2 col-form-label'}>\r\n          SalesReasonID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesReasonID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  salesReasonID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesReasonDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesReasonDetailComponentState {\r\n  model?: SalesReasonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesReasonDetailComponent extends React.Component<\r\n  SalesReasonDetailComponentProps,\r\n  SalesReasonDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salesreasons/' +\r\n          this.props.match.params.salesReasonID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesReasonClientResponseModel;\r\n\r\n          let mapper = new SalesReasonMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesReasonDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7fddc0ff7206a41a9a0ab5cca35b536d</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesReasonViewModel from './salesReasonViewModel';\r\nimport SalesReasonMapper from './salesReasonMapper';\r\n\r\ninterface Props {\r\n  model?: SalesReasonViewModel;\r\n}\r\n\r\nconst SalesReasonEditDisplay = (props: FormikProps<SalesReasonViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.SalesReasonClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesReasonViewModel] &&\r\n      props.errors[name as keyof SalesReasonViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesReasonViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('reasonType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ReasonType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"reasonType\"\r\n            className={\r\n              errorExistForField('reasonType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('reasonType') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('reasonType')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesReasonID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesReasonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesReasonID\"\r\n            className={\r\n              errorExistForField('salesReasonID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesReasonID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesReasonID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesReasonUpdate = withFormik<Props, SalesReasonViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesReasonViewModel();\r\n    response.setProperties(\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.reasonType,\r\n      props.model!.salesReasonID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesReasonViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.reasonType == '') {\r\n      errors.reasonType = 'Required';\r\n    }\r\n    if (values.salesReasonID == 0) {\r\n      errors.salesReasonID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new SalesReasonMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'salesreasons/' + values.salesReasonID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.SalesReasonClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'SalesReasonEdit',\r\n})(SalesReasonEditDisplay);\r\n\r\ninterface IParams {\r\n  salesReasonID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesReasonEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesReasonEditComponentState {\r\n  model?: SalesReasonViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesReasonEditComponent extends React.Component<\r\n  SalesReasonEditComponentProps,\r\n  SalesReasonEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salesreasons/' +\r\n          this.props.match.params.salesReasonID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesReasonClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SalesReasonMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesReasonUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>9ed8d6f2a10e908b08552a788fb22055</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SalesReasonMapper from './salesReasonMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport SalesReasonViewModel from './salesReasonViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface SalesReasonSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface SalesReasonSearchComponentState {\r\n  records: Array<SalesReasonViewModel>;\r\n  filteredRecords: Array<SalesReasonViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class SalesReasonSearchComponent extends React.Component<\r\n  SalesReasonSearchComponentProps,\r\n  SalesReasonSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.SalesReasonClientResponseModel>(),\r\n    filteredRecords: new Array<Api.SalesReasonClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.SalesReasonClientResponseModel) {\r\n    this.props.history.push('/salesreasons/edit/' + row.salesReasonID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.SalesReasonClientResponseModel) {\r\n    this.props.history.push('/salesreasons/' + row.salesReasonID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/salesreasons/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.SalesReasonClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'salesreasons/' + row.salesReasonID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'salesreasons' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.SalesReasonClientResponseModel>;\r\n          let viewModels: Array<SalesReasonViewModel> = [];\r\n          let mapper = new SalesReasonMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<SalesReasonViewModel>(),\r\n            filteredRecords: new Array<SalesReasonViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'SalesReason',\r\n                columns: [\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ReasonType',\r\n                    accessor: 'reasonType',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.reasonType)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesReasonID',\r\n                    accessor: 'salesReasonID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.salesReasonID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.SalesReasonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.SalesReasonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.SalesReasonClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2676d2f0a5d07d0ff345fee5a85970a4</Hash>\r\n</Codenesium>*/","export default class SalesTaxRateViewModel {\r\n  modifiedDate: any;\r\n  name: string;\r\n  rowguid: any;\r\n  salesTaxRateID: number;\r\n  stateProvinceID: number;\r\n  taxRate: number;\r\n  taxType: number;\r\n\r\n  constructor() {\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.rowguid = undefined;\r\n    this.salesTaxRateID = 0;\r\n    this.stateProvinceID = 0;\r\n    this.taxRate = 0;\r\n    this.taxType = 0;\r\n  }\r\n\r\n  setProperties(\r\n    modifiedDate: any,\r\n    name: string,\r\n    rowguid: any,\r\n    salesTaxRateID: number,\r\n    stateProvinceID: number,\r\n    taxRate: number,\r\n    taxType: number\r\n  ): void {\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.rowguid = rowguid;\r\n    this.salesTaxRateID = salesTaxRateID;\r\n    this.stateProvinceID = stateProvinceID;\r\n    this.taxRate = taxRate;\r\n    this.taxType = taxType;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>404c53929ce967024f10a84571e09082</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SalesTaxRateViewModel from './salesTaxRateViewModel';\r\n\r\nexport default class SalesTaxRateMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.SalesTaxRateClientResponseModel\r\n  ): SalesTaxRateViewModel {\r\n    let response = new SalesTaxRateViewModel();\r\n    response.setProperties(\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.rowguid,\r\n      dto.salesTaxRateID,\r\n      dto.stateProvinceID,\r\n      dto.taxRate,\r\n      dto.taxType\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: SalesTaxRateViewModel\r\n  ): Api.SalesTaxRateClientRequestModel {\r\n    let response = new Api.SalesTaxRateClientRequestModel();\r\n    response.setProperties(\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.rowguid,\r\n      model.salesTaxRateID,\r\n      model.stateProvinceID,\r\n      model.taxRate,\r\n      model.taxType\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b82274bf034571408ea5f786d4ab8ff7</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport SalesTaxRateMapper from './salesTaxRateMapper';\r\nimport SalesTaxRateViewModel from './salesTaxRateViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesTaxRateViewModel;\r\n}\r\n\r\nconst SalesTaxRateCreateDisplay: React.SFC<\r\n  FormikProps<SalesTaxRateViewModel>\r\n> = (props: FormikProps<SalesTaxRateViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.SalesTaxRateClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesTaxRateViewModel] &&\r\n      props.errors[name as keyof SalesTaxRateViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesTaxRateViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('stateProvinceID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StateProvinceID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"stateProvinceID\"\r\n            className={\r\n              errorExistForField('stateProvinceID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('stateProvinceID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('stateProvinceID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('taxRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TaxRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"taxRate\"\r\n            className={\r\n              errorExistForField('taxRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('taxRate') && (\r\n            <small className=\"text-danger\">{errorsForField('taxRate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('taxType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TaxType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"taxType\"\r\n            className={\r\n              errorExistForField('taxType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('taxType') && (\r\n            <small className=\"text-danger\">{errorsForField('taxType')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesTaxRateCreate = withFormik<Props, SalesTaxRateViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesTaxRateViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.rowguid,\r\n        props.model!.salesTaxRateID,\r\n        props.model!.stateProvinceID,\r\n        props.model!.taxRate,\r\n        props.model!.taxType\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesTaxRateViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.stateProvinceID == 0) {\r\n      errors.stateProvinceID = 'Required';\r\n    }\r\n    if (values.taxRate == 0) {\r\n      errors.taxRate = 'Required';\r\n    }\r\n    if (values.taxType == 0) {\r\n      errors.taxType = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new SalesTaxRateMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'salestaxrates',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SalesTaxRateClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'SalesTaxRateCreate',\r\n})(SalesTaxRateCreateDisplay);\r\n\r\ninterface SalesTaxRateCreateComponentProps {}\r\n\r\ninterface SalesTaxRateCreateComponentState {\r\n  model?: SalesTaxRateViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesTaxRateCreateComponent extends React.Component<\r\n  SalesTaxRateCreateComponentProps,\r\n  SalesTaxRateCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesTaxRateCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c789e8317259f1a25671dd6494334aea</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesTaxRateMapper from './salesTaxRateMapper';\r\nimport SalesTaxRateViewModel from './salesTaxRateViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesTaxRateViewModel;\r\n}\r\n\r\nconst SalesTaxRateDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesTaxRateID\" className={'col-sm-2 col-form-label'}>\r\n          SalesTaxRateID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesTaxRateID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"stateProvinceID\" className={'col-sm-2 col-form-label'}>\r\n          StateProvinceID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.stateProvinceID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"taxRate\" className={'col-sm-2 col-form-label'}>\r\n          TaxRate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.taxRate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"taxType\" className={'col-sm-2 col-form-label'}>\r\n          TaxType\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.taxType)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  salesTaxRateID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesTaxRateDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesTaxRateDetailComponentState {\r\n  model?: SalesTaxRateViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesTaxRateDetailComponent extends React.Component<\r\n  SalesTaxRateDetailComponentProps,\r\n  SalesTaxRateDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salestaxrates/' +\r\n          this.props.match.params.salesTaxRateID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesTaxRateClientResponseModel;\r\n\r\n          let mapper = new SalesTaxRateMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesTaxRateDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3e35bbab39922208fa5d8ac12627e73f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesTaxRateViewModel from './salesTaxRateViewModel';\r\nimport SalesTaxRateMapper from './salesTaxRateMapper';\r\n\r\ninterface Props {\r\n  model?: SalesTaxRateViewModel;\r\n}\r\n\r\nconst SalesTaxRateEditDisplay = (props: FormikProps<SalesTaxRateViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.SalesTaxRateClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesTaxRateViewModel] &&\r\n      props.errors[name as keyof SalesTaxRateViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesTaxRateViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesTaxRateID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesTaxRateID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesTaxRateID\"\r\n            className={\r\n              errorExistForField('salesTaxRateID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesTaxRateID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesTaxRateID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('stateProvinceID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StateProvinceID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"stateProvinceID\"\r\n            className={\r\n              errorExistForField('stateProvinceID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('stateProvinceID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('stateProvinceID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('taxRate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TaxRate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"taxRate\"\r\n            className={\r\n              errorExistForField('taxRate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('taxRate') && (\r\n            <small className=\"text-danger\">{errorsForField('taxRate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('taxType')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TaxType\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"taxType\"\r\n            className={\r\n              errorExistForField('taxType')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('taxType') && (\r\n            <small className=\"text-danger\">{errorsForField('taxType')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesTaxRateUpdate = withFormik<Props, SalesTaxRateViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesTaxRateViewModel();\r\n    response.setProperties(\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.rowguid,\r\n      props.model!.salesTaxRateID,\r\n      props.model!.stateProvinceID,\r\n      props.model!.taxRate,\r\n      props.model!.taxType\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesTaxRateViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.salesTaxRateID == 0) {\r\n      errors.salesTaxRateID = 'Required';\r\n    }\r\n    if (values.stateProvinceID == 0) {\r\n      errors.stateProvinceID = 'Required';\r\n    }\r\n    if (values.taxRate == 0) {\r\n      errors.taxRate = 'Required';\r\n    }\r\n    if (values.taxType == 0) {\r\n      errors.taxType = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new SalesTaxRateMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'salestaxrates/' + values.salesTaxRateID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.SalesTaxRateClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'SalesTaxRateEdit',\r\n})(SalesTaxRateEditDisplay);\r\n\r\ninterface IParams {\r\n  salesTaxRateID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesTaxRateEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesTaxRateEditComponentState {\r\n  model?: SalesTaxRateViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesTaxRateEditComponent extends React.Component<\r\n  SalesTaxRateEditComponentProps,\r\n  SalesTaxRateEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salestaxrates/' +\r\n          this.props.match.params.salesTaxRateID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesTaxRateClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SalesTaxRateMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesTaxRateUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8a299c5a176c1cd8a473fa98ee32beb3</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SalesTaxRateMapper from './salesTaxRateMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport SalesTaxRateViewModel from './salesTaxRateViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface SalesTaxRateSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface SalesTaxRateSearchComponentState {\r\n  records: Array<SalesTaxRateViewModel>;\r\n  filteredRecords: Array<SalesTaxRateViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class SalesTaxRateSearchComponent extends React.Component<\r\n  SalesTaxRateSearchComponentProps,\r\n  SalesTaxRateSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.SalesTaxRateClientResponseModel>(),\r\n    filteredRecords: new Array<Api.SalesTaxRateClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.SalesTaxRateClientResponseModel) {\r\n    this.props.history.push('/salestaxrates/edit/' + row.salesTaxRateID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.SalesTaxRateClientResponseModel) {\r\n    this.props.history.push('/salestaxrates/' + row.salesTaxRateID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/salestaxrates/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.SalesTaxRateClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'salestaxrates/' + row.salesTaxRateID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'salestaxrates' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.SalesTaxRateClientResponseModel\r\n          >;\r\n          let viewModels: Array<SalesTaxRateViewModel> = [];\r\n          let mapper = new SalesTaxRateMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<SalesTaxRateViewModel>(),\r\n            filteredRecords: new Array<SalesTaxRateViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'SalesTaxRate',\r\n                columns: [\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesTaxRateID',\r\n                    accessor: 'salesTaxRateID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.salesTaxRateID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StateProvinceID',\r\n                    accessor: 'stateProvinceID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.stateProvinceID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TaxRate',\r\n                    accessor: 'taxRate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.taxRate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TaxType',\r\n                    accessor: 'taxType',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.taxType)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.SalesTaxRateClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.SalesTaxRateClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.SalesTaxRateClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f5897ddc549a8e4a8a74aac77ecba8ff</Hash>\r\n</Codenesium>*/","export default class SalesTerritoryViewModel {\r\n  costLastYear: number;\r\n  costYTD: number;\r\n  countryRegionCode: string;\r\n  modifiedDate: any;\r\n  name: string;\r\n  rowguid: any;\r\n  salesLastYear: number;\r\n  salesYTD: number;\r\n  territoryID: number;\r\n\r\n  constructor() {\r\n    this.costLastYear = 0;\r\n    this.costYTD = 0;\r\n    this.countryRegionCode = '';\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.rowguid = undefined;\r\n    this.salesLastYear = 0;\r\n    this.salesYTD = 0;\r\n    this.territoryID = 0;\r\n  }\r\n\r\n  setProperties(\r\n    costLastYear: number,\r\n    costYTD: number,\r\n    countryRegionCode: string,\r\n    modifiedDate: any,\r\n    name: string,\r\n    rowguid: any,\r\n    salesLastYear: number,\r\n    salesYTD: number,\r\n    territoryID: number\r\n  ): void {\r\n    this.costLastYear = costLastYear;\r\n    this.costYTD = costYTD;\r\n    this.countryRegionCode = countryRegionCode;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.rowguid = rowguid;\r\n    this.salesLastYear = salesLastYear;\r\n    this.salesYTD = salesYTD;\r\n    this.territoryID = territoryID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d3a4a0e9c8f0a6304a2378e9593257f6</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SalesTerritoryViewModel from './salesTerritoryViewModel';\r\n\r\nexport default class SalesTerritoryMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.SalesTerritoryClientResponseModel\r\n  ): SalesTerritoryViewModel {\r\n    let response = new SalesTerritoryViewModel();\r\n    response.setProperties(\r\n      dto.costLastYear,\r\n      dto.costYTD,\r\n      dto.countryRegionCode,\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.rowguid,\r\n      dto.salesLastYear,\r\n      dto.salesYTD,\r\n      dto.territoryID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: SalesTerritoryViewModel\r\n  ): Api.SalesTerritoryClientRequestModel {\r\n    let response = new Api.SalesTerritoryClientRequestModel();\r\n    response.setProperties(\r\n      model.costLastYear,\r\n      model.costYTD,\r\n      model.countryRegionCode,\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.rowguid,\r\n      model.salesLastYear,\r\n      model.salesYTD,\r\n      model.territoryID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7c8fd7a1274025b2eba735f5d0bf9081</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport SalesTerritoryMapper from './salesTerritoryMapper';\r\nimport SalesTerritoryViewModel from './salesTerritoryViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesTerritoryViewModel;\r\n}\r\n\r\nconst SalesTerritoryCreateDisplay: React.SFC<\r\n  FormikProps<SalesTerritoryViewModel>\r\n> = (props: FormikProps<SalesTerritoryViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.SalesTerritoryClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesTerritoryViewModel] &&\r\n      props.errors[name as keyof SalesTerritoryViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesTerritoryViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('costLastYear')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CostLastYear\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"costLastYear\"\r\n            className={\r\n              errorExistForField('costLastYear')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('costLastYear') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('costLastYear')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('costYTD')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CostYTD\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"costYTD\"\r\n            className={\r\n              errorExistForField('costYTD')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('costYTD') && (\r\n            <small className=\"text-danger\">{errorsForField('costYTD')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('countryRegionCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CountryRegionCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"countryRegionCode\"\r\n            className={\r\n              errorExistForField('countryRegionCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('countryRegionCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('countryRegionCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesLastYear')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesLastYear\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesLastYear\"\r\n            className={\r\n              errorExistForField('salesLastYear')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesLastYear') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesLastYear')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesYTD')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesYTD\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesYTD\"\r\n            className={\r\n              errorExistForField('salesYTD')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesYTD') && (\r\n            <small className=\"text-danger\">{errorsForField('salesYTD')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesTerritoryCreate = withFormik<Props, SalesTerritoryViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesTerritoryViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.costLastYear,\r\n        props.model!.costYTD,\r\n        props.model!.countryRegionCode,\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.rowguid,\r\n        props.model!.salesLastYear,\r\n        props.model!.salesYTD,\r\n        props.model!.territoryID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesTerritoryViewModel> = {};\r\n\r\n    if (values.costLastYear == 0) {\r\n      errors.costLastYear = 'Required';\r\n    }\r\n    if (values.costYTD == 0) {\r\n      errors.costYTD = 'Required';\r\n    }\r\n    if (values.countryRegionCode == '') {\r\n      errors.countryRegionCode = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.salesLastYear == 0) {\r\n      errors.salesLastYear = 'Required';\r\n    }\r\n    if (values.salesYTD == 0) {\r\n      errors.salesYTD = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new SalesTerritoryMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'salesterritories',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SalesTerritoryClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'SalesTerritoryCreate',\r\n})(SalesTerritoryCreateDisplay);\r\n\r\ninterface SalesTerritoryCreateComponentProps {}\r\n\r\ninterface SalesTerritoryCreateComponentState {\r\n  model?: SalesTerritoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesTerritoryCreateComponent extends React.Component<\r\n  SalesTerritoryCreateComponentProps,\r\n  SalesTerritoryCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesTerritoryCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>265e6adb22f63f90c30814e4fc0a7e80</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesTerritoryMapper from './salesTerritoryMapper';\r\nimport SalesTerritoryViewModel from './salesTerritoryViewModel';\r\n\r\ninterface Props {\r\n  model?: SalesTerritoryViewModel;\r\n}\r\n\r\nconst SalesTerritoryDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"costLastYear\" className={'col-sm-2 col-form-label'}>\r\n          CostLastYear\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.costLastYear)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"costYTD\" className={'col-sm-2 col-form-label'}>\r\n          CostYTD\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.costYTD)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"countryRegionCode\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          CountryRegionCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.countryRegionCode)}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesLastYear\" className={'col-sm-2 col-form-label'}>\r\n          SalesLastYear\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesLastYear)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesYTD\" className={'col-sm-2 col-form-label'}>\r\n          SalesYTD\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesYTD)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"territoryID\" className={'col-sm-2 col-form-label'}>\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.territoryID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  territoryID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesTerritoryDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesTerritoryDetailComponentState {\r\n  model?: SalesTerritoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesTerritoryDetailComponent extends React.Component<\r\n  SalesTerritoryDetailComponentProps,\r\n  SalesTerritoryDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salesterritories/' +\r\n          this.props.match.params.territoryID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesTerritoryClientResponseModel;\r\n\r\n          let mapper = new SalesTerritoryMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesTerritoryDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>54da91d7c7769576263ef898887c55ad</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SalesTerritoryViewModel from './salesTerritoryViewModel';\r\nimport SalesTerritoryMapper from './salesTerritoryMapper';\r\n\r\ninterface Props {\r\n  model?: SalesTerritoryViewModel;\r\n}\r\n\r\nconst SalesTerritoryEditDisplay = (\r\n  props: FormikProps<SalesTerritoryViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.SalesTerritoryClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SalesTerritoryViewModel] &&\r\n      props.errors[name as keyof SalesTerritoryViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SalesTerritoryViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('costLastYear')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CostLastYear\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"costLastYear\"\r\n            className={\r\n              errorExistForField('costLastYear')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('costLastYear') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('costLastYear')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('costYTD')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CostYTD\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"costYTD\"\r\n            className={\r\n              errorExistForField('costYTD')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('costYTD') && (\r\n            <small className=\"text-danger\">{errorsForField('costYTD')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('countryRegionCode')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CountryRegionCode\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"countryRegionCode\"\r\n            className={\r\n              errorExistForField('countryRegionCode')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('countryRegionCode') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('countryRegionCode')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesLastYear')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesLastYear\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesLastYear\"\r\n            className={\r\n              errorExistForField('salesLastYear')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesLastYear') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesLastYear')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesYTD')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesYTD\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesYTD\"\r\n            className={\r\n              errorExistForField('salesYTD')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesYTD') && (\r\n            <small className=\"text-danger\">{errorsForField('salesYTD')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('territoryID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TerritoryID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"territoryID\"\r\n            className={\r\n              errorExistForField('territoryID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('territoryID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('territoryID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SalesTerritoryUpdate = withFormik<Props, SalesTerritoryViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SalesTerritoryViewModel();\r\n    response.setProperties(\r\n      props.model!.costLastYear,\r\n      props.model!.costYTD,\r\n      props.model!.countryRegionCode,\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.rowguid,\r\n      props.model!.salesLastYear,\r\n      props.model!.salesYTD,\r\n      props.model!.territoryID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<SalesTerritoryViewModel> = {};\r\n\r\n    if (values.costLastYear == 0) {\r\n      errors.costLastYear = 'Required';\r\n    }\r\n    if (values.costYTD == 0) {\r\n      errors.costYTD = 'Required';\r\n    }\r\n    if (values.countryRegionCode == '') {\r\n      errors.countryRegionCode = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.salesLastYear == 0) {\r\n      errors.salesLastYear = 'Required';\r\n    }\r\n    if (values.salesYTD == 0) {\r\n      errors.salesYTD = 'Required';\r\n    }\r\n    if (values.territoryID == 0) {\r\n      errors.territoryID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new SalesTerritoryMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'salesterritories/' + values.territoryID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.SalesTerritoryClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'SalesTerritoryEdit',\r\n})(SalesTerritoryEditDisplay);\r\n\r\ninterface IParams {\r\n  territoryID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SalesTerritoryEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SalesTerritoryEditComponentState {\r\n  model?: SalesTerritoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SalesTerritoryEditComponent extends React.Component<\r\n  SalesTerritoryEditComponentProps,\r\n  SalesTerritoryEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'salesterritories/' +\r\n          this.props.match.params.territoryID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SalesTerritoryClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SalesTerritoryMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SalesTerritoryUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>147a5ef3f46ca6563a02eb69c8f2105e</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SalesTerritoryMapper from './salesTerritoryMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport SalesTerritoryViewModel from './salesTerritoryViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface SalesTerritorySearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface SalesTerritorySearchComponentState {\r\n  records: Array<SalesTerritoryViewModel>;\r\n  filteredRecords: Array<SalesTerritoryViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class SalesTerritorySearchComponent extends React.Component<\r\n  SalesTerritorySearchComponentProps,\r\n  SalesTerritorySearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.SalesTerritoryClientResponseModel>(),\r\n    filteredRecords: new Array<Api.SalesTerritoryClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.SalesTerritoryClientResponseModel) {\r\n    this.props.history.push('/salesterritories/edit/' + row.territoryID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.SalesTerritoryClientResponseModel) {\r\n    this.props.history.push('/salesterritories/' + row.territoryID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/salesterritories/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.SalesTerritoryClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'salesterritories/' + row.territoryID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'salesterritories' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.SalesTerritoryClientResponseModel\r\n          >;\r\n          let viewModels: Array<SalesTerritoryViewModel> = [];\r\n          let mapper = new SalesTerritoryMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<SalesTerritoryViewModel>(),\r\n            filteredRecords: new Array<SalesTerritoryViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'SalesTerritory',\r\n                columns: [\r\n                  {\r\n                    Header: 'CostLastYear',\r\n                    accessor: 'costLastYear',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.costLastYear)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CostYTD',\r\n                    accessor: 'costYTD',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.costYTD)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CountryRegionCode',\r\n                    accessor: 'countryRegionCode',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.countryRegionCode)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesLastYear',\r\n                    accessor: 'salesLastYear',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.salesLastYear)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesYTD',\r\n                    accessor: 'salesYTD',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.salesYTD)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TerritoryID',\r\n                    accessor: 'territoryID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.territoryID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.SalesTerritoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.SalesTerritoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.SalesTerritoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>afe7d6bfbc9c071040f0f6a48155df1f</Hash>\r\n</Codenesium>*/","export default class ShoppingCartItemViewModel {\r\n  dateCreated: any;\r\n  modifiedDate: any;\r\n  productID: number;\r\n  quantity: number;\r\n  shoppingCartID: string;\r\n  shoppingCartItemID: number;\r\n\r\n  constructor() {\r\n    this.dateCreated = undefined;\r\n    this.modifiedDate = undefined;\r\n    this.productID = 0;\r\n    this.quantity = 0;\r\n    this.shoppingCartID = '';\r\n    this.shoppingCartItemID = 0;\r\n  }\r\n\r\n  setProperties(\r\n    dateCreated: any,\r\n    modifiedDate: any,\r\n    productID: number,\r\n    quantity: number,\r\n    shoppingCartID: string,\r\n    shoppingCartItemID: number\r\n  ): void {\r\n    this.dateCreated = dateCreated;\r\n    this.modifiedDate = modifiedDate;\r\n    this.productID = productID;\r\n    this.quantity = quantity;\r\n    this.shoppingCartID = shoppingCartID;\r\n    this.shoppingCartItemID = shoppingCartItemID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>8ce26e84ae34225984b5e036b9939610</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport ShoppingCartItemViewModel from './shoppingCartItemViewModel';\r\n\r\nexport default class ShoppingCartItemMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.ShoppingCartItemClientResponseModel\r\n  ): ShoppingCartItemViewModel {\r\n    let response = new ShoppingCartItemViewModel();\r\n    response.setProperties(\r\n      dto.dateCreated,\r\n      dto.modifiedDate,\r\n      dto.productID,\r\n      dto.quantity,\r\n      dto.shoppingCartID,\r\n      dto.shoppingCartItemID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: ShoppingCartItemViewModel\r\n  ): Api.ShoppingCartItemClientRequestModel {\r\n    let response = new Api.ShoppingCartItemClientRequestModel();\r\n    response.setProperties(\r\n      model.dateCreated,\r\n      model.modifiedDate,\r\n      model.productID,\r\n      model.quantity,\r\n      model.shoppingCartID,\r\n      model.shoppingCartItemID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2158e1e720c87ab0cd3243223945a37f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport ShoppingCartItemMapper from './shoppingCartItemMapper';\r\nimport ShoppingCartItemViewModel from './shoppingCartItemViewModel';\r\n\r\ninterface Props {\r\n  model?: ShoppingCartItemViewModel;\r\n}\r\n\r\nconst ShoppingCartItemCreateDisplay: React.SFC<\r\n  FormikProps<ShoppingCartItemViewModel>\r\n> = (props: FormikProps<ShoppingCartItemViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.ShoppingCartItemClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ShoppingCartItemViewModel] &&\r\n      props.errors[name as keyof ShoppingCartItemViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ShoppingCartItemViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('dateCreated')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DateCreated\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"dateCreated\"\r\n            className={\r\n              errorExistForField('dateCreated')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('dateCreated') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('dateCreated')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('quantity')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Quantity\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"quantity\"\r\n            className={\r\n              errorExistForField('quantity')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('quantity') && (\r\n            <small className=\"text-danger\">{errorsForField('quantity')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shoppingCartID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShoppingCartID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shoppingCartID\"\r\n            className={\r\n              errorExistForField('shoppingCartID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shoppingCartID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shoppingCartID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ShoppingCartItemCreate = withFormik<Props, ShoppingCartItemViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ShoppingCartItemViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.dateCreated,\r\n        props.model!.modifiedDate,\r\n        props.model!.productID,\r\n        props.model!.quantity,\r\n        props.model!.shoppingCartID,\r\n        props.model!.shoppingCartItemID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<ShoppingCartItemViewModel> = {};\r\n\r\n    if (values.dateCreated == undefined) {\r\n      errors.dateCreated = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.productID == 0) {\r\n      errors.productID = 'Required';\r\n    }\r\n    if (values.quantity == 0) {\r\n      errors.quantity = 'Required';\r\n    }\r\n    if (values.shoppingCartID == '') {\r\n      errors.shoppingCartID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new ShoppingCartItemMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'shoppingcartitems',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.ShoppingCartItemClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'ShoppingCartItemCreate',\r\n})(ShoppingCartItemCreateDisplay);\r\n\r\ninterface ShoppingCartItemCreateComponentProps {}\r\n\r\ninterface ShoppingCartItemCreateComponentState {\r\n  model?: ShoppingCartItemViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ShoppingCartItemCreateComponent extends React.Component<\r\n  ShoppingCartItemCreateComponentProps,\r\n  ShoppingCartItemCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ShoppingCartItemCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>09f658986db1b3f5448d834dca1e0546</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ShoppingCartItemMapper from './shoppingCartItemMapper';\r\nimport ShoppingCartItemViewModel from './shoppingCartItemViewModel';\r\n\r\ninterface Props {\r\n  model?: ShoppingCartItemViewModel;\r\n}\r\n\r\nconst ShoppingCartItemDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"dateCreated\" className={'col-sm-2 col-form-label'}>\r\n          DateCreated\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.dateCreated)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"productID\" className={'col-sm-2 col-form-label'}>\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.productID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"quantity\" className={'col-sm-2 col-form-label'}>\r\n          Quantity\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.quantity)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"shoppingCartID\" className={'col-sm-2 col-form-label'}>\r\n          ShoppingCartID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.shoppingCartID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"shoppingCartItemID\"\r\n          className={'col-sm-2 col-form-label'}\r\n        >\r\n          ShoppingCartItemID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          {String(model.model!.shoppingCartItemID)}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  shoppingCartItemID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ShoppingCartItemDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ShoppingCartItemDetailComponentState {\r\n  model?: ShoppingCartItemViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ShoppingCartItemDetailComponent extends React.Component<\r\n  ShoppingCartItemDetailComponentProps,\r\n  ShoppingCartItemDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'shoppingcartitems/' +\r\n          this.props.match.params.shoppingCartItemID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ShoppingCartItemClientResponseModel;\r\n\r\n          let mapper = new ShoppingCartItemMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ShoppingCartItemDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>68f2474d1248b78f4ca725cccdaa0649</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport ShoppingCartItemViewModel from './shoppingCartItemViewModel';\r\nimport ShoppingCartItemMapper from './shoppingCartItemMapper';\r\n\r\ninterface Props {\r\n  model?: ShoppingCartItemViewModel;\r\n}\r\n\r\nconst ShoppingCartItemEditDisplay = (\r\n  props: FormikProps<ShoppingCartItemViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.ShoppingCartItemClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof ShoppingCartItemViewModel] &&\r\n      props.errors[name as keyof ShoppingCartItemViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof ShoppingCartItemViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('dateCreated')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DateCreated\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"dateCreated\"\r\n            className={\r\n              errorExistForField('dateCreated')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('dateCreated') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('dateCreated')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('productID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ProductID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"productID\"\r\n            className={\r\n              errorExistForField('productID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('productID') && (\r\n            <small className=\"text-danger\">{errorsForField('productID')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('quantity')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Quantity\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"quantity\"\r\n            className={\r\n              errorExistForField('quantity')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('quantity') && (\r\n            <small className=\"text-danger\">{errorsForField('quantity')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shoppingCartID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShoppingCartID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shoppingCartID\"\r\n            className={\r\n              errorExistForField('shoppingCartID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shoppingCartID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shoppingCartID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('shoppingCartItemID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ShoppingCartItemID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"shoppingCartItemID\"\r\n            className={\r\n              errorExistForField('shoppingCartItemID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('shoppingCartItemID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('shoppingCartItemID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst ShoppingCartItemUpdate = withFormik<Props, ShoppingCartItemViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new ShoppingCartItemViewModel();\r\n    response.setProperties(\r\n      props.model!.dateCreated,\r\n      props.model!.modifiedDate,\r\n      props.model!.productID,\r\n      props.model!.quantity,\r\n      props.model!.shoppingCartID,\r\n      props.model!.shoppingCartItemID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<ShoppingCartItemViewModel> = {};\r\n\r\n    if (values.dateCreated == undefined) {\r\n      errors.dateCreated = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.productID == 0) {\r\n      errors.productID = 'Required';\r\n    }\r\n    if (values.quantity == 0) {\r\n      errors.quantity = 'Required';\r\n    }\r\n    if (values.shoppingCartID == '') {\r\n      errors.shoppingCartID = 'Required';\r\n    }\r\n    if (values.shoppingCartItemID == 0) {\r\n      errors.shoppingCartItemID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new ShoppingCartItemMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'shoppingcartitems/' + values.shoppingCartItemID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.ShoppingCartItemClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'ShoppingCartItemEdit',\r\n})(ShoppingCartItemEditDisplay);\r\n\r\ninterface IParams {\r\n  shoppingCartItemID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface ShoppingCartItemEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface ShoppingCartItemEditComponentState {\r\n  model?: ShoppingCartItemViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class ShoppingCartItemEditComponent extends React.Component<\r\n  ShoppingCartItemEditComponentProps,\r\n  ShoppingCartItemEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'shoppingcartitems/' +\r\n          this.props.match.params.shoppingCartItemID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.ShoppingCartItemClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new ShoppingCartItemMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <ShoppingCartItemUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>00b568102746d6d579870c36203d2887</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport ShoppingCartItemMapper from './shoppingCartItemMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport ShoppingCartItemViewModel from './shoppingCartItemViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface ShoppingCartItemSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface ShoppingCartItemSearchComponentState {\r\n  records: Array<ShoppingCartItemViewModel>;\r\n  filteredRecords: Array<ShoppingCartItemViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class ShoppingCartItemSearchComponent extends React.Component<\r\n  ShoppingCartItemSearchComponentProps,\r\n  ShoppingCartItemSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.ShoppingCartItemClientResponseModel>(),\r\n    filteredRecords: new Array<Api.ShoppingCartItemClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.ShoppingCartItemClientResponseModel) {\r\n    this.props.history.push(\r\n      '/shoppingcartitems/edit/' + row.shoppingCartItemID\r\n    );\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.ShoppingCartItemClientResponseModel) {\r\n    this.props.history.push('/shoppingcartitems/' + row.shoppingCartItemID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/shoppingcartitems/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.ShoppingCartItemClientResponseModel) {\r\n    axios\r\n      .delete(\r\n        Constants.ApiUrl + 'shoppingcartitems/' + row.shoppingCartItemID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'shoppingcartitems' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.ShoppingCartItemClientResponseModel\r\n          >;\r\n          let viewModels: Array<ShoppingCartItemViewModel> = [];\r\n          let mapper = new ShoppingCartItemMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<ShoppingCartItemViewModel>(),\r\n            filteredRecords: new Array<ShoppingCartItemViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'ShoppingCartItem',\r\n                columns: [\r\n                  {\r\n                    Header: 'DateCreated',\r\n                    accessor: 'dateCreated',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.dateCreated)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ProductID',\r\n                    accessor: 'productID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.productID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Quantity',\r\n                    accessor: 'quantity',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.quantity)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShoppingCartID',\r\n                    accessor: 'shoppingCartID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.shoppingCartID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ShoppingCartItemID',\r\n                    accessor: 'shoppingCartItemID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.shoppingCartItemID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.ShoppingCartItemClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.ShoppingCartItemClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.ShoppingCartItemClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>958bc5c8dc565fcad24aa298c5a54829</Hash>\r\n</Codenesium>*/","export default class SpecialOfferViewModel {\r\n  category: string;\r\n  description: string;\r\n  discountPct: number;\r\n  endDate: any;\r\n  maxQty: any;\r\n  minQty: number;\r\n  modifiedDate: any;\r\n  rowguid: any;\r\n  specialOfferID: number;\r\n  startDate: any;\r\n\r\n  constructor() {\r\n    this.category = '';\r\n    this.description = '';\r\n    this.discountPct = 0;\r\n    this.endDate = undefined;\r\n    this.maxQty = undefined;\r\n    this.minQty = 0;\r\n    this.modifiedDate = undefined;\r\n    this.rowguid = undefined;\r\n    this.specialOfferID = 0;\r\n    this.startDate = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    category: string,\r\n    description: string,\r\n    discountPct: number,\r\n    endDate: any,\r\n    maxQty: any,\r\n    minQty: number,\r\n    modifiedDate: any,\r\n    rowguid: any,\r\n    specialOfferID: number,\r\n    startDate: any\r\n  ): void {\r\n    this.category = category;\r\n    this.description = description;\r\n    this.discountPct = discountPct;\r\n    this.endDate = endDate;\r\n    this.maxQty = maxQty;\r\n    this.minQty = minQty;\r\n    this.modifiedDate = modifiedDate;\r\n    this.rowguid = rowguid;\r\n    this.specialOfferID = specialOfferID;\r\n    this.startDate = startDate;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d33671cab802a1221fd45478b4daf310</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport SpecialOfferViewModel from './specialOfferViewModel';\r\n\r\nexport default class SpecialOfferMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.SpecialOfferClientResponseModel\r\n  ): SpecialOfferViewModel {\r\n    let response = new SpecialOfferViewModel();\r\n    response.setProperties(\r\n      dto.category,\r\n      dto.description,\r\n      dto.discountPct,\r\n      dto.endDate,\r\n      dto.maxQty,\r\n      dto.minQty,\r\n      dto.modifiedDate,\r\n      dto.rowguid,\r\n      dto.specialOfferID,\r\n      dto.startDate\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: SpecialOfferViewModel\r\n  ): Api.SpecialOfferClientRequestModel {\r\n    let response = new Api.SpecialOfferClientRequestModel();\r\n    response.setProperties(\r\n      model.category,\r\n      model.description,\r\n      model.discountPct,\r\n      model.endDate,\r\n      model.maxQty,\r\n      model.minQty,\r\n      model.modifiedDate,\r\n      model.rowguid,\r\n      model.specialOfferID,\r\n      model.startDate\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>99bff50b00a9823996c37ec4dae79479</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport SpecialOfferMapper from './specialOfferMapper';\r\nimport SpecialOfferViewModel from './specialOfferViewModel';\r\n\r\ninterface Props {\r\n  model?: SpecialOfferViewModel;\r\n}\r\n\r\nconst SpecialOfferCreateDisplay: React.SFC<\r\n  FormikProps<SpecialOfferViewModel>\r\n> = (props: FormikProps<SpecialOfferViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.SpecialOfferClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SpecialOfferViewModel] &&\r\n      props.errors[name as keyof SpecialOfferViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SpecialOfferViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('category')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Category\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"category\"\r\n            className={\r\n              errorExistForField('category')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('category') && (\r\n            <small className=\"text-danger\">{errorsForField('category')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('description')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Description\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"description\"\r\n            className={\r\n              errorExistForField('description')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('description') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('description')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('discountPct')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DiscountPct\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"discountPct\"\r\n            className={\r\n              errorExistForField('discountPct')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('discountPct') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('discountPct')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endDate\"\r\n            className={\r\n              errorExistForField('endDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endDate') && (\r\n            <small className=\"text-danger\">{errorsForField('endDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('maxQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MaxQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"maxQty\"\r\n            className={\r\n              errorExistForField('maxQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('maxQty') && (\r\n            <small className=\"text-danger\">{errorsForField('maxQty')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('minQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MinQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"minQty\"\r\n            className={\r\n              errorExistForField('minQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('minQty') && (\r\n            <small className=\"text-danger\">{errorsForField('minQty')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('startDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"startDate\"\r\n            className={\r\n              errorExistForField('startDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('startDate') && (\r\n            <small className=\"text-danger\">{errorsForField('startDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SpecialOfferCreate = withFormik<Props, SpecialOfferViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SpecialOfferViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.category,\r\n        props.model!.description,\r\n        props.model!.discountPct,\r\n        props.model!.endDate,\r\n        props.model!.maxQty,\r\n        props.model!.minQty,\r\n        props.model!.modifiedDate,\r\n        props.model!.rowguid,\r\n        props.model!.specialOfferID,\r\n        props.model!.startDate\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<SpecialOfferViewModel> = {};\r\n\r\n    if (values.category == '') {\r\n      errors.category = 'Required';\r\n    }\r\n    if (values.description == '') {\r\n      errors.description = 'Required';\r\n    }\r\n    if (values.discountPct == 0) {\r\n      errors.discountPct = 'Required';\r\n    }\r\n    if (values.endDate == undefined) {\r\n      errors.endDate = 'Required';\r\n    }\r\n    if (values.minQty == 0) {\r\n      errors.minQty = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.startDate == undefined) {\r\n      errors.startDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new SpecialOfferMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'specialoffers',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.SpecialOfferClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'SpecialOfferCreate',\r\n})(SpecialOfferCreateDisplay);\r\n\r\ninterface SpecialOfferCreateComponentProps {}\r\n\r\ninterface SpecialOfferCreateComponentState {\r\n  model?: SpecialOfferViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SpecialOfferCreateComponent extends React.Component<\r\n  SpecialOfferCreateComponentProps,\r\n  SpecialOfferCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SpecialOfferCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>65432c5a6561bb5ac92c02395dc8614f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SpecialOfferMapper from './specialOfferMapper';\r\nimport SpecialOfferViewModel from './specialOfferViewModel';\r\n\r\ninterface Props {\r\n  model?: SpecialOfferViewModel;\r\n}\r\n\r\nconst SpecialOfferDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"category\" className={'col-sm-2 col-form-label'}>\r\n          Category\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.category)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"description\" className={'col-sm-2 col-form-label'}>\r\n          Description\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.description)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"discountPct\" className={'col-sm-2 col-form-label'}>\r\n          DiscountPct\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.discountPct)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"endDate\" className={'col-sm-2 col-form-label'}>\r\n          EndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.endDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"maxQty\" className={'col-sm-2 col-form-label'}>\r\n          MaxQty\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.maxQty)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"minQty\" className={'col-sm-2 col-form-label'}>\r\n          MinQty\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.minQty)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"specialOfferID\" className={'col-sm-2 col-form-label'}>\r\n          SpecialOfferID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.specialOfferID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"startDate\" className={'col-sm-2 col-form-label'}>\r\n          StartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.startDate)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  specialOfferID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SpecialOfferDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SpecialOfferDetailComponentState {\r\n  model?: SpecialOfferViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SpecialOfferDetailComponent extends React.Component<\r\n  SpecialOfferDetailComponentProps,\r\n  SpecialOfferDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'specialoffers/' +\r\n          this.props.match.params.specialOfferID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SpecialOfferClientResponseModel;\r\n\r\n          let mapper = new SpecialOfferMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SpecialOfferDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0cf3bba344ad5c5e16ac8f87bbaa370a</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport SpecialOfferViewModel from './specialOfferViewModel';\r\nimport SpecialOfferMapper from './specialOfferMapper';\r\n\r\ninterface Props {\r\n  model?: SpecialOfferViewModel;\r\n}\r\n\r\nconst SpecialOfferEditDisplay = (props: FormikProps<SpecialOfferViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.SpecialOfferClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof SpecialOfferViewModel] &&\r\n      props.errors[name as keyof SpecialOfferViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof SpecialOfferViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('category')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Category\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"category\"\r\n            className={\r\n              errorExistForField('category')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('category') && (\r\n            <small className=\"text-danger\">{errorsForField('category')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('description')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Description\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"description\"\r\n            className={\r\n              errorExistForField('description')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('description') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('description')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('discountPct')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DiscountPct\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"discountPct\"\r\n            className={\r\n              errorExistForField('discountPct')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('discountPct') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('discountPct')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('endDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EndDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"endDate\"\r\n            className={\r\n              errorExistForField('endDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('endDate') && (\r\n            <small className=\"text-danger\">{errorsForField('endDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('maxQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MaxQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"maxQty\"\r\n            className={\r\n              errorExistForField('maxQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('maxQty') && (\r\n            <small className=\"text-danger\">{errorsForField('maxQty')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('minQty')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          MinQty\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"minQty\"\r\n            className={\r\n              errorExistForField('minQty')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('minQty') && (\r\n            <small className=\"text-danger\">{errorsForField('minQty')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('specialOfferID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SpecialOfferID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"specialOfferID\"\r\n            className={\r\n              errorExistForField('specialOfferID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('specialOfferID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('specialOfferID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('startDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          StartDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"startDate\"\r\n            className={\r\n              errorExistForField('startDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('startDate') && (\r\n            <small className=\"text-danger\">{errorsForField('startDate')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst SpecialOfferUpdate = withFormik<Props, SpecialOfferViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new SpecialOfferViewModel();\r\n    response.setProperties(\r\n      props.model!.category,\r\n      props.model!.description,\r\n      props.model!.discountPct,\r\n      props.model!.endDate,\r\n      props.model!.maxQty,\r\n      props.model!.minQty,\r\n      props.model!.modifiedDate,\r\n      props.model!.rowguid,\r\n      props.model!.specialOfferID,\r\n      props.model!.startDate\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<SpecialOfferViewModel> = {};\r\n\r\n    if (values.category == '') {\r\n      errors.category = 'Required';\r\n    }\r\n    if (values.description == '') {\r\n      errors.description = 'Required';\r\n    }\r\n    if (values.discountPct == 0) {\r\n      errors.discountPct = 'Required';\r\n    }\r\n    if (values.endDate == undefined) {\r\n      errors.endDate = 'Required';\r\n    }\r\n    if (values.minQty == 0) {\r\n      errors.minQty = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n    if (values.specialOfferID == 0) {\r\n      errors.specialOfferID = 'Required';\r\n    }\r\n    if (values.startDate == undefined) {\r\n      errors.startDate = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new SpecialOfferMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'specialoffers/' + values.specialOfferID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.SpecialOfferClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'SpecialOfferEdit',\r\n})(SpecialOfferEditDisplay);\r\n\r\ninterface IParams {\r\n  specialOfferID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface SpecialOfferEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface SpecialOfferEditComponentState {\r\n  model?: SpecialOfferViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class SpecialOfferEditComponent extends React.Component<\r\n  SpecialOfferEditComponentProps,\r\n  SpecialOfferEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl +\r\n          'specialoffers/' +\r\n          this.props.match.params.specialOfferID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.SpecialOfferClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new SpecialOfferMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <SpecialOfferUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ea0fca29aee015f846df193eb71fd328</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport SpecialOfferMapper from './specialOfferMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport SpecialOfferViewModel from './specialOfferViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface SpecialOfferSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface SpecialOfferSearchComponentState {\r\n  records: Array<SpecialOfferViewModel>;\r\n  filteredRecords: Array<SpecialOfferViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class SpecialOfferSearchComponent extends React.Component<\r\n  SpecialOfferSearchComponentProps,\r\n  SpecialOfferSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.SpecialOfferClientResponseModel>(),\r\n    filteredRecords: new Array<Api.SpecialOfferClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.SpecialOfferClientResponseModel) {\r\n    this.props.history.push('/specialoffers/edit/' + row.specialOfferID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.SpecialOfferClientResponseModel) {\r\n    this.props.history.push('/specialoffers/' + row.specialOfferID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/specialoffers/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.SpecialOfferClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'specialoffers/' + row.specialOfferID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'specialoffers' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<\r\n            Api.SpecialOfferClientResponseModel\r\n          >;\r\n          let viewModels: Array<SpecialOfferViewModel> = [];\r\n          let mapper = new SpecialOfferMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<SpecialOfferViewModel>(),\r\n            filteredRecords: new Array<SpecialOfferViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'SpecialOffer',\r\n                columns: [\r\n                  {\r\n                    Header: 'Category',\r\n                    accessor: 'category',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.category)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Description',\r\n                    accessor: 'description',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.description)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'DiscountPct',\r\n                    accessor: 'discountPct',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.discountPct)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'EndDate',\r\n                    accessor: 'endDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.endDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'MaxQty',\r\n                    accessor: 'maxQty',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.maxQty)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'MinQty',\r\n                    accessor: 'minQty',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.minQty)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SpecialOfferID',\r\n                    accessor: 'specialOfferID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.specialOfferID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'StartDate',\r\n                    accessor: 'startDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.startDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.SpecialOfferClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.SpecialOfferClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.SpecialOfferClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>995a62098d16c6a1f0cced7716303bf3</Hash>\r\n</Codenesium>*/","export default class StoreViewModel {\r\n  businessEntityID: number;\r\n  demographic: string;\r\n  modifiedDate: any;\r\n  name: string;\r\n  rowguid: any;\r\n  salesPersonID: any;\r\n  salesPersonIDEntity: string;\r\n\r\n  constructor() {\r\n    this.businessEntityID = 0;\r\n    this.demographic = '';\r\n    this.modifiedDate = undefined;\r\n    this.name = '';\r\n    this.rowguid = undefined;\r\n    this.salesPersonID = undefined;\r\n    this.salesPersonIDEntity = '';\r\n  }\r\n\r\n  setProperties(\r\n    businessEntityID: number,\r\n    demographic: string,\r\n    modifiedDate: any,\r\n    name: string,\r\n    rowguid: any,\r\n    salesPersonID: any\r\n  ): void {\r\n    this.businessEntityID = businessEntityID;\r\n    this.demographic = demographic;\r\n    this.modifiedDate = modifiedDate;\r\n    this.name = name;\r\n    this.rowguid = rowguid;\r\n    this.salesPersonID = salesPersonID;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6fdd977477fb2448457f69d150fa1ebf</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport StoreViewModel from './storeViewModel';\r\n\r\nexport default class StoreMapper {\r\n  mapApiResponseToViewModel(dto: Api.StoreClientResponseModel): StoreViewModel {\r\n    let response = new StoreViewModel();\r\n    response.setProperties(\r\n      dto.businessEntityID,\r\n      dto.demographic,\r\n      dto.modifiedDate,\r\n      dto.name,\r\n      dto.rowguid,\r\n      dto.salesPersonID\r\n    );\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: StoreViewModel): Api.StoreClientRequestModel {\r\n    let response = new Api.StoreClientRequestModel();\r\n    response.setProperties(\r\n      model.businessEntityID,\r\n      model.demographic,\r\n      model.modifiedDate,\r\n      model.name,\r\n      model.rowguid,\r\n      model.salesPersonID\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>ef3dec104976bd9107f66091594329ed</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport * as Api from '../../api/models';\r\nimport Constants from '../../constants';\r\nimport StoreMapper from './storeMapper';\r\nimport StoreViewModel from './storeViewModel';\r\n\r\ninterface Props {\r\n  model?: StoreViewModel;\r\n}\r\n\r\nconst StoreCreateDisplay: React.SFC<FormikProps<StoreViewModel>> = (\r\n  props: FormikProps<StoreViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.StoreClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof StoreViewModel] &&\r\n      props.errors[name as keyof StoreViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof StoreViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('demographic')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Demographics\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"demographic\"\r\n            className={\r\n              errorExistForField('demographic')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('demographic') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('demographic')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesPersonID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesPersonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesPersonID\"\r\n            className={\r\n              errorExistForField('salesPersonID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesPersonID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesPersonID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst StoreCreate = withFormik<Props, StoreViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new StoreViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.businessEntityID,\r\n        props.model!.demographic,\r\n        props.model!.modifiedDate,\r\n        props.model!.name,\r\n        props.model!.rowguid,\r\n        props.model!.salesPersonID\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<StoreViewModel> = {};\r\n\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new StoreMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiUrl + 'stores',\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.StoreClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'StoreCreate',\r\n})(StoreCreateDisplay);\r\n\r\ninterface StoreCreateComponentProps {}\r\n\r\ninterface StoreCreateComponentState {\r\n  model?: StoreViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class StoreCreateComponent extends React.Component<\r\n  StoreCreateComponentProps,\r\n  StoreCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <StoreCreate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6d3456ee8e86124507a249d2122dcd43</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport StoreMapper from './storeMapper';\r\nimport StoreViewModel from './storeViewModel';\r\n\r\ninterface Props {\r\n  model?: StoreViewModel;\r\n}\r\n\r\nconst StoreDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"businessEntityID\" className={'col-sm-2 col-form-label'}>\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.businessEntityID)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"demographic\" className={'col-sm-2 col-form-label'}>\r\n          Demographics\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.demographic)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"modifiedDate\" className={'col-sm-2 col-form-label'}>\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.modifiedDate)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"name\" className={'col-sm-2 col-form-label'}>\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.name)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"rowguid\" className={'col-sm-2 col-form-label'}>\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.rowguid)}</div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"salesPersonID\" className={'col-sm-2 col-form-label'}>\r\n          SalesPersonID\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.salesPersonID)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface StoreDetailComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface StoreDetailComponentState {\r\n  model?: StoreViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class StoreDetailComponent extends React.Component<\r\n  StoreDetailComponentProps,\r\n  StoreDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'stores/' + this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.StoreClientResponseModel;\r\n\r\n          let mapper = new StoreMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <StoreDetailDisplay model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>5235e1f6240743c41423549016c04bf5</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport Constants from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport StoreViewModel from './storeViewModel';\r\nimport StoreMapper from './storeMapper';\r\n\r\ninterface Props {\r\n  model?: StoreViewModel;\r\n}\r\n\r\nconst StoreEditDisplay = (props: FormikProps<StoreViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.StoreClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof StoreViewModel] &&\r\n      props.errors[name as keyof StoreViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof StoreViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('businessEntityID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BusinessEntityID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"businessEntityID\"\r\n            className={\r\n              errorExistForField('businessEntityID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('businessEntityID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('businessEntityID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('demographic')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Demographics\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"demographic\"\r\n            className={\r\n              errorExistForField('demographic')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('demographic') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('demographic')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('modifiedDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ModifiedDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"modifiedDate\"\r\n            className={\r\n              errorExistForField('modifiedDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('modifiedDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('modifiedDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('name')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Name\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"name\"\r\n            className={\r\n              errorExistForField('name')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('name') && (\r\n            <small className=\"text-danger\">{errorsForField('name')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('rowguid')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Rowguid\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"rowguid\"\r\n            className={\r\n              errorExistForField('rowguid')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('rowguid') && (\r\n            <small className=\"text-danger\">{errorsForField('rowguid')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('salesPersonID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          SalesPersonID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"salesPersonID\"\r\n            className={\r\n              errorExistForField('salesPersonID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('salesPersonID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('salesPersonID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst StoreUpdate = withFormik<Props, StoreViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new StoreViewModel();\r\n    response.setProperties(\r\n      props.model!.businessEntityID,\r\n      props.model!.demographic,\r\n      props.model!.modifiedDate,\r\n      props.model!.name,\r\n      props.model!.rowguid,\r\n      props.model!.salesPersonID\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<StoreViewModel> = {};\r\n\r\n    if (values.businessEntityID == 0) {\r\n      errors.businessEntityID = 'Required';\r\n    }\r\n    if (values.modifiedDate == undefined) {\r\n      errors.modifiedDate = 'Required';\r\n    }\r\n    if (values.name == '') {\r\n      errors.name = 'Required';\r\n    }\r\n    if (values.rowguid == undefined) {\r\n      errors.rowguid = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new StoreMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiUrl + 'stores/' + values.businessEntityID,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.StoreClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'StoreEdit',\r\n})(StoreEditDisplay);\r\n\r\ninterface IParams {\r\n  businessEntityID: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface StoreEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface StoreEditComponentState {\r\n  model?: StoreViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class StoreEditComponent extends React.Component<\r\n  StoreEditComponentProps,\r\n  StoreEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiUrl + 'stores/' + this.props.match.params.businessEntityID,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.StoreClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new StoreMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      return <StoreUpdate model={this.state.model} />;\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>50edc7b5502b63e01e887ce44fd5f7f2</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport StoreMapper from './storeMapper';\r\nimport Constants from '../../constants';\r\nimport ReactTable from 'react-table';\r\nimport StoreViewModel from './storeViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface StoreSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface StoreSearchComponentState {\r\n  records: Array<StoreViewModel>;\r\n  filteredRecords: Array<StoreViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class StoreSearchComponent extends React.Component<\r\n  StoreSearchComponentProps,\r\n  StoreSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<Api.StoreClientResponseModel>(),\r\n    filteredRecords: new Array<Api.StoreClientResponseModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.StoreClientResponseModel) {\r\n    this.props.history.push('/stores/edit/' + row.businessEntityID);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.StoreClientResponseModel) {\r\n    this.props.history.push('/stores/' + row.businessEntityID);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push('/stores/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.StoreClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiUrl + 'stores/' + row.businessEntityID, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiUrl + 'stores' + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.StoreClientResponseModel>;\r\n          let viewModels: Array<StoreViewModel> = [];\r\n          let mapper = new StoreMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<StoreViewModel>(),\r\n            filteredRecords: new Array<StoreViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading</div>;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Store',\r\n                columns: [\r\n                  {\r\n                    Header: 'BusinessEntityID',\r\n                    accessor: 'businessEntityID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.businessEntityID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Demographics',\r\n                    accessor: 'demographic',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.demographic)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ModifiedDate',\r\n                    accessor: 'modifiedDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.modifiedDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Name',\r\n                    accessor: 'name',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Rowguid',\r\n                    accessor: 'rowguid',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.rowguid)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'SalesPersonID',\r\n                    accessor: 'salesPersonID',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.salesPersonID)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.StoreClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.StoreClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.StoreClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else if (this.state.errorOccurred) {\r\n      return (\r\n        <div className=\"alert alert-danger\">{this.state.errorMessage}</div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>74024ead47c42c3d44117d8cdec3c409</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport { Route, Switch, match, BrowserRouter } from 'react-router-dom';\r\nimport { App } from './app';\r\nimport { Dashboard } from './components/dashboard';\r\nimport { Security, ImplicitCallback, SecureRoute } from '@okta/okta-react';\r\nimport AWBuildVersionCreateComponent from './components/aWBuildVersion/aWBuildVersionCreateForm';\r\nimport AWBuildVersionDetailComponent from './components/aWBuildVersion/aWBuildVersionDetailForm';\r\nimport AWBuildVersionEditComponent from './components/aWBuildVersion/aWBuildVersionEditForm';\r\nimport AWBuildVersionSearchComponent from './components/aWBuildVersion/aWBuildVersionSearchForm';\t\t\t\t\t\r\nimport DatabaseLogCreateComponent from './components/databaseLog/databaseLogCreateForm';\r\nimport DatabaseLogDetailComponent from './components/databaseLog/databaseLogDetailForm';\r\nimport DatabaseLogEditComponent from './components/databaseLog/databaseLogEditForm';\r\nimport DatabaseLogSearchComponent from './components/databaseLog/databaseLogSearchForm';\t\t\t\t\t\r\nimport ErrorLogCreateComponent from './components/errorLog/errorLogCreateForm';\r\nimport ErrorLogDetailComponent from './components/errorLog/errorLogDetailForm';\r\nimport ErrorLogEditComponent from './components/errorLog/errorLogEditForm';\r\nimport ErrorLogSearchComponent from './components/errorLog/errorLogSearchForm';\t\t\t\t\t\r\nimport DepartmentCreateComponent from './components/department/departmentCreateForm';\r\nimport DepartmentDetailComponent from './components/department/departmentDetailForm';\r\nimport DepartmentEditComponent from './components/department/departmentEditForm';\r\nimport DepartmentSearchComponent from './components/department/departmentSearchForm';\t\t\t\t\t\r\nimport EmployeeCreateComponent from './components/employee/employeeCreateForm';\r\nimport EmployeeDetailComponent from './components/employee/employeeDetailForm';\r\nimport EmployeeEditComponent from './components/employee/employeeEditForm';\r\nimport EmployeeSearchComponent from './components/employee/employeeSearchForm';\t\t\t\t\t\r\nimport JobCandidateCreateComponent from './components/jobCandidate/jobCandidateCreateForm';\r\nimport JobCandidateDetailComponent from './components/jobCandidate/jobCandidateDetailForm';\r\nimport JobCandidateEditComponent from './components/jobCandidate/jobCandidateEditForm';\r\nimport JobCandidateSearchComponent from './components/jobCandidate/jobCandidateSearchForm';\t\t\t\t\t\r\nimport ShiftCreateComponent from './components/shift/shiftCreateForm';\r\nimport ShiftDetailComponent from './components/shift/shiftDetailForm';\r\nimport ShiftEditComponent from './components/shift/shiftEditForm';\r\nimport ShiftSearchComponent from './components/shift/shiftSearchForm';\t\t\t\t\t\r\nimport AddressCreateComponent from './components/address/addressCreateForm';\r\nimport AddressDetailComponent from './components/address/addressDetailForm';\r\nimport AddressEditComponent from './components/address/addressEditForm';\r\nimport AddressSearchComponent from './components/address/addressSearchForm';\t\t\t\t\t\r\nimport AddressTypeCreateComponent from './components/addressType/addressTypeCreateForm';\r\nimport AddressTypeDetailComponent from './components/addressType/addressTypeDetailForm';\r\nimport AddressTypeEditComponent from './components/addressType/addressTypeEditForm';\r\nimport AddressTypeSearchComponent from './components/addressType/addressTypeSearchForm';\t\t\t\t\t\r\nimport BusinessEntityCreateComponent from './components/businessEntity/businessEntityCreateForm';\r\nimport BusinessEntityDetailComponent from './components/businessEntity/businessEntityDetailForm';\r\nimport BusinessEntityEditComponent from './components/businessEntity/businessEntityEditForm';\r\nimport BusinessEntitySearchComponent from './components/businessEntity/businessEntitySearchForm';\t\t\t\t\t\r\nimport ContactTypeCreateComponent from './components/contactType/contactTypeCreateForm';\r\nimport ContactTypeDetailComponent from './components/contactType/contactTypeDetailForm';\r\nimport ContactTypeEditComponent from './components/contactType/contactTypeEditForm';\r\nimport ContactTypeSearchComponent from './components/contactType/contactTypeSearchForm';\t\t\t\t\t\r\nimport CountryRegionCreateComponent from './components/countryRegion/countryRegionCreateForm';\r\nimport CountryRegionDetailComponent from './components/countryRegion/countryRegionDetailForm';\r\nimport CountryRegionEditComponent from './components/countryRegion/countryRegionEditForm';\r\nimport CountryRegionSearchComponent from './components/countryRegion/countryRegionSearchForm';\t\t\t\t\t\r\nimport PasswordCreateComponent from './components/password/passwordCreateForm';\r\nimport PasswordDetailComponent from './components/password/passwordDetailForm';\r\nimport PasswordEditComponent from './components/password/passwordEditForm';\r\nimport PasswordSearchComponent from './components/password/passwordSearchForm';\t\t\t\t\t\r\nimport PersonCreateComponent from './components/person/personCreateForm';\r\nimport PersonDetailComponent from './components/person/personDetailForm';\r\nimport PersonEditComponent from './components/person/personEditForm';\r\nimport PersonSearchComponent from './components/person/personSearchForm';\t\t\t\t\t\r\nimport PhoneNumberTypeCreateComponent from './components/phoneNumberType/phoneNumberTypeCreateForm';\r\nimport PhoneNumberTypeDetailComponent from './components/phoneNumberType/phoneNumberTypeDetailForm';\r\nimport PhoneNumberTypeEditComponent from './components/phoneNumberType/phoneNumberTypeEditForm';\r\nimport PhoneNumberTypeSearchComponent from './components/phoneNumberType/phoneNumberTypeSearchForm';\t\t\t\t\t\r\nimport StateProvinceCreateComponent from './components/stateProvince/stateProvinceCreateForm';\r\nimport StateProvinceDetailComponent from './components/stateProvince/stateProvinceDetailForm';\r\nimport StateProvinceEditComponent from './components/stateProvince/stateProvinceEditForm';\r\nimport StateProvinceSearchComponent from './components/stateProvince/stateProvinceSearchForm';\t\t\t\t\t\r\nimport BillOfMaterialCreateComponent from './components/billOfMaterial/billOfMaterialCreateForm';\r\nimport BillOfMaterialDetailComponent from './components/billOfMaterial/billOfMaterialDetailForm';\r\nimport BillOfMaterialEditComponent from './components/billOfMaterial/billOfMaterialEditForm';\r\nimport BillOfMaterialSearchComponent from './components/billOfMaterial/billOfMaterialSearchForm';\t\t\t\t\t\r\nimport CultureCreateComponent from './components/culture/cultureCreateForm';\r\nimport CultureDetailComponent from './components/culture/cultureDetailForm';\r\nimport CultureEditComponent from './components/culture/cultureEditForm';\r\nimport CultureSearchComponent from './components/culture/cultureSearchForm';\t\t\t\t\t\r\nimport DocumentCreateComponent from './components/document/documentCreateForm';\r\nimport DocumentDetailComponent from './components/document/documentDetailForm';\r\nimport DocumentEditComponent from './components/document/documentEditForm';\r\nimport DocumentSearchComponent from './components/document/documentSearchForm';\t\t\t\t\t\r\nimport IllustrationCreateComponent from './components/illustration/illustrationCreateForm';\r\nimport IllustrationDetailComponent from './components/illustration/illustrationDetailForm';\r\nimport IllustrationEditComponent from './components/illustration/illustrationEditForm';\r\nimport IllustrationSearchComponent from './components/illustration/illustrationSearchForm';\t\t\t\t\t\r\nimport LocationCreateComponent from './components/location/locationCreateForm';\r\nimport LocationDetailComponent from './components/location/locationDetailForm';\r\nimport LocationEditComponent from './components/location/locationEditForm';\r\nimport LocationSearchComponent from './components/location/locationSearchForm';\t\t\t\t\t\r\nimport ProductCreateComponent from './components/product/productCreateForm';\r\nimport ProductDetailComponent from './components/product/productDetailForm';\r\nimport ProductEditComponent from './components/product/productEditForm';\r\nimport ProductSearchComponent from './components/product/productSearchForm';\t\t\t\t\t\r\nimport ProductCategoryCreateComponent from './components/productCategory/productCategoryCreateForm';\r\nimport ProductCategoryDetailComponent from './components/productCategory/productCategoryDetailForm';\r\nimport ProductCategoryEditComponent from './components/productCategory/productCategoryEditForm';\r\nimport ProductCategorySearchComponent from './components/productCategory/productCategorySearchForm';\t\t\t\t\t\r\nimport ProductDescriptionCreateComponent from './components/productDescription/productDescriptionCreateForm';\r\nimport ProductDescriptionDetailComponent from './components/productDescription/productDescriptionDetailForm';\r\nimport ProductDescriptionEditComponent from './components/productDescription/productDescriptionEditForm';\r\nimport ProductDescriptionSearchComponent from './components/productDescription/productDescriptionSearchForm';\t\t\t\t\t\r\nimport ProductModelCreateComponent from './components/productModel/productModelCreateForm';\r\nimport ProductModelDetailComponent from './components/productModel/productModelDetailForm';\r\nimport ProductModelEditComponent from './components/productModel/productModelEditForm';\r\nimport ProductModelSearchComponent from './components/productModel/productModelSearchForm';\t\t\t\t\t\r\nimport ProductPhotoCreateComponent from './components/productPhoto/productPhotoCreateForm';\r\nimport ProductPhotoDetailComponent from './components/productPhoto/productPhotoDetailForm';\r\nimport ProductPhotoEditComponent from './components/productPhoto/productPhotoEditForm';\r\nimport ProductPhotoSearchComponent from './components/productPhoto/productPhotoSearchForm';\t\t\t\t\t\r\nimport ProductReviewCreateComponent from './components/productReview/productReviewCreateForm';\r\nimport ProductReviewDetailComponent from './components/productReview/productReviewDetailForm';\r\nimport ProductReviewEditComponent from './components/productReview/productReviewEditForm';\r\nimport ProductReviewSearchComponent from './components/productReview/productReviewSearchForm';\t\t\t\t\t\r\nimport ProductSubcategoryCreateComponent from './components/productSubcategory/productSubcategoryCreateForm';\r\nimport ProductSubcategoryDetailComponent from './components/productSubcategory/productSubcategoryDetailForm';\r\nimport ProductSubcategoryEditComponent from './components/productSubcategory/productSubcategoryEditForm';\r\nimport ProductSubcategorySearchComponent from './components/productSubcategory/productSubcategorySearchForm';\t\t\t\t\t\r\nimport ScrapReasonCreateComponent from './components/scrapReason/scrapReasonCreateForm';\r\nimport ScrapReasonDetailComponent from './components/scrapReason/scrapReasonDetailForm';\r\nimport ScrapReasonEditComponent from './components/scrapReason/scrapReasonEditForm';\r\nimport ScrapReasonSearchComponent from './components/scrapReason/scrapReasonSearchForm';\t\t\t\t\t\r\nimport TransactionHistoryCreateComponent from './components/transactionHistory/transactionHistoryCreateForm';\r\nimport TransactionHistoryDetailComponent from './components/transactionHistory/transactionHistoryDetailForm';\r\nimport TransactionHistoryEditComponent from './components/transactionHistory/transactionHistoryEditForm';\r\nimport TransactionHistorySearchComponent from './components/transactionHistory/transactionHistorySearchForm';\t\t\t\t\t\r\nimport TransactionHistoryArchiveCreateComponent from './components/transactionHistoryArchive/transactionHistoryArchiveCreateForm';\r\nimport TransactionHistoryArchiveDetailComponent from './components/transactionHistoryArchive/transactionHistoryArchiveDetailForm';\r\nimport TransactionHistoryArchiveEditComponent from './components/transactionHistoryArchive/transactionHistoryArchiveEditForm';\r\nimport TransactionHistoryArchiveSearchComponent from './components/transactionHistoryArchive/transactionHistoryArchiveSearchForm';\t\t\t\t\t\r\nimport UnitMeasureCreateComponent from './components/unitMeasure/unitMeasureCreateForm';\r\nimport UnitMeasureDetailComponent from './components/unitMeasure/unitMeasureDetailForm';\r\nimport UnitMeasureEditComponent from './components/unitMeasure/unitMeasureEditForm';\r\nimport UnitMeasureSearchComponent from './components/unitMeasure/unitMeasureSearchForm';\t\t\t\t\t\r\nimport WorkOrderCreateComponent from './components/workOrder/workOrderCreateForm';\r\nimport WorkOrderDetailComponent from './components/workOrder/workOrderDetailForm';\r\nimport WorkOrderEditComponent from './components/workOrder/workOrderEditForm';\r\nimport WorkOrderSearchComponent from './components/workOrder/workOrderSearchForm';\t\t\t\t\t\r\nimport PurchaseOrderHeaderCreateComponent from './components/purchaseOrderHeader/purchaseOrderHeaderCreateForm';\r\nimport PurchaseOrderHeaderDetailComponent from './components/purchaseOrderHeader/purchaseOrderHeaderDetailForm';\r\nimport PurchaseOrderHeaderEditComponent from './components/purchaseOrderHeader/purchaseOrderHeaderEditForm';\r\nimport PurchaseOrderHeaderSearchComponent from './components/purchaseOrderHeader/purchaseOrderHeaderSearchForm';\t\t\t\t\t\r\nimport ShipMethodCreateComponent from './components/shipMethod/shipMethodCreateForm';\r\nimport ShipMethodDetailComponent from './components/shipMethod/shipMethodDetailForm';\r\nimport ShipMethodEditComponent from './components/shipMethod/shipMethodEditForm';\r\nimport ShipMethodSearchComponent from './components/shipMethod/shipMethodSearchForm';\t\t\t\t\t\r\nimport VendorCreateComponent from './components/vendor/vendorCreateForm';\r\nimport VendorDetailComponent from './components/vendor/vendorDetailForm';\r\nimport VendorEditComponent from './components/vendor/vendorEditForm';\r\nimport VendorSearchComponent from './components/vendor/vendorSearchForm';\t\t\t\t\t\r\nimport CreditCardCreateComponent from './components/creditCard/creditCardCreateForm';\r\nimport CreditCardDetailComponent from './components/creditCard/creditCardDetailForm';\r\nimport CreditCardEditComponent from './components/creditCard/creditCardEditForm';\r\nimport CreditCardSearchComponent from './components/creditCard/creditCardSearchForm';\t\t\t\t\t\r\nimport CurrencyCreateComponent from './components/currency/currencyCreateForm';\r\nimport CurrencyDetailComponent from './components/currency/currencyDetailForm';\r\nimport CurrencyEditComponent from './components/currency/currencyEditForm';\r\nimport CurrencySearchComponent from './components/currency/currencySearchForm';\t\t\t\t\t\r\nimport CurrencyRateCreateComponent from './components/currencyRate/currencyRateCreateForm';\r\nimport CurrencyRateDetailComponent from './components/currencyRate/currencyRateDetailForm';\r\nimport CurrencyRateEditComponent from './components/currencyRate/currencyRateEditForm';\r\nimport CurrencyRateSearchComponent from './components/currencyRate/currencyRateSearchForm';\t\t\t\t\t\r\nimport CustomerCreateComponent from './components/customer/customerCreateForm';\r\nimport CustomerDetailComponent from './components/customer/customerDetailForm';\r\nimport CustomerEditComponent from './components/customer/customerEditForm';\r\nimport CustomerSearchComponent from './components/customer/customerSearchForm';\t\t\t\t\t\r\nimport SalesOrderHeaderCreateComponent from './components/salesOrderHeader/salesOrderHeaderCreateForm';\r\nimport SalesOrderHeaderDetailComponent from './components/salesOrderHeader/salesOrderHeaderDetailForm';\r\nimport SalesOrderHeaderEditComponent from './components/salesOrderHeader/salesOrderHeaderEditForm';\r\nimport SalesOrderHeaderSearchComponent from './components/salesOrderHeader/salesOrderHeaderSearchForm';\t\t\t\t\t\r\nimport SalesPersonCreateComponent from './components/salesPerson/salesPersonCreateForm';\r\nimport SalesPersonDetailComponent from './components/salesPerson/salesPersonDetailForm';\r\nimport SalesPersonEditComponent from './components/salesPerson/salesPersonEditForm';\r\nimport SalesPersonSearchComponent from './components/salesPerson/salesPersonSearchForm';\t\t\t\t\t\r\nimport SalesReasonCreateComponent from './components/salesReason/salesReasonCreateForm';\r\nimport SalesReasonDetailComponent from './components/salesReason/salesReasonDetailForm';\r\nimport SalesReasonEditComponent from './components/salesReason/salesReasonEditForm';\r\nimport SalesReasonSearchComponent from './components/salesReason/salesReasonSearchForm';\t\t\t\t\t\r\nimport SalesTaxRateCreateComponent from './components/salesTaxRate/salesTaxRateCreateForm';\r\nimport SalesTaxRateDetailComponent from './components/salesTaxRate/salesTaxRateDetailForm';\r\nimport SalesTaxRateEditComponent from './components/salesTaxRate/salesTaxRateEditForm';\r\nimport SalesTaxRateSearchComponent from './components/salesTaxRate/salesTaxRateSearchForm';\t\t\t\t\t\r\nimport SalesTerritoryCreateComponent from './components/salesTerritory/salesTerritoryCreateForm';\r\nimport SalesTerritoryDetailComponent from './components/salesTerritory/salesTerritoryDetailForm';\r\nimport SalesTerritoryEditComponent from './components/salesTerritory/salesTerritoryEditForm';\r\nimport SalesTerritorySearchComponent from './components/salesTerritory/salesTerritorySearchForm';\t\t\t\t\t\r\nimport ShoppingCartItemCreateComponent from './components/shoppingCartItem/shoppingCartItemCreateForm';\r\nimport ShoppingCartItemDetailComponent from './components/shoppingCartItem/shoppingCartItemDetailForm';\r\nimport ShoppingCartItemEditComponent from './components/shoppingCartItem/shoppingCartItemEditForm';\r\nimport ShoppingCartItemSearchComponent from './components/shoppingCartItem/shoppingCartItemSearchForm';\t\t\t\t\t\r\nimport SpecialOfferCreateComponent from './components/specialOffer/specialOfferCreateForm';\r\nimport SpecialOfferDetailComponent from './components/specialOffer/specialOfferDetailForm';\r\nimport SpecialOfferEditComponent from './components/specialOffer/specialOfferEditForm';\r\nimport SpecialOfferSearchComponent from './components/specialOffer/specialOfferSearchForm';\t\t\t\t\t\r\nimport StoreCreateComponent from './components/store/storeCreateForm';\r\nimport StoreDetailComponent from './components/store/storeDetailForm';\r\nimport StoreEditComponent from './components/store/storeEditForm';\r\nimport StoreSearchComponent from './components/store/storeSearchForm';\t\t\t\t\t\r\n\r\nconst config = {\r\n  oidc: {\r\n    clientId: '<okta_client_id>',\r\n    issuer: 'https://<okta_application_url>/oauth2/default',\r\n    redirectUri: 'https://<your_public_webserver>/implicit/callback',\r\n    scope: 'openid profile email',\r\n  }\r\n}\r\n\r\nexport const AppRouter: React.StatelessComponent<{}> = () => {\r\n  const query = new URLSearchParams(location.search)\r\n\r\n  return (\r\n    <BrowserRouter>   \r\n\t<Security issuer={config.oidc.issuer}\r\n        client_id={config.oidc.clientId}\r\n        redirect_uri={config.oidc.redirectUri}>\r\n\r\n      <div className=\"container-fluid\">\r\n        <Route component={App} />\r\n\t    <SecureRoute path=\"/protected\" component={() => '<div>secure route</div>'} />\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n\t\t  \t\t\t\t\t  <Route path=\"/awbuildversions/create\" component={AWBuildVersionCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/awbuildversions/edit/:id\" component={AWBuildVersionEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/awbuildversions/:id\" component={AWBuildVersionDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/awbuildversions\" component={AWBuildVersionSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/databaselogs/create\" component={DatabaseLogCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/databaselogs/edit/:id\" component={DatabaseLogEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/databaselogs/:id\" component={DatabaseLogDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/databaselogs\" component={DatabaseLogSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/errorlogs/create\" component={ErrorLogCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/errorlogs/edit/:id\" component={ErrorLogEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/errorlogs/:id\" component={ErrorLogDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/errorlogs\" component={ErrorLogSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/departments/create\" component={DepartmentCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/departments/edit/:id\" component={DepartmentEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/departments/:id\" component={DepartmentDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/departments\" component={DepartmentSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/employees/create\" component={EmployeeCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/employees/edit/:id\" component={EmployeeEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/employees/:id\" component={EmployeeDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/employees\" component={EmployeeSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/jobcandidates/create\" component={JobCandidateCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/jobcandidates/edit/:id\" component={JobCandidateEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/jobcandidates/:id\" component={JobCandidateDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/jobcandidates\" component={JobCandidateSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/shifts/create\" component={ShiftCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/shifts/edit/:id\" component={ShiftEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/shifts/:id\" component={ShiftDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/shifts\" component={ShiftSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/addresses/create\" component={AddressCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/addresses/edit/:id\" component={AddressEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/addresses/:id\" component={AddressDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/addresses\" component={AddressSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/addresstypes/create\" component={AddressTypeCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/addresstypes/edit/:id\" component={AddressTypeEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/addresstypes/:id\" component={AddressTypeDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/addresstypes\" component={AddressTypeSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/businessentities/create\" component={BusinessEntityCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/businessentities/edit/:id\" component={BusinessEntityEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/businessentities/:id\" component={BusinessEntityDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/businessentities\" component={BusinessEntitySearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/contacttypes/create\" component={ContactTypeCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/contacttypes/edit/:id\" component={ContactTypeEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/contacttypes/:id\" component={ContactTypeDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/contacttypes\" component={ContactTypeSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/countryregions/create\" component={CountryRegionCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/countryregions/edit/:id\" component={CountryRegionEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/countryregions/:id\" component={CountryRegionDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/countryregions\" component={CountryRegionSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/passwords/create\" component={PasswordCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/passwords/edit/:id\" component={PasswordEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/passwords/:id\" component={PasswordDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/passwords\" component={PasswordSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/people/create\" component={PersonCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/people/edit/:id\" component={PersonEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/people/:id\" component={PersonDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/people\" component={PersonSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/phonenumbertypes/create\" component={PhoneNumberTypeCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/phonenumbertypes/edit/:id\" component={PhoneNumberTypeEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/phonenumbertypes/:id\" component={PhoneNumberTypeDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/phonenumbertypes\" component={PhoneNumberTypeSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/stateprovinces/create\" component={StateProvinceCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/stateprovinces/edit/:id\" component={StateProvinceEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/stateprovinces/:id\" component={StateProvinceDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/stateprovinces\" component={StateProvinceSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/billofmaterials/create\" component={BillOfMaterialCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/billofmaterials/edit/:id\" component={BillOfMaterialEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/billofmaterials/:id\" component={BillOfMaterialDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/billofmaterials\" component={BillOfMaterialSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/cultures/create\" component={CultureCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/cultures/edit/:id\" component={CultureEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/cultures/:id\" component={CultureDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/cultures\" component={CultureSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/documents/create\" component={DocumentCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/documents/edit/:id\" component={DocumentEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/documents/:id\" component={DocumentDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/documents\" component={DocumentSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/illustrations/create\" component={IllustrationCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/illustrations/edit/:id\" component={IllustrationEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/illustrations/:id\" component={IllustrationDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/illustrations\" component={IllustrationSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/locations/create\" component={LocationCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/locations/edit/:id\" component={LocationEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/locations/:id\" component={LocationDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/locations\" component={LocationSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/products/create\" component={ProductCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/products/edit/:id\" component={ProductEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/products/:id\" component={ProductDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/products\" component={ProductSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/productcategories/create\" component={ProductCategoryCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/productcategories/edit/:id\" component={ProductCategoryEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/productcategories/:id\" component={ProductCategoryDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/productcategories\" component={ProductCategorySearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/productdescriptions/create\" component={ProductDescriptionCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/productdescriptions/edit/:id\" component={ProductDescriptionEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/productdescriptions/:id\" component={ProductDescriptionDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/productdescriptions\" component={ProductDescriptionSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/productmodels/create\" component={ProductModelCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/productmodels/edit/:id\" component={ProductModelEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/productmodels/:id\" component={ProductModelDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/productmodels\" component={ProductModelSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/productphotoes/create\" component={ProductPhotoCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/productphotoes/edit/:id\" component={ProductPhotoEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/productphotoes/:id\" component={ProductPhotoDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/productphotoes\" component={ProductPhotoSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/productreviews/create\" component={ProductReviewCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/productreviews/edit/:id\" component={ProductReviewEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/productreviews/:id\" component={ProductReviewDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/productreviews\" component={ProductReviewSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/productsubcategories/create\" component={ProductSubcategoryCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/productsubcategories/edit/:id\" component={ProductSubcategoryEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/productsubcategories/:id\" component={ProductSubcategoryDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/productsubcategories\" component={ProductSubcategorySearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/scrapreasons/create\" component={ScrapReasonCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/scrapreasons/edit/:id\" component={ScrapReasonEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/scrapreasons/:id\" component={ScrapReasonDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/scrapreasons\" component={ScrapReasonSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/transactionhistories/create\" component={TransactionHistoryCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/transactionhistories/edit/:id\" component={TransactionHistoryEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/transactionhistories/:id\" component={TransactionHistoryDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/transactionhistories\" component={TransactionHistorySearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/transactionhistoryarchives/create\" component={TransactionHistoryArchiveCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/transactionhistoryarchives/edit/:id\" component={TransactionHistoryArchiveEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/transactionhistoryarchives/:id\" component={TransactionHistoryArchiveDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/transactionhistoryarchives\" component={TransactionHistoryArchiveSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/unitmeasures/create\" component={UnitMeasureCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/unitmeasures/edit/:id\" component={UnitMeasureEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/unitmeasures/:id\" component={UnitMeasureDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/unitmeasures\" component={UnitMeasureSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/workorders/create\" component={WorkOrderCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/workorders/edit/:id\" component={WorkOrderEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/workorders/:id\" component={WorkOrderDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/workorders\" component={WorkOrderSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/purchaseorderheaders/create\" component={PurchaseOrderHeaderCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/purchaseorderheaders/edit/:id\" component={PurchaseOrderHeaderEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/purchaseorderheaders/:id\" component={PurchaseOrderHeaderDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/purchaseorderheaders\" component={PurchaseOrderHeaderSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/shipmethods/create\" component={ShipMethodCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/shipmethods/edit/:id\" component={ShipMethodEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/shipmethods/:id\" component={ShipMethodDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/shipmethods\" component={ShipMethodSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/vendors/create\" component={VendorCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/vendors/edit/:id\" component={VendorEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/vendors/:id\" component={VendorDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/vendors\" component={VendorSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/creditcards/create\" component={CreditCardCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/creditcards/edit/:id\" component={CreditCardEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/creditcards/:id\" component={CreditCardDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/creditcards\" component={CreditCardSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/currencies/create\" component={CurrencyCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/currencies/edit/:id\" component={CurrencyEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/currencies/:id\" component={CurrencyDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/currencies\" component={CurrencySearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/currencyrates/create\" component={CurrencyRateCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/currencyrates/edit/:id\" component={CurrencyRateEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/currencyrates/:id\" component={CurrencyRateDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/currencyrates\" component={CurrencyRateSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/customers/create\" component={CustomerCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/customers/edit/:id\" component={CustomerEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/customers/:id\" component={CustomerDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/customers\" component={CustomerSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/salesorderheaders/create\" component={SalesOrderHeaderCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/salesorderheaders/edit/:id\" component={SalesOrderHeaderEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/salesorderheaders/:id\" component={SalesOrderHeaderDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/salesorderheaders\" component={SalesOrderHeaderSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/salespersons/create\" component={SalesPersonCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/salespersons/edit/:id\" component={SalesPersonEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/salespersons/:id\" component={SalesPersonDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/salespersons\" component={SalesPersonSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/salesreasons/create\" component={SalesReasonCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/salesreasons/edit/:id\" component={SalesReasonEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/salesreasons/:id\" component={SalesReasonDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/salesreasons\" component={SalesReasonSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/salestaxrates/create\" component={SalesTaxRateCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/salestaxrates/edit/:id\" component={SalesTaxRateEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/salestaxrates/:id\" component={SalesTaxRateDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/salestaxrates\" component={SalesTaxRateSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/salesterritories/create\" component={SalesTerritoryCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/salesterritories/edit/:id\" component={SalesTerritoryEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/salesterritories/:id\" component={SalesTerritoryDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/salesterritories\" component={SalesTerritorySearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/shoppingcartitems/create\" component={ShoppingCartItemCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/shoppingcartitems/edit/:id\" component={ShoppingCartItemEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/shoppingcartitems/:id\" component={ShoppingCartItemDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/shoppingcartitems\" component={ShoppingCartItemSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/specialoffers/create\" component={SpecialOfferCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/specialoffers/edit/:id\" component={SpecialOfferEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/specialoffers/:id\" component={SpecialOfferDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/specialoffers\" component={SpecialOfferSearchComponent} />\r\n\t\t\t\t\t\t\t\t\t\t  <Route path=\"/stores/create\" component={StoreCreateComponent} />\r\n\t\t\t\t\t  <Route path=\"/stores/edit/:id\" component={StoreEditComponent} />\r\n\t\t\t\t\t  <Route path=\"/stores/:id\" component={StoreDetailComponent} />\r\n\t\t\t\t\t  <Route path=\"/stores\" component={StoreSearchComponent} />\r\n\t\t\t\t\t        </Switch>\r\n      </div>\r\n\t  </Security>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>5b0caad3382ed1782a853eb0abd796ac</Hash>\r\n</Codenesium>*/","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {AppRouter} from './router'\r\n\r\n\r\nReactDOM.render(\r\n       <AppRouter />\r\n, document.getElementById('root'));"],"sourceRoot":""}