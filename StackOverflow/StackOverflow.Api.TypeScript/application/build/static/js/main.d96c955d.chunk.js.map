{"version":3,"sources":["components/header.tsx","app.tsx","constants.tsx","components/dashboard.tsx","lib/components/loadingForm.tsx","lib/components/errorForm.tsx","api/models.ts","components/badge/badgeViewModel.tsx","components/badge/badgeMapper.tsx","components/badge/badgeCreateForm.tsx","components/badge/badgeDetailForm.tsx","components/badge/badgeEditForm.tsx","components/badge/badgeSearchForm.tsx","components/comment/commentViewModel.tsx","components/comment/commentMapper.tsx","components/comment/commentCreateForm.tsx","components/comment/commentDetailForm.tsx","components/comment/commentEditForm.tsx","components/comment/commentSearchForm.tsx","components/linkType/linkTypeViewModel.tsx","components/linkType/linkTypeMapper.tsx","components/linkType/linkTypeCreateForm.tsx","components/linkType/linkTypeDetailForm.tsx","components/linkType/linkTypeEditForm.tsx","components/linkType/linkTypeSearchForm.tsx","components/postHistory/postHistoryViewModel.tsx","components/postHistory/postHistoryMapper.tsx","components/postHistory/postHistoryCreateForm.tsx","components/postHistory/postHistoryDetailForm.tsx","components/postHistory/postHistoryEditForm.tsx","components/postHistory/postHistorySearchForm.tsx","components/postHistoryType/postHistoryTypeViewModel.tsx","components/postHistoryType/postHistoryTypeMapper.tsx","components/postHistoryType/postHistoryTypeCreateForm.tsx","components/postHistoryType/postHistoryTypeDetailForm.tsx","components/postHistoryType/postHistoryTypeEditForm.tsx","components/postHistoryType/postHistoryTypeSearchForm.tsx","components/postLink/postLinkViewModel.tsx","components/postLink/postLinkMapper.tsx","components/postLink/postLinkCreateForm.tsx","components/postLink/postLinkDetailForm.tsx","components/postLink/postLinkEditForm.tsx","components/postLink/postLinkSearchForm.tsx","components/post/postViewModel.tsx","components/post/postMapper.tsx","components/post/postCreateForm.tsx","components/post/postDetailForm.tsx","components/post/postEditForm.tsx","components/post/postSearchForm.tsx","components/postType/postTypeViewModel.tsx","components/postType/postTypeMapper.tsx","components/postType/postTypeCreateForm.tsx","components/postType/postTypeDetailForm.tsx","components/postType/postTypeEditForm.tsx","components/postType/postTypeSearchForm.tsx","components/tag/tagViewModel.tsx","components/tag/tagMapper.tsx","components/tag/tagCreateForm.tsx","components/tag/tagDetailForm.tsx","components/tag/tagEditForm.tsx","components/tag/tagSearchForm.tsx","components/user/userViewModel.tsx","components/user/userMapper.tsx","components/user/userCreateForm.tsx","components/user/userDetailForm.tsx","components/user/userEditForm.tsx","components/user/userSearchForm.tsx","components/vote/voteViewModel.tsx","components/vote/voteMapper.tsx","components/vote/voteCreateForm.tsx","components/vote/voteDetailForm.tsx","components/vote/voteEditForm.tsx","components/vote/voteSearchForm.tsx","components/voteType/voteTypeViewModel.tsx","components/voteType/voteTypeMapper.tsx","components/voteType/voteTypeCreateForm.tsx","components/voteType/voteTypeDetailForm.tsx","components/voteType/voteTypeEditForm.tsx","components/voteType/voteTypeSearchForm.tsx","router.tsx","index.tsx"],"names":["Header","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","menuExpanded","inherits","createClass","key","value","e","setState","_this2","react","className","id","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","handleClick","Link","to","React","App","props","header_Header","Constants","ApiHealthEndpoint","ApiEndpoint","BaseEndpoint","SwaggerEndpoint","ClientRoutes","Badges","Comments","LinkTypes","PostHistories","PostHistoryTypes","PostLinks","Posts","PostTypes","Tags","Users","Votes","VoteTypes","ApiRoutes","Dashboard","connected","connecting","objectSpread","axios","get","headers","Content-Type","then","resp","console","log","error","testConnection","_this3","alert","target","LoadingForm","ErrorForm","message","BadgeClientRequestModel","date","undefined","name","userId","CommentClientRequestModel","creationDate","postId","score","text","LinkTypeClientRequestModel","PostHistoryClientRequestModel","comment","postHistoryTypeId","revisionGUID","userDisplayName","PostHistoryTypeClientRequestModel","PostLinkClientRequestModel","linkTypeId","relatedPostId","PostClientRequestModel","acceptedAnswerId","answerCount","body","closedDate","commentCount","communityOwnedDate","favoriteCount","lastActivityDate","lastEditDate","lastEditorDisplayName","lastEditorUserId","ownerUserId","parentId","postTypeId","tag","title","viewCount","PostTypeClientRequestModel","TagClientRequestModel","count","excerptPostId","tagName","wikiPostId","UserClientRequestModel","aboutMe","accountId","age","displayName","downVote","emailHash","lastAccessDate","location","reputation","upVote","view","websiteUrl","VoteClientRequestModel","bountyAmount","voteTypeId","VoteTypeClientRequestModel","BadgeViewModel","String","BadgeMapper","dto","response","setProperties","model","Api","BadgeCreate","withFormik","mapPropsToValues","validate","values","errors","handleSubmit","actions","setStatus","mapper","post","mapViewModelToApiRequest","data","status","errorsForField","touched","validationErrors","find","f","propertyName","toLowerCase","filter","errorMessage","errorExistForField","react_default","a","createElement","onSubmit","role","htmlFor","formik_esm","disabled","success","BadgeCreateComponent","loading","loaded","errorOccurred","loadingForm_LoadingForm","errorForm_ErrorForm","Component","BadgeDetailDisplay","history","push","BadgeDetailComponent","match","params","mapApiResponseToViewModel","badgeDetailForm_BadgeDetailDisplay","BadgeEdit","put","BadgeEditComponent","BadgeSearchComponent","deleteSubmitted","deleteSuccess","deleteResponse","records","filteredRecords","searchValue","loadRecords","row","delete","currentTarget","query","searchEndpoint","viewModels","forEach","x","_this4","errorResponse","placeholder","onChange","handleSearchChanged","handleCreateClick","es","columns","accessor","Cell","original","handleDetailClick","handleEditClick","handleDeleteClick","CommentViewModel","CommentMapper","CommentCreate","CommentCreateComponent","CommentDetailDisplay","CommentDetailComponent","commentDetailForm_CommentDetailDisplay","CommentEdit","CommentEditComponent","CommentSearchComponent","LinkTypeViewModel","LinkTypeMapper","LinkTypeCreate","LinkTypeCreateComponent","LinkTypeDetailDisplay","LinkTypeDetailComponent","linkTypeDetailForm_LinkTypeDetailDisplay","LinkTypeEdit","LinkTypeEditComponent","LinkTypeSearchComponent","PostHistoryViewModel","PostHistoryMapper","PostHistoryCreate","PostHistoryCreateComponent","PostHistoryDetailDisplay","PostHistoryDetailComponent","postHistoryDetailForm_PostHistoryDetailDisplay","PostHistoryEdit","PostHistoryEditComponent","PostHistorySearchComponent","PostHistoryTypeViewModel","PostHistoryTypeMapper","PostHistoryTypeCreate","PostHistoryTypeCreateComponent","PostHistoryTypeDetailDisplay","PostHistoryTypeDetailComponent","postHistoryTypeDetailForm_PostHistoryTypeDetailDisplay","PostHistoryTypeEdit","PostHistoryTypeEditComponent","PostHistoryTypeSearchComponent","PostLinkViewModel","PostLinkMapper","PostLinkCreate","PostLinkCreateComponent","PostLinkDetailDisplay","PostLinkDetailComponent","postLinkDetailForm_PostLinkDetailDisplay","PostLinkEdit","PostLinkEditComponent","PostLinkSearchComponent","PostViewModel","PostMapper","PostCreate","PostCreateComponent","PostDetailDisplay","PostDetailComponent","postDetailForm_PostDetailDisplay","PostEdit","PostEditComponent","PostSearchComponent","PostTypeViewModel","PostTypeMapper","PostTypeCreate","PostTypeCreateComponent","PostTypeDetailDisplay","PostTypeDetailComponent","postTypeDetailForm_PostTypeDetailDisplay","PostTypeEdit","PostTypeEditComponent","PostTypeSearchComponent","TagViewModel","TagMapper","TagCreate","TagCreateComponent","TagDetailDisplay","TagDetailComponent","tagDetailForm_TagDetailDisplay","TagEdit","TagEditComponent","TagSearchComponent","UserViewModel","UserMapper","UserCreate","UserCreateComponent","UserDetailDisplay","UserDetailComponent","userDetailForm_UserDetailDisplay","UserEdit","UserEditComponent","UserSearchComponent","VoteViewModel","VoteMapper","VoteCreate","VoteCreateComponent","VoteDetailDisplay","VoteDetailComponent","voteDetailForm_VoteDetailDisplay","VoteEdit","VoteEditComponent","VoteSearchComponent","VoteTypeViewModel","VoteTypeMapper","VoteTypeCreate","VoteTypeCreateComponent","VoteTypeDetailDisplay","VoteTypeDetailComponent","voteTypeDetailForm_VoteTypeDetailDisplay","VoteTypeEdit","VoteTypeEditComponent","VoteTypeSearchComponent","config","clientId","issuer","redirectUri","scope","ReactDOM","render","URLSearchParams","search","BrowserRouter","dist","client_id","redirect_uri","Route","component","path","Switch","exact","document","getElementById"],"mappings":"uSASaA,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CAAEC,cAAc,GAD1BhB,EAAA,OAAAC,OAAAgB,EAAA,EAAAhB,CAAAJ,EAAAC,GAAAG,OAAAiB,EAAA,EAAAjB,CAAAJ,EAAA,EAAAsB,IAAA,cAAAC,MAAA,SAGcC,GACVlB,KAAKmB,SAAS,CAAEN,cAAeb,KAAKY,MAAMC,iBAJ9C,CAAAG,IAAA,SAAAC,MAAA,WAOW,IAAAG,EAAApB,KACP,OACEqB,EAAA,qBAAKC,UAAU,cACbD,EAAA,qBACEC,UAAU,gDACVC,GAAG,UAEHF,EAAA,mBAAGC,UAAU,eAAeE,KAAK,KAAjC,iBAIAH,EAAA,wBACEC,UAAU,iBACVG,KAAK,SACLC,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,oBACXC,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAE/BG,EAAA,sBAAMC,UAAU,yBAGlBD,EAAA,qBACEC,UACEtB,KAAKY,MAAMC,aACP,kCACA,2BAENU,GAAG,0BAEHF,EAAA,oBAAIC,UAAU,sBACZD,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,UACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,WAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,YACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,aAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,aACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,cAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,iBACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,kBAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,oBACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,qBAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,aACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,cAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,SACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,UAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,aACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,cAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,QACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,SAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,SACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,UAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,SACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,UAQFG,EAAA,oBAAIC,UAAU,YACZD,EAAA,cAACY,EAAA,EAAD,CACEX,UAAU,WACVY,GAAG,aACHH,QAAS,SAAAb,GAAC,OAAIE,EAAKY,YAAYd,KAHjC,sBA5IhBxB,EAAA,CAA4ByC,aCPfC,EAAoC,SAACC,GAChD,OACEhB,EAAA,cAACiB,EAAD,8BCJSC,EAAb,SAAAA,IAAAzC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IAAaA,EAGKC,mBAHLD,EAEKE,aAFLF,EACKG,aAAe,0BACwB,QACK,YAHjDH,EAIKI,gBAAkBJ,EAAUG,aAAe,UAGtD,IAAME,EAAb,SAAAA,IAAA9C,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IAAaA,EACKC,OAAS,UADdD,EAEKE,SAAW,YAFhBF,EAGKG,UAAY,aAHjBH,EAIKI,cAAgB,iBAJrBJ,EAKKK,iBAAmB,oBALxBL,EAMKM,UAAY,aANjBN,EAOKO,MAAQ,SAPbP,EAQKQ,UAAY,aARjBR,EASKS,KAAO,QATZT,EAUKU,MAAQ,SAVbV,EAWKW,MAAQ,SAXbX,EAYKY,UAAY,aAGvB,IAAMC,EAAb,SAAAA,IAAA3D,OAAAC,EAAA,EAAAD,CAAAE,KAAAyD,IAAaA,EACKZ,OAAS,SADdY,EAEKX,SAAW,WAFhBW,EAGKV,UAAY,YAHjBU,EAIKT,cAAgB,gBAJrBS,EAKKR,iBAAmB,mBALxBQ,EAMKP,UAAY,YANjBO,EAOKN,MAAQ,QAPbM,EAQKL,UAAY,YARjBK,EASKJ,KAAO,OATZI,EAUKH,MAAQ,QAVbG,EAWKF,MAAQ,QAXbE,EAYKD,UAAY,gBCrBTE,6MAEnB9C,MAAS,CAAC+C,WAAU,EAAOC,YAAW,mFAErB,IAAAxC,EAAApB,KACfA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6BgD,YAAW,KAExCE,IAAMC,IAAIxB,EAAUC,kBAAmB,CACrCwB,QAAS,CACPC,eAAgB,sBAGnBC,KACC,SAAAC,GAEEC,QAAQC,IAAIF,GACZ/C,EAAKD,SAAS,CAACyC,YAAW,EAAOD,WAAU,KAG7C,SAAAW,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAACyC,YAAW,EAAOD,WAAU,kDAO9C3D,KAAKuE,kDAGC,IAAAC,EAAAxE,KACDyE,EAAoBpD,EAAA,0BAiBxB,OAfEoD,EADCzE,KAAKY,MAAMgD,WACJvC,EAAA,yBACCA,EAAA,qBAAKC,UAAU,uBAAf,kBAGHtB,KAAKY,MAAM+C,UACTtC,EAAA,yBACCA,EAAA,qBAAKC,UAAU,uBAAf,iBAIDD,EAAA,yBACEA,EAAA,qBAAKC,UAAU,sBAAf,gCAAiED,EAAA,wBAAQC,UAAU,kBAAkBS,QAAS,SAACb,GAAD,OAAOsD,EAAKD,mBAAzD,qBAItElD,EAAA,yBACJoD,EACDpD,EAAA,kDAA2BA,EAAA,mBAAGqD,OAAO,SAASlD,KAAMe,EAAUC,mBAAoBD,EAAUC,oBAC5FnB,EAAA,+CAAwBA,EAAA,mBAAGqD,OAAO,SAASlD,KAAMe,EAAUI,iBAAkBJ,EAAUI,0BApDxDR,4BCX1BwC,EAA6B,WACzC,OAAOtD,EAAA,wCCGKuD,EAAuC,SAACvC,GAClD,OAAOhB,EAAA,qBAAKC,UAAU,sBAAsBe,EAAMwC,UCPxCC,EAAb,WAOI,SAAAA,IAAehF,OAAAC,EAAA,EAAAD,CAAAE,KAAA8E,GACd9E,KAAK+E,UAAOC,EACjBhF,KAAKuB,GAAK,EACVvB,KAAKiF,KAAO,GACZjF,KAAKkF,OAAS,EAXd,OAAApF,OAAAiB,EAAA,EAAAjB,CAAAgF,EAAA,EAAA9D,IAAA,gBAAAC,MAAA,SAekB8D,EAAWxD,EAAY0D,EAAcC,GAElDlF,KAAK+E,KAAOA,EACjB/E,KAAKuB,GAAKA,EACVvB,KAAKiF,KAAOA,EACZjF,KAAKkF,OAASA,MApBdJ,EAAA,GAiDgBK,EAAb,WASC,SAAAA,IAAerF,OAAAC,EAAA,EAAAD,CAAAE,KAAAmF,GACdnF,KAAKoF,kBAAeJ,EACzBhF,KAAKuB,GAAK,EACVvB,KAAKqF,OAAS,EACdrF,KAAKsF,WAAQN,EACbhF,KAAKuF,KAAO,GACZvF,KAAKkF,YAASF,EAfX,OAAAlF,OAAAiB,EAAA,EAAAjB,CAAAqF,EAAA,EAAAnE,IAAA,gBAAAC,MAAA,SAmBemE,EAAmB7D,EAAY8D,EAAgBC,EAAYC,EAAcL,GAEtFlF,KAAKoF,aAAeA,EACzBpF,KAAKuB,GAAKA,EACVvB,KAAKqF,OAASA,EACdrF,KAAKsF,MAAQA,EACbtF,KAAKuF,KAAOA,EACZvF,KAAKkF,OAASA,MA1BXC,EAAA,GA6DaK,EAAb,WAKC,SAAAA,IAAe1F,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,GACdxF,KAAKuB,GAAK,EACfvB,KAAKyB,KAAO,GAPT,OAAA3B,OAAAiB,EAAA,EAAAjB,CAAA0F,EAAA,EAAAxE,IAAA,gBAAAC,MAAA,SAWeM,EAAYE,GAEzBzB,KAAKuB,GAAKA,EACfvB,KAAKyB,KAAOA,MAdT+D,EAAA,GAqCaC,EAAb,WAYC,SAAAA,IAAe3F,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,GACdzF,KAAK0F,QAAU,GACpB1F,KAAKoF,kBAAeJ,EACpBhF,KAAKuB,GAAK,EACVvB,KAAK2F,kBAAoB,EACzB3F,KAAKqF,OAAS,EACdrF,KAAK4F,aAAe,GACpB5F,KAAKuF,KAAO,GACZvF,KAAK6F,gBAAkB,GACvB7F,KAAKkF,YAASF,EArBX,OAAAlF,OAAAiB,EAAA,EAAAjB,CAAA2F,EAAA,EAAAzE,IAAA,gBAAAC,MAAA,SAyBeyE,EAAiBN,EAAmB7D,EAAYoE,EAA2BN,EAAgBO,EAAsBL,EAAcM,EAAyBX,GAErKlF,KAAK0F,QAAUA,EACpB1F,KAAKoF,aAAeA,EACpBpF,KAAKuB,GAAKA,EACVvB,KAAK2F,kBAAoBA,EACzB3F,KAAKqF,OAASA,EACdrF,KAAK4F,aAAeA,EACpB5F,KAAKuF,KAAOA,EACZvF,KAAK6F,gBAAkBA,EACvB7F,KAAKkF,OAASA,MAnCXO,EAAA,GA+EaK,EAAb,WAKC,SAAAA,IAAehG,OAAAC,EAAA,EAAAD,CAAAE,KAAA8F,GACd9F,KAAKuB,GAAK,EACfvB,KAAKyB,KAAO,GAPT,OAAA3B,OAAAiB,EAAA,EAAAjB,CAAAgG,EAAA,EAAA9E,IAAA,gBAAAC,MAAA,SAWeM,EAAYE,GAEzBzB,KAAKuB,GAAKA,EACfvB,KAAKyB,KAAOA,MAdTqE,EAAA,GAqCaC,EAAb,WAQC,SAAAA,IAAejG,OAAAC,EAAA,EAAAD,CAAAE,KAAA+F,GACd/F,KAAKoF,kBAAeJ,EACzBhF,KAAKuB,GAAK,EACVvB,KAAKgG,WAAa,EAClBhG,KAAKqF,OAAS,EACdrF,KAAKiG,cAAgB,EAblB,OAAAnG,OAAAiB,EAAA,EAAAjB,CAAAiG,EAAA,EAAA/E,IAAA,gBAAAC,MAAA,SAiBemE,EAAmB7D,EAAYyE,EAAoBX,EAAgBY,GAEhFjG,KAAKoF,aAAeA,EACzBpF,KAAKuB,GAAKA,EACVvB,KAAKgG,WAAaA,EAClBhG,KAAKqF,OAASA,EACdrF,KAAKiG,cAAgBA,MAvBlBF,EAAA,GAuDaG,EAAb,WAuBC,SAAAA,IAAepG,OAAAC,EAAA,EAAAD,CAAAE,KAAAkG,GACdlG,KAAKmG,sBAAmBnB,EAC7BhF,KAAKoG,iBAAcpB,EACnBhF,KAAKqG,KAAO,GACZrG,KAAKsG,gBAAatB,EAClBhF,KAAKuG,kBAAevB,EACpBhF,KAAKwG,wBAAqBxB,EAC1BhF,KAAKoF,kBAAeJ,EACpBhF,KAAKyG,mBAAgBzB,EACrBhF,KAAKuB,GAAK,EACVvB,KAAK0G,sBAAmB1B,EACxBhF,KAAK2G,kBAAe3B,EACpBhF,KAAK4G,sBAAwB,GAC7B5G,KAAK6G,sBAAmB7B,EACxBhF,KAAK8G,iBAAc9B,EACnBhF,KAAK+G,cAAW/B,EAChBhF,KAAKgH,WAAa,EAClBhH,KAAKsF,MAAQ,EACbtF,KAAKiH,IAAM,GACXjH,KAAKkH,MAAQ,GACblH,KAAKmH,UAAY,EA3Cd,OAAArH,OAAAiB,EAAA,EAAAjB,CAAAoG,EAAA,EAAAlF,IAAA,gBAAAC,MAAA,SA+CekF,EAAuBC,EAAkBC,EAAcC,EAAiBC,EAAmBC,EAAyBpB,EAAmBqB,EAAoBlF,EAAYmF,EAAuBC,EAAmBC,EAA+BC,EAAuBC,EAAkBC,EAAeC,EAAoB1B,EAAe2B,EAAaC,EAAeC,GAEpXnH,KAAKmG,iBAAmBA,EAC7BnG,KAAKoG,YAAcA,EACnBpG,KAAKqG,KAAOA,EACZrG,KAAKsG,WAAaA,EAClBtG,KAAKuG,aAAeA,EACpBvG,KAAKwG,mBAAqBA,EAC1BxG,KAAKoF,aAAeA,EACpBpF,KAAKyG,cAAgBA,EACrBzG,KAAKuB,GAAKA,EACVvB,KAAK0G,iBAAmBA,EACxB1G,KAAK2G,aAAeA,EACpB3G,KAAK4G,sBAAwBA,EAC7B5G,KAAK6G,iBAAmBA,EACxB7G,KAAK8G,YAAcA,EACnB9G,KAAK+G,SAAWA,EAChB/G,KAAKgH,WAAaA,EAClBhH,KAAKsF,MAAQA,EACbtF,KAAKiH,IAAMA,EACXjH,KAAKkH,MAAQA,EACblH,KAAKmH,UAAYA,MApEdjB,EAAA,GAiJakB,EAAb,WAKC,SAAAA,IAAetH,OAAAC,EAAA,EAAAD,CAAAE,KAAAoH,GACdpH,KAAKuB,GAAK,EACfvB,KAAKyB,KAAO,GAPT,OAAA3B,OAAAiB,EAAA,EAAAjB,CAAAsH,EAAA,EAAApG,IAAA,gBAAAC,MAAA,SAWeM,EAAYE,GAEzBzB,KAAKuB,GAAKA,EACfvB,KAAKyB,KAAOA,MAdT2F,EAAA,GAqCaC,EAAb,WAQC,SAAAA,IAAevH,OAAAC,EAAA,EAAAD,CAAAE,KAAAqH,GACdrH,KAAKsH,MAAQ,EAClBtH,KAAKuH,cAAgB,EACrBvH,KAAKuB,GAAK,EACVvB,KAAKwH,QAAU,GACfxH,KAAKyH,WAAa,EAbf,OAAA3H,OAAAiB,EAAA,EAAAjB,CAAAuH,EAAA,EAAArG,IAAA,gBAAAC,MAAA,SAiBeqG,EAAeC,EAAuBhG,EAAYiG,EAAiBC,GAEhFzH,KAAKsH,MAAQA,EAClBtH,KAAKuH,cAAgBA,EACrBvH,KAAKuB,GAAKA,EACVvB,KAAKwH,QAAUA,EACfxH,KAAKyH,WAAaA,MAvBfJ,EAAA,GAuDaK,EAAb,WAiBC,SAAAA,IAAe5H,OAAAC,EAAA,EAAAD,CAAAE,KAAA0H,GACd1H,KAAK2H,QAAU,GACpB3H,KAAK4H,eAAY5C,EACjBhF,KAAK6H,SAAM7C,EACXhF,KAAKoF,kBAAeJ,EACpBhF,KAAK8H,YAAc,GACnB9H,KAAK+H,SAAW,EAChB/H,KAAKgI,UAAY,GACjBhI,KAAKuB,GAAK,EACVvB,KAAKiI,oBAAiBjD,EACtBhF,KAAKkI,SAAW,GAChBlI,KAAKmI,WAAa,EAClBnI,KAAKoI,OAAS,EACdpI,KAAKqI,KAAO,EACZrI,KAAKsI,WAAa,GA/Bf,OAAAxI,OAAAiB,EAAA,EAAAjB,CAAA4H,EAAA,EAAA1G,IAAA,gBAAAC,MAAA,SAmCe0G,EAAiBC,EAAgBC,EAAUzC,EAAmB0C,EAAqBC,EAAkBC,EAAmBzG,EAAY0G,EAAqBC,EAAkBC,EAAoBC,EAAgBC,EAAcC,GAE1OtI,KAAK2H,QAAUA,EACpB3H,KAAK4H,UAAYA,EACjB5H,KAAK6H,IAAMA,EACX7H,KAAKoF,aAAeA,EACpBpF,KAAK8H,YAAcA,EACnB9H,KAAK+H,SAAWA,EAChB/H,KAAKgI,UAAYA,EACjBhI,KAAKuB,GAAKA,EACVvB,KAAKiI,eAAiBA,EACtBjI,KAAKkI,SAAWA,EAChBlI,KAAKmI,WAAaA,EAClBnI,KAAKoI,OAASA,EACdpI,KAAKqI,KAAOA,EACZrI,KAAKsI,WAAaA,MAlDfZ,EAAA,GA6Gaa,EAAb,WASC,SAAAA,IAAezI,OAAAC,EAAA,EAAAD,CAAAE,KAAAuI,GACdvI,KAAKwI,kBAAexD,EACzBhF,KAAKoF,kBAAeJ,EACpBhF,KAAKuB,GAAK,EACVvB,KAAKqF,OAAS,EACdrF,KAAKkF,YAASF,EACdhF,KAAKyI,WAAa,EAff,OAAA3I,OAAAiB,EAAA,EAAAjB,CAAAyI,EAAA,EAAAvH,IAAA,gBAAAC,MAAA,SAmBeuH,EAAmBpD,EAAmB7D,EAAY8D,EAAgBH,EAAauD,GAE5FzI,KAAKwI,aAAeA,EACzBxI,KAAKoF,aAAeA,EACpBpF,KAAKuB,GAAKA,EACVvB,KAAKqF,OAASA,EACdrF,KAAKkF,OAASA,EACdlF,KAAKyI,WAAaA,MA1BfF,EAAA,GA6DaG,EAAb,WAKC,SAAAA,IAAe5I,OAAAC,EAAA,EAAAD,CAAAE,KAAA0I,GACd1I,KAAKuB,GAAK,EACfvB,KAAKiF,KAAO,GAPT,OAAAnF,OAAAiB,EAAA,EAAAjB,CAAA4I,EAAA,EAAA1H,IAAA,gBAAAC,MAAA,SAWeM,EAAY0D,GAEzBjF,KAAKuB,GAAKA,EACfvB,KAAKiF,KAAOA,MAdTyD,EAAA,GCrtBkBC,aAMjB,SAAAA,IAAe7I,OAAAC,EAAA,EAAAD,CAAAE,KAAA2I,GACjB3I,KAAK+E,UAAOC,EACdhF,KAAKuB,GAAK,EACVvB,KAAKiF,KAAO,GACZjF,KAAKkF,OAAS,4DAICH,EAAWxD,EAAY0D,EAAcC,GAElDlF,KAAK+E,KAAOA,EACd/E,KAAKuB,GAAKA,EACVvB,KAAKiF,KAAOA,EACZjF,KAAKkF,OAASA,sCAMZ,OAAO0D,kBCvBYC,oHAEMC,GAEzB,IAAIC,EAAW,IAAIJ,EAOnB,OANAI,EAASC,cAAcF,EAAI/D,KAAK+D,EAAIvH,GAAGuH,EAAI7D,KAAK6D,EAAI5D,QAM7C6D,mDAGiBE,GAExB,IAAIF,EAAW,IAAIG,EAEnB,OADAH,EAASC,cAAcC,EAAMlE,KAAKkE,EAAM1H,GAAG0H,EAAMhE,KAAKgE,EAAM/D,QACrD6D,WC6DHI,EAAcC,YAAkC,CAClDC,iBAAkB,SAAAhH,GAEpB,IAAI0G,EAAW,IAAIJ,EAKnB,YAJmB3D,GAAf3C,EAAM4G,OAETF,EAASC,cAAc3G,EAAM4G,MAAOlE,KAAK1C,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOhE,KAAK5C,EAAM4G,MAAO/D,QAElF6D,GAGLO,SAAU,SAAAC,GACR,IAAIC,EAAsC,GAU1C,YARexE,GAAfuE,EAAOxE,OACGyE,EAAOzE,KAAO,YACS,IAAfwE,EAAOtE,OACfuE,EAAOvE,KAAO,YACW,GAAjBsE,EAAOrE,SACfsE,EAAOtE,OAAS,YAGnBsE,GAGTC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAIf,EAEjB/E,IAAM+F,KAAKtH,EAAUE,YAAcgB,EAAUZ,OAC7C+G,EAAOE,yBAAyBP,GAChC,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEb,SAAAzE,GACLF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,qBAG1B7B,YAAa,eA9CGsB,CAjEkD,SAAC/G,GAEpE,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAkC5C,EAAMmH,OAAOvE,KAC5D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAGR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAAQ0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACrCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACNqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAIpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAIpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAKhGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAoElF8J,6MAEnBxK,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,4EAIrF,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAELxL,KAAKY,MAAM2K,cACLZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAElCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAAC1B,EAAD,CAAaF,MAAOjJ,KAAKY,MAAMqI,QAGxC,YAhByC9G,IAAMuJ,WC/HpDC,EAAqB,SAAC1C,GAEzB,OACO0B,EAAAC,EAAAC,cAAA,QAAOE,KAAK,QAClBJ,EAAAC,EAAAC,cAAA,UACcvJ,UAAU,oEACVS,QAAS,SAACb,GAAQ+H,EAAM2C,QAAQC,KAAKjJ,EAAaC,OAAS,SAAWoG,EAAMA,MAAO1H,MAEnFoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEpBqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACnBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,QACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOlE,QAGd4F,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO1H,MAGdoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,QACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOhE,QAGd0F,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAS1J,UAAW,2BAAnC,UACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO/D,YAiCN4G,6MAEnBlL,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUZ,OAAS,IAAM7C,KAAKqC,MAAM0J,MAAMC,OAAOzK,GACnF,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEzBH,EAAS,IAAIf,EAERzE,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAEhI,SAAAnG,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAERxL,KAAKY,MAAM2K,cACHZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAEjCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACqB,EAAD,CAAoBN,QAAS5L,KAAKqC,MAAMuJ,QAAS3C,MAAOjJ,KAAKY,MAAMqI,QAG5E,YAvCyC9G,IAAMuJ,WCQpDS,EAAY/C,YAAkC,CAChDC,iBAAkB,SAAAhH,GACd,IAAI0G,EAAW,IAAIJ,EAEzB,OADAI,EAASC,cAAc3G,EAAM4G,MAAOlE,KAAK1C,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOhE,KAAK5C,EAAM4G,MAAO/D,QACjF6D,GAILO,SAAU,SAAAC,GACR,IAAIC,EAAsC,GAY1C,YAVexE,GAAfuE,EAAOxE,OACGyE,EAAOzE,KAAO,YACO,GAAbwE,EAAOhI,KACfiI,EAAOjI,GAAK,YACW,IAAfgI,EAAOtE,OACfuE,EAAOvE,KAAO,YACW,GAAjBsE,EAAOrE,SACfsE,EAAOtE,OAAS,YAGnBsE,GAETC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAErB,IAAI4E,EAAS,IAAIf,EAEd/E,IAAMsI,IAAI7J,EAAUE,YAAcgB,EAAUZ,OAAQ,IAAM0G,EAAOhI,GAEpEqI,EAAOE,yBAAyBP,GAC7B,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEtB,SAAAzE,GACIF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,oBAErBzF,KAAK,SAAA6E,OAMVjB,YAAa,aAnDCsB,CAzES,SAAC/G,GAEzB,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAkC5C,EAAMmH,OAAOvE,KAC5D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAIR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAEO0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QAC5CJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAGnGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,MAAS,qCAAwC,2BAArG,MACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,KAAK3D,UAAWoJ,EAAmB,MAAQ,0BAA4B,iBACzGA,EAAmB,OAASC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAGjGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAGnGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAIhGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAsFlF+K,6MAEnBzL,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUZ,OAAS,IAAM7C,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAAI,CACnFyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAErB,IAAIa,EAAS,IAAIf,EAERzH,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAGzI,SAAAnG,GACUF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAEFxL,KAAKY,MAAM2K,cAClBZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAExBzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACsB,EAAD,CAAWlD,MAAOjJ,KAAKY,MAAMqI,QAGtC,YAvCuC9G,IAAMuJ,mBCxInCY,oNAEjB1L,MAAS,CAAC2L,iBAAgB,EAAOC,eAAc,EAAOC,eAAe,GAAIC,QAAQ,IAAIrM,MAAyBsM,gBAAgB,IAAItM,MAAyBuM,YAAY,GAAIvB,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,uFAGrOzK,KAAK6M,sDAGO3L,EAAO4L,GAClB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaC,OAAS,SAAWiK,EAAIvL,8CAGhDL,EAAO4L,GACpB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaC,OAAS,IAAMiK,EAAIvL,8CAG3CL,GACdlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaC,OAAS,qDAGhC3B,EAAO4L,GAAkC,IAAA1L,EAAApB,KACvD8D,IAAMiJ,OAAOxK,EAAUE,YAAcgB,EAAUZ,OAAS,IAAMiK,EAAIvL,GAClE,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,iBAAkBD,eAAc,EAAMD,iBAAgB,KACnGnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAC7B,SAAAtI,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,wBAAyBD,eAAc,EAAOD,iBAAgB,mDAIhGrL,GACrBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGD,IAAAuD,EAAAxE,KAAnBiN,EAAmB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA8BgM,YAAYK,KAC1C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUZ,OAAS,aAE7DoK,IAEFC,GAAkB,UAAaD,GAGhCnJ,IAAMC,IAAImJ,EACV,CACClJ,QAAS,CACRC,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAqC,GACxCvD,EAAS,IAAIf,EAEjBE,EAASqE,QAAQ,SAAAC,GAEhBF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGzC7I,EAAKrD,SAAS,CAACuL,QAAQS,EAAYR,gBAAgBQ,EAAY9B,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAElI,SAAAnG,GACFF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CAACuL,QAAQ,IAAIrM,MAAwBsM,gBAAgB,IAAItM,MAAyBgL,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,4FAQrJ,IAAA6C,EAAAtN,KACN,GAAGA,KAAKY,MAAMyK,QACV,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MAEZ,GAAGxL,KAAKY,MAAM2K,cACT,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAErC,GAAGzK,KAAKY,MAAM0K,OAAQ,CAEvB,IAAIiC,EAA4B5C,EAAAC,EAAAC,cAAA,aAUhC,OARG7K,KAAKY,MAAM2L,kBAENgB,EADDvN,KAAKY,MAAM4L,cACK7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAuBtB,KAAKY,MAAM6L,gBAGhD9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAsBtB,KAAKY,MAAM6L,iBAIxE9B,EAAAC,EAAAC,cAAA,WAEQ0C,EAER5C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACXqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,SAAO5F,KAAK,SAAS3D,UAAU,eAAekM,YAAa,SAAUvM,MAAOjB,KAAKY,MAAMgM,YAAaa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAEhJyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yFAAyFS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAAIyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAI7KqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CAAC,CACNnO,OAAQ,QACRmO,QAAS,CACtB,CACenO,OAAQ,OACRoO,SAAU,OACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASjJ,SAElC,CACFrF,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAElC,CACF7B,OAAQ,OACRoO,SAAU,OACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS/I,SAElC,CACFvF,OAAQ,SACRoO,SAAU,SACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS9I,WAGtC,CACIxF,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OAAKnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,aAAaS,QAAS,SAAAb,GAAMoM,EAAKW,kBAAkB/M,EAAG4L,EAAIkB,YAA6CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAA3I,OACRqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yBAAyBS,QAAS,SAAAb,GAAMoM,EAAKY,gBAAgBhN,EAAG4L,EAAIkB,YAA6CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBADxI,OAERqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,wBAAwBS,QAAS,SAAAb,GAAMoM,EAAKa,kBAAkBjN,EAAG4L,EAAIkB,YAA6CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAQ3K,OAAO,YA3JuCa,IAAMuJ,YC/BnC0C,aAQnB,SAAAA,IAAetO,OAAAC,EAAA,EAAAD,CAAAE,KAAAoO,GACbpO,KAAKoF,kBAAeJ,EACpBhF,KAAKuB,GAAK,EACVvB,KAAKqF,OAAS,EACdrF,KAAKsF,WAAQN,EACbhF,KAAKuF,KAAO,GACZvF,KAAKkF,YAASF,4DAIdI,EACA7D,EACA8D,EACAC,EACAC,EACAL,GAEAlF,KAAKoF,aAAeA,EACpBpF,KAAKuB,GAAKA,EACVvB,KAAKqF,OAASA,EACdrF,KAAKsF,MAAQA,EACbtF,KAAKuF,KAAOA,EACZvF,KAAKkF,OAASA,sCAId,OAAO0D,kBChCUyF,oHAEjBvF,GAEA,IAAIC,EAAW,IAAIqF,EAUnB,OATArF,EAASC,cACPF,EAAI1D,aACJ0D,EAAIvH,GACJuH,EAAIzD,OACJyD,EAAIxD,MACJwD,EAAIvD,KACJuD,EAAI5D,QAGC6D,mDAIPE,GAEA,IAAIF,EAAW,IAAIG,EASnB,OARAH,EAASC,cACPC,EAAM7D,aACN6D,EAAM1H,GACN0H,EAAM5D,OACN4D,EAAM3D,MACN2D,EAAM1D,KACN0D,EAAM/D,QAED6D,WCkELuF,EAAgBlF,YAAoC,CACtDC,iBAAkB,SAAAhH,GAEpB,IAAI0G,EAAW,IAAIqF,EAKnB,YAJmBpJ,GAAf3C,EAAM4G,OAETF,EAASC,cAAc3G,EAAM4G,MAAO7D,aAAa/C,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAO5D,OAAOhD,EAAM4G,MAAO3D,MAAMjD,EAAM4G,MAAO1D,KAAKlD,EAAM4G,MAAO/D,QAEjI6D,GAGLO,SAAU,SAAAC,GACR,IAAIC,EAAwC,GAU5C,YARuBxE,GAAvBuE,EAAOnE,eACGoE,EAAOpE,aAAe,YACG,GAAjBmE,EAAOlE,SACfmE,EAAOnE,OAAS,YACO,IAAfkE,EAAOhE,OACfiE,EAAOjE,KAAO,YAGjBiE,GAGTC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAIyE,EAEjBvK,IAAM+F,KAAKtH,EAAUE,YAAcgB,EAAUX,SAC7C8G,EAAOE,yBAAyBP,GAChC,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEb,SAAAzE,GACLF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,qBAG1B7B,YAAa,iBA9CKsB,CAjFoD,SAAC/G,GAExE,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAoC5C,EAAMmH,OAAOvE,KAC9D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAGR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAAQ0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACrCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACNqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAI5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAItGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,SAAY,qCAAwC,2BAAxG,SACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,QAAQ3D,UAAWoJ,EAAmB,SAAW,0BAA4B,iBAC/GA,EAAmB,UAAYC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,YAIrGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAIpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAKhGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAoElFiN,8MAEnB3N,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,4EAIrF,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAELxL,KAAKY,MAAM2K,cACLZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAElCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACyD,EAAD,CAAerF,MAAOjJ,KAAKY,MAAMqI,QAG1C,YAhB2C9G,IAAMuJ,WC/ItD8C,GAAuB,SAACvF,GAC5B,OACE0B,EAAAC,EAAAC,cAAA,QAAME,KAAK,QACTJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,oEACVS,QAAS,SAAAb,GACP+H,EAAM2C,QAAQC,KACZjJ,EAAaE,SAAW,SAAWmG,EAAMA,MAAO1H,MAIpDoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO7D,gBAElDuF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO1H,MAElDoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAS1J,UAAW,2BAAnC,UAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO5D,UAElDsF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,QAAQ1J,UAAW,2BAAlC,SAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO3D,SAElDqF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,QAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO1D,QAElDoF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAS1J,UAAW,2BAAnC,UAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO/D,YA2BnCuJ,8MAInB7N,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAGI,IAAArJ,EAAApB,KAClBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+ByK,SAAS,KAExCvH,IACGC,IACCxB,EAAUE,YACRgB,EAAUX,SACV,IACA9C,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1B,CACEyC,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAEhBH,EAAS,IAAIyE,EAEjBjK,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CACZ8H,MAAOW,EAAOqC,0BAA0BlD,GACxCsC,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CACZ8H,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,sDAMtB,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OAElBX,EAAAC,EAAAC,cAAC6D,GAAD,CACE9C,QAAS5L,KAAKqC,MAAMuJ,QACpB3C,MAAOjJ,KAAKY,MAAMqI,QAIf,YApEuC9G,IAAMuJ,WCYpDiD,GAAcvF,YAAoC,CACpDC,iBAAkB,SAAAhH,GACd,IAAI0G,EAAW,IAAIqF,EAEzB,OADArF,EAASC,cAAc3G,EAAM4G,MAAO7D,aAAa/C,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAO5D,OAAOhD,EAAM4G,MAAO3D,MAAMjD,EAAM4G,MAAO1D,KAAKlD,EAAM4G,MAAO/D,QAChI6D,GAILO,SAAU,SAAAC,GACR,IAAIC,EAAwC,GAY5C,YAVuBxE,GAAvBuE,EAAOnE,eACGoE,EAAOpE,aAAe,YACD,GAAbmE,EAAOhI,KACfiI,EAAOjI,GAAK,YACa,GAAjBgI,EAAOlE,SACfmE,EAAOnE,OAAS,YACO,IAAfkE,EAAOhE,OACfiE,EAAOjE,KAAO,YAGjBiE,GAETC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAErB,IAAI4E,EAAS,IAAIyE,EAEdvK,IAAMsI,IAAI7J,EAAUE,YAAcgB,EAAUX,SAAU,IAAMyG,EAAOhI,GAEtEqI,EAAOE,yBAAyBP,GAC7B,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEtB,SAAAzE,GACIF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,oBAErBzF,KAAK,SAAA6E,OAMVjB,YAAa,eAnDGsB,CAvFS,SAAC/G,GAE3B,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAoC5C,EAAMmH,OAAOvE,KAC9D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAIR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAEO0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QAC5CJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAG3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,MAAS,qCAAwC,2BAArG,MACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,KAAK3D,UAAWoJ,EAAmB,MAAQ,0BAA4B,iBACzGA,EAAmB,OAASC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAGjGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAGrGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,SAAY,qCAAwC,2BAAxG,SACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,QAAQ3D,UAAWoJ,EAAmB,SAAW,0BAA4B,iBAC/GA,EAAmB,UAAYC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,YAGpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAGnGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAIhGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAsFlFsN,8MAEnBhO,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUX,SAAW,IAAM9C,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAAI,CACrFyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAErB,IAAIa,EAAS,IAAIyE,EAERjN,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAGzI,SAAAnG,GACUF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAEFxL,KAAKY,MAAM2K,cAClBZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAExBzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAAC8D,GAAD,CAAa1F,MAAOjJ,KAAKY,MAAMqI,QAGxC,YAvCyC9G,IAAMuJ,WCtJrCmD,8MAEjBjO,MAAS,CAAC2L,iBAAgB,EAAOC,eAAc,EAAOC,eAAe,GAAIC,QAAQ,IAAIrM,MAA2BsM,gBAAgB,IAAItM,MAA2BuM,YAAY,GAAIvB,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,uFAGzOzK,KAAK6M,sDAGO3L,EAAO4L,GAClB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaE,SAAW,SAAWgK,EAAIvL,8CAGlDL,EAAO4L,GACpB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaE,SAAW,IAAMgK,EAAIvL,8CAG7CL,GACdlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaE,SAAW,qDAGlC5B,EAAO4L,GAAoC,IAAA1L,EAAApB,KACzD8D,IAAMiJ,OAAOxK,EAAUE,YAAcgB,EAAUX,SAAW,IAAMgK,EAAIvL,GACpE,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,iBAAkBD,eAAc,EAAMD,iBAAgB,KACnGnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAC7B,SAAAtI,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,wBAAyBD,eAAc,EAAOD,iBAAgB,mDAIhGrL,GACrBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGD,IAAAuD,EAAAxE,KAAnBiN,EAAmB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA8BgM,YAAYK,KAC1C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUX,SAAW,aAE/DmK,IAEFC,GAAkB,UAAaD,GAGhCnJ,IAAMC,IAAImJ,EACV,CACClJ,QAAS,CACRC,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAuC,GAC1CvD,EAAS,IAAIyE,EAEjBtF,EAASqE,QAAQ,SAAAC,GAEhBF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGzC7I,EAAKrD,SAAS,CAACuL,QAAQS,EAAYR,gBAAgBQ,EAAY9B,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAElI,SAAAnG,GACFF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CAACuL,QAAQ,IAAIrM,MAA0BsM,gBAAgB,IAAItM,MAA2BgL,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,4FAQzJ,IAAA6C,EAAAtN,KACN,GAAGA,KAAKY,MAAMyK,QACV,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MAEZ,GAAGxL,KAAKY,MAAM2K,cACT,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAErC,GAAGzK,KAAKY,MAAM0K,OAAQ,CAEvB,IAAIiC,EAA4B5C,EAAAC,EAAAC,cAAA,aAUhC,OARG7K,KAAKY,MAAM2L,kBAENgB,EADDvN,KAAKY,MAAM4L,cACK7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAuBtB,KAAKY,MAAM6L,gBAGhD9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAsBtB,KAAKY,MAAM6L,iBAIxE9B,EAAAC,EAAAC,cAAA,WAEQ0C,EAER5C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACXqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,SAAO5F,KAAK,SAAS3D,UAAU,eAAekM,YAAa,SAAUvM,MAAOjB,KAAKY,MAAMgM,YAAaa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAEhJyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yFAAyFS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAAIyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAI7KqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CAAC,CACNnO,OAAQ,UACRmO,QAAS,CACtB,CACenO,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS5I,iBAElC,CACF1F,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAElC,CACF7B,OAAQ,SACRoO,SAAU,SACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS3I,WAElC,CACF3F,OAAQ,QACRoO,SAAU,QACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS1I,UAElC,CACF5F,OAAQ,OACRoO,SAAU,OACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzI,SAElC,CACF7F,OAAQ,SACRoO,SAAU,SACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS9I,WAGtC,CACIxF,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OAAKnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,aAAaS,QAAS,SAAAb,GAAMoM,EAAKW,kBAAkB/M,EAAG4L,EAAIkB,YAA+CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAA7I,OACRqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yBAAyBS,QAAS,SAAAb,GAAMoM,EAAKY,gBAAgBhN,EAAG4L,EAAIkB,YAA+CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAD1I,OAERqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,wBAAwBS,QAAS,SAAAb,GAAMoM,EAAKa,kBAAkBjN,EAAG4L,EAAIkB,YAA+CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAQ7K,OAAO,YAvKyCa,IAAMuJ,WC/BrCoD,cAInB,SAAAA,IAAehP,OAAAC,EAAA,EAAAD,CAAAE,KAAA8O,GACb9O,KAAKuB,GAAK,EACVvB,KAAKyB,KAAO,6DAGAF,EAAYE,GACxBzB,KAAKuB,GAAKA,EACVvB,KAAKyB,KAAOA,sCAIZ,OAAOmH,kBCbUmG,qHAEjBjG,GAEA,IAAIC,EAAW,IAAI+F,GAGnB,OAFA/F,EAASC,cAAcF,EAAIvH,GAAIuH,EAAIrH,MAE5BsH,mDAIPE,GAEA,IAAIF,EAAW,IAAIG,EAEnB,OADAH,EAASC,cAAcC,EAAM1H,GAAI0H,EAAMxH,MAChCsH,WC6ELiG,GAAiB5F,YAAqC,CAC1DC,iBAAkB,SAAAhH,GAChB,IAAI0G,EAAW,IAAI+F,GAInB,YAHmB9J,GAAf3C,EAAM4G,OACRF,EAASC,cAAc3G,EAAM4G,MAAO1H,GAAIc,EAAM4G,MAAOxH,MAEhDsH,GAGTO,SAAU,SAAAC,GACR,IAAIC,EAA0C,GAM9C,MAJmB,IAAfD,EAAO9H,OACT+H,EAAO/H,KAAO,YAGT+H,GAGTC,aAAc,SAACF,EAAQG,GACrBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAImF,GAEjBjL,IACG+F,KACCtH,EAAUE,YAAcgB,EAAUV,UAClC6G,EAAOE,yBAAyBP,GAChC,CACEvF,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAGpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEd,SAAAzE,GACEF,QAAQC,IAAIC,GACZoF,EAAQC,UAAU,qBAI1B7B,YAAa,kBA/CQsB,CA9EkD,SACvE/G,GAEA,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GACpB,IAAI8D,EAAW,GAoBf,OAlBE1G,EAAM6H,QAAQjF,IACd5C,EAAMmH,OAAOvE,KAEb8D,GAAY1G,EAAMmH,OAAOvE,IAIzB+E,GACAA,EAAOG,kBACPH,EAAOG,iBAAiBC,KACtB,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAG5CxB,GAAYiB,EAAOG,iBAAiBK,OAClC,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAC1C,GAAGE,cAGA1B,GAGL2B,EAAqB,SAACzF,GACxB,MAA+B,IAAxBgF,EAAehF,IAGxB,OACE0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACvCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,QACf,qCACA,2BALR,QAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,OACL3D,UACEoJ,EAAmB,QACf,0BACA,iBAGPA,EAAmB,SAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAKrDU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCb,GAAUA,EAAOmB,QAChBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WACE,KAEH0I,IAAWA,EAAOmB,QACjBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBACE,QAiEW2N,8MAInBrO,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,4EAId,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OACbX,EAAAC,EAAAC,cAACmE,GAAD,CAAgB/F,MAAOjJ,KAAKY,MAAMqI,QAElC,YApBwC9G,IAAMuJ,WC1IrDwD,GAAwB,SAACjG,GAC7B,OACE0B,EAAAC,EAAAC,cAAA,QAAME,KAAK,QACTJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,oEACVS,QAAS,SAAAb,GACP+H,EAAM2C,QAAQC,KACZjJ,EAAaG,UAAY,SAAWkG,EAAMA,MAAO1H,MAIrDoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO1H,MAElDoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,QAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAOxH,UA2BnC0N,8MAInBvO,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAGI,IAAArJ,EAAApB,KAClBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+ByK,SAAS,KAExCvH,IACGC,IACCxB,EAAUE,YACRgB,EAAUV,UACV,IACA/C,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1B,CACEyC,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAEhBH,EAAS,IAAImF,GAEjB3K,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CACZ8H,MAAOW,EAAOqC,0BAA0BlD,GACxCsC,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CACZ8H,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,sDAMtB,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OAElBX,EAAAC,EAAAC,cAACuE,GAAD,CACExD,QAAS5L,KAAKqC,MAAMuJ,QACpB3C,MAAOjJ,KAAKY,MAAMqI,QAIf,YApEwC9G,IAAMuJ,WCQrD2D,GAAejG,YAAqC,CACtDC,iBAAkB,SAAAhH,GACd,IAAI0G,EAAW,IAAI+F,GAEzB,OADA/F,EAASC,cAAc3G,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOxH,MAC7CsH,GAILO,SAAU,SAAAC,GACR,IAAIC,EAAyC,GAQ7C,OANa,GAAbD,EAAOhI,KACGiI,EAAOjI,GAAK,YACW,IAAfgI,EAAO9H,OACf+H,EAAO/H,KAAO,YAGjB+H,GAETC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAErB,IAAI4E,EAAS,IAAImF,GAEdjL,IAAMsI,IAAI7J,EAAUE,YAAcgB,EAAUV,UAAW,IAAMwG,EAAOhI,GAEvEqI,EAAOE,yBAAyBP,GAC7B,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEtB,SAAAzE,GACIF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,oBAErBzF,KAAK,SAAA6E,OAMVjB,YAAa,gBA/CIsB,CA3DS,SAAC/G,GAE5B,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAqC5C,EAAMmH,OAAOvE,KAC/D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAIR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAEO0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QAC5CJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,MAAS,qCAAwC,2BAArG,MACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,KAAK3D,UAAWoJ,EAAmB,MAAQ,0BAA4B,iBACzGA,EAAmB,OAASC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAGjGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAI9FU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAkFlFgO,8MAEnB1O,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUV,UAAY,IAAM/C,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAAI,CACtFyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAErB,IAAIa,EAAS,IAAImF,GAER3N,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAGzI,SAAAnG,GACUF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAEFxL,KAAKY,MAAM2K,cAClBZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAExBzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACwE,GAAD,CAAcpG,MAAOjJ,KAAKY,MAAMqI,QAGzC,YAvC0C9G,IAAMuJ,WCtHtC6D,8MAEjB3O,MAAS,CAAC2L,iBAAgB,EAAOC,eAAc,EAAOC,eAAe,GAAIC,QAAQ,IAAIrM,MAA4BsM,gBAAgB,IAAItM,MAA4BuM,YAAY,GAAIvB,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,uFAG3OzK,KAAK6M,sDAGO3L,EAAO4L,GAClB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaG,UAAY,SAAW+J,EAAIvL,8CAGnDL,EAAO4L,GACpB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaG,UAAY,IAAM+J,EAAIvL,8CAG9CL,GACdlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaG,UAAY,qDAGnC7B,EAAO4L,GAAqC,IAAA1L,EAAApB,KAC1D8D,IAAMiJ,OAAOxK,EAAUE,YAAcgB,EAAUV,UAAY,IAAM+J,EAAIvL,GACrE,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,iBAAkBD,eAAc,EAAMD,iBAAgB,KACnGnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAC7B,SAAAtI,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,wBAAyBD,eAAc,EAAOD,iBAAgB,mDAIhGrL,GACrBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGD,IAAAuD,EAAAxE,KAAnBiN,EAAmB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA8BgM,YAAYK,KAC1C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUV,UAAY,aAEhEkK,IAEFC,GAAkB,UAAaD,GAGhCnJ,IAAMC,IAAImJ,EACV,CACClJ,QAAS,CACRC,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAwC,GAC3CvD,EAAS,IAAImF,GAEjBhG,EAASqE,QAAQ,SAAAC,GAEhBF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGzC7I,EAAKrD,SAAS,CAACuL,QAAQS,EAAYR,gBAAgBQ,EAAY9B,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAElI,SAAAnG,GACFF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CAACuL,QAAQ,IAAIrM,MAA2BsM,gBAAgB,IAAItM,MAA4BgL,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,4FAQ3J,IAAA6C,EAAAtN,KACN,GAAGA,KAAKY,MAAMyK,QACV,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MAEZ,GAAGxL,KAAKY,MAAM2K,cACT,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAErC,GAAGzK,KAAKY,MAAM0K,OAAQ,CAEvB,IAAIiC,EAA4B5C,EAAAC,EAAAC,cAAA,aAUhC,OARG7K,KAAKY,MAAM2L,kBAENgB,EADDvN,KAAKY,MAAM4L,cACK7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAuBtB,KAAKY,MAAM6L,gBAGhD9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAsBtB,KAAKY,MAAM6L,iBAIxE9B,EAAAC,EAAAC,cAAA,WAEQ0C,EAER5C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACXqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,SAAO5F,KAAK,SAAS3D,UAAU,eAAekM,YAAa,SAAUvM,MAAOjB,KAAKY,MAAMgM,YAAaa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAEhJyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yFAAyFS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAAIyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAI7KqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CAAC,CACNnO,OAAQ,WACRmO,QAAS,CACtB,CACenO,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAElC,CACF7B,OAAQ,OACRoO,SAAU,OACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASvM,SAGtC,CACI/B,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OAAKnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,aAAaS,QAAS,SAAAb,GAAMoM,EAAKW,kBAAkB/M,EAAG4L,EAAIkB,YAAgDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAA9I,OACRqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yBAAyBS,QAAS,SAAAb,GAAMoM,EAAKY,gBAAgBhN,EAAG4L,EAAIkB,YAAgDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAD3I,OAERqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,wBAAwBS,QAAS,SAAAb,GAAMoM,EAAKa,kBAAkBjN,EAAG4L,EAAIkB,YAAgDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAQ9K,OAAO,YA/I0Ca,IAAMuJ,WC/BtC8D,cAWjB,SAAAA,IAAe1P,OAAAC,EAAA,EAAAD,CAAAE,KAAAwP,GACjBxP,KAAK0F,QAAU,GACjB1F,KAAKoF,kBAAeJ,EACpBhF,KAAKuB,GAAK,EACVvB,KAAK2F,kBAAoB,EACzB3F,KAAKqF,OAAS,EACdrF,KAAK4F,aAAe,GACpB5F,KAAKuF,KAAO,GACZvF,KAAK6F,gBAAkB,GACvB7F,KAAKkF,YAASF,4DAICU,EAAiBN,EAAmB7D,EAAYoE,EAA2BN,EAAgBO,EAAsBL,EAAcM,EAAyBX,GAErKlF,KAAK0F,QAAUA,EACjB1F,KAAKoF,aAAeA,EACpBpF,KAAKuB,GAAKA,EACVvB,KAAK2F,kBAAoBA,EACzB3F,KAAKqF,OAASA,EACdrF,KAAK4F,aAAeA,EACpB5F,KAAKuF,KAAOA,EACZvF,KAAK6F,gBAAkBA,EACvB7F,KAAKkF,OAASA,sCAMZ,OAAO0D,kBCtCY6G,qHAEM3G,GAEzB,IAAIC,EAAW,IAAIyG,GAOnB,OANAzG,EAASC,cAAcF,EAAIpD,QAAQoD,EAAI1D,aAAa0D,EAAIvH,GAAGuH,EAAInD,kBAAkBmD,EAAIzD,OAAOyD,EAAIlD,aAAakD,EAAIvD,KAAKuD,EAAIjD,gBAAgBiD,EAAI5D,QAMvI6D,mDAGiBE,GAExB,IAAIF,EAAW,IAAIG,EAEnB,OADAH,EAASC,cAAcC,EAAMvD,QAAQuD,EAAM7D,aAAa6D,EAAM1H,GAAG0H,EAAMtD,kBAAkBsD,EAAM5D,OAAO4D,EAAMrD,aAAaqD,EAAM1D,KAAK0D,EAAMpD,gBAAgBoD,EAAM/D,QACzJ6D,WCqGH2G,GAAoBtG,YAAwC,CAC9DC,iBAAkB,SAAAhH,GAEpB,IAAI0G,EAAW,IAAIyG,GAKnB,YAJmBxK,GAAf3C,EAAM4G,OAETF,EAASC,cAAc3G,EAAM4G,MAAOvD,QAAQrD,EAAM4G,MAAO7D,aAAa/C,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOtD,kBAAkBtD,EAAM4G,MAAO5D,OAAOhD,EAAM4G,MAAOrD,aAAavD,EAAM4G,MAAO1D,KAAKlD,EAAM4G,MAAOpD,gBAAgBxD,EAAM4G,MAAO/D,QAEzN6D,GAGLO,SAAU,SAAAC,GACR,IAAIC,EAA4C,GAYhD,YAVuBxE,GAAvBuE,EAAOnE,eACGoE,EAAOpE,aAAe,YACc,GAA5BmE,EAAO5D,oBACf6D,EAAO7D,kBAAoB,YACF,GAAjB4D,EAAOlE,SACfmE,EAAOnE,OAAS,YACe,IAAvBkE,EAAO3D,eACf4D,EAAO5D,aAAe,YAGzB4D,GAGTC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAI6F,GAEjB3L,IAAM+F,KAAKtH,EAAUE,YAAcgB,EAAUT,cAC7C4G,EAAOE,yBAAyBP,GAChC,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEb,SAAAzE,GACLF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,qBAG1B7B,YAAa,qBAhDSsB,CAzGwD,SAAC/G,GAEhF,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAwC5C,EAAMmH,OAAOvE,KAClE8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAGR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAAQ0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACrCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACNqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,WAAc,qCAAwC,2BAA1G,WACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,UAAU3D,UAAWoJ,EAAmB,WAAa,0BAA4B,iBACnHA,EAAmB,YAAcC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,cAIvGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAI5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,qBAAwB,qCAAwC,2BAApH,qBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,oBAAoB3D,UAAWoJ,EAAmB,qBAAuB,0BAA4B,iBACvIA,EAAmB,sBAAwBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,wBAIjHU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAItGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAI5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAIpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,mBAAsB,qCAAwC,2BAAlH,mBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,kBAAkB3D,UAAWoJ,EAAmB,mBAAqB,0BAA4B,iBACnIA,EAAmB,oBAAsBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,sBAI/GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAKhGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAsElFqO,8MAEnB/O,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,4EAIrF,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAELxL,KAAKY,MAAM2K,cACLZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAElCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAAC6E,GAAD,CAAmBzG,MAAOjJ,KAAKY,MAAMqI,QAG9C,YAhB+C9G,IAAMuJ,WCzK1DkE,GAA2B,SAAC3G,GAE/B,OACO0B,EAAAC,EAAAC,cAAA,QAAOE,KAAK,QAClBJ,EAAAC,EAAAC,cAAA,UACcvJ,UAAU,oEACVS,QAAS,SAACb,GAAQ+H,EAAM2C,QAAQC,KAAKjJ,EAAaI,cAAgB,SAAWiG,EAAMA,MAAO1H,MAE1FoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEpBqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACnBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,UAAU1J,UAAW,2BAApC,WACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOvD,WAGdiF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO7D,gBAGduF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO1H,MAGdoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,oBAAoB1J,UAAW,2BAA9C,qBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOtD,qBAGdgF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAS1J,UAAW,2BAAnC,UACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO5D,UAGdsF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOrD,gBAGd+E,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,QACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO1D,QAGdoF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,kBAAkB1J,UAAW,2BAA5C,mBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOpD,mBAGd8E,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAS1J,UAAW,2BAAnC,UACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO/D,YAiCN2K,8MAEnBjP,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUT,cAAgB,IAAMhD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1F,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEzBH,EAAS,IAAI6F,GAERrL,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAEhI,SAAAnG,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAERxL,KAAKY,MAAM2K,cACHZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAEjCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACiF,GAAD,CAA0BlE,QAAS5L,KAAKqC,MAAMuJ,QAAS3C,MAAOjJ,KAAKY,MAAMqI,QAGlF,YAvC+C9G,IAAMuJ,WCuM1DqE,GAAkB3G,YAAwC,CAC9DC,iBAAkB,SAAAhH,GAChB,IAAI0G,EAAW,IAAIyG,GAYnB,OAXAzG,EAASC,cACP3G,EAAM4G,MAAOvD,QACbrD,EAAM4G,MAAO7D,aACb/C,EAAM4G,MAAO1H,GACbc,EAAM4G,MAAOtD,kBACbtD,EAAM4G,MAAO5D,OACbhD,EAAM4G,MAAOrD,aACbvD,EAAM4G,MAAO1D,KACblD,EAAM4G,MAAOpD,gBACbxD,EAAM4G,MAAO/D,QAER6D,GAITO,SAAU,SAAAC,GACR,IAAIC,EAA6C,GAkBjD,YAhB2BxE,GAAvBuE,EAAOnE,eACToE,EAAOpE,aAAe,YAEP,GAAbmE,EAAOhI,KACTiI,EAAOjI,GAAK,YAEkB,GAA5BgI,EAAO5D,oBACT6D,EAAO7D,kBAAoB,YAER,GAAjB4D,EAAOlE,SACTmE,EAAOnE,OAAS,YAES,IAAvBkE,EAAO3D,eACT4D,EAAO5D,aAAe,YAGjB4D,GAETC,aAAc,SAACF,EAAQG,GACrBA,EAAQC,eAAU3E,GAElB,IAAI4E,EAAS,IAAI6F,GAEjB3L,IACGsI,IACC7J,EAAUE,YAAcgB,EAAUT,cAAgB,IAAMuG,EAAOhI,GAE/DqI,EAAOE,yBAAyBP,GAChC,CACEvF,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAGpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEd,SAAAzE,GACEF,QAAQC,IAAIC,GACZoF,EAAQC,UAAU,oBAGrBzF,KAAK,SAAA6E,OAKVjB,YAAa,mBAzESsB,CAtSO,SAAC/G,GAC9B,IAAI2H,EAAS3H,EAAM2H,OAIfC,EAAiB,SAAChF,GACpB,IAAI8D,EAAW,GAoBf,OAlBE1G,EAAM6H,QAAQjF,IACd5C,EAAMmH,OAAOvE,KAEb8D,GAAY1G,EAAMmH,OAAOvE,IAIzB+E,GACAA,EAAOG,kBACPH,EAAOG,iBAAiBC,KACtB,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAG5CxB,GAAYiB,EAAOG,iBAAiBK,OAClC,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAC1C,GAAGE,cAGA1B,GAGL2B,EAAqB,SAACzF,GACxB,MAA+B,IAAxBgF,EAAehF,IAGxB,OACE0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACvCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,WACf,qCACA,2BALR,WAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,UACL3D,UACEoJ,EAAmB,WACf,0BACA,iBAGPA,EAAmB,YAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,cAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,gBACf,qCACA,2BALR,gBAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,eACL3D,UACEoJ,EAAmB,gBACf,0BACA,iBAGPA,EAAmB,iBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,mBAKxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,MACf,qCACA,2BALR,MAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,KACL3D,UACEoJ,EAAmB,MACf,0BACA,iBAGPA,EAAmB,OAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,qBACf,qCACA,2BALR,qBAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,oBACL3D,UACEoJ,EAAmB,qBACf,0BACA,iBAGPA,EAAmB,sBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,wBAKxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,UACf,qCACA,2BALR,UAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,SACL3D,UACEoJ,EAAmB,UACf,0BACA,iBAGPA,EAAmB,WAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,gBACf,qCACA,2BALR,gBAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,eACL3D,UACEoJ,EAAmB,gBACf,0BACA,iBAGPA,EAAmB,iBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,mBAKxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,QACf,qCACA,2BALR,QAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,OACL3D,UACEoJ,EAAmB,QACf,0BACA,iBAGPA,EAAmB,SAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,mBACf,qCACA,2BALR,mBAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,kBACL3D,UACEoJ,EAAmB,mBACf,0BACA,iBAGPA,EAAmB,oBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,sBAKxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,UACf,qCACA,2BALR,UAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,SACL3D,UACEoJ,EAAmB,UACf,0BACA,iBAGPA,EAAmB,WAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAKrDU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCb,GAAUA,EAAOmB,QAChBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WACE,KAEH0I,IAAWA,EAAOmB,QACjBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBACE,QAqGW0O,8MAInBpP,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAGI,IAAArJ,EAAApB,KAClBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+ByK,SAAS,KAExCvH,IACGC,IACCxB,EAAUE,YACRgB,EAAUT,cACV,IACAhD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1B,CACEyC,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAEZ,IAAIa,EAAS,IAAI6F,GAEjBrO,EAAKD,SAAS,CACZ8H,MAAOW,EAAOqC,0BAA0BlD,GACxCsC,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CACZ8H,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,sDAMtB,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OACbX,EAAAC,EAAAC,cAACkF,GAAD,CAAiB9G,MAAOjJ,KAAKY,MAAMqI,QAEnC,YA/DyC9G,IAAMuJ,WCxXvCuE,8MAInBrP,MAAQ,CACN2L,iBAAiB,EACjBC,eAAe,EACfC,eAAgB,GAChBC,QAAS,IAAIrM,MACbsM,gBAAiB,IAAItM,MACrBuM,YAAa,GACbvB,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAIdzK,KAAK6M,sDAGS3L,EAAQ4L,GACtB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaI,cAAgB,SAAW8J,EAAIvL,8CAGpDL,EAAQ4L,GACxB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaI,cAAgB,IAAM8J,EAAIvL,8CAG/CL,GAChBlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaI,cAAgB,qDAGrC9B,EAAQ4L,GAAyC,IAAA1L,EAAApB,KACjE8D,IACGiJ,OAAOxK,EAAUE,YAAcgB,EAAUT,cAAgB,IAAM8J,EAAIvL,GAAI,CACtEyC,QAAS,CACPC,eAAgB,sBAGnBC,KACC,SAAAC,GACE/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GACKsB,EAAKR,MADV,CAEE6L,eAAgB,iBAChBD,eAAe,EACfD,iBAAiB,KAEnBnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAE9B,SAAAtI,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GACKsB,EAAKR,MADV,CAEE6L,eAAgB,wBAChBD,eAAe,EACfD,iBAAiB,mDAMPrL,GAClBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGH,IAAAuD,EAAAxE,KAApBiN,EAAoB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+BgM,YAAaK,KAC5C,IAAIC,EACF3K,EAAUE,YAAcgB,EAAUT,cAAgB,aAEhDiK,IACFC,GAAkB,UAAYD,GAGhCnJ,IACGC,IAAImJ,EAAgB,CACnBlJ,QAAS,CACPC,eAAgB,sBAGnBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAA0C,GAC1CvD,EAAS,IAAI6F,GAEjB1G,EAASqE,QAAQ,SAAAC,GACfF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGnD7I,EAAKrD,SAAS,CACZuL,QAASS,EACTR,gBAAiBQ,EACjB9B,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CACZuL,QAAS,IAAIrM,MACbsM,gBAAiB,IAAItM,MACrBgL,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,4FAQf,IAAA6C,EAAAtN,KACP,GAAIA,KAAKY,MAAMyK,QACb,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MACF,GAAIxL,KAAKY,MAAM2K,cACpB,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eACjC,GAAIzK,KAAKY,MAAM0K,OAAQ,CAC5B,IAAIiC,EAA6B5C,EAAAC,EAAAC,cAAA,aAiBjC,OAfI7K,KAAKY,MAAM2L,kBAEXgB,EADEvN,KAAKY,MAAM4L,cAEX7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBACZtB,KAAKY,MAAM6L,gBAKd9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBACZtB,KAAKY,MAAM6L,iBAMlB9B,EAAAC,EAAAC,cAAA,WACG0C,EACD5C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACbqJ,EAAAC,EAAAC,cAAA,SACE5F,KAAK,SACL3D,UAAU,eACVkM,YAAa,SACbvM,MAAOjB,KAAKY,MAAMgM,YAClBa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAG5CyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACbqJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,yFACVS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAErCyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAKrBqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACE7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CACP,CACEnO,OAAQ,cACRmO,QAAS,CACP,CACEnO,OAAQ,UACRoO,SAAU,UACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAStI,YAGxC,CACEhG,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS5I,iBAGxC,CACE1F,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAGxC,CACE7B,OAAQ,oBACRoO,SAAU,oBACVC,KAAM,SAAA1L,GACJ,OACEsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASrI,sBAInC,CACEjG,OAAQ,SACRoO,SAAU,SACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS3I,WAGxC,CACE3F,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASpI,iBAGxC,CACElG,OAAQ,OACRoO,SAAU,OACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzI,SAGxC,CACE7F,OAAQ,kBACRoO,SAAU,kBACVC,KAAM,SAAA1L,GACJ,OACEsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASnI,oBAInC,CACEnG,OAAQ,SACRoO,SAAU,SACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS9I,WAGxC,CACExF,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OACPnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,aACVS,QAAS,SAAAb,GACPoM,EAAKW,kBACH/M,EACA4L,EAAIkB,YAIRrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAVjB,OAaEqJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,yBACVS,QAAS,SAAAb,GACPoM,EAAKY,gBACHhN,EACA4L,EAAIkB,YAIRrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAtBjB,OAyBEqJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,wBACVS,QAAS,SAAAb,GACPoM,EAAKa,kBACHjN,EACA4L,EAAIkB,YAIRrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAYjC,OAAO,YA9R2Ca,IAAMuJ,WC7BzCwE,cAInB,SAAAA,IAAepQ,OAAAC,EAAA,EAAAD,CAAAE,KAAAkQ,GACblQ,KAAKuB,GAAK,EACVvB,KAAKyB,KAAO,6DAGAF,EAAYE,GACxBzB,KAAKuB,GAAKA,EACVvB,KAAKyB,KAAOA,sCAIZ,OAAOmH,kBCbUuH,qHAEjBrH,GAEA,IAAIC,EAAW,IAAImH,GAGnB,OAFAnH,EAASC,cAAcF,EAAIvH,GAAIuH,EAAIrH,MAE5BsH,mDAIPE,GAEA,IAAIF,EAAW,IAAIG,EAEnB,OADAH,EAASC,cAAcC,EAAM1H,GAAI0H,EAAMxH,MAChCsH,WC+ELqH,GAAwBhH,YAA4C,CACxEC,iBAAkB,SAAAhH,GAChB,IAAI0G,EAAW,IAAImH,GAInB,YAHmBlL,GAAf3C,EAAM4G,OACRF,EAASC,cAAc3G,EAAM4G,MAAO1H,GAAIc,EAAM4G,MAAOxH,MAEhDsH,GAGTO,SAAU,SAAAC,GACR,IAAIC,EAAiD,GAMrD,MAJmB,IAAfD,EAAO9H,OACT+H,EAAO/H,KAAO,YAGT+H,GAGTC,aAAc,SAACF,EAAQG,GACrBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAIuG,GAEjBrM,IACG+F,KACCtH,EAAUE,YAAcgB,EAAUR,iBAClC2G,EAAOE,yBAAyBP,GAChC,CACEvF,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAGpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEd,SAAAzE,GACEF,QAAQC,IAAIC,GACZoF,EAAQC,UAAU,qBAI1B7B,YAAa,yBA/CesB,CA9E1B,SAAC/G,GACH,IAAI2H,EAAS3H,EAAM2H,OAIfC,EAAiB,SAAChF,GACpB,IAAI8D,EAAW,GAoBf,OAlBE1G,EAAM6H,QAAQjF,IACd5C,EAAMmH,OAAOvE,KAEb8D,GAAY1G,EAAMmH,OAAOvE,IAIzB+E,GACAA,EAAOG,kBACPH,EAAOG,iBAAiBC,KACtB,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAG5CxB,GAAYiB,EAAOG,iBAAiBK,OAClC,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAC1C,GAAGE,cAGA1B,GAGL2B,EAAqB,SAACzF,GACxB,MAA+B,IAAxBgF,EAAehF,IAGxB,OACE0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACvCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,QACf,qCACA,2BALR,QAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,OACL3D,UACEoJ,EAAmB,QACf,0BACA,iBAGPA,EAAmB,SAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAKrDU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCb,GAAUA,EAAOmB,QAChBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WACE,KAEH0I,IAAWA,EAAOmB,QACjBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBACE,QAiEW+O,8MAInBzP,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,4EAId,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OACbX,EAAAC,EAAAC,cAACuF,GAAD,CAAuBnH,MAAOjJ,KAAKY,MAAMqI,QAEzC,YApB+C9G,IAAMuJ,WC5I5D4E,GAA+B,SAACrH,GACpC,OACE0B,EAAAC,EAAAC,cAAA,QAAME,KAAK,QACTJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,oEACVS,QAAS,SAAAb,GACP+H,EAAM2C,QAAQC,KACZjJ,EAAaK,iBAAmB,SAAWgG,EAAMA,MAAO1H,MAI5DoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO1H,MAElDoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,QAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAOxH,UA2BnC8O,8MAInB3P,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAGI,IAAArJ,EAAApB,KAClBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+ByK,SAAS,KAExCvH,IACGC,IACCxB,EAAUE,YACRgB,EAAUR,iBACV,IACAjD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1B,CACEyC,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAEhBH,EAAS,IAAIuG,GAEjB/L,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CACZ8H,MAAOW,EAAOqC,0BAA0BlD,GACxCsC,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CACZ8H,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,sDAMtB,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OAElBX,EAAAC,EAAAC,cAAC2F,GAAD,CACE5E,QAAS5L,KAAKqC,MAAMuJ,QACpB3C,MAAOjJ,KAAKY,MAAMqI,QAIf,YApE+C9G,IAAMuJ,WCuD5D+E,GAAsBrH,YAA4C,CACtEC,iBAAkB,SAAAhH,GAChB,IAAI0G,EAAW,IAAImH,GAEnB,OADAnH,EAASC,cAAc3G,EAAM4G,MAAO1H,GAAIc,EAAM4G,MAAOxH,MAC9CsH,GAITO,SAAU,SAAAC,GACR,IAAIC,EAAiD,GASrD,OAPiB,GAAbD,EAAOhI,KACTiI,EAAOjI,GAAK,YAEK,IAAfgI,EAAO9H,OACT+H,EAAO/H,KAAO,YAGT+H,GAETC,aAAc,SAACF,EAAQG,GACrBA,EAAQC,eAAU3E,GAElB,IAAI4E,EAAS,IAAIuG,GAEjBrM,IACGsI,IACC7J,EAAUE,YAAcgB,EAAUR,iBAAmB,IAAMsG,EAAOhI,GAElEqI,EAAOE,yBAAyBP,GAChC,CACEvF,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAGpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEd,SAAAzE,GACEF,QAAQC,IAAIC,GACZoF,EAAQC,UAAU,oBAGrBzF,KAAK,SAAA6E,OAKVjB,YAAa,uBAtDasB,CA1GO,SACjC/G,GAEA,IAAI2H,EAAS3H,EAAM2H,OAIfC,EAAiB,SAAChF,GACpB,IAAI8D,EAAW,GAoBf,OAlBE1G,EAAM6H,QAAQjF,IACd5C,EAAMmH,OAAOvE,KAEb8D,GAAY1G,EAAMmH,OAAOvE,IAIzB+E,GACAA,EAAOG,kBACPH,EAAOG,iBAAiBC,KACtB,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAG5CxB,GAAYiB,EAAOG,iBAAiBK,OAClC,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAC1C,GAAGE,cAGA1B,GAGL2B,EAAqB,SAACzF,GACxB,MAA+B,IAAxBgF,EAAehF,IAGxB,OACE0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACvCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,MACf,qCACA,2BALR,MAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,KACL3D,UACEoJ,EAAmB,MACf,0BACA,iBAGPA,EAAmB,OAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,QACf,qCACA,2BALR,QAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,OACL3D,UACEoJ,EAAmB,QACf,0BACA,iBAGPA,EAAmB,SAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAKrDU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCb,GAAUA,EAAOmB,QAChBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WACE,KAEH0I,IAAWA,EAAOmB,QACjBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBACE,QAkFWoP,8MAInB9P,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAGI,IAAArJ,EAAApB,KAClBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+ByK,SAAS,KAExCvH,IACGC,IACCxB,EAAUE,YACRgB,EAAUR,iBACV,IACAjD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1B,CACEyC,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAEZ,IAAIa,EAAS,IAAIuG,GAEjB/O,EAAKD,SAAS,CACZ8H,MAAOW,EAAOqC,0BAA0BlD,GACxCsC,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CACZ8H,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,sDAMtB,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OACbX,EAAAC,EAAAC,cAAC4F,GAAD,CAAqBxH,MAAOjJ,KAAKY,MAAMqI,QAEvC,YA/D6C9G,IAAMuJ,WCvK3CiF,8MAEjB/P,MAAS,CAAC2L,iBAAgB,EAAOC,eAAc,EAAOC,eAAe,GAAIC,QAAQ,IAAIrM,MAAmCsM,gBAAgB,IAAItM,MAAmCuM,YAAY,GAAIvB,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,uFAGzPzK,KAAK6M,sDAGO3L,EAAO4L,GAClB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaK,iBAAmB,SAAW6J,EAAIvL,8CAG1DL,EAAO4L,GACpB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaK,iBAAmB,IAAM6J,EAAIvL,8CAGrDL,GACdlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaK,iBAAmB,qDAG1C/B,EAAO4L,GAA4C,IAAA1L,EAAApB,KACjE8D,IAAMiJ,OAAOxK,EAAUE,YAAcgB,EAAUR,iBAAmB,IAAM6J,EAAIvL,GAC5E,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,iBAAkBD,eAAc,EAAMD,iBAAgB,KACnGnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAC7B,SAAAtI,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,wBAAyBD,eAAc,EAAOD,iBAAgB,mDAIhGrL,GACrBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGD,IAAAuD,EAAAxE,KAAnBiN,EAAmB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA8BgM,YAAYK,KAC1C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUR,iBAAmB,aAEvEgK,IAEFC,GAAkB,UAAaD,GAGhCnJ,IAAMC,IAAImJ,EACV,CACClJ,QAAS,CACRC,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAA+C,GAClDvD,EAAS,IAAIuG,GAEjBpH,EAASqE,QAAQ,SAAAC,GAEhBF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGzC7I,EAAKrD,SAAS,CAACuL,QAAQS,EAAYR,gBAAgBQ,EAAY9B,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAElI,SAAAnG,GACFF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CAACuL,QAAQ,IAAIrM,MAAkCsM,gBAAgB,IAAItM,MAAmCgL,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,4FAQzK,IAAA6C,EAAAtN,KACN,GAAGA,KAAKY,MAAMyK,QACV,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MAEZ,GAAGxL,KAAKY,MAAM2K,cACT,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAErC,GAAGzK,KAAKY,MAAM0K,OAAQ,CAEvB,IAAIiC,EAA4B5C,EAAAC,EAAAC,cAAA,aAUhC,OARG7K,KAAKY,MAAM2L,kBAENgB,EADDvN,KAAKY,MAAM4L,cACK7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAuBtB,KAAKY,MAAM6L,gBAGhD9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAsBtB,KAAKY,MAAM6L,iBAIxE9B,EAAAC,EAAAC,cAAA,WAEQ0C,EAER5C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACXqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,SAAO5F,KAAK,SAAS3D,UAAU,eAAekM,YAAa,SAAUvM,MAAOjB,KAAKY,MAAMgM,YAAaa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAEhJyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yFAAyFS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAAIyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAI7KqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CAAC,CACNnO,OAAQ,kBACRmO,QAAS,CACtB,CACenO,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAElC,CACF7B,OAAQ,OACRoO,SAAU,OACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASvM,SAGtC,CACI/B,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OAAKnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,aAAaS,QAAS,SAAAb,GAAMoM,EAAKW,kBAAkB/M,EAAG4L,EAAIkB,YAAuDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAArJ,OACRqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yBAAyBS,QAAS,SAAAb,GAAMoM,EAAKY,gBAAgBhN,EAAG4L,EAAIkB,YAAuDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBADlJ,OAERqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,wBAAwBS,QAAS,SAAAb,GAAMoM,EAAKa,kBAAkBjN,EAAG4L,EAAIkB,YAAuDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAQrL,OAAO,YA/IiDa,IAAMuJ,WC/B7CkF,cAOnB,SAAAA,IAAe9Q,OAAAC,EAAA,EAAAD,CAAAE,KAAA4Q,GACb5Q,KAAKoF,kBAAeJ,EACpBhF,KAAKuB,GAAK,EACVvB,KAAKgG,WAAa,EAClBhG,KAAKqF,OAAS,EACdrF,KAAKiG,cAAgB,4DAIrBb,EACA7D,EACAyE,EACAX,EACAY,GAEAjG,KAAKoF,aAAeA,EACpBpF,KAAKuB,GAAKA,EACVvB,KAAKgG,WAAaA,EAClBhG,KAAKqF,OAASA,EACdrF,KAAKiG,cAAgBA,sCAIrB,OAAO2C,kBC5BUiI,qHAEjB/H,GAEA,IAAIC,EAAW,IAAI6H,GASnB,OARA7H,EAASC,cACPF,EAAI1D,aACJ0D,EAAIvH,GACJuH,EAAI9C,WACJ8C,EAAIzD,OACJyD,EAAI7C,eAGC8C,mDAIPE,GAEA,IAAIF,EAAW,IAAIG,EAQnB,OAPAH,EAASC,cACPC,EAAM7D,aACN6D,EAAM1H,GACN0H,EAAMjD,WACNiD,EAAM5D,OACN4D,EAAMhD,eAED8C,WC4DL+H,GAAiB1H,YAAqC,CACxDC,iBAAkB,SAAAhH,GAEpB,IAAI0G,EAAW,IAAI6H,GAKnB,YAJmB5L,GAAf3C,EAAM4G,OAETF,EAASC,cAAc3G,EAAM4G,MAAO7D,aAAa/C,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOjD,WAAW3D,EAAM4G,MAAO5D,OAAOhD,EAAM4G,MAAOhD,eAEpH8C,GAGLO,SAAU,SAAAC,GACR,IAAIC,EAAyC,GAY7C,YAVuBxE,GAAvBuE,EAAOnE,eACGoE,EAAOpE,aAAe,YACO,GAArBmE,EAAOvD,aACfwD,EAAOxD,WAAa,YACK,GAAjBuD,EAAOlE,SACfmE,EAAOnE,OAAS,YACgB,GAAxBkE,EAAOtD,gBACfuD,EAAOvD,cAAgB,YAG1BuD,GAGTC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAIiH,GAEjB/M,IAAM+F,KAAKtH,EAAUE,YAAcgB,EAAUP,UAC7C0G,EAAOE,yBAAyBP,GAChC,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEb,SAAAzE,GACLF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,qBAG1B7B,YAAa,kBAhDMsB,CAzEqD,SAAC/G,GAE1E,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAqC5C,EAAMmH,OAAOvE,KAC/D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAGR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAAQ0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACrCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACNqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAI5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAI1GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAItGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,iBAAoB,qCAAwC,2BAAhH,iBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,gBAAgB3D,UAAWoJ,EAAmB,iBAAmB,0BAA4B,iBAC/HA,EAAmB,kBAAoBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,oBAKvGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAsElFyP,8MAEnBnQ,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,4EAIrF,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAELxL,KAAKY,MAAM2K,cACLZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAElCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACiG,GAAD,CAAgB7H,MAAOjJ,KAAKY,MAAMqI,QAG3C,YAhB4C9G,IAAMuJ,WCzIvDsF,GAAwB,SAAC/H,GAC7B,OACE0B,EAAAC,EAAAC,cAAA,QAAME,KAAK,QACTJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,oEACVS,QAAS,SAAAb,GACP+H,EAAM2C,QAAQC,KACZjJ,EAAaM,UAAY,SAAW+F,EAAMA,MAAO1H,MAIrDoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO7D,gBAElDuF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO1H,MAElDoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,aAAa1J,UAAW,2BAAvC,cAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAOjD,cAElD2E,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAS1J,UAAW,2BAAnC,UAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO5D,UAElDsF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,gBAAgB1J,UAAW,2BAA1C,iBAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAOhD,mBA2BnCgL,8MAInBrQ,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAGI,IAAArJ,EAAApB,KAClBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+ByK,SAAS,KAExCvH,IACGC,IACCxB,EAAUE,YACRgB,EAAUP,UACV,IACAlD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1B,CACEyC,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAEhBH,EAAS,IAAIiH,GAEjBzM,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CACZ8H,MAAOW,EAAOqC,0BAA0BlD,GACxCsC,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CACZ8H,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,sDAMtB,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OAElBX,EAAAC,EAAAC,cAACqG,GAAD,CACEtF,QAAS5L,KAAKqC,MAAMuJ,QACpB3C,MAAOjJ,KAAKY,MAAMqI,QAIf,YApEwC9G,IAAMuJ,WCWrDyF,GAAe/H,YAAqC,CACtDC,iBAAkB,SAAAhH,GACd,IAAI0G,EAAW,IAAI6H,GAEzB,OADA7H,EAASC,cAAc3G,EAAM4G,MAAO7D,aAAa/C,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOjD,WAAW3D,EAAM4G,MAAO5D,OAAOhD,EAAM4G,MAAOhD,eACnH8C,GAILO,SAAU,SAAAC,GACR,IAAIC,EAAyC,GAc7C,YAZuBxE,GAAvBuE,EAAOnE,eACGoE,EAAOpE,aAAe,YACD,GAAbmE,EAAOhI,KACfiI,EAAOjI,GAAK,YACiB,GAArBgI,EAAOvD,aACfwD,EAAOxD,WAAa,YACK,GAAjBuD,EAAOlE,SACfmE,EAAOnE,OAAS,YACgB,GAAxBkE,EAAOtD,gBACfuD,EAAOvD,cAAgB,YAG1BuD,GAETC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAErB,IAAI4E,EAAS,IAAIiH,GAEd/M,IAAMsI,IAAI7J,EAAUE,YAAcgB,EAAUP,UAAW,IAAMqG,EAAOhI,GAEvEqI,EAAOE,yBAAyBP,GAC7B,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEtB,SAAAzE,GACIF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,oBAErBzF,KAAK,SAAA6E,OAMVjB,YAAa,gBArDIsB,CAhFS,SAAC/G,GAE5B,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAqC5C,EAAMmH,OAAOvE,KAC/D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAIR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAEO0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QAC5CJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAG3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,MAAS,qCAAwC,2BAArG,MACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,KAAK3D,UAAWoJ,EAAmB,MAAQ,0BAA4B,iBACzGA,EAAmB,OAASC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAGjGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAGzGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAGrGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,iBAAoB,qCAAwC,2BAAhH,iBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,gBAAgB3D,UAAWoJ,EAAmB,iBAAmB,0BAA4B,iBAC/HA,EAAmB,kBAAoBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,oBAIvGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAwFlF8P,8MAEnBxQ,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUP,UAAY,IAAMlD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAAI,CACtFyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAErB,IAAIa,EAAS,IAAIiH,GAERzP,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAGzI,SAAAnG,GACUF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAEFxL,KAAKY,MAAM2K,cAClBZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAExBzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACsG,GAAD,CAAclI,MAAOjJ,KAAKY,MAAMqI,QAGzC,YAvC0C9G,IAAMuJ,WCnJtC2F,8MAInBzQ,MAAQ,CACN2L,iBAAiB,EACjBC,eAAe,EACfC,eAAgB,GAChBC,QAAS,IAAIrM,MACbsM,gBAAiB,IAAItM,MACrBuM,YAAa,GACbvB,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAIdzK,KAAK6M,sDAGS3L,EAAQ4L,GACtB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaM,UAAY,SAAW4J,EAAIvL,8CAGhDL,EAAQ4L,GACxB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaM,UAAY,IAAM4J,EAAIvL,8CAG3CL,GAChBlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaM,UAAY,qDAGjChC,EAAQ4L,GAAsC,IAAA1L,EAAApB,KAC9D8D,IACGiJ,OAAOxK,EAAUE,YAAcgB,EAAUP,UAAY,IAAM4J,EAAIvL,GAAI,CAClEyC,QAAS,CACPC,eAAgB,sBAGnBC,KACC,SAAAC,GACE/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GACKsB,EAAKR,MADV,CAEE6L,eAAgB,iBAChBD,eAAe,EACfD,iBAAiB,KAEnBnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAE9B,SAAAtI,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GACKsB,EAAKR,MADV,CAEE6L,eAAgB,wBAChBD,eAAe,EACfD,iBAAiB,mDAMPrL,GAClBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGH,IAAAuD,EAAAxE,KAApBiN,EAAoB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+BgM,YAAaK,KAC5C,IAAIC,EACF3K,EAAUE,YAAcgB,EAAUP,UAAY,aAE5C+J,IACFC,GAAkB,UAAYD,GAGhCnJ,IACGC,IAAImJ,EAAgB,CACnBlJ,QAAS,CACPC,eAAgB,sBAGnBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAuC,GACvCvD,EAAS,IAAIiH,GAEjB9H,EAASqE,QAAQ,SAAAC,GACfF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGnD7I,EAAKrD,SAAS,CACZuL,QAASS,EACTR,gBAAiBQ,EACjB9B,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CACZuL,QAAS,IAAIrM,MACbsM,gBAAiB,IAAItM,MACrBgL,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,4FAQf,IAAA6C,EAAAtN,KACP,GAAIA,KAAKY,MAAMyK,QACb,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MACF,GAAIxL,KAAKY,MAAM2K,cACpB,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eACjC,GAAIzK,KAAKY,MAAM0K,OAAQ,CAC5B,IAAIiC,EAA6B5C,EAAAC,EAAAC,cAAA,aAiBjC,OAfI7K,KAAKY,MAAM2L,kBAEXgB,EADEvN,KAAKY,MAAM4L,cAEX7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBACZtB,KAAKY,MAAM6L,gBAKd9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBACZtB,KAAKY,MAAM6L,iBAMlB9B,EAAAC,EAAAC,cAAA,WACG0C,EACD5C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACbqJ,EAAAC,EAAAC,cAAA,SACE5F,KAAK,SACL3D,UAAU,eACVkM,YAAa,SACbvM,MAAOjB,KAAKY,MAAMgM,YAClBa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAG5CyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACbqJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,yFACVS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAErCyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAKrBqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACE7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CACP,CACEnO,OAAQ,WACRmO,QAAS,CACP,CACEnO,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS5I,iBAGxC,CACE1F,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAGxC,CACE7B,OAAQ,aACRoO,SAAU,aACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAShI,eAGxC,CACEtG,OAAQ,SACRoO,SAAU,SACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS3I,WAGxC,CACE3F,OAAQ,gBACRoO,SAAU,gBACVC,KAAM,SAAA1L,GACJ,OACEsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS/H,kBAInC,CACEvG,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OACPnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,aACVS,QAAS,SAAAb,GACPoM,EAAKW,kBACH/M,EACA4L,EAAIkB,YAIRrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAVjB,OAaEqJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,yBACVS,QAAS,SAAAb,GACPoM,EAAKY,gBACHhN,EACA4L,EAAIkB,YAIRrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAtBjB,OAyBEqJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,wBACVS,QAAS,SAAAb,GACPoM,EAAKa,kBACHjN,EACA4L,EAAIkB,YAIRrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAYjC,OAAO,YAhQwCa,IAAMuJ,WC7BtC4F,cAsBjB,SAAAA,IAAexR,OAAAC,EAAA,EAAAD,CAAAE,KAAAsR,GACjBtR,KAAKmG,sBAAmBnB,EAC1BhF,KAAKoG,iBAAcpB,EACnBhF,KAAKqG,KAAO,GACZrG,KAAKsG,gBAAatB,EAClBhF,KAAKuG,kBAAevB,EACpBhF,KAAKwG,wBAAqBxB,EAC1BhF,KAAKoF,kBAAeJ,EACpBhF,KAAKyG,mBAAgBzB,EACrBhF,KAAKuB,GAAK,EACVvB,KAAK0G,sBAAmB1B,EACxBhF,KAAK2G,kBAAe3B,EACpBhF,KAAK4G,sBAAwB,GAC7B5G,KAAK6G,sBAAmB7B,EACxBhF,KAAK8G,iBAAc9B,EACnBhF,KAAK+G,cAAW/B,EAChBhF,KAAKgH,WAAa,EAClBhH,KAAKsF,MAAQ,EACbtF,KAAKiH,IAAM,GACXjH,KAAKkH,MAAQ,GACblH,KAAKmH,UAAY,4DAIFhB,EAAuBC,EAAkBC,EAAcC,EAAiBC,EAAmBC,EAAyBpB,EAAmBqB,EAAoBlF,EAAYmF,EAAuBC,EAAmBC,EAA+BC,EAAuBC,EAAkBC,EAAeC,EAAoB1B,EAAe2B,EAAaC,EAAeC,GAEpXnH,KAAKmG,iBAAmBA,EAC1BnG,KAAKoG,YAAcA,EACnBpG,KAAKqG,KAAOA,EACZrG,KAAKsG,WAAaA,EAClBtG,KAAKuG,aAAeA,EACpBvG,KAAKwG,mBAAqBA,EAC1BxG,KAAKoF,aAAeA,EACpBpF,KAAKyG,cAAgBA,EACrBzG,KAAKuB,GAAKA,EACVvB,KAAK0G,iBAAmBA,EACxB1G,KAAK2G,aAAeA,EACpB3G,KAAK4G,sBAAwBA,EAC7B5G,KAAK6G,iBAAmBA,EACxB7G,KAAK8G,YAAcA,EACnB9G,KAAK+G,SAAWA,EAChB/G,KAAKgH,WAAaA,EAClBhH,KAAKsF,MAAQA,EACbtF,KAAKiH,IAAMA,EACXjH,KAAKkH,MAAQA,EACblH,KAAKmH,UAAYA,sCAMf,OAAOyB,kBCvEY2I,qHAEMzI,GAEzB,IAAIC,EAAW,IAAIuI,GAOnB,OANAvI,EAASC,cAAcF,EAAI3C,iBAAiB2C,EAAI1C,YAAY0C,EAAIzC,KAAKyC,EAAIxC,WAAWwC,EAAIvC,aAAauC,EAAItC,mBAAmBsC,EAAI1D,aAAa0D,EAAIrC,cAAcqC,EAAIvH,GAAGuH,EAAIpC,iBAAiBoC,EAAInC,aAAamC,EAAIlC,sBAAsBkC,EAAIjC,iBAAiBiC,EAAIhC,YAAYgC,EAAI/B,SAAS+B,EAAI9B,WAAW8B,EAAIxD,MAAMwD,EAAI7B,IAAI6B,EAAI5B,MAAM4B,EAAI3B,WAMhU4B,mDAGiBE,GAExB,IAAIF,EAAW,IAAIG,EAEnB,OADAH,EAASC,cAAcC,EAAM9C,iBAAiB8C,EAAM7C,YAAY6C,EAAM5C,KAAK4C,EAAM3C,WAAW2C,EAAM1C,aAAa0C,EAAMzC,mBAAmByC,EAAM7D,aAAa6D,EAAMxC,cAAcwC,EAAM1H,GAAG0H,EAAMvC,iBAAiBuC,EAAMtC,aAAasC,EAAMrC,sBAAsBqC,EAAMpC,iBAAiBoC,EAAMnC,YAAYmC,EAAMlC,SAASkC,EAAMjC,WAAWiC,EAAM3D,MAAM2D,EAAMhC,IAAIgC,EAAM/B,MAAM+B,EAAM9B,WACxW4B,WC6LHyI,GAAapI,YAAiC,CAChDC,iBAAkB,SAAAhH,GAEpB,IAAI0G,EAAW,IAAIuI,GAKnB,YAJmBtM,GAAf3C,EAAM4G,OAETF,EAASC,cAAc3G,EAAM4G,MAAO9C,iBAAiB9D,EAAM4G,MAAO7C,YAAY/D,EAAM4G,MAAO5C,KAAKhE,EAAM4G,MAAO3C,WAAWjE,EAAM4G,MAAO1C,aAAalE,EAAM4G,MAAOzC,mBAAmBnE,EAAM4G,MAAO7D,aAAa/C,EAAM4G,MAAOxC,cAAcpE,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOvC,iBAAiBrE,EAAM4G,MAAOtC,aAAatE,EAAM4G,MAAOrC,sBAAsBvE,EAAM4G,MAAOpC,iBAAiBxE,EAAM4G,MAAOnC,YAAYzE,EAAM4G,MAAOlC,SAAS1E,EAAM4G,MAAOjC,WAAW3E,EAAM4G,MAAO3D,MAAMjD,EAAM4G,MAAOhC,IAAI5E,EAAM4G,MAAO/B,MAAM7E,EAAM4G,MAAO9B,WAErf4B,GAGLO,SAAU,SAAAC,GACR,IAAIC,EAAqC,GAgBzC,MAde,IAAfD,EAAOlD,OACGmD,EAAOnD,KAAO,iBACiBrB,GAAvBuE,EAAOnE,eACfoE,EAAOpE,aAAe,iBACaJ,GAA3BuE,EAAO7C,mBACf8C,EAAO9C,iBAAmB,YACG,GAArB6C,EAAOvC,aACfwC,EAAOxC,WAAa,YACI,GAAhBuC,EAAOjE,QACfkE,EAAOlE,MAAQ,YACa,GAApBiE,EAAOpC,YACfqC,EAAOrC,UAAY,YAGtBqC,GAGTC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAI2H,GAEjBzN,IAAM+F,KAAKtH,EAAUE,YAAcgB,EAAUN,MAC7CyG,EAAOE,yBAAyBP,GAChC,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEb,SAAAzE,GACLF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,qBAG1B7B,YAAa,cApDEsB,CAjMiD,SAAC/G,GAElE,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAiC5C,EAAMmH,OAAOvE,KAC3D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAGR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAAQ0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACrCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACNqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,oBAAuB,qCAAwC,2BAAnH,oBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,mBAAmB3D,UAAWoJ,EAAmB,oBAAsB,0BAA4B,iBACrIA,EAAmB,qBAAuBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,uBAIhHU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,eAAkB,qCAAwC,2BAA9G,eACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,cAAc3D,UAAWoJ,EAAmB,eAAiB,0BAA4B,iBAC3HA,EAAmB,gBAAkBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,kBAI3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAIpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAI1GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAI5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,sBAAyB,qCAAwC,2BAArH,sBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,qBAAqB3D,UAAWoJ,EAAmB,sBAAwB,0BAA4B,iBACzIA,EAAmB,uBAAyBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,yBAIlHU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAI5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,iBAAoB,qCAAwC,2BAAhH,iBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,gBAAgB3D,UAAWoJ,EAAmB,iBAAmB,0BAA4B,iBAC/HA,EAAmB,kBAAoBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,oBAI7GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,oBAAuB,qCAAwC,2BAAnH,oBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,mBAAmB3D,UAAWoJ,EAAmB,oBAAsB,0BAA4B,iBACrIA,EAAmB,qBAAuBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,uBAIhHU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAI5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,yBAA4B,qCAAwC,2BAAxH,yBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,wBAAwB3D,UAAWoJ,EAAmB,yBAA2B,0BAA4B,iBAC/IA,EAAmB,0BAA4BC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,4BAIrHU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,oBAAuB,qCAAwC,2BAAnH,oBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,mBAAmB3D,UAAWoJ,EAAmB,oBAAsB,0BAA4B,iBACrIA,EAAmB,qBAAuBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,uBAIhHU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,eAAkB,qCAAwC,2BAA9G,eACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,cAAc3D,UAAWoJ,EAAmB,eAAiB,0BAA4B,iBAC3HA,EAAmB,gBAAkBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,kBAI3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,YAAe,qCAAwC,2BAA3G,YACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,WAAW3D,UAAWoJ,EAAmB,YAAc,0BAA4B,iBACrHA,EAAmB,aAAeC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,eAIxGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAI1GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,SAAY,qCAAwC,2BAAxG,SACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,QAAQ3D,UAAWoJ,EAAmB,SAAW,0BAA4B,iBAC/GA,EAAmB,UAAYC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,YAIrGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,OAAU,qCAAwC,2BAAtG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,MAAM3D,UAAWoJ,EAAmB,OAAS,0BAA4B,iBAC3GA,EAAmB,QAAUC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,UAInGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,SAAY,qCAAwC,2BAAxG,SACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,QAAQ3D,UAAWoJ,EAAmB,SAAW,0BAA4B,iBAC/GA,EAAmB,UAAYC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,YAIrGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,aAAgB,qCAAwC,2BAA5G,aACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,YAAY3D,UAAWoJ,EAAmB,aAAe,0BAA4B,iBACvHA,EAAmB,cAAgBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,gBAKnGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QA0ElFmQ,8MAEnB7Q,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,4EAIrF,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAELxL,KAAKY,MAAM2K,cACLZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAElCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAAC2G,GAAD,CAAYvI,MAAOjJ,KAAKY,MAAMqI,QAGvC,YAhBwC9G,IAAMuJ,WCrQnDgG,GAAoB,SAACzI,GAExB,OACO0B,EAAAC,EAAAC,cAAA,QAAOE,KAAK,QAClBJ,EAAAC,EAAAC,cAAA,UACcvJ,UAAU,oEACVS,QAAS,SAACb,GAAQ+H,EAAM2C,QAAQC,KAAKjJ,EAAaO,MAAQ,SAAW8F,EAAMA,MAAO1H,MAElFoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEpBqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACnBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,mBAAmB1J,UAAW,2BAA7C,oBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO9C,oBAGdwE,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,cAAc1J,UAAW,2BAAxC,eACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO7C,eAGduE,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,QACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO5C,QAGdsE,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,aAAa1J,UAAW,2BAAvC,cACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO3C,cAGdqE,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO1C,gBAGdoE,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,qBAAqB1J,UAAW,2BAA/C,sBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOzC,sBAGdmE,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO7D,gBAGduF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,gBAAgB1J,UAAW,2BAA1C,iBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOxC,iBAGdkE,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO1H,MAGdoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,mBAAmB1J,UAAW,2BAA7C,oBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOvC,oBAGdiE,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOtC,gBAGdgE,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,wBAAwB1J,UAAW,2BAAlD,yBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOrC,yBAGd+D,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,mBAAmB1J,UAAW,2BAA7C,oBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOpC,oBAGd8D,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,cAAc1J,UAAW,2BAAxC,eACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOnC,eAGd6D,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,WAAW1J,UAAW,2BAArC,YACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOlC,YAGd4D,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,aAAa1J,UAAW,2BAAvC,cACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOjC,cAGd2D,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,QAAQ1J,UAAW,2BAAlC,SACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO3D,SAGdqF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,MAAM1J,UAAW,2BAAhC,QACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOhC,OAGd0D,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,QAAQ1J,UAAW,2BAAlC,SACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO/B,SAGdyD,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,YAAY1J,UAAW,2BAAtC,aACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO9B,eAiCNwK,8MAEnB/Q,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUN,MAAQ,IAAMnD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAClF,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEzBH,EAAS,IAAI2H,GAERnN,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAEhI,SAAAnG,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAERxL,KAAKY,MAAM2K,cACHZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAEjCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAAC+G,GAAD,CAAmBhG,QAAS5L,KAAKqC,MAAMuJ,QAAS3C,MAAOjJ,KAAKY,MAAMqI,QAG3E,YAvCwC9G,IAAMuJ,WCwBnDmG,GAAWzI,YAAiC,CAC9CC,iBAAkB,SAAAhH,GACd,IAAI0G,EAAW,IAAIuI,GAEzB,OADAvI,EAASC,cAAc3G,EAAM4G,MAAO9C,iBAAiB9D,EAAM4G,MAAO7C,YAAY/D,EAAM4G,MAAO5C,KAAKhE,EAAM4G,MAAO3C,WAAWjE,EAAM4G,MAAO1C,aAAalE,EAAM4G,MAAOzC,mBAAmBnE,EAAM4G,MAAO7D,aAAa/C,EAAM4G,MAAOxC,cAAcpE,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOvC,iBAAiBrE,EAAM4G,MAAOtC,aAAatE,EAAM4G,MAAOrC,sBAAsBvE,EAAM4G,MAAOpC,iBAAiBxE,EAAM4G,MAAOnC,YAAYzE,EAAM4G,MAAOlC,SAAS1E,EAAM4G,MAAOjC,WAAW3E,EAAM4G,MAAO3D,MAAMjD,EAAM4G,MAAOhC,IAAI5E,EAAM4G,MAAO/B,MAAM7E,EAAM4G,MAAO9B,WACpf4B,GAILO,SAAU,SAAAC,GACR,IAAIC,EAAqC,GAkBzC,MAhBe,IAAfD,EAAOlD,OACGmD,EAAOnD,KAAO,iBACiBrB,GAAvBuE,EAAOnE,eACfoE,EAAOpE,aAAe,YACD,GAAbmE,EAAOhI,KACfiI,EAAOjI,GAAK,iBACuByD,GAA3BuE,EAAO7C,mBACf8C,EAAO9C,iBAAmB,YACG,GAArB6C,EAAOvC,aACfwC,EAAOxC,WAAa,YACI,GAAhBuC,EAAOjE,QACfkE,EAAOlE,MAAQ,YACa,GAApBiE,EAAOpC,YACfqC,EAAOrC,UAAY,YAGtBqC,GAETC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAErB,IAAI4E,EAAS,IAAI2H,GAEdzN,IAAMsI,IAAI7J,EAAUE,YAAcgB,EAAUN,MAAO,IAAMoG,EAAOhI,GAEnEqI,EAAOE,yBAAyBP,GAC7B,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEtB,SAAAzE,GACIF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,oBAErBzF,KAAK,SAAA6E,OAMVjB,YAAa,YAzDAsB,CAzLS,SAAC/G,GAExB,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAiC5C,EAAMmH,OAAOvE,KAC3D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAIR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAEO0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QAC5CJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,oBAAuB,qCAAwC,2BAAnH,oBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,mBAAmB3D,UAAWoJ,EAAmB,oBAAsB,0BAA4B,iBACrIA,EAAmB,qBAAuBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,uBAG/GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,eAAkB,qCAAwC,2BAA9G,eACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,cAAc3D,UAAWoJ,EAAmB,eAAiB,0BAA4B,iBAC3HA,EAAmB,gBAAkBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,kBAG1GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAGnGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAGzGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAG3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,sBAAyB,qCAAwC,2BAArH,sBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,qBAAqB3D,UAAWoJ,EAAmB,sBAAwB,0BAA4B,iBACzIA,EAAmB,uBAAyBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,yBAGjHU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAG3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,iBAAoB,qCAAwC,2BAAhH,iBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,gBAAgB3D,UAAWoJ,EAAmB,iBAAmB,0BAA4B,iBAC/HA,EAAmB,kBAAoBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,oBAG5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,MAAS,qCAAwC,2BAArG,MACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,KAAK3D,UAAWoJ,EAAmB,MAAQ,0BAA4B,iBACzGA,EAAmB,OAASC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAGjGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,oBAAuB,qCAAwC,2BAAnH,oBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,mBAAmB3D,UAAWoJ,EAAmB,oBAAsB,0BAA4B,iBACrIA,EAAmB,qBAAuBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,uBAG/GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAG3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,yBAA4B,qCAAwC,2BAAxH,yBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,wBAAwB3D,UAAWoJ,EAAmB,yBAA2B,0BAA4B,iBAC/IA,EAAmB,0BAA4BC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,4BAGpHU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,oBAAuB,qCAAwC,2BAAnH,oBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,mBAAmB3D,UAAWoJ,EAAmB,oBAAsB,0BAA4B,iBACrIA,EAAmB,qBAAuBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,uBAG/GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,eAAkB,qCAAwC,2BAA9G,eACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,cAAc3D,UAAWoJ,EAAmB,eAAiB,0BAA4B,iBAC3HA,EAAmB,gBAAkBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,kBAG1GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,YAAe,qCAAwC,2BAA3G,YACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,WAAW3D,UAAWoJ,EAAmB,YAAc,0BAA4B,iBACrHA,EAAmB,aAAeC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,eAGvGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAGzGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,SAAY,qCAAwC,2BAAxG,SACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,QAAQ3D,UAAWoJ,EAAmB,SAAW,0BAA4B,iBAC/GA,EAAmB,UAAYC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,YAGpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,OAAU,qCAAwC,2BAAtG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,MAAM3D,UAAWoJ,EAAmB,OAAS,0BAA4B,iBAC3GA,EAAmB,QAAUC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,UAGlGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,SAAY,qCAAwC,2BAAxG,SACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,QAAQ3D,UAAWoJ,EAAmB,SAAW,0BAA4B,iBAC/GA,EAAmB,UAAYC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,YAGpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,aAAgB,qCAAwC,2BAA5G,aACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,YAAY3D,UAAWoJ,EAAmB,aAAe,0BAA4B,iBACvHA,EAAmB,cAAgBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,gBAInGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QA4FlFwQ,8MAEnBlR,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUN,MAAQ,IAAMnD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAAI,CAClFyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAErB,IAAIa,EAAS,IAAI2H,GAERnQ,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAGzI,SAAAnG,GACUF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAEFxL,KAAKY,MAAM2K,cAClBZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAExBzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACgH,GAAD,CAAU5I,MAAOjJ,KAAKY,MAAMqI,QAGrC,YAvCsC9G,IAAMuJ,WC9PlCqG,8MAEjBnR,MAAS,CAAC2L,iBAAgB,EAAOC,eAAc,EAAOC,eAAe,GAAIC,QAAQ,IAAIrM,MAAwBsM,gBAAgB,IAAItM,MAAwBuM,YAAY,GAAIvB,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,uFAGnOzK,KAAK6M,sDAGO3L,EAAO4L,GAClB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaO,MAAQ,SAAW2J,EAAIvL,8CAG/CL,EAAO4L,GACpB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaO,MAAQ,IAAM2J,EAAIvL,8CAG1CL,GACdlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaO,MAAQ,qDAG/BjC,EAAO4L,GAAiC,IAAA1L,EAAApB,KACtD8D,IAAMiJ,OAAOxK,EAAUE,YAAcgB,EAAUN,MAAQ,IAAM2J,EAAIvL,GACjE,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,iBAAkBD,eAAc,EAAMD,iBAAgB,KACnGnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAC7B,SAAAtI,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,wBAAyBD,eAAc,EAAOD,iBAAgB,mDAIhGrL,GACrBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGD,IAAAuD,EAAAxE,KAAnBiN,EAAmB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA8BgM,YAAYK,KAC1C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUN,MAAQ,aAE5D8J,IAEFC,GAAkB,UAAaD,GAGhCnJ,IAAMC,IAAImJ,EACV,CACClJ,QAAS,CACRC,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAoC,GACvCvD,EAAS,IAAI2H,GAEjBxI,EAASqE,QAAQ,SAAAC,GAEhBF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGzC7I,EAAKrD,SAAS,CAACuL,QAAQS,EAAYR,gBAAgBQ,EAAY9B,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAElI,SAAAnG,GACFF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CAACuL,QAAQ,IAAIrM,MAAuBsM,gBAAgB,IAAItM,MAAwBgL,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,4FAQnJ,IAAA6C,EAAAtN,KACN,GAAGA,KAAKY,MAAMyK,QACV,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MAEZ,GAAGxL,KAAKY,MAAM2K,cACT,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAErC,GAAGzK,KAAKY,MAAM0K,OAAQ,CAEvB,IAAIiC,EAA4B5C,EAAAC,EAAAC,cAAA,aAUhC,OARG7K,KAAKY,MAAM2L,kBAENgB,EADDvN,KAAKY,MAAM4L,cACK7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAuBtB,KAAKY,MAAM6L,gBAGhD9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAsBtB,KAAKY,MAAM6L,iBAIxE9B,EAAAC,EAAAC,cAAA,WAEQ0C,EAER5C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACXqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,SAAO5F,KAAK,SAAS3D,UAAU,eAAekM,YAAa,SAAUvM,MAAOjB,KAAKY,MAAMgM,YAAaa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAEhJyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yFAAyFS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAAIyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAI7KqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CAAC,CACNnO,OAAQ,OACRmO,QAAS,CACtB,CACenO,OAAQ,mBACRoO,SAAU,mBACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS7H,qBAElC,CACFzG,OAAQ,cACRoO,SAAU,cACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS5H,gBAElC,CACF1G,OAAQ,OACRoO,SAAU,OACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS3H,SAElC,CACF3G,OAAQ,aACRoO,SAAU,aACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS1H,eAElC,CACF5G,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzH,iBAElC,CACF7G,OAAQ,qBACRoO,SAAU,qBACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASxH,uBAElC,CACF9G,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS5I,iBAElC,CACF1F,OAAQ,gBACRoO,SAAU,gBACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASvH,kBAElC,CACF/G,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAElC,CACF7B,OAAQ,mBACRoO,SAAU,mBACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAStH,qBAElC,CACFhH,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASrH,iBAElC,CACFjH,OAAQ,wBACRoO,SAAU,wBACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASpH,0BAElC,CACFlH,OAAQ,mBACRoO,SAAU,mBACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASnH,qBAElC,CACFnH,OAAQ,cACRoO,SAAU,cACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASlH,gBAElC,CACFpH,OAAQ,WACRoO,SAAU,WACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASjH,aAElC,CACFrH,OAAQ,aACRoO,SAAU,aACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAShH,eAElC,CACFtH,OAAQ,QACRoO,SAAU,QACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS1I,UAElC,CACF5F,OAAQ,OACRoO,SAAU,MACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS/G,QAElC,CACFvH,OAAQ,QACRoO,SAAU,QACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS9G,UAElC,CACFxH,OAAQ,YACRoO,SAAU,YACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS7G,cAGtC,CACIzH,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OAAKnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,aAAaS,QAAS,SAAAb,GAAMoM,EAAKW,kBAAkB/M,EAAG4L,EAAIkB,YAA4CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAA1I,OACRqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yBAAyBS,QAAS,SAAAb,GAAMoM,EAAKY,gBAAgBhN,EAAG4L,EAAIkB,YAA4CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBADvI,OAERqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,wBAAwBS,QAAS,SAAAb,GAAMoM,EAAKa,kBAAkBjN,EAAG4L,EAAIkB,YAA4CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAQ1K,OAAO,YA3PsCa,IAAMuJ,WC/BlCsG,cAInB,SAAAA,IAAelS,OAAAC,EAAA,EAAAD,CAAAE,KAAAgS,GACbhS,KAAKuB,GAAK,EACVvB,KAAKyB,KAAO,6DAGAF,EAAYE,GACxBzB,KAAKuB,GAAKA,EACVvB,KAAKyB,KAAOA,sCAIZ,OAAOmH,kBCbUqJ,qHAEMnJ,GAEzB,IAAIC,EAAW,IAAIiJ,GAOnB,OANAjJ,EAASC,cAAcF,EAAIvH,GAAGuH,EAAIrH,MAM3BsH,mDAGiBE,GAExB,IAAIF,EAAW,IAAIG,EAEnB,OADAH,EAASC,cAAcC,EAAM1H,GAAG0H,EAAMxH,MAC/BsH,WC0EHmJ,GAAiB9I,YAAqC,CAC1DC,iBAAkB,SAAAhH,GAChB,IAAI0G,EAAW,IAAIiJ,GAInB,YAHmBhN,GAAf3C,EAAM4G,OACRF,EAASC,cAAc3G,EAAM4G,MAAO1H,GAAIc,EAAM4G,MAAOxH,MAEhDsH,GAGTO,SAAU,SAAAC,GACR,IAAIC,EAA0C,GAM9C,MAJmB,IAAfD,EAAO9H,OACT+H,EAAO/H,KAAO,YAGT+H,GAGTC,aAAc,SAACF,EAAQG,GACrBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAIqI,GAEjBnO,IACG+F,KACCtH,EAAUE,YAAcgB,EAAUL,UAClCwG,EAAOE,yBAAyBP,GAChC,CACEvF,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAGpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEd,SAAAzE,GACEF,QAAQC,IAAIC,GACZoF,EAAQC,UAAU,qBAI1B7B,YAAa,kBA/CQsB,CA9EkD,SACvE/G,GAEA,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GACpB,IAAI8D,EAAW,GAoBf,OAlBE1G,EAAM6H,QAAQjF,IACd5C,EAAMmH,OAAOvE,KAEb8D,GAAY1G,EAAMmH,OAAOvE,IAIzB+E,GACAA,EAAOG,kBACPH,EAAOG,iBAAiBC,KACtB,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAG5CxB,GAAYiB,EAAOG,iBAAiBK,OAClC,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAC1C,GAAGE,cAGA1B,GAGL2B,EAAqB,SAACzF,GACxB,MAA+B,IAAxBgF,EAAehF,IAGxB,OACE0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACvCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,QACf,qCACA,2BALR,QAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,OACL3D,UACEoJ,EAAmB,QACf,0BACA,iBAGPA,EAAmB,SAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAKrDU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCb,GAAUA,EAAOmB,QAChBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WACE,KAEH0I,IAAWA,EAAOmB,QACjBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBACE,QAiEW6Q,8MAInBvR,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,4EAId,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OACbX,EAAAC,EAAAC,cAACqH,GAAD,CAAgBjJ,MAAOjJ,KAAKY,MAAMqI,QAElC,YApBwC9G,IAAMuJ,WC1IrD0G,GAAwB,SAACnJ,GAE5B,OACO0B,EAAAC,EAAAC,cAAA,QAAOE,KAAK,QAClBJ,EAAAC,EAAAC,cAAA,UACcvJ,UAAU,oEACVS,QAAS,SAACb,GAAQ+H,EAAM2C,QAAQC,KAAKjJ,EAAaQ,UAAY,SAAW6F,EAAMA,MAAO1H,MAEtFoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEpBqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACnBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO1H,MAGdoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,QACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOxH,UAiCN4Q,8MAEnBzR,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUL,UAAY,IAAMpD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GACtF,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEzBH,EAAS,IAAIqI,GAER7N,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAEhI,SAAAnG,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAERxL,KAAKY,MAAM2K,cACHZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAEjCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACyH,GAAD,CAAuB1G,QAAS5L,KAAKqC,MAAMuJ,QAAS3C,MAAOjJ,KAAKY,MAAMqI,QAG/E,YAvC4C9G,IAAMuJ,WCMvD6G,GAAenJ,YAAqC,CACtDC,iBAAkB,SAAAhH,GACd,IAAI0G,EAAW,IAAIiJ,GAEzB,OADAjJ,EAASC,cAAc3G,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOxH,MAC7CsH,GAILO,SAAU,SAAAC,GACR,IAAIC,EAAyC,GAQ7C,OANa,GAAbD,EAAOhI,KACGiI,EAAOjI,GAAK,YACW,IAAfgI,EAAO9H,OACf+H,EAAO/H,KAAO,YAGjB+H,GAETC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAErB,IAAI4E,EAAS,IAAIqI,GAEdnO,IAAMsI,IAAI7J,EAAUE,YAAcgB,EAAUL,UAAW,IAAMmG,EAAOhI,GAEvEqI,EAAOE,yBAAyBP,GAC7B,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEtB,SAAAzE,GACIF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,oBAErBzF,KAAK,SAAA6E,OAMVjB,YAAa,gBA/CIsB,CA3DS,SAAC/G,GAE5B,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAqC5C,EAAMmH,OAAOvE,KAC/D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAIR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAEO0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QAC5CJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,MAAS,qCAAwC,2BAArG,MACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,KAAK3D,UAAWoJ,EAAmB,MAAQ,0BAA4B,iBACzGA,EAAmB,OAASC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAGjGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAI9FU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAkFlFkR,8MAEnB5R,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUL,UAAY,IAAMpD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAAI,CACtFyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAErB,IAAIa,EAAS,IAAIqI,GAER7Q,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAGzI,SAAAnG,GACUF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAEFxL,KAAKY,MAAM2K,cAClBZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAExBzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAAC0H,GAAD,CAActJ,MAAOjJ,KAAKY,MAAMqI,QAGzC,YAvC0C9G,IAAMuJ,WCtHtC+G,8MAEjB7R,MAAS,CAAC2L,iBAAgB,EAAOC,eAAc,EAAOC,eAAe,GAAIC,QAAQ,IAAIrM,MAA4BsM,gBAAgB,IAAItM,MAA4BuM,YAAY,GAAIvB,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,uFAG3OzK,KAAK6M,sDAGO3L,EAAO4L,GAClB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaQ,UAAY,SAAW0J,EAAIvL,8CAGnDL,EAAO4L,GACpB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaQ,UAAY,IAAM0J,EAAIvL,8CAG9CL,GACdlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaQ,UAAY,qDAGnClC,EAAO4L,GAAqC,IAAA1L,EAAApB,KAC1D8D,IAAMiJ,OAAOxK,EAAUE,YAAcgB,EAAUL,UAAY,IAAM0J,EAAIvL,GACrE,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,iBAAkBD,eAAc,EAAMD,iBAAgB,KACnGnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAC7B,SAAAtI,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,wBAAyBD,eAAc,EAAOD,iBAAgB,mDAIhGrL,GACrBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGD,IAAAuD,EAAAxE,KAAnBiN,EAAmB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA8BgM,YAAYK,KAC1C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUL,UAAY,aAEhE6J,IAEFC,GAAkB,UAAaD,GAGhCnJ,IAAMC,IAAImJ,EACV,CACClJ,QAAS,CACRC,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAwC,GAC3CvD,EAAS,IAAIqI,GAEjBlJ,EAASqE,QAAQ,SAAAC,GAEhBF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGzC7I,EAAKrD,SAAS,CAACuL,QAAQS,EAAYR,gBAAgBQ,EAAY9B,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAElI,SAAAnG,GACFF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CAACuL,QAAQ,IAAIrM,MAA2BsM,gBAAgB,IAAItM,MAA4BgL,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,4FAQ3J,IAAA6C,EAAAtN,KACN,GAAGA,KAAKY,MAAMyK,QACV,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MAEZ,GAAGxL,KAAKY,MAAM2K,cACT,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAErC,GAAGzK,KAAKY,MAAM0K,OAAQ,CAEvB,IAAIiC,EAA4B5C,EAAAC,EAAAC,cAAA,aAUhC,OARG7K,KAAKY,MAAM2L,kBAENgB,EADDvN,KAAKY,MAAM4L,cACK7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAuBtB,KAAKY,MAAM6L,gBAGhD9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAsBtB,KAAKY,MAAM6L,iBAIxE9B,EAAAC,EAAAC,cAAA,WAEQ0C,EAER5C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACXqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,SAAO5F,KAAK,SAAS3D,UAAU,eAAekM,YAAa,SAAUvM,MAAOjB,KAAKY,MAAMgM,YAAaa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAEhJyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yFAAyFS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAAIyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAI7KqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CAAC,CACNnO,OAAQ,WACRmO,QAAS,CACtB,CACenO,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAElC,CACF7B,OAAQ,OACRoO,SAAU,OACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASvM,SAGtC,CACI/B,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OAAKnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,aAAaS,QAAS,SAAAb,GAAMoM,EAAKW,kBAAkB/M,EAAG4L,EAAIkB,YAAgDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAA9I,OACRqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yBAAyBS,QAAS,SAAAb,GAAMoM,EAAKY,gBAAgBhN,EAAG4L,EAAIkB,YAAgDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAD3I,OAERqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,wBAAwBS,QAAS,SAAAb,GAAMoM,EAAKa,kBAAkBjN,EAAG4L,EAAIkB,YAAgDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAQ9K,OAAO,YA/I0Ca,IAAMuJ,WC/BtCgH,cAOnB,SAAAA,IAAe5S,OAAAC,EAAA,EAAAD,CAAAE,KAAA0S,GACb1S,KAAKsH,MAAQ,EACbtH,KAAKuH,cAAgB,EACrBvH,KAAKuB,GAAK,EACVvB,KAAKwH,QAAU,GACfxH,KAAKyH,WAAa,4DAIlBH,EACAC,EACAhG,EACAiG,EACAC,GAEAzH,KAAKsH,MAAQA,EACbtH,KAAKuH,cAAgBA,EACrBvH,KAAKuB,GAAKA,EACVvB,KAAKwH,QAAUA,EACfxH,KAAKyH,WAAaA,sCAIlB,OAAOmB,kBC5BU+J,qHACO7J,GACxB,IAAIC,EAAW,IAAI2J,GASnB,OARA3J,EAASC,cACPF,EAAIxB,MACJwB,EAAIvB,cACJuB,EAAIvH,GACJuH,EAAItB,QACJsB,EAAIrB,YAGCsB,mDAGgBE,GACvB,IAAIF,EAAW,IAAIG,EAQnB,OAPAH,EAASC,cACPC,EAAM3B,MACN2B,EAAM1B,cACN0B,EAAM1H,GACN0H,EAAMzB,QACNyB,EAAMxB,YAEDsB,WC0JL6J,GAAYxJ,YAAgC,CAChDC,iBAAkB,SAAAhH,GAChB,IAAI0G,EAAW,IAAI2J,GAUnB,YATmB1N,GAAf3C,EAAM4G,OACRF,EAASC,cACP3G,EAAM4G,MAAO3B,MACbjF,EAAM4G,MAAO1B,cACblF,EAAM4G,MAAO1H,GACbc,EAAM4G,MAAOzB,QACbnF,EAAM4G,MAAOxB,YAGVsB,GAGTO,SAAU,SAAAC,GACR,IAAIC,EAAqC,GAezC,OAboB,GAAhBD,EAAOjC,QACTkC,EAAOlC,MAAQ,YAEW,GAAxBiC,EAAOhC,gBACTiC,EAAOjC,cAAgB,YAEH,IAAlBgC,EAAO/B,UACTgC,EAAOhC,QAAU,YAEM,GAArB+B,EAAO9B,aACT+B,EAAO/B,WAAa,YAGf+B,GAGTC,aAAc,SAACF,EAAQG,GACrBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAI+I,GAEjB7O,IACG+F,KACCtH,EAAUE,YAAcgB,EAAUJ,KAClCuG,EAAOE,yBAAyBP,GAChC,CACEvF,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEd,SAAAzE,GACEF,QAAQC,IAAIC,GACZoF,EAAQC,UAAU,qBAI1B7B,YAAa,aA5DGsB,CAnK6C,SAC7D/G,GAEA,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GACpB,IAAI8D,EAAW,GAoBf,OAlBE1G,EAAM6H,QAAQjF,IACd5C,EAAMmH,OAAOvE,KAEb8D,GAAY1G,EAAMmH,OAAOvE,IAIzB+E,GACAA,EAAOG,kBACPH,EAAOG,iBAAiBC,KACtB,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAG5CxB,GAAYiB,EAAOG,iBAAiBK,OAClC,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAC1C,GAAGE,cAGA1B,GAGL2B,EAAqB,SAACzF,GACxB,MAA+B,IAAxBgF,EAAehF,IAGxB,OACE0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACvCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,SACf,qCACA,2BALR,SAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,QACL3D,UACEoJ,EAAmB,SACf,0BACA,iBAGPA,EAAmB,UAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,YAKrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,iBACf,qCACA,2BALR,iBAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,gBACL3D,UACEoJ,EAAmB,iBACf,0BACA,iBAGPA,EAAmB,kBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,oBAMxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,WACf,qCACA,2BALR,WAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,UACL3D,UACEoJ,EAAmB,WACf,0BACA,iBAGPA,EAAmB,YAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,cAKrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,cACf,qCACA,2BALR,cAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,aACL3D,UACEoJ,EAAmB,cACf,0BACA,iBAGPA,EAAmB,eAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,iBAMxBU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCb,GAAUA,EAAOmB,QAChBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WACE,KAEH0I,IAAWA,EAAOmB,QACjBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBACE,QA8EWuR,8MAInBjS,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,4EAId,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OACbX,EAAAC,EAAAC,cAAC+H,GAAD,CAAW3J,MAAOjJ,KAAKY,MAAMqI,QAE7B,YApBmC9G,IAAMuJ,WC5OhDoH,GAAmB,SAAC7J,GACxB,OACE0B,EAAAC,EAAAC,cAAA,QAAME,KAAK,QACTJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,oEACVS,QAAS,SAAAb,GACP+H,EAAM2C,QAAQC,KAAKjJ,EAAaS,KAAO,SAAW4F,EAAMA,MAAO1H,MAGjEoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,QAAQ1J,UAAW,2BAAlC,SAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO3B,SAElDqD,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,gBAAgB1J,UAAW,2BAA1C,iBAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO1B,iBAElDoD,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO1H,MAElDoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,UAAU1J,UAAW,2BAApC,WAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAOzB,WAElDmD,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,aAAa1J,UAAW,2BAAvC,cAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAOxB,gBA2BnCsL,8MAInBnS,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAGI,IAAArJ,EAAApB,KAClBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+ByK,SAAS,KAExCvH,IACGC,IACCxB,EAAUE,YACRgB,EAAUJ,KACV,IACArD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1B,CACEyC,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAEhBH,EAAS,IAAI+I,GAEjBvO,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CACZ8H,MAAOW,EAAOqC,0BAA0BlD,GACxCsC,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CACZ8H,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,sDAMtB,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OAElBX,EAAAC,EAAAC,cAACmI,GAAD,CACEpH,QAAS5L,KAAKqC,MAAMuJ,QACpB3C,MAAOjJ,KAAKY,MAAMqI,QAIf,YApEmC9G,IAAMuJ,WCahDuH,GAAU7J,YAAgC,CAC5CC,iBAAkB,SAAAhH,GACd,IAAI0G,EAAW,IAAI2J,GAEzB,OADA3J,EAASC,cAAc3G,EAAM4G,MAAO3B,MAAMjF,EAAM4G,MAAO1B,cAAclF,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOzB,QAAQnF,EAAM4G,MAAOxB,YAChHsB,GAILO,SAAU,SAAAC,GACR,IAAIC,EAAoC,GAcxC,OAZgB,GAAhBD,EAAOjC,QACGkC,EAAOlC,MAAQ,YACiB,GAAxBiC,EAAOhC,gBACfiC,EAAOjC,cAAgB,YACF,GAAbgC,EAAOhI,KACfiI,EAAOjI,GAAK,YACc,IAAlBgI,EAAO/B,UACfgC,EAAOhC,QAAU,YACY,GAArB+B,EAAO9B,aACf+B,EAAO/B,WAAa,YAGvB+B,GAETC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAErB,IAAI4E,EAAS,IAAI+I,GAEd7O,IAAMsI,IAAI7J,EAAUE,YAAcgB,EAAUJ,KAAM,IAAMkG,EAAOhI,GAElEqI,EAAOE,yBAAyBP,GAC7B,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEtB,SAAAzE,GACIF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,oBAErBzF,KAAK,SAAA6E,OAMVjB,YAAa,WArDDsB,CAhFS,SAAC/G,GAEvB,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAgC5C,EAAMmH,OAAOvE,KAC1D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAIR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAEO0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QAC5CJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,SAAY,qCAAwC,2BAAxG,SACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,QAAQ3D,UAAWoJ,EAAmB,SAAW,0BAA4B,iBAC/GA,EAAmB,UAAYC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,YAGpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,iBAAoB,qCAAwC,2BAAhH,iBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,gBAAgB3D,UAAWoJ,EAAmB,iBAAmB,0BAA4B,iBAC/HA,EAAmB,kBAAoBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,oBAG5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,MAAS,qCAAwC,2BAArG,MACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,KAAK3D,UAAWoJ,EAAmB,MAAQ,0BAA4B,iBACzGA,EAAmB,OAASC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAGjGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,WAAc,qCAAwC,2BAA1G,WACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,UAAU3D,UAAWoJ,EAAmB,WAAa,0BAA4B,iBACnHA,EAAmB,YAAcC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,cAGtGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAIpGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAwFlF4R,8MAEnBtS,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUJ,KAAO,IAAMrD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAAI,CACjFyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAErB,IAAIa,EAAS,IAAI+I,GAERvR,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAGzI,SAAAnG,GACUF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAEFxL,KAAKY,MAAM2K,cAClBZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAExBzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACoI,GAAD,CAAShK,MAAOjJ,KAAKY,MAAMqI,QAGpC,YAvCqC9G,IAAMuJ,WCnJjCyH,8MAInBvS,MAAQ,CACN2L,iBAAiB,EACjBC,eAAe,EACfC,eAAgB,GAChBC,QAAS,IAAIrM,MACbsM,gBAAiB,IAAItM,MACrBuM,YAAa,GACbvB,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAIdzK,KAAK6M,sDAGS3L,EAAQ4L,GACtB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaS,KAAO,SAAWyJ,EAAIvL,8CAG3CL,EAAQ4L,GACxB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaS,KAAO,IAAMyJ,EAAIvL,8CAGtCL,GAChBlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaS,KAAO,qDAG5BnC,EAAQ4L,GAAiC,IAAA1L,EAAApB,KACzD8D,IACGiJ,OAAOxK,EAAUE,YAAcgB,EAAUJ,KAAO,IAAMyJ,EAAIvL,GAAI,CAC7DyC,QAAS,CACPC,eAAgB,sBAGnBC,KACC,SAAAC,GACE/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GACKsB,EAAKR,MADV,CAEE6L,eAAgB,iBAChBD,eAAe,EACfD,iBAAiB,KAEnBnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAE9B,SAAAtI,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GACKsB,EAAKR,MADV,CAEE6L,eAAgB,wBAChBD,eAAe,EACfD,iBAAiB,mDAMPrL,GAClBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGH,IAAAuD,EAAAxE,KAApBiN,EAAoB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+BgM,YAAaK,KAC5C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUJ,KAAO,aAE1D4J,IACFC,GAAkB,UAAYD,GAGhCnJ,IACGC,IAAImJ,EAAgB,CACnBlJ,QAAS,CACPC,eAAgB,sBAGnBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAkC,GAClCvD,EAAS,IAAI+I,GAEjB5J,EAASqE,QAAQ,SAAAC,GACfF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGnD7I,EAAKrD,SAAS,CACZuL,QAASS,EACTR,gBAAiBQ,EACjB9B,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CACZuL,QAAS,IAAIrM,MACbsM,gBAAiB,IAAItM,MACrBgL,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,4FAQf,IAAA6C,EAAAtN,KACP,GAAIA,KAAKY,MAAMyK,QACb,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MACF,GAAIxL,KAAKY,MAAM2K,cACpB,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eACjC,GAAIzK,KAAKY,MAAM0K,OAAQ,CAC5B,IAAIiC,EAA6B5C,EAAAC,EAAAC,cAAA,aAiBjC,OAfI7K,KAAKY,MAAM2L,kBAEXgB,EADEvN,KAAKY,MAAM4L,cAEX7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBACZtB,KAAKY,MAAM6L,gBAKd9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBACZtB,KAAKY,MAAM6L,iBAMlB9B,EAAAC,EAAAC,cAAA,WACG0C,EACD5C,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACbqJ,EAAAC,EAAAC,cAAA,SACE5F,KAAK,SACL3D,UAAU,eACVkM,YAAa,SACbvM,MAAOjB,KAAKY,MAAMgM,YAClBa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAG5CyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACbqJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,yFACVS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAErCyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAKrBqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACE7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CACP,CACEnO,OAAQ,MACRmO,QAAS,CACP,CACEnO,OAAQ,QACRoO,SAAU,QACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS1G,UAGxC,CACE5H,OAAQ,gBACRoO,SAAU,gBACVC,KAAM,SAAA1L,GACJ,OACEsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzG,kBAInC,CACE7H,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAGxC,CACE7B,OAAQ,UACRoO,SAAU,UACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASxG,YAGxC,CACE9H,OAAQ,aACRoO,SAAU,aACVC,KAAM,SAAA1L,GACJ,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASvG,eAGxC,CACE/H,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OACPnC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,aACVS,QAAS,SAAAb,GACPoM,EAAKW,kBACH/M,EACA4L,EAAIkB,YAIRrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAVjB,OAaEqJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,yBACVS,QAAS,SAAAb,GACPoM,EAAKY,gBACHhN,EACA4L,EAAIkB,YAIRrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAtBjB,OAyBEqJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,wBACVS,QAAS,SAAAb,GACPoM,EAAKa,kBACHjN,EACA4L,EAAIkB,YAIRrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAYjC,OAAO,YA/PmCa,IAAMuJ,WC7BjC0H,cAgBnB,SAAAA,IAAetT,OAAAC,EAAA,EAAAD,CAAAE,KAAAoT,GACbpT,KAAK2H,QAAU,GACf3H,KAAK4H,eAAY5C,EACjBhF,KAAK6H,SAAM7C,EACXhF,KAAKoF,kBAAeJ,EACpBhF,KAAK8H,YAAc,GACnB9H,KAAK+H,SAAW,EAChB/H,KAAKgI,UAAY,GACjBhI,KAAKuB,GAAK,EACVvB,KAAKiI,oBAAiBjD,EACtBhF,KAAKkI,SAAW,GAChBlI,KAAKmI,WAAa,EAClBnI,KAAKoI,OAAS,EACdpI,KAAKqI,KAAO,EACZrI,KAAKsI,WAAa,6DAIlBX,EACAC,EACAC,EACAzC,EACA0C,EACAC,EACAC,EACAzG,EACA0G,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAtI,KAAK2H,QAAUA,EACf3H,KAAK4H,UAAYA,EACjB5H,KAAK6H,IAAMA,EACX7H,KAAKoF,aAAeA,EACpBpF,KAAK8H,YAAcA,EACnB9H,KAAK+H,SAAWA,EAChB/H,KAAKgI,UAAYA,EACjBhI,KAAKuB,GAAKA,EACVvB,KAAKiI,eAAiBA,EACtBjI,KAAKkI,SAAWA,EAChBlI,KAAKmI,WAAaA,EAClBnI,KAAKoI,OAASA,EACdpI,KAAKqI,KAAOA,EACZrI,KAAKsI,WAAaA,sCAIlB,OAAOM,kBChEUyK,qHAEMvK,GAEzB,IAAIC,EAAW,IAAIqK,GAOnB,OANArK,EAASC,cAAcF,EAAInB,QAAQmB,EAAIlB,UAAUkB,EAAIjB,IAAIiB,EAAI1D,aAAa0D,EAAIhB,YAAYgB,EAAIf,SAASe,EAAId,UAAUc,EAAIvH,GAAGuH,EAAIb,eAAea,EAAIZ,SAASY,EAAIX,WAAWW,EAAIV,OAAOU,EAAIT,KAAKS,EAAIR,YAM5LS,mDAGiBE,GAExB,IAAIF,EAAW,IAAIG,EAEnB,OADAH,EAASC,cAAcC,EAAMtB,QAAQsB,EAAMrB,UAAUqB,EAAMpB,IAAIoB,EAAM7D,aAAa6D,EAAMnB,YAAYmB,EAAMlB,SAASkB,EAAMjB,UAAUiB,EAAM1H,GAAG0H,EAAMhB,eAAegB,EAAMf,SAASe,EAAMd,WAAWc,EAAMb,OAAOa,EAAMZ,KAAKY,EAAMX,YACxNS,WC6IHuK,GAAalK,YAAiC,CAChDC,iBAAkB,SAAAhH,GAEpB,IAAI0G,EAAW,IAAIqK,GAKnB,YAJmBpO,GAAf3C,EAAM4G,OAETF,EAASC,cAAc3G,EAAM4G,MAAOtB,QAAQtF,EAAM4G,MAAOrB,UAAUvF,EAAM4G,MAAOpB,IAAIxF,EAAM4G,MAAO7D,aAAa/C,EAAM4G,MAAOnB,YAAYzF,EAAM4G,MAAOlB,SAAS1F,EAAM4G,MAAOjB,UAAU3F,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOhB,eAAe5F,EAAM4G,MAAOf,SAAS7F,EAAM4G,MAAOd,WAAW9F,EAAM4G,MAAOb,OAAO/F,EAAM4G,MAAOZ,KAAKhG,EAAM4G,MAAOX,YAE3TS,GAGLO,SAAU,SAAAC,GACR,IAAIC,EAAqC,GAkBzC,YAhBuBxE,GAAvBuE,EAAOnE,eACGoE,EAAOpE,aAAe,YACQ,IAAtBmE,EAAOzB,cACf0B,EAAO1B,YAAc,YACM,GAAnByB,EAAOxB,WACfyB,EAAOzB,SAAW,iBACe/C,GAAzBuE,EAAOtB,iBACfuB,EAAOvB,eAAiB,YACK,GAArBsB,EAAOpB,aACfqB,EAAOrB,WAAa,YACK,GAAjBoB,EAAOnB,SACfoB,EAAOpB,OAAS,YACO,GAAfmB,EAAOlB,OACfmB,EAAOnB,KAAO,YAGjBmB,GAGTC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAIyJ,GAEjBvP,IAAM+F,KAAKtH,EAAUE,YAAcgB,EAAUH,MAC7CsG,EAAOE,yBAAyBP,GAChC,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEb,SAAAzE,GACLF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,qBAG1B7B,YAAa,cAtDEsB,CAjJiD,SAAC/G,GAElE,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAiC5C,EAAMmH,OAAOvE,KAC3D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAGR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAAQ0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACrCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACNqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,WAAc,qCAAwC,2BAA1G,WACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,UAAU3D,UAAWoJ,EAAmB,WAAa,0BAA4B,iBACnHA,EAAmB,YAAcC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,cAIvGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,aAAgB,qCAAwC,2BAA5G,aACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,YAAY3D,UAAWoJ,EAAmB,aAAe,0BAA4B,iBACvHA,EAAmB,cAAgBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,gBAIzGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,OAAU,qCAAwC,2BAAtG,OACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,MAAM3D,UAAWoJ,EAAmB,OAAS,0BAA4B,iBAC3GA,EAAmB,QAAUC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,UAInGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAI5GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,eAAkB,qCAAwC,2BAA9G,eACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,cAAc3D,UAAWoJ,EAAmB,eAAiB,0BAA4B,iBAC3HA,EAAmB,gBAAkBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,kBAI3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,YAAe,qCAAwC,2BAA3G,aACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,WAAW3D,UAAWoJ,EAAmB,YAAc,0BAA4B,iBACrHA,EAAmB,aAAeC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,eAIxGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,aAAgB,qCAAwC,2BAA5G,aACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,YAAY3D,UAAWoJ,EAAmB,aAAe,0BAA4B,iBACvHA,EAAmB,cAAgBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,gBAIzGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,kBAAqB,qCAAwC,2BAAjH,kBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,iBAAiB3D,UAAWoJ,EAAmB,kBAAoB,0BAA4B,iBACjIA,EAAmB,mBAAqBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,qBAI9GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,YAAe,qCAAwC,2BAA3G,YACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,WAAW3D,UAAWoJ,EAAmB,YAAc,0BAA4B,iBACrHA,EAAmB,aAAeC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,eAIxGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAI1GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,WACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAItGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,SACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAIpGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACGqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAKpGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QA4ElFiS,8MAEnB3S,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,4EAIrF,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAELxL,KAAKY,MAAM2K,cACLZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAElCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACyI,GAAD,CAAYrK,MAAOjJ,KAAKY,MAAMqI,QAGvC,YAhBwC9G,IAAMuJ,WCvNnD8H,GAAoB,SAACvK,GAExB,OACO0B,EAAAC,EAAAC,cAAA,QAAOE,KAAK,QAClBJ,EAAAC,EAAAC,cAAA,UACcvJ,UAAU,oEACVS,QAAS,SAACb,GAAQ+H,EAAM2C,QAAQC,KAAKjJ,EAAaU,MAAQ,SAAW2F,EAAMA,MAAO1H,MAElFoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEpBqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACnBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,UAAU1J,UAAW,2BAApC,WACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOtB,WAGdgD,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,YAAY1J,UAAW,2BAAtC,aACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOrB,aAGd+C,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,MAAM1J,UAAW,2BAAhC,OACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOpB,OAGd8C,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO7D,gBAGduF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,cAAc1J,UAAW,2BAAxC,eACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOnB,eAGd6C,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,WAAW1J,UAAW,2BAArC,aACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOlB,YAGd4C,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,YAAY1J,UAAW,2BAAtC,aACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOjB,aAGd2C,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO1H,MAGdoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,iBAAiB1J,UAAW,2BAA3C,kBACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOhB,kBAGd0C,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,WAAW1J,UAAW,2BAArC,YACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOf,YAGdyC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,aAAa1J,UAAW,2BAAvC,cACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOd,cAGdwC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAS1J,UAAW,2BAAnC,WACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOb,UAGduC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,SACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOZ,QAGdsC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,aAAa1J,UAAW,2BAAvC,cACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOX,gBAiCNmL,8MAEnB7S,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUH,MAAQ,IAAMtD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAClF,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEzBH,EAAS,IAAIyJ,GAERjP,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAEhI,SAAAnG,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAERxL,KAAKY,MAAM2K,cACHZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAEjCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAAC6I,GAAD,CAAmB9H,QAAS5L,KAAKqC,MAAMuJ,QAAS3C,MAAOjJ,KAAKY,MAAMqI,QAG3E,YAvCwC9G,IAAMuJ,WC2SnDiI,GAAWvK,YAAiC,CAChDC,iBAAkB,SAAAhH,GAChB,IAAI0G,EAAW,IAAIqK,GAiBnB,OAhBArK,EAASC,cACP3G,EAAM4G,MAAOtB,QACbtF,EAAM4G,MAAOrB,UACbvF,EAAM4G,MAAOpB,IACbxF,EAAM4G,MAAO7D,aACb/C,EAAM4G,MAAOnB,YACbzF,EAAM4G,MAAOlB,SACb1F,EAAM4G,MAAOjB,UACb3F,EAAM4G,MAAO1H,GACbc,EAAM4G,MAAOhB,eACb5F,EAAM4G,MAAOf,SACb7F,EAAM4G,MAAOd,WACb9F,EAAM4G,MAAOb,OACb/F,EAAM4G,MAAOZ,KACbhG,EAAM4G,MAAOX,YAERS,GAITO,SAAU,SAAAC,GACR,IAAIC,EAAsC,GA2B1C,YAzB2BxE,GAAvBuE,EAAOnE,eACToE,EAAOpE,aAAe,YAEE,IAAtBmE,EAAOzB,cACT0B,EAAO1B,YAAc,YAEA,GAAnByB,EAAOxB,WACTyB,EAAOzB,SAAW,YAEH,GAAbwB,EAAOhI,KACTiI,EAAOjI,GAAK,iBAEeyD,GAAzBuE,EAAOtB,iBACTuB,EAAOvB,eAAiB,YAED,GAArBsB,EAAOpB,aACTqB,EAAOrB,WAAa,YAED,GAAjBoB,EAAOnB,SACToB,EAAOpB,OAAS,YAEC,GAAfmB,EAAOlB,OACTmB,EAAOnB,KAAO,YAGTmB,GAETC,aAAc,SAACF,EAAQG,GACrBA,EAAQC,eAAU3E,GAElB,IAAI4E,EAAS,IAAIyJ,GAEjBvP,IACGsI,IACC7J,EAAUE,YAAcgB,EAAUH,MAAQ,IAAMiG,EAAOhI,GAEvDqI,EAAOE,yBAAyBP,GAChC,CACEvF,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAGpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEd,SAAAzE,GACEF,QAAQC,IAAIC,GACZoF,EAAQC,UAAU,oBAGrBzF,KAAK,SAAA6E,OAKVjB,YAAa,YAvFEsB,CAxaO,SAAC/G,GACvB,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GACpB,IAAI8D,EAAW,GAoBf,OAlBE1G,EAAM6H,QAAQjF,IACd5C,EAAMmH,OAAOvE,KAEb8D,GAAY1G,EAAMmH,OAAOvE,IAIzB+E,GACAA,EAAOG,kBACPH,EAAOG,iBAAiBC,KACtB,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAG5CxB,GAAYiB,EAAOG,iBAAiBK,OAClC,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAC1C,GAAGE,cAGA1B,GAGL2B,EAAqB,SAACzF,GACxB,MAA+B,IAAxBgF,EAAehF,IAGxB,OACE0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACvCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,WACf,qCACA,2BALR,WAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,UACL3D,UACEoJ,EAAmB,WACf,0BACA,iBAGPA,EAAmB,YAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,cAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,aACf,qCACA,2BALR,aAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,YACL3D,UACEoJ,EAAmB,aACf,0BACA,iBAGPA,EAAmB,cAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,gBAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,OACf,qCACA,2BALR,OAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,MACL3D,UACEoJ,EAAmB,OACf,0BACA,iBAGPA,EAAmB,QAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,UAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,gBACf,qCACA,2BALR,gBAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,eACL3D,UACEoJ,EAAmB,gBACf,0BACA,iBAGPA,EAAmB,iBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,mBAKxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,eACf,qCACA,2BALR,eAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,cACL3D,UACEoJ,EAAmB,eACf,0BACA,iBAGPA,EAAmB,gBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,kBAKxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,YACf,qCACA,2BALR,aAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,WACL3D,UACEoJ,EAAmB,YACf,0BACA,iBAGPA,EAAmB,aAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,eAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,aACf,qCACA,2BALR,aAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,YACL3D,UACEoJ,EAAmB,aACf,0BACA,iBAGPA,EAAmB,cAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,gBAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,MACf,qCACA,2BALR,MAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,KACL3D,UACEoJ,EAAmB,MACf,0BACA,iBAGPA,EAAmB,OAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,kBACf,qCACA,2BALR,kBAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,iBACL3D,UACEoJ,EAAmB,kBACf,0BACA,iBAGPA,EAAmB,mBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,qBAKxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,YACf,qCACA,2BALR,YAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,WACL3D,UACEoJ,EAAmB,YACf,0BACA,iBAGPA,EAAmB,aAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,eAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,cACf,qCACA,2BALR,cAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,aACL3D,UACEoJ,EAAmB,cACf,0BACA,iBAGPA,EAAmB,eAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,iBAKxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,UACf,qCACA,2BALR,WAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,SACL3D,UACEoJ,EAAmB,UACf,0BACA,iBAGPA,EAAmB,WAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,QACf,qCACA,2BALR,SAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,OACL3D,UACEoJ,EAAmB,QACf,0BACA,iBAGPA,EAAmB,SAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAIrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,cACf,qCACA,2BALR,cAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,aACL3D,UACEoJ,EAAmB,cACf,0BACA,iBAGPA,EAAmB,eAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,iBAMxBU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCb,GAAUA,EAAOmB,QAChBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WACE,KAEH0I,IAAWA,EAAOmB,QACjBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBACE,QAmHWsS,8MAInBhT,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAGI,IAAArJ,EAAApB,KAClBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+ByK,SAAS,KAExCvH,IACGC,IACCxB,EAAUE,YACRgB,EAAUH,MACV,IACAtD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1B,CACEyC,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAEZ,IAAIa,EAAS,IAAIyJ,GAEjBjS,EAAKD,SAAS,CACZ8H,MAAOW,EAAOqC,0BAA0BlD,GACxCsC,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CACZ8H,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,sDAMtB,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OACbX,EAAAC,EAAAC,cAAC8I,GAAD,CAAU1K,MAAOjJ,KAAKY,MAAMqI,QAE5B,YA/DkC9G,IAAMuJ,WCtgBhCmI,8MAEjBjT,MAAS,CAAC2L,iBAAgB,EAAOC,eAAc,EAAOC,eAAe,GAAIC,QAAQ,IAAIrM,MAAwBsM,gBAAgB,IAAItM,MAAwBuM,YAAY,GAAIvB,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,uFAGnOzK,KAAK6M,sDAGO3L,EAAO4L,GAClB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaU,MAAQ,SAAWwJ,EAAIvL,8CAG/CL,EAAO4L,GACpB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaU,MAAQ,IAAMwJ,EAAIvL,8CAG1CL,GACdlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaU,MAAQ,qDAG/BpC,EAAO4L,GAAiC,IAAA1L,EAAApB,KACtD8D,IAAMiJ,OAAOxK,EAAUE,YAAcgB,EAAUH,MAAQ,IAAMwJ,EAAIvL,GACjE,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,iBAAkBD,eAAc,EAAMD,iBAAgB,KACnGnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAC7B,SAAAtI,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,wBAAyBD,eAAc,EAAOD,iBAAgB,mDAIhGrL,GACrBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGD,IAAAuD,EAAAxE,KAAnBiN,EAAmB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA8BgM,YAAYK,KAC1C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUH,MAAQ,aAE5D2J,IAEFC,GAAkB,UAAaD,GAGhCnJ,IAAMC,IAAImJ,EACV,CACClJ,QAAS,CACRC,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAoC,GACvCvD,EAAS,IAAIyJ,GAEjBtK,EAASqE,QAAQ,SAAAC,GAEhBF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGzC7I,EAAKrD,SAAS,CAACuL,QAAQS,EAAYR,gBAAgBQ,EAAY9B,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAElI,SAAAnG,GACFF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CAACuL,QAAQ,IAAIrM,MAAuBsM,gBAAgB,IAAItM,MAAwBgL,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,4FAQnJ,IAAA6C,EAAAtN,KACN,GAAGA,KAAKY,MAAMyK,QACV,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MAEZ,GAAGxL,KAAKY,MAAM2K,cACT,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAErC,GAAGzK,KAAKY,MAAM0K,OAAQ,CAEvB,IAAIiC,EAA4B5C,EAAAC,EAAAC,cAAA,aAUhC,OARG7K,KAAKY,MAAM2L,kBAENgB,EADDvN,KAAKY,MAAM4L,cACK7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAuBtB,KAAKY,MAAM6L,gBAGhD9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAsBtB,KAAKY,MAAM6L,iBAIxE9B,EAAAC,EAAAC,cAAA,WAEQ0C,EAER5C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACXqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,SAAO5F,KAAK,SAAS3D,UAAU,eAAekM,YAAa,SAAUvM,MAAOjB,KAAKY,MAAMgM,YAAaa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAEhJyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yFAAyFS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAAIyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAI7KqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CAAC,CACNnO,OAAQ,OACRmO,QAAS,CACtB,CACenO,OAAQ,UACRoO,SAAU,UACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASrG,YAElC,CACFjI,OAAQ,YACRoO,SAAU,YACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASpG,cAElC,CACFlI,OAAQ,MACRoO,SAAU,MACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASnG,QAElC,CACFnI,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS5I,iBAElC,CACF1F,OAAQ,cACRoO,SAAU,cACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASlG,gBAElC,CACFpI,OAAQ,YACRoO,SAAU,WACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASjG,aAElC,CACFrI,OAAQ,YACRoO,SAAU,YACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAShG,cAElC,CACFtI,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAElC,CACF7B,OAAQ,iBACRoO,SAAU,iBACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS/F,mBAElC,CACFvI,OAAQ,WACRoO,SAAU,WACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS9F,aAElC,CACFxI,OAAQ,aACRoO,SAAU,aACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS7F,eAElC,CACFzI,OAAQ,UACRoO,SAAU,SACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS5F,WAElC,CACF1I,OAAQ,QACRoO,SAAU,OACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS3F,SAElC,CACF3I,OAAQ,aACRoO,SAAU,aACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS1F,eAGtC,CACI5I,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OAAKnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,aAAaS,QAAS,SAAAb,GAAMoM,EAAKW,kBAAkB/M,EAAG4L,EAAIkB,YAA4CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAA1I,OACRqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yBAAyBS,QAAS,SAAAb,GAAMoM,EAAKY,gBAAgBhN,EAAG4L,EAAIkB,YAA4CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBADvI,OAERqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,wBAAwBS,QAAS,SAAAb,GAAMoM,EAAKa,kBAAkBjN,EAAG4L,EAAIkB,YAA4CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAQ1K,OAAO,YAvNsCa,IAAMuJ,WC/BlCoI,cAQnB,SAAAA,IAAehU,OAAAC,EAAA,EAAAD,CAAAE,KAAA8T,GACb9T,KAAKwI,kBAAexD,EACpBhF,KAAKoF,kBAAeJ,EACpBhF,KAAKuB,GAAK,EACVvB,KAAKqF,OAAS,EACdrF,KAAKkF,YAASF,EACdhF,KAAKyI,WAAa,4DAIlBD,EACApD,EACA7D,EACA8D,EACAH,EACAuD,GAEAzI,KAAKwI,aAAeA,EACpBxI,KAAKoF,aAAeA,EACpBpF,KAAKuB,GAAKA,EACVvB,KAAKqF,OAASA,EACdrF,KAAKkF,OAASA,EACdlF,KAAKyI,WAAaA,sCAIlB,OAAOG,kBChCUmL,qHACOjL,GACxB,IAAIC,EAAW,IAAI+K,GAUnB,OATA/K,EAASC,cACPF,EAAIN,aACJM,EAAI1D,aACJ0D,EAAIvH,GACJuH,EAAIzD,OACJyD,EAAI5D,OACJ4D,EAAIL,YAGCM,mDAGgBE,GACvB,IAAIF,EAAW,IAAIG,EASnB,OARAH,EAASC,cACPC,EAAMT,aACNS,EAAM7D,aACN6D,EAAM1H,GACN0H,EAAM5D,OACN4D,EAAM/D,OACN+D,EAAMR,YAEDM,WCqLLiL,GAAa5K,YAAiC,CAClDC,iBAAkB,SAAAhH,GAChB,IAAI0G,EAAW,IAAI+K,GAWnB,YAVmB9O,GAAf3C,EAAM4G,OACRF,EAASC,cACP3G,EAAM4G,MAAOT,aACbnG,EAAM4G,MAAO7D,aACb/C,EAAM4G,MAAO1H,GACbc,EAAM4G,MAAO5D,OACbhD,EAAM4G,MAAO/D,OACb7C,EAAM4G,MAAOR,YAGVM,GAGTO,SAAU,SAAAC,GACR,IAAIC,EAAsC,GAY1C,YAV2BxE,GAAvBuE,EAAOnE,eACToE,EAAOpE,aAAe,YAEH,GAAjBmE,EAAOlE,SACTmE,EAAOnE,OAAS,YAEO,GAArBkE,EAAOd,aACTe,EAAOf,WAAa,YAGfe,GAGTC,aAAc,SAACF,EAAQG,GACrBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAImK,GAEjBjQ,IACG+F,KACCtH,EAAUE,YAAcgB,EAAUF,MAClCqG,EAAOE,yBAAyBP,GAChC,CACEvF,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAGpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEd,SAAAzE,GACEF,QAAQC,IAAIC,GACZoF,EAAQC,UAAU,qBAI1B7B,YAAa,cA5DIsB,CAhM8C,SAC/D/G,GAEA,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GACpB,IAAI8D,EAAW,GAoBf,OAlBE1G,EAAM6H,QAAQjF,IACd5C,EAAMmH,OAAOvE,KAEb8D,GAAY1G,EAAMmH,OAAOvE,IAIzB+E,GACAA,EAAOG,kBACPH,EAAOG,iBAAiBC,KACtB,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAG5CxB,GAAYiB,EAAOG,iBAAiBK,OAClC,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAC1C,GAAGE,cAGA1B,GAGL2B,EAAqB,SAACzF,GACxB,MAA+B,IAAxBgF,EAAehF,IAGxB,OACE0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACvCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,gBACf,qCACA,2BALR,gBAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,eACL3D,UACEoJ,EAAmB,gBACf,0BACA,iBAGPA,EAAmB,iBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,mBAMxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,gBACf,qCACA,2BALR,gBAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,eACL3D,UACEoJ,EAAmB,gBACf,0BACA,iBAGPA,EAAmB,iBAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,mBAMxBU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,UACf,qCACA,2BALR,UAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,SACL3D,UACEoJ,EAAmB,UACf,0BACA,iBAGPA,EAAmB,WAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAKrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,UACf,qCACA,2BALR,UAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,SACL3D,UACEoJ,EAAmB,UACf,0BACA,iBAGPA,EAAmB,WAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAKrDU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SACEG,QAAQ,OACR1J,UACEoJ,EAAmB,cACf,qCACA,2BALR,cAUAC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACExJ,KAAK,iBACLwD,KAAK,aACL3D,UACEoJ,EAAmB,cACf,0BACA,iBAGPA,EAAmB,eAClBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eACd2I,EAAe,iBAMxBU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACCb,GAAUA,EAAOmB,QAChBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WACE,KAEH0I,IAAWA,EAAOmB,QACjBR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBACE,QA8EW2S,8MAInBrT,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,4EAId,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OACbX,EAAAC,EAAAC,cAACmJ,GAAD,CAAY/K,MAAOjJ,KAAKY,MAAMqI,QAE9B,YApBoC9G,IAAMuJ,WCzQjDwI,GAAoB,SAACjL,GACzB,OACE0B,EAAAC,EAAAC,cAAA,QAAME,KAAK,QACTJ,EAAAC,EAAAC,cAAA,UACEvJ,UAAU,oEACVS,QAAS,SAAAb,GACP+H,EAAM2C,QAAQC,KAAKjJ,EAAaW,MAAQ,SAAW0F,EAAMA,MAAO1H,MAGlEoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAOT,gBAElDmC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,eAAe1J,UAAW,2BAAzC,gBAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO7D,gBAElDuF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO1H,MAElDoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAS1J,UAAW,2BAAnC,UAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO5D,UAElDsF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,SAAS1J,UAAW,2BAAnC,UAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAO/D,UAElDyF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACbqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,aAAa1J,UAAW,2BAAvC,cAGAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAAasH,OAAOK,EAAMA,MAAOR,gBA2BnC0L,8MAInBvT,MAAQ,CACNqI,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,uFAGI,IAAArJ,EAAApB,KAClBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAmBE,KAAKY,MAAxB,CAA+ByK,SAAS,KAExCvH,IACGC,IACCxB,EAAUE,YACRgB,EAAUF,MACV,IACAvD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAC1B,CACEyC,QAAS,CACPC,eAAgB,sBAIrBC,KACC,SAAAC,GACE,IAAI4E,EAAW5E,EAAK4F,KAEhBH,EAAS,IAAImK,GAEjB3P,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CACZ8H,MAAOW,EAAOqC,0BAA0BlD,GACxCsC,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,MAGlB,SAAAnG,GACEF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CACZ8H,WAAOjE,EACPqG,SAAS,EACTC,QAAQ,EACRC,eAAe,EACfd,aAAc,sDAMtB,OAAIzK,KAAKY,MAAMyK,QACNV,EAAAC,EAAAC,cAACW,EAAD,MACExL,KAAKY,MAAM2K,cACbZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAC7BzK,KAAKY,MAAM0K,OAElBX,EAAAC,EAAAC,cAACuJ,GAAD,CACExI,QAAS5L,KAAKqC,MAAMuJ,QACpB3C,MAAOjJ,KAAKY,MAAMqI,QAIf,YApEoC9G,IAAMuJ,WCcjD2I,GAAWjL,YAAiC,CAC9CC,iBAAkB,SAAAhH,GACd,IAAI0G,EAAW,IAAI+K,GAEzB,OADA/K,EAASC,cAAc3G,EAAM4G,MAAOT,aAAanG,EAAM4G,MAAO7D,aAAa/C,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAO5D,OAAOhD,EAAM4G,MAAO/D,OAAO7C,EAAM4G,MAAOR,YACzIM,GAILO,SAAU,SAAAC,GACR,IAAIC,EAAqC,GAYzC,YAVuBxE,GAAvBuE,EAAOnE,eACGoE,EAAOpE,aAAe,YACD,GAAbmE,EAAOhI,KACfiI,EAAOjI,GAAK,YACa,GAAjBgI,EAAOlE,SACfmE,EAAOnE,OAAS,YACa,GAArBkE,EAAOd,aACfe,EAAOf,WAAa,YAGvBe,GAETC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAErB,IAAI4E,EAAS,IAAImK,GAEdjQ,IAAMsI,IAAI7J,EAAUE,YAAcgB,EAAUF,MAAO,IAAMgG,EAAOhI,GAEnEqI,EAAOE,yBAAyBP,GAC7B,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEtB,SAAAzE,GACIF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,oBAErBzF,KAAK,SAAA6E,OAMVjB,YAAa,YAnDAsB,CAvFS,SAAC/G,GAExB,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAiC5C,EAAMmH,OAAOvE,KAC3D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAIR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAEO0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QAC5CJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAG3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,gBAAmB,qCAAwC,2BAA/G,gBACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,eAAe3D,UAAWoJ,EAAmB,gBAAkB,0BAA4B,iBAC7HA,EAAmB,iBAAmBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,mBAG3GU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,MAAS,qCAAwC,2BAArG,MACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,KAAK3D,UAAWoJ,EAAmB,MAAQ,0BAA4B,iBACzGA,EAAmB,OAASC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAGjGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAGrGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,UAAa,qCAAwC,2BAAzG,UACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,SAAS3D,UAAWoJ,EAAmB,UAAY,0BAA4B,iBACjHA,EAAmB,WAAaC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,aAGrGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,cAAiB,qCAAwC,2BAA7G,cACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,aAAa3D,UAAWoJ,EAAmB,cAAgB,0BAA4B,iBACzHA,EAAmB,eAAiBC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,iBAIpGU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAsFlFgT,8MAEnB1T,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUF,MAAQ,IAAMvD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAAI,CAClFyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAErB,IAAIa,EAAS,IAAImK,GAER3S,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAGzI,SAAAnG,GACUF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAEFxL,KAAKY,MAAM2K,cAClBZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAExBzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACwJ,GAAD,CAAUpL,MAAOjJ,KAAKY,MAAMqI,QAGrC,YAvCsC9G,IAAMuJ,WCtJlC6I,8MAEjB3T,MAAS,CAAC2L,iBAAgB,EAAOC,eAAc,EAAOC,eAAe,GAAIC,QAAQ,IAAIrM,MAAwBsM,gBAAgB,IAAItM,MAAwBuM,YAAY,GAAIvB,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,uFAGnOzK,KAAK6M,sDAGO3L,EAAO4L,GAClB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaW,MAAQ,SAAWuJ,EAAIvL,8CAG/CL,EAAO4L,GACpB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaW,MAAQ,IAAMuJ,EAAIvL,8CAG1CL,GACdlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaW,MAAQ,qDAG/BrC,EAAO4L,GAAiC,IAAA1L,EAAApB,KACtD8D,IAAMiJ,OAAOxK,EAAUE,YAAcgB,EAAUF,MAAQ,IAAMuJ,EAAIvL,GACjE,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,iBAAkBD,eAAc,EAAMD,iBAAgB,KACnGnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAC7B,SAAAtI,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,wBAAyBD,eAAc,EAAOD,iBAAgB,mDAIhGrL,GACrBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGD,IAAAuD,EAAAxE,KAAnBiN,EAAmB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA8BgM,YAAYK,KAC1C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUF,MAAQ,aAE5D0J,IAEFC,GAAkB,UAAaD,GAGhCnJ,IAAMC,IAAImJ,EACV,CACClJ,QAAS,CACRC,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAoC,GACvCvD,EAAS,IAAImK,GAEjBhL,EAASqE,QAAQ,SAAAC,GAEhBF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGzC7I,EAAKrD,SAAS,CAACuL,QAAQS,EAAYR,gBAAgBQ,EAAY9B,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAElI,SAAAnG,GACFF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CAACuL,QAAQ,IAAIrM,MAAuBsM,gBAAgB,IAAItM,MAAwBgL,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,4FAQnJ,IAAA6C,EAAAtN,KACN,GAAGA,KAAKY,MAAMyK,QACV,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MAEZ,GAAGxL,KAAKY,MAAM2K,cACT,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAErC,GAAGzK,KAAKY,MAAM0K,OAAQ,CAEvB,IAAIiC,EAA4B5C,EAAAC,EAAAC,cAAA,aAUhC,OARG7K,KAAKY,MAAM2L,kBAENgB,EADDvN,KAAKY,MAAM4L,cACK7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAuBtB,KAAKY,MAAM6L,gBAGhD9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAsBtB,KAAKY,MAAM6L,iBAIxE9B,EAAAC,EAAAC,cAAA,WAEQ0C,EAER5C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACXqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,SAAO5F,KAAK,SAAS3D,UAAU,eAAekM,YAAa,SAAUvM,MAAOjB,KAAKY,MAAMgM,YAAaa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAEhJyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yFAAyFS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAAIyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAI7KqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CAAC,CACNnO,OAAQ,OACRmO,QAAS,CACtB,CACenO,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASxF,iBAElC,CACF9I,OAAQ,eACRoO,SAAU,eACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS5I,iBAElC,CACF1F,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAElC,CACF7B,OAAQ,SACRoO,SAAU,SACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS3I,WAElC,CACF3F,OAAQ,SACRoO,SAAU,SACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS9I,WAElC,CACFxF,OAAQ,aACRoO,SAAU,aACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASvF,eAGtC,CACI/I,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OAAKnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,aAAaS,QAAS,SAAAb,GAAMoM,EAAKW,kBAAkB/M,EAAG4L,EAAIkB,YAA4CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAA1I,OACRqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yBAAyBS,QAAS,SAAAb,GAAMoM,EAAKY,gBAAgBhN,EAAG4L,EAAIkB,YAA4CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBADvI,OAERqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,wBAAwBS,QAAS,SAAAb,GAAMoM,EAAKa,kBAAkBjN,EAAG4L,EAAIkB,YAA4CrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAQ1K,OAAO,YAvKsCa,IAAMuJ,WC/BlC8I,cAIjB,SAAAA,IAAe1U,OAAAC,EAAA,EAAAD,CAAAE,KAAAwU,GACjBxU,KAAKuB,GAAK,EACZvB,KAAKiF,KAAO,6DAIG1D,EAAY0D,GAEzBjF,KAAKuB,GAAKA,EACZvB,KAAKiF,KAAOA,sCAMV,OAAO2D,kBCjBY6L,qHAEjB3L,GAEA,IAAIC,EAAW,IAAIyL,GAGnB,OAFAzL,EAASC,cAAcF,EAAIvH,GAAIuH,EAAI7D,MAE5B8D,mDAIPE,GAEA,IAAIF,EAAW,IAAIG,EAEnB,OADAH,EAASC,cAAcC,EAAM1H,GAAI0H,EAAMhE,MAChC8D,WCgDL2L,GAAiBtL,YAAqC,CACxDC,iBAAkB,SAAAhH,GAEpB,IAAI0G,EAAW,IAAIyL,GAKnB,YAJmBxP,GAAf3C,EAAM4G,OAETF,EAASC,cAAc3G,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOhE,MAE9C8D,GAGLO,SAAU,SAAAC,GACR,IAAIC,EAAyC,GAM7C,MAJe,IAAfD,EAAOtE,OACGuE,EAAOvE,KAAO,YAGjBuE,GAGTC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAClB,IAAI4E,EAAS,IAAI6K,GAEjB3Q,IAAM+F,KAAKtH,EAAUE,YAAcgB,EAAUD,UAC7CoG,EAAOE,yBAAyBP,GAChC,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEb,SAAAzE,GACLF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,qBAG1B7B,YAAa,kBA1CMsB,CAjDqD,SAAC/G,GAE1E,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAqC5C,EAAMmH,OAAOvE,KAC/D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAGR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAAQ0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QACrCJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACNqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAK9FU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAgElFqT,8MAEnB/T,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,4EAIrF,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAELxL,KAAKY,MAAM2K,cACLZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAElCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAAC6J,GAAD,CAAgBzL,MAAOjJ,KAAKY,MAAMqI,QAG3C,YAhB4C9G,IAAMuJ,WC3GvDkJ,GAAwB,SAAC3L,GAE5B,OACO0B,EAAAC,EAAAC,cAAA,QAAOE,KAAK,QAClBJ,EAAAC,EAAAC,cAAA,UACcvJ,UAAU,oEACVS,QAAS,SAACb,GAAQ+H,EAAM2C,QAAQC,KAAKjJ,EAAaY,UAAY,SAAWyF,EAAMA,MAAO1H,MAEtFoJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAEpBqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACnBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,KAAK1J,UAAW,2BAA/B,MACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAO1H,MAGdoJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACvBqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAW,2BAAjC,QACAqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACbsH,OAAOK,EAAMA,MAAOhE,UAiCN4P,8MAEnBjU,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUD,UAAY,IAAMxD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GACtF,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEzBH,EAAS,IAAI6K,GAERrQ,QAAQC,IAAI0E,GAEZ3H,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAEhI,SAAAnG,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAERxL,KAAKY,MAAM2K,cACHZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAEjCzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACiK,GAAD,CAAuBlJ,QAAS5L,KAAKqC,MAAMuJ,QAAS3C,MAAOjJ,KAAKY,MAAMqI,QAG/E,YAvC4C9G,IAAMuJ,WCMvDqJ,GAAe3L,YAAqC,CACtDC,iBAAkB,SAAAhH,GACd,IAAI0G,EAAW,IAAIyL,GAEzB,OADAzL,EAASC,cAAc3G,EAAM4G,MAAO1H,GAAGc,EAAM4G,MAAOhE,MAC7C8D,GAILO,SAAU,SAAAC,GACR,IAAIC,EAAyC,GAQ7C,OANa,GAAbD,EAAOhI,KACGiI,EAAOjI,GAAK,YACW,IAAfgI,EAAOtE,OACfuE,EAAOvE,KAAO,YAGjBuE,GAETC,aAAc,SAACF,EAAQG,GACnBA,EAAQC,eAAU3E,GAErB,IAAI4E,EAAS,IAAI6K,GAEd3Q,IAAMsI,IAAI7J,EAAUE,YAAcgB,EAAUD,UAAW,IAAM+F,EAAOhI,GAEvEqI,EAAOE,yBAAyBP,GAC7B,CACIvF,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KACpBL,EAAQC,UAAUZ,GAClB3E,QAAQC,IAAI0E,IAEtB,SAAAzE,GACIF,QAAQC,IAAIC,GACNoF,EAAQC,UAAU,oBAErBzF,KAAK,SAAA6E,OAMVjB,YAAa,gBA/CIsB,CA3DS,SAAC/G,GAE5B,IAAI2H,EAAS3H,EAAM2H,OAEfC,EAAiB,SAAChF,GAEjB,IAAI8D,EAAW,GASf,OARG1G,EAAM6H,QAAQjF,IAAqC5C,EAAMmH,OAAOvE,KAC/D8D,GAAY1G,EAAMmH,OAAOvE,IAG1B+E,GAAUA,EAAOG,kBAAoBH,EAAOG,iBAAiBC,KAAK,SAAAC,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,kBAC3GxB,GAAYiB,EAAOG,iBAAiBK,OAAO,SAAAH,GAAC,OAAIA,EAAEC,aAAaC,eAAiBtF,EAAKsF,gBAAe,GAAGE,cAGpG1B,GAIR2B,EAAqB,SAACzF,GAErB,MAA+B,IAAxBgF,EAAehF,IAG3B,OAEO0F,EAAAC,EAAAC,cAAA,QAAMC,SAAUzI,EAAMoH,aAAcsB,KAAK,QAC5CJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,MAAS,qCAAwC,2BAArG,MACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,KAAK3D,UAAWoJ,EAAmB,MAAQ,0BAA4B,iBACzGA,EAAmB,OAASC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,SAGjGU,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACEqJ,EAAAC,EAAAC,cAAA,SAAOG,QAAQ,OAAO1J,UAAWoJ,EAAmB,QAAW,qCAAwC,2BAAvG,QACfC,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aACKqJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOxJ,KAAK,iBAAiBwD,KAAK,OAAO3D,UAAWoJ,EAAmB,QAAU,0BAA4B,iBAC7GA,EAAmB,SAAWC,EAAAC,EAAAC,cAAA,SAAOvJ,UAAU,eAAe2I,EAAe,WAI9FU,EAAAC,EAAAC,cAAA,UAAQpJ,KAAK,SAASH,UAAU,kBAAkB4J,UAAU,GAA5D,UAGAP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAEIb,GAAUA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAf,WAAsD,KAIlF0I,IAAWA,EAAOmB,QAAWR,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAf,kBAA4D,QAkFlF0T,8MAEnBpU,MAAS,CAACqI,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAOd,aAAa,uFAErE,IAAArJ,EAAApB,KACjBA,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA6ByK,SAAQ,KAErCvH,IAAMC,IAAIxB,EAAUE,YAAcgB,EAAUD,UAAY,IAAMxD,KAAKqC,MAAM0J,MAAMC,OAAOzK,GAAI,CACtFyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF,IAAI4E,EAAW5E,EAAK4F,KAEpB3F,QAAQC,IAAI0E,GAErB,IAAIa,EAAS,IAAI6K,GAERrT,EAAKD,SAAS,CAAC8H,MAAMW,EAAOqC,0BAA0BlD,GAAWsC,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAGzI,SAAAnG,GACUF,QAAQC,IAAIC,GACZlD,EAAKD,SAAS,CAAC8H,WAAMjE,EAAWqG,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,sDAKlG,OAAIzK,KAAKY,MAAMyK,QACJV,EAAAC,EAAAC,cAACW,EAAD,MAEFxL,KAAKY,MAAM2K,cAClBZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAExBzK,KAAKY,MAAM0K,OACRX,EAAAC,EAAAC,cAACkK,GAAD,CAAc9L,MAAOjJ,KAAKY,MAAMqI,QAGzC,YAvC0C9G,IAAMuJ,WCtHtCuJ,8MAEjBrU,MAAS,CAAC2L,iBAAgB,EAAOC,eAAc,EAAOC,eAAe,GAAIC,QAAQ,IAAIrM,MAA4BsM,gBAAgB,IAAItM,MAA4BuM,YAAY,GAAIvB,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,uFAG3OzK,KAAK6M,sDAGO3L,EAAO4L,GAClB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaY,UAAY,SAAWsJ,EAAIvL,8CAGnDL,EAAO4L,GACpB9M,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaY,UAAY,IAAMsJ,EAAIvL,8CAG9CL,GACdlB,KAAKqC,MAAMuJ,QAAQC,KAAKjJ,EAAaY,UAAY,qDAGnCtC,EAAO4L,GAAqC,IAAA1L,EAAApB,KAC1D8D,IAAMiJ,OAAOxK,EAAUE,YAAcgB,EAAUD,UAAY,IAAMsJ,EAAIvL,GACrE,CACIyC,QAAS,CACLC,eAAgB,sBAGvBC,KAAK,SAAAC,GACF/C,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,iBAAkBD,eAAc,EAAMD,iBAAgB,KACnGnL,EAAKyL,YAAYzL,EAAKR,MAAMgM,cAC7B,SAAAtI,GACCF,QAAQC,IAAIC,GACZlD,EAAKD,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBsB,EAAKR,MAAvB,CAA8B6L,eAAe,wBAAyBD,eAAc,EAAOD,iBAAgB,mDAIhGrL,GACrBlB,KAAK6M,YAAY3L,EAAE8L,cAAc/L,6CAGD,IAAAuD,EAAAxE,KAAnBiN,EAAmB/M,UAAAC,OAAA,QAAA6E,IAAA9E,UAAA,GAAAA,UAAA,GAAJ,GAC1BF,KAAKmB,SAALrB,OAAA+D,EAAA,EAAA/D,CAAA,GAAkBE,KAAKY,MAAvB,CAA8BgM,YAAYK,KAC1C,IAAIC,EAAiB3K,EAAUE,YAAcgB,EAAUD,UAAY,aAEhEyJ,IAEFC,GAAkB,UAAaD,GAGhCnJ,IAAMC,IAAImJ,EACV,CACClJ,QAAS,CACRC,eAAgB,sBAGjBC,KAAK,SAAAC,GACJ,IAAI4E,EAAW5E,EAAK4F,KAChBoD,EAAwC,GAC3CvD,EAAS,IAAI6K,GAEjB1L,EAASqE,QAAQ,SAAAC,GAEhBF,EAAWtB,KAAKjC,EAAOqC,0BAA0BoB,MAGzC7I,EAAKrD,SAAS,CAACuL,QAAQS,EAAYR,gBAAgBQ,EAAY9B,SAAQ,EAAOC,QAAO,EAAMC,eAAc,EAAOd,aAAa,MAElI,SAAAnG,GACFF,QAAQC,IAAIC,GACZE,EAAKrD,SAAS,CAACuL,QAAQ,IAAIrM,MAA2BsM,gBAAgB,IAAItM,MAA4BgL,SAAQ,EAAOC,QAAO,EAAOC,eAAc,EAAMd,aAAa,4FAQ3J,IAAA6C,EAAAtN,KACN,GAAGA,KAAKY,MAAMyK,QACV,OAAOV,EAAAC,EAAAC,cAACW,EAAD,MAEZ,GAAGxL,KAAKY,MAAM2K,cACT,OAAOZ,EAAAC,EAAAC,cAACY,EAAD,CAAW5G,QAAS7E,KAAKY,MAAM6J,eAErC,GAAGzK,KAAKY,MAAM0K,OAAQ,CAEvB,IAAIiC,EAA4B5C,EAAAC,EAAAC,cAAA,aAUhC,OARG7K,KAAKY,MAAM2L,kBAENgB,EADDvN,KAAKY,MAAM4L,cACK7B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,uBAAuBtB,KAAKY,MAAM6L,gBAGhD9B,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,sBAAsBtB,KAAKY,MAAM6L,iBAIxE9B,EAAAC,EAAAC,cAAA,WAEQ0C,EAER5C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,kBACXqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,aAEfqJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,SAAO5F,KAAK,SAAS3D,UAAU,eAAekM,YAAa,SAAUvM,MAAOjB,KAAKY,MAAMgM,YAAaa,SAAU,SAAAvM,GAAC,OAAIoM,EAAKI,oBAAoBxM,OAEhJyJ,EAAAC,EAAAC,cAAA,OAAKvJ,UAAU,YACXqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yFAAyFS,QAAS,SAAAb,GAAC,OAAIoM,EAAKK,kBAAkBzM,KAAIyJ,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,oBAI7KqJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACI7D,KAAM/J,KAAKY,MAAM+L,gBACjBkB,QAAS,CAAC,CACNnO,OAAQ,WACRmO,QAAS,CACtB,CACenO,OAAQ,KACRoO,SAAU,KACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAASzM,OAElC,CACF7B,OAAQ,OACRoO,SAAU,OACVC,KAAM,SAAC1L,GACP,OAAOsI,EAAAC,EAAAC,cAAA,YAAOjC,OAAOvG,EAAM2L,SAAS/I,SAGtC,CACIvF,OAAQ,UACRqO,KAAM,SAAAjB,GAAG,OAAKnC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,aAAaS,QAAS,SAAAb,GAAMoM,EAAKW,kBAAkB/M,EAAG4L,EAAIkB,YAAgDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,mBAA9I,OACRqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,yBAAyBS,QAAS,SAAAb,GAAMoM,EAAKY,gBAAgBhN,EAAG4L,EAAIkB,YAAgDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,iBAD3I,OAERqJ,EAAAC,EAAAC,cAAA,UAAQvJ,UAAU,wBAAwBS,QAAS,SAAAb,GAAMoM,EAAKa,kBAAkBjN,EAAG4L,EAAIkB,YAAgDrD,EAAAC,EAAAC,cAAA,KAAGvJ,UAAU,+BAQ9K,OAAO,YA/I0Ca,IAAMuJ,WCuBrDwJ,GACE,CACJC,SAAU,mBACVC,OAAQ,gDACRC,YAAa,oDACbC,MAAO,wBCrDXC,IAASC,OACF7K,EAAAC,EAAAC,cDwDgD,WACvC,IAAI4K,gBAAgBvN,SAASwN,QAE3C,OACErU,EAAA,cAACsU,EAAA,EAAD,KACEtU,EAAA,cAACuU,EAAA,SAAD,CACER,OAAQF,GAAYE,OACpBS,UAAWX,GAAYC,SACvBW,aAAcZ,GAAYG,aAE1BhU,EAAA,qBAAKC,UAAU,mBACbD,EAAA,cAAC0U,EAAA,EAAD,CAAOC,UAAW5T,IAClBf,EAAA,cAACuU,EAAA,YAAD,CACEK,KAAK,aACLD,UAAW,iBAAM,6BAEnB3U,EAAA,cAAC6U,EAAA,EAAD,KACE7U,EAAA,cAAC0U,EAAA,EAAD,CAAOI,OAAK,EAACF,KAAK,IAAID,UAAWtS,IACjCrC,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,iBAAiBD,UAAW5K,IACxC/J,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,mBAAmBD,UAAW3J,IAC1ChL,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,cAAcD,UAAWlK,IACrCzK,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,UAAUD,UAAW1J,IACjCjL,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,mBAAmBD,UAAWzH,KAC1ClN,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,qBAAqBD,UAAWpH,KAC5CvN,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,gBAAgBD,UAAWvH,KACvCpN,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,YAAYD,UAAWnH,KACnCxN,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,oBACLD,UAAW/G,KAEb5N,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,sBACLD,UAAW1G,KAEbjO,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,iBAAiBD,UAAW7G,KACxC9N,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,aAAaD,UAAWzG,KACpClO,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,wBACLD,UAAWrG,KAEbtO,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,0BACLD,UAAWhG,KAEb3O,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,qBACLD,UAAWnG,KAEbxO,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,iBACLD,UAAW/F,KAEb5O,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,2BACLD,UAAW3F,KAEbhP,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,6BACLD,UAAWtF,KAEbrP,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,wBACLD,UAAWzF,KAEblP,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,oBACLD,UAAWrF,KAEbtP,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,oBACLD,UAAWjF,KAEb1P,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,sBACLD,UAAW5E,KAEb/P,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,iBAAiBD,UAAW/E,KACxC5P,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,aAAaD,UAAW3E,KACpChQ,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,gBAAgBD,UAAWvE,KACvCpQ,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,kBAAkBD,UAAWlE,KACzCzQ,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,aAAaD,UAAWrE,KACpCtQ,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,SAASD,UAAWjE,KAChC1Q,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,oBACLD,UAAW7D,KAEb9Q,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,sBACLD,UAAWxD,KAEbnR,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,iBAAiBD,UAAW3D,KACxChR,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,aAAaD,UAAWvD,KACpCpR,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,eAAeD,UAAWnD,KACtCxR,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,iBAAiBD,UAAW9C,KACxC7R,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,YAAYD,UAAWjD,KACnC1R,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,QAAQD,UAAW7C,KAC/B9R,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,gBAAgBD,UAAWzC,KACvClS,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,kBAAkBD,UAAWpC,KACzCvS,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,aAAaD,UAAWvC,KACpCpS,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,SAASD,UAAWnC,KAChCxS,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,gBAAgBD,UAAW/B,KACvC5S,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,kBAAkBD,UAAW1B,KACzCjT,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,aAAaD,UAAW7B,KACpC9S,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,SAASD,UAAWzB,KAChClT,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,oBACLD,UAAWrB,KAEbtT,EAAA,cAAC0U,EAAA,EAAD,CACEE,KAAK,sBACLD,UAAWhB,KAEb3T,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,iBAAiBD,UAAWnB,KACxCxT,EAAA,cAAC0U,EAAA,EAAD,CAAOE,KAAK,aAAaD,UAAWf,UCzKzC,MACLmB,SAASC,eAAe","file":"static/js/main.d96c955d.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {}\r\n\r\ninterface State {\r\n  menuExpanded: boolean;\r\n}\r\n\r\nexport class Header extends React.Component<Props, State> {\r\n  state = { menuExpanded: false };\r\n\r\n  handleClick(e: React.FormEvent) {\r\n    this.setState({ menuExpanded: !this.state.menuExpanded });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row col-12\">\r\n        <nav\r\n          className=\"navbar navbar-expand-lg navbar-light bg-white\"\r\n          id=\"navbar\"\r\n        >\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            StackOverflow\r\n          </a>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n            onClick={e => this.handleClick(e)}\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n\r\n          <div\r\n            className={\r\n              this.state.menuExpanded\r\n                ? 'collapse.expand navbar-collapse'\r\n                : 'collapse navbar-collapse'\r\n            }\r\n            id=\"navbarSupportedContent\"\r\n          >\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/badges\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Badges\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/comments\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Comments\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/linktypes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  LinkTypes\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/posthistories\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  PostHistories\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/posthistorytypes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  PostHistoryTypes\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/postlinks\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  PostLinks\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/posts\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Posts\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/posttypes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  PostTypes\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/tags\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Tags\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/users\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Users\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/votes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  Votes\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link\r\n                  className=\"nav-link\"\r\n                  to=\"/votetypes\"\r\n                  onClick={e => this.handleClick(e)}\r\n                >\r\n                  VoteTypes\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>39f27c2e5375a5c8435490bc0c84d903</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport {Header} from './components/header'\r\nexport const App: React.StatelessComponent<{}> = (props) => {\r\n  return (\r\n    <Header />\r\n  );\r\n}","export class Constants {\r\n  static readonly BaseEndpoint = 'http://localhost:8000/';\r\n  static readonly ApiEndpoint = Constants.BaseEndpoint + 'api/';\r\n  static readonly ApiHealthEndpoint = Constants.ApiEndpoint + 'apiHealth';\r\n  static readonly SwaggerEndpoint = Constants.BaseEndpoint + 'swagger';\r\n}\r\n\r\nexport class ClientRoutes {\r\n  static readonly Badges = '/badges';\r\n  static readonly Comments = '/comments';\r\n  static readonly LinkTypes = '/linktypes';\r\n  static readonly PostHistories = '/posthistories';\r\n  static readonly PostHistoryTypes = '/posthistorytypes';\r\n  static readonly PostLinks = '/postlinks';\r\n  static readonly Posts = '/posts';\r\n  static readonly PostTypes = '/posttypes';\r\n  static readonly Tags = '/tags';\r\n  static readonly Users = '/users';\r\n  static readonly Votes = '/votes';\r\n  static readonly VoteTypes = '/votetypes';\r\n}\r\n\r\nexport class ApiRoutes {\r\n  static readonly Badges = 'badges';\r\n  static readonly Comments = 'comments';\r\n  static readonly LinkTypes = 'linktypes';\r\n  static readonly PostHistories = 'posthistories';\r\n  static readonly PostHistoryTypes = 'posthistorytypes';\r\n  static readonly PostLinks = 'postlinks';\r\n  static readonly Posts = 'posts';\r\n  static readonly PostTypes = 'posttypes';\r\n  static readonly Tags = 'tags';\r\n  static readonly Users = 'users';\r\n  static readonly Votes = 'votes';\r\n  static readonly VoteTypes = 'votetypes';\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>a9b2e91665d893dbd4fefe45d9d34c1e</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport axios from 'axios';\r\nimport { Constants } from '../constants';\r\n\r\n\r\ninterface DashboardComponentProps{\r\n}\r\n\r\ninterface DashboardComponentState{\r\n  connected:boolean;\r\n  connecting:boolean;\r\n}\r\n\r\nexport default class Dashboard extends React.Component<DashboardComponentProps, DashboardComponentState>  {\r\n  \r\n  state = ({connected:false, connecting:false});\r\n\r\n  testConnection() {\r\n    this.setState({...this.state,connecting:true});\r\n\r\n    axios.get(Constants.ApiHealthEndpoint, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    .then(\r\n      resp => {\r\n\r\n        console.log(resp);\r\n        this.setState({connecting:false, connected:true});\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.setState({connecting:false, connected:false});\r\n      }\r\n    );\r\n  }\r\n\r\n  componentDidMount()\r\n  {\r\n     this.testConnection();\r\n  }\r\n\r\n  render() {\r\n      let alert:JSX.Element = <div></div>;\r\n      if(this.state.connecting){\r\n        alert = <div>\r\n                 <div className=\"alert alert-primary\">Connecting...</div>\r\n               </div>;\r\n      }\r\n      else if(this.state.connected){\r\n        alert = <div>\r\n                 <div className=\"alert alert-success\">Connected...</div>\r\n               </div>;\r\n      }\r\n      else {\r\n        alert = <div>\r\n                  <div className=\"alert alert-danger\">Unable to connect to API...  <button className=\"btn btn-primary\" onClick={(e) => this.testConnection()}>Test Connection</button></div>\r\n                </div>;\r\n      }\r\n\r\n      return <div>\r\n        {alert}\r\n        <div>API Health Endpoint : <a target=\"_blank\" href={Constants.ApiHealthEndpoint}>{Constants.ApiHealthEndpoint}</a></div>\r\n        <div>Swagger Endpoint : <a target=\"_blank\" href={Constants.SwaggerEndpoint}>{Constants.SwaggerEndpoint}</a></div>\r\n      </div>;\r\n  }\r\n}","import * as React from 'react'\r\n\r\nexport const LoadingForm: React.SFC<{}> = () => {\r\n return <div>loading...</div>;\r\n}","import * as React from 'react'\r\n\r\ninterface ErrorFormProps\r\n{\r\n    message:string;\r\n}\r\nexport const ErrorForm: React.SFC<ErrorFormProps> = (props) => {\r\n   return <div className=\"alert alert-danger\">{props.message}</div>;\r\n}","export class BadgeClientRequestModel {\r\n\t\t\t\tdate:any;\r\nid:number;\r\nname:string;\r\nuserId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.date = undefined;\r\nthis.id = 0;\r\nthis.name = '';\r\nthis.userId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(date : any,id : number,name : string,userId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.date = date;\r\nthis.id = id;\r\nthis.name = name;\r\nthis.userId = userId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class BadgeClientResponseModel {\r\n\t\t\t\tdate:any;\r\nid:number;\r\nname:string;\r\nuserId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.date = undefined;\r\nthis.id = 0;\r\nthis.name = '';\r\nthis.userId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(date : any,id : number,name : string,userId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.date = date;\r\nthis.id = id;\r\nthis.name = name;\r\nthis.userId = userId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class CommentClientRequestModel {\r\n\t\t\t\tcreationDate:any;\r\nid:number;\r\npostId:number;\r\nscore:any;\r\ntext:string;\r\nuserId:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.creationDate = undefined;\r\nthis.id = 0;\r\nthis.postId = 0;\r\nthis.score = undefined;\r\nthis.text = '';\r\nthis.userId = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(creationDate : any,id : number,postId : number,score : any,text : string,userId : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.creationDate = creationDate;\r\nthis.id = id;\r\nthis.postId = postId;\r\nthis.score = score;\r\nthis.text = text;\r\nthis.userId = userId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class CommentClientResponseModel {\r\n\t\t\t\tcreationDate:any;\r\nid:number;\r\npostId:number;\r\nscore:any;\r\ntext:string;\r\nuserId:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.creationDate = undefined;\r\nthis.id = 0;\r\nthis.postId = 0;\r\nthis.score = undefined;\r\nthis.text = '';\r\nthis.userId = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(creationDate : any,id : number,postId : number,score : any,text : string,userId : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.creationDate = creationDate;\r\nthis.id = id;\r\nthis.postId = postId;\r\nthis.score = score;\r\nthis.text = text;\r\nthis.userId = userId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class LinkTypeClientRequestModel {\r\n\t\t\t\tid:number;\r\ntype:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.type = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,type : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.type = type;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class LinkTypeClientResponseModel {\r\n\t\t\t\tid:number;\r\ntype:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.type = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,type : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.type = type;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PostHistoryClientRequestModel {\r\n\t\t\t\tcomment:string;\r\ncreationDate:any;\r\nid:number;\r\npostHistoryTypeId:number;\r\npostId:number;\r\nrevisionGUID:string;\r\ntext:string;\r\nuserDisplayName:string;\r\nuserId:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.comment = '';\r\nthis.creationDate = undefined;\r\nthis.id = 0;\r\nthis.postHistoryTypeId = 0;\r\nthis.postId = 0;\r\nthis.revisionGUID = '';\r\nthis.text = '';\r\nthis.userDisplayName = '';\r\nthis.userId = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(comment : string,creationDate : any,id : number,postHistoryTypeId : number,postId : number,revisionGUID : string,text : string,userDisplayName : string,userId : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.comment = comment;\r\nthis.creationDate = creationDate;\r\nthis.id = id;\r\nthis.postHistoryTypeId = postHistoryTypeId;\r\nthis.postId = postId;\r\nthis.revisionGUID = revisionGUID;\r\nthis.text = text;\r\nthis.userDisplayName = userDisplayName;\r\nthis.userId = userId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PostHistoryClientResponseModel {\r\n\t\t\t\tcomment:string;\r\ncreationDate:any;\r\nid:number;\r\npostHistoryTypeId:number;\r\npostId:number;\r\nrevisionGUID:string;\r\ntext:string;\r\nuserDisplayName:string;\r\nuserId:any;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.comment = '';\r\nthis.creationDate = undefined;\r\nthis.id = 0;\r\nthis.postHistoryTypeId = 0;\r\nthis.postId = 0;\r\nthis.revisionGUID = '';\r\nthis.text = '';\r\nthis.userDisplayName = '';\r\nthis.userId = undefined;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(comment : string,creationDate : any,id : number,postHistoryTypeId : number,postId : number,revisionGUID : string,text : string,userDisplayName : string,userId : any) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.comment = comment;\r\nthis.creationDate = creationDate;\r\nthis.id = id;\r\nthis.postHistoryTypeId = postHistoryTypeId;\r\nthis.postId = postId;\r\nthis.revisionGUID = revisionGUID;\r\nthis.text = text;\r\nthis.userDisplayName = userDisplayName;\r\nthis.userId = userId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PostHistoryTypeClientRequestModel {\r\n\t\t\t\tid:number;\r\ntype:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.type = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,type : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.type = type;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PostHistoryTypeClientResponseModel {\r\n\t\t\t\tid:number;\r\ntype:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.type = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,type : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.type = type;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PostLinkClientRequestModel {\r\n\t\t\t\tcreationDate:any;\r\nid:number;\r\nlinkTypeId:number;\r\npostId:number;\r\nrelatedPostId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.creationDate = undefined;\r\nthis.id = 0;\r\nthis.linkTypeId = 0;\r\nthis.postId = 0;\r\nthis.relatedPostId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(creationDate : any,id : number,linkTypeId : number,postId : number,relatedPostId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.creationDate = creationDate;\r\nthis.id = id;\r\nthis.linkTypeId = linkTypeId;\r\nthis.postId = postId;\r\nthis.relatedPostId = relatedPostId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PostLinkClientResponseModel {\r\n\t\t\t\tcreationDate:any;\r\nid:number;\r\nlinkTypeId:number;\r\npostId:number;\r\nrelatedPostId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.creationDate = undefined;\r\nthis.id = 0;\r\nthis.linkTypeId = 0;\r\nthis.postId = 0;\r\nthis.relatedPostId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(creationDate : any,id : number,linkTypeId : number,postId : number,relatedPostId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.creationDate = creationDate;\r\nthis.id = id;\r\nthis.linkTypeId = linkTypeId;\r\nthis.postId = postId;\r\nthis.relatedPostId = relatedPostId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PostClientRequestModel {\r\n\t\t\t\tacceptedAnswerId:any;\r\nanswerCount:any;\r\nbody:string;\r\nclosedDate:any;\r\ncommentCount:any;\r\ncommunityOwnedDate:any;\r\ncreationDate:any;\r\nfavoriteCount:any;\r\nid:number;\r\nlastActivityDate:any;\r\nlastEditDate:any;\r\nlastEditorDisplayName:string;\r\nlastEditorUserId:any;\r\nownerUserId:any;\r\nparentId:any;\r\npostTypeId:number;\r\nscore:number;\r\ntag:string;\r\ntitle:string;\r\nviewCount:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.acceptedAnswerId = undefined;\r\nthis.answerCount = undefined;\r\nthis.body = '';\r\nthis.closedDate = undefined;\r\nthis.commentCount = undefined;\r\nthis.communityOwnedDate = undefined;\r\nthis.creationDate = undefined;\r\nthis.favoriteCount = undefined;\r\nthis.id = 0;\r\nthis.lastActivityDate = undefined;\r\nthis.lastEditDate = undefined;\r\nthis.lastEditorDisplayName = '';\r\nthis.lastEditorUserId = undefined;\r\nthis.ownerUserId = undefined;\r\nthis.parentId = undefined;\r\nthis.postTypeId = 0;\r\nthis.score = 0;\r\nthis.tag = '';\r\nthis.title = '';\r\nthis.viewCount = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(acceptedAnswerId : any,answerCount : any,body : string,closedDate : any,commentCount : any,communityOwnedDate : any,creationDate : any,favoriteCount : any,id : number,lastActivityDate : any,lastEditDate : any,lastEditorDisplayName : string,lastEditorUserId : any,ownerUserId : any,parentId : any,postTypeId : number,score : number,tag : string,title : string,viewCount : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.acceptedAnswerId = acceptedAnswerId;\r\nthis.answerCount = answerCount;\r\nthis.body = body;\r\nthis.closedDate = closedDate;\r\nthis.commentCount = commentCount;\r\nthis.communityOwnedDate = communityOwnedDate;\r\nthis.creationDate = creationDate;\r\nthis.favoriteCount = favoriteCount;\r\nthis.id = id;\r\nthis.lastActivityDate = lastActivityDate;\r\nthis.lastEditDate = lastEditDate;\r\nthis.lastEditorDisplayName = lastEditorDisplayName;\r\nthis.lastEditorUserId = lastEditorUserId;\r\nthis.ownerUserId = ownerUserId;\r\nthis.parentId = parentId;\r\nthis.postTypeId = postTypeId;\r\nthis.score = score;\r\nthis.tag = tag;\r\nthis.title = title;\r\nthis.viewCount = viewCount;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PostClientResponseModel {\r\n\t\t\t\tacceptedAnswerId:any;\r\nanswerCount:any;\r\nbody:string;\r\nclosedDate:any;\r\ncommentCount:any;\r\ncommunityOwnedDate:any;\r\ncreationDate:any;\r\nfavoriteCount:any;\r\nid:number;\r\nlastActivityDate:any;\r\nlastEditDate:any;\r\nlastEditorDisplayName:string;\r\nlastEditorUserId:any;\r\nownerUserId:any;\r\nparentId:any;\r\npostTypeId:number;\r\nscore:number;\r\ntag:string;\r\ntitle:string;\r\nviewCount:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.acceptedAnswerId = undefined;\r\nthis.answerCount = undefined;\r\nthis.body = '';\r\nthis.closedDate = undefined;\r\nthis.commentCount = undefined;\r\nthis.communityOwnedDate = undefined;\r\nthis.creationDate = undefined;\r\nthis.favoriteCount = undefined;\r\nthis.id = 0;\r\nthis.lastActivityDate = undefined;\r\nthis.lastEditDate = undefined;\r\nthis.lastEditorDisplayName = '';\r\nthis.lastEditorUserId = undefined;\r\nthis.ownerUserId = undefined;\r\nthis.parentId = undefined;\r\nthis.postTypeId = 0;\r\nthis.score = 0;\r\nthis.tag = '';\r\nthis.title = '';\r\nthis.viewCount = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(acceptedAnswerId : any,answerCount : any,body : string,closedDate : any,commentCount : any,communityOwnedDate : any,creationDate : any,favoriteCount : any,id : number,lastActivityDate : any,lastEditDate : any,lastEditorDisplayName : string,lastEditorUserId : any,ownerUserId : any,parentId : any,postTypeId : number,score : number,tag : string,title : string,viewCount : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.acceptedAnswerId = acceptedAnswerId;\r\nthis.answerCount = answerCount;\r\nthis.body = body;\r\nthis.closedDate = closedDate;\r\nthis.commentCount = commentCount;\r\nthis.communityOwnedDate = communityOwnedDate;\r\nthis.creationDate = creationDate;\r\nthis.favoriteCount = favoriteCount;\r\nthis.id = id;\r\nthis.lastActivityDate = lastActivityDate;\r\nthis.lastEditDate = lastEditDate;\r\nthis.lastEditorDisplayName = lastEditorDisplayName;\r\nthis.lastEditorUserId = lastEditorUserId;\r\nthis.ownerUserId = ownerUserId;\r\nthis.parentId = parentId;\r\nthis.postTypeId = postTypeId;\r\nthis.score = score;\r\nthis.tag = tag;\r\nthis.title = title;\r\nthis.viewCount = viewCount;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class PostTypeClientRequestModel {\r\n\t\t\t\tid:number;\r\ntype:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.type = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,type : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.type = type;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class PostTypeClientResponseModel {\r\n\t\t\t\tid:number;\r\ntype:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.type = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,type : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.type = type;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class TagClientRequestModel {\r\n\t\t\t\tcount:number;\r\nexcerptPostId:number;\r\nid:number;\r\ntagName:string;\r\nwikiPostId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.count = 0;\r\nthis.excerptPostId = 0;\r\nthis.id = 0;\r\nthis.tagName = '';\r\nthis.wikiPostId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(count : number,excerptPostId : number,id : number,tagName : string,wikiPostId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.count = count;\r\nthis.excerptPostId = excerptPostId;\r\nthis.id = id;\r\nthis.tagName = tagName;\r\nthis.wikiPostId = wikiPostId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class TagClientResponseModel {\r\n\t\t\t\tcount:number;\r\nexcerptPostId:number;\r\nid:number;\r\ntagName:string;\r\nwikiPostId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.count = 0;\r\nthis.excerptPostId = 0;\r\nthis.id = 0;\r\nthis.tagName = '';\r\nthis.wikiPostId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(count : number,excerptPostId : number,id : number,tagName : string,wikiPostId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.count = count;\r\nthis.excerptPostId = excerptPostId;\r\nthis.id = id;\r\nthis.tagName = tagName;\r\nthis.wikiPostId = wikiPostId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class UserClientRequestModel {\r\n\t\t\t\taboutMe:string;\r\naccountId:any;\r\nage:any;\r\ncreationDate:any;\r\ndisplayName:string;\r\ndownVote:number;\r\nemailHash:string;\r\nid:number;\r\nlastAccessDate:any;\r\nlocation:string;\r\nreputation:number;\r\nupVote:number;\r\nview:number;\r\nwebsiteUrl:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.aboutMe = '';\r\nthis.accountId = undefined;\r\nthis.age = undefined;\r\nthis.creationDate = undefined;\r\nthis.displayName = '';\r\nthis.downVote = 0;\r\nthis.emailHash = '';\r\nthis.id = 0;\r\nthis.lastAccessDate = undefined;\r\nthis.location = '';\r\nthis.reputation = 0;\r\nthis.upVote = 0;\r\nthis.view = 0;\r\nthis.websiteUrl = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(aboutMe : string,accountId : any,age : any,creationDate : any,displayName : string,downVote : number,emailHash : string,id : number,lastAccessDate : any,location : string,reputation : number,upVote : number,view : number,websiteUrl : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.aboutMe = aboutMe;\r\nthis.accountId = accountId;\r\nthis.age = age;\r\nthis.creationDate = creationDate;\r\nthis.displayName = displayName;\r\nthis.downVote = downVote;\r\nthis.emailHash = emailHash;\r\nthis.id = id;\r\nthis.lastAccessDate = lastAccessDate;\r\nthis.location = location;\r\nthis.reputation = reputation;\r\nthis.upVote = upVote;\r\nthis.view = view;\r\nthis.websiteUrl = websiteUrl;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class UserClientResponseModel {\r\n\t\t\t\taboutMe:string;\r\naccountId:any;\r\nage:any;\r\ncreationDate:any;\r\ndisplayName:string;\r\ndownVote:number;\r\nemailHash:string;\r\nid:number;\r\nlastAccessDate:any;\r\nlocation:string;\r\nreputation:number;\r\nupVote:number;\r\nview:number;\r\nwebsiteUrl:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.aboutMe = '';\r\nthis.accountId = undefined;\r\nthis.age = undefined;\r\nthis.creationDate = undefined;\r\nthis.displayName = '';\r\nthis.downVote = 0;\r\nthis.emailHash = '';\r\nthis.id = 0;\r\nthis.lastAccessDate = undefined;\r\nthis.location = '';\r\nthis.reputation = 0;\r\nthis.upVote = 0;\r\nthis.view = 0;\r\nthis.websiteUrl = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(aboutMe : string,accountId : any,age : any,creationDate : any,displayName : string,downVote : number,emailHash : string,id : number,lastAccessDate : any,location : string,reputation : number,upVote : number,view : number,websiteUrl : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.aboutMe = aboutMe;\r\nthis.accountId = accountId;\r\nthis.age = age;\r\nthis.creationDate = creationDate;\r\nthis.displayName = displayName;\r\nthis.downVote = downVote;\r\nthis.emailHash = emailHash;\r\nthis.id = id;\r\nthis.lastAccessDate = lastAccessDate;\r\nthis.location = location;\r\nthis.reputation = reputation;\r\nthis.upVote = upVote;\r\nthis.view = view;\r\nthis.websiteUrl = websiteUrl;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class VoteClientRequestModel {\r\n\t\t\t\tbountyAmount:any;\r\ncreationDate:any;\r\nid:number;\r\npostId:number;\r\nuserId:any;\r\nvoteTypeId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.bountyAmount = undefined;\r\nthis.creationDate = undefined;\r\nthis.id = 0;\r\nthis.postId = 0;\r\nthis.userId = undefined;\r\nthis.voteTypeId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(bountyAmount : any,creationDate : any,id : number,postId : number,userId : any,voteTypeId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.bountyAmount = bountyAmount;\r\nthis.creationDate = creationDate;\r\nthis.id = id;\r\nthis.postId = postId;\r\nthis.userId = userId;\r\nthis.voteTypeId = voteTypeId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class VoteClientResponseModel {\r\n\t\t\t\tbountyAmount:any;\r\ncreationDate:any;\r\nid:number;\r\npostId:number;\r\nuserId:any;\r\nvoteTypeId:number;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.bountyAmount = undefined;\r\nthis.creationDate = undefined;\r\nthis.id = 0;\r\nthis.postId = 0;\r\nthis.userId = undefined;\r\nthis.voteTypeId = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(bountyAmount : any,creationDate : any,id : number,postId : number,userId : any,voteTypeId : number) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.bountyAmount = bountyAmount;\r\nthis.creationDate = creationDate;\r\nthis.id = id;\r\nthis.postId = postId;\r\nthis.userId = userId;\r\nthis.voteTypeId = voteTypeId;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\texport class VoteTypeClientRequestModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\texport class VoteTypeClientResponseModel {\r\n\t\t\t\tid:number;\r\nname:string;\r\n\r\n\t\r\n\t\t\t\tconstructor() {\r\n\t\t\t\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsetProperties(id : number,name : string) : void\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n/*<Codenesium>\r\n    <Hash>50ea3712da19c621d98b31b64a7849f7</Hash>\r\n</Codenesium>*/","export default class BadgeViewModel {\r\n    date:any;\r\nid:number;\r\nname:string;\r\nuserId:number;\r\n\r\n    constructor() {\r\n\t\tthis.date = undefined;\r\nthis.id = 0;\r\nthis.name = '';\r\nthis.userId = 0;\r\n\r\n    }\r\n\r\n\tsetProperties(date : any,id : number,name : string,userId : number) : void\r\n\t{\r\n\t\tthis.date = date;\r\nthis.id = id;\r\nthis.name = name;\r\nthis.userId = userId;\r\n\r\n\t}\r\n\r\n\ttoDisplay() : string\r\n\t{\r\n\t\treturn String();\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>fddddfff7d67e9ad98ed816fe6840e57</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport BadgeViewModel from  './badgeViewModel';\r\nexport default class BadgeMapper {\r\n    \r\n\tmapApiResponseToViewModel(dto: Api.BadgeClientResponseModel) : BadgeViewModel \r\n\t{\r\n\t\tlet response = new BadgeViewModel();\r\n\t\tresponse.setProperties(dto.date,dto.id,dto.name,dto.userId);\r\n\t\t\r\n\t\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tmapViewModelToApiRequest(model: BadgeViewModel) : Api.BadgeClientRequestModel\r\n\t{\r\n\t\tlet response = new Api.BadgeClientRequestModel();\r\n\t\tresponse.setProperties(model.date,model.id,model.name,model.userId);\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>f35e01182167b73a5ac362937ba868a5</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects'\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport BadgeMapper from './badgeMapper';\r\nimport BadgeViewModel from './badgeViewModel';\r\n\r\ninterface Props {\r\n    model?:BadgeViewModel\r\n}\r\n\r\n   const BadgeCreateDisplay: React.SFC<FormikProps<BadgeViewModel>> = (props: FormikProps<BadgeViewModel>) => {\r\n\r\n   let status = props.status as CreateResponse<Api.BadgeClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   {\r\n        let response = '';\r\n        if(props.touched[name as keyof BadgeViewModel]  && props.errors[name as keyof BadgeViewModel]) {\r\n            response += props.errors[name as keyof BadgeViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (<form onSubmit={props.handleSubmit} role=\"form\">            \r\n            \t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"date\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Date</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"date\" className={errorExistForField(\"date\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"date\") && <small className=\"text-danger\">{errorsForField(\"date\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"name\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Name</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"name\" className={errorExistForField(\"name\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"name\") && <small className=\"text-danger\">{errorsForField(\"name\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"userId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>UserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"userId\" className={errorExistForField(\"userId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"userId\") && <small className=\"text-danger\">{errorsForField(\"userId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>);\r\n}\r\n\r\n\r\nconst BadgeCreate = withFormik<Props, BadgeViewModel>({\r\n    mapPropsToValues: props => {\r\n                \r\n\t\tlet response = new BadgeViewModel();\r\n\t\tif (props.model != undefined)\r\n\t\t{\r\n\t\t\tresponse.setProperties(props.model!.date,props.model!.id,props.model!.name,props.model!.userId);\t\r\n\t\t}\r\n\t\treturn response;\r\n      },\r\n  \r\n    validate: values => {\r\n      let errors:FormikErrors<BadgeViewModel> = { };\r\n\r\n\t  if(values.date == undefined) {\r\n                errors.date = \"Required\"\r\n                    }if(values.name == '') {\r\n                errors.name = \"Required\"\r\n                    }if(values.userId == 0) {\r\n                errors.userId = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n  \r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n        let mapper = new BadgeMapper();\r\n\r\n        axios.post(Constants.ApiEndpoint + ApiRoutes.Badges,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as CreateResponse<Api.BadgeClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n    \r\n        }, error => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n    },\r\n    displayName: 'BadgeCreate', \r\n  })(BadgeCreateDisplay);\r\n\r\n  interface BadgeCreateComponentProps\r\n  {\r\n  }\r\n\r\n  interface BadgeCreateComponentState\r\n  {\r\n      model?:BadgeViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class BadgeCreateComponent extends React.Component<BadgeCreateComponentProps, BadgeCreateComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t    else if (this.state.errorOccurred) {\r\n             return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<BadgeCreate model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>a9b220d812320fb0a8640a19ef60555d</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport BadgeMapper from './badgeMapper';\r\nimport BadgeViewModel from './badgeViewModel';\r\n\r\ninterface Props {\r\n\thistory:any;\r\n    model?:BadgeViewModel\r\n}\r\n\r\nconst BadgeDetailDisplay = (model:Props) => {\r\n\r\n   return (\r\n          <form  role=\"form\">\r\n\t\t\t\t<button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n                  onClick={(e) => { model.history.push(ClientRoutes.Badges + '/edit/' + model.model!.id)}}\r\n                >\r\n                  <i className=\"fas fa-edit\" />\r\n                </button>\r\n\t\t\t \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"date\" className={\"col-sm-2 col-form-label\"}>Date</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.date)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"id\" className={\"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.id)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"name\" className={\"col-sm-2 col-form-label\"}>Name</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.name)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"userId\" className={\"col-sm-2 col-form-label\"}>UserId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.userId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t             </form>\r\n  );\r\n}\r\n\r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n  \r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n\r\n  interface BadgeDetailComponentProps\r\n  {\r\n     match:IMatch;\r\n\t history:any;\r\n  }\r\n\r\n  interface BadgeDetailComponentState\r\n  {\r\n      model?:BadgeViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n\r\n  export default class BadgeDetailComponent extends React.Component<BadgeDetailComponentProps, BadgeDetailComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.Badges + '/' + this.props.match.params.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.BadgeClientResponseModel;\r\n            \r\n\t\t\tlet mapper = new BadgeMapper();\r\n\r\n            console.log(response);\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if (this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<BadgeDetailDisplay history={this.props.history} model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>057b85882130de15e7d256f555e2adcb</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport BadgeViewModel from './badgeViewModel';\r\nimport BadgeMapper from './badgeMapper';\r\n\r\ninterface Props {\r\n    model?:BadgeViewModel\r\n}\r\n\r\n  const BadgeEditDisplay = (props: FormikProps<BadgeViewModel>) => {\r\n\r\n   let status = props.status as UpdateResponse<Api.BadgeClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   { \r\n        let response = '';\r\n        if(props.touched[name as keyof BadgeViewModel]  && props.errors[name as keyof BadgeViewModel]) {\r\n            response += props.errors[name as keyof BadgeViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n    \r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (\r\n\r\n          <form onSubmit={props.handleSubmit} role=\"form\">\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"date\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Date</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"date\" className={errorExistForField(\"date\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"date\") && <small className=\"text-danger\">{errorsForField(\"date\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"id\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"id\" className={errorExistForField(\"id\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"id\") && <small className=\"text-danger\">{errorsForField(\"id\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"name\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Name</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"name\" className={errorExistForField(\"name\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"name\") && <small className=\"text-danger\">{errorsForField(\"name\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"userId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>UserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"userId\" className={errorExistForField(\"userId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"userId\") && <small className=\"text-danger\">{errorsForField(\"userId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>\r\n  );\r\n}\r\n\r\n\r\nconst BadgeEdit = withFormik<Props, BadgeViewModel>({\r\n    mapPropsToValues: props => {\r\n        let response = new BadgeViewModel();\r\n\t\tresponse.setProperties(props.model!.date,props.model!.id,props.model!.name,props.model!.userId);\t\r\n\t\treturn response;\r\n      },\r\n  \r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors:FormikErrors<BadgeViewModel> = { };\r\n\r\n\t  if(values.date == undefined) {\r\n                errors.date = \"Required\"\r\n                    }if(values.id == 0) {\r\n                errors.id = \"Required\"\r\n                    }if(values.name == '') {\r\n                errors.name = \"Required\"\r\n                    }if(values.userId == 0) {\r\n                errors.userId = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n\t\t  \r\n\t    let mapper = new BadgeMapper();\r\n\r\n        axios.put(Constants.ApiEndpoint + ApiRoutes.Badges +'/' + values.id,\r\n           \r\n\t    mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as UpdateResponse<Api.BadgeClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n        }, \r\n\t\terror => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n        .then(response =>\r\n        {\r\n            // cleanup\r\n        })\r\n    },\r\n  \r\n    displayName: 'BadgeEdit', \r\n  })(BadgeEditDisplay);\r\n\r\n \r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n\r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n  \r\n  interface BadgeEditComponentProps\r\n  {\r\n     match:IMatch;\r\n  }\r\n\r\n  interface BadgeEditComponentState\r\n  {\r\n      model?:BadgeViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class BadgeEditComponent extends React.Component<BadgeEditComponentProps, BadgeEditComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.Badges + '/' + this.props.match.params.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.BadgeClientResponseModel;\r\n            \r\n            console.log(response);\r\n\r\n\t\t\tlet mapper = new BadgeMapper();\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, \r\n\t\terror => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n        else if (this.state.errorOccurred) {\r\n\t\t\treturn <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<BadgeEdit model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>058ea950b5ce03bccf712d593e006194</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport BadgeMapper from './badgeMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport ReactTable from \"react-table\";\r\nimport BadgeViewModel from './badgeViewModel';\r\nimport \"react-table/react-table.css\";\r\n\r\ninterface BadgeSearchComponentProps\r\n{\r\n    history:any;\r\n}\r\n\r\ninterface BadgeSearchComponentState\r\n{\r\n    records:Array<BadgeViewModel>;\r\n    filteredRecords:Array<BadgeViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class BadgeSearchComponent extends React.Component<BadgeSearchComponentProps, BadgeSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<BadgeViewModel>(), filteredRecords:new Array<BadgeViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:Api.BadgeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Badges + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:Api.BadgeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Badges + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.Badges + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.BadgeClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.Badges + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Badges + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.BadgeClientResponseModel>;\r\n\t\t    let viewModels : Array<BadgeViewModel> = [];\r\n\t\t\tlet mapper = new BadgeMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<BadgeViewModel>(),filteredRecords:new Array<BadgeViewModel>(), loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if(this.state.deleteSubmitted){\r\n                if(this.state.deleteSuccess){\r\n                    errorResponse =<div className=\"alert alert-success\">{this.state.deleteResponse}</div>   \r\n                }\r\n                else {\r\n                    errorResponse = <div className=\"alert alert-danger\">{this.state.deleteResponse}</div>   \r\n                }\r\n            }\r\n            return (\r\n            <div>\r\n                { \r\n                    errorResponse\r\n                }\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <input name=\"search\" className=\"form-control\" placeholder={\"Search\"} value={this.state.searchValue} onChange={e => this.handleSearchChanged(e)}/>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <button className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\" onClick={e => this.handleCreateClick(e)}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'Badge',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'Date',\r\n                      accessor: 'date',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.date)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Name',\r\n                      accessor: 'name',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'UserId',\r\n                      accessor: 'userId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.userId)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div><button className=\"btn btn-sm\" onClick={e => {this.handleDetailClick(e, row.original as Api.BadgeClientResponseModel)}} ><i className=\"fas fa-search\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-primary btn-sm\" onClick={e => {this.handleEditClick(e, row.original as Api.BadgeClientResponseModel)}} ><i className=\"fas fa-edit\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-danger btn-sm\" onClick={e => {this.handleDeleteClick(e, row.original as Api.BadgeClientResponseModel)}} ><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>1e3751f519df53b1ec0ce5ca0c72b6b9</Hash>\r\n</Codenesium>*/","export default class CommentViewModel {\r\n  creationDate: any;\r\n  id: number;\r\n  postId: number;\r\n  score: any;\r\n  text: string;\r\n  userId: any;\r\n\r\n  constructor() {\r\n    this.creationDate = undefined;\r\n    this.id = 0;\r\n    this.postId = 0;\r\n    this.score = undefined;\r\n    this.text = '';\r\n    this.userId = undefined;\r\n  }\r\n\r\n  setProperties(\r\n    creationDate: any,\r\n    id: number,\r\n    postId: number,\r\n    score: any,\r\n    text: string,\r\n    userId: any\r\n  ): void {\r\n    this.creationDate = creationDate;\r\n    this.id = id;\r\n    this.postId = postId;\r\n    this.score = score;\r\n    this.text = text;\r\n    this.userId = userId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c28886187988cf2f3c3af7ab55845276</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport CommentViewModel from './commentViewModel';\r\nexport default class CommentMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.CommentClientResponseModel\r\n  ): CommentViewModel {\r\n    let response = new CommentViewModel();\r\n    response.setProperties(\r\n      dto.creationDate,\r\n      dto.id,\r\n      dto.postId,\r\n      dto.score,\r\n      dto.text,\r\n      dto.userId\r\n    );\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: CommentViewModel\r\n  ): Api.CommentClientRequestModel {\r\n    let response = new Api.CommentClientRequestModel();\r\n    response.setProperties(\r\n      model.creationDate,\r\n      model.id,\r\n      model.postId,\r\n      model.score,\r\n      model.text,\r\n      model.userId\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>20017f3c15f6423cf45fd8ce9733616e</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects'\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport CommentMapper from './commentMapper';\r\nimport CommentViewModel from './commentViewModel';\r\n\r\ninterface Props {\r\n    model?:CommentViewModel\r\n}\r\n\r\n   const CommentCreateDisplay: React.SFC<FormikProps<CommentViewModel>> = (props: FormikProps<CommentViewModel>) => {\r\n\r\n   let status = props.status as CreateResponse<Api.CommentClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   {\r\n        let response = '';\r\n        if(props.touched[name as keyof CommentViewModel]  && props.errors[name as keyof CommentViewModel]) {\r\n            response += props.errors[name as keyof CommentViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (<form onSubmit={props.handleSubmit} role=\"form\">            \r\n            \t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"creationDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"creationDate\" className={errorExistForField(\"creationDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"creationDate\") && <small className=\"text-danger\">{errorsForField(\"creationDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"postId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"postId\" className={errorExistForField(\"postId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"postId\") && <small className=\"text-danger\">{errorsForField(\"postId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"score\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Score</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"score\" className={errorExistForField(\"score\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"score\") && <small className=\"text-danger\">{errorsForField(\"score\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"text\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Text</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"text\" className={errorExistForField(\"text\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"text\") && <small className=\"text-danger\">{errorsForField(\"text\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"userId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>UserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"userId\" className={errorExistForField(\"userId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"userId\") && <small className=\"text-danger\">{errorsForField(\"userId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>);\r\n}\r\n\r\n\r\nconst CommentCreate = withFormik<Props, CommentViewModel>({\r\n    mapPropsToValues: props => {\r\n                \r\n\t\tlet response = new CommentViewModel();\r\n\t\tif (props.model != undefined)\r\n\t\t{\r\n\t\t\tresponse.setProperties(props.model!.creationDate,props.model!.id,props.model!.postId,props.model!.score,props.model!.text,props.model!.userId);\t\r\n\t\t}\r\n\t\treturn response;\r\n      },\r\n  \r\n    validate: values => {\r\n      let errors:FormikErrors<CommentViewModel> = { };\r\n\r\n\t  if(values.creationDate == undefined) {\r\n                errors.creationDate = \"Required\"\r\n                    }if(values.postId == 0) {\r\n                errors.postId = \"Required\"\r\n                    }if(values.text == '') {\r\n                errors.text = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n  \r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n        let mapper = new CommentMapper();\r\n\r\n        axios.post(Constants.ApiEndpoint + ApiRoutes.Comments,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as CreateResponse<Api.CommentClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n    \r\n        }, error => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n    },\r\n    displayName: 'CommentCreate', \r\n  })(CommentCreateDisplay);\r\n\r\n  interface CommentCreateComponentProps\r\n  {\r\n  }\r\n\r\n  interface CommentCreateComponentState\r\n  {\r\n      model?:CommentViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class CommentCreateComponent extends React.Component<CommentCreateComponentProps, CommentCreateComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t    else if (this.state.errorOccurred) {\r\n             return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<CommentCreate model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>78fc94f50c59286934a896d830cb3832</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport CommentMapper from './commentMapper';\r\nimport CommentViewModel from './commentViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: CommentViewModel;\r\n}\r\n\r\nconst CommentDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(\r\n            ClientRoutes.Comments + '/edit/' + model.model!.id\r\n          );\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"creationDate\" className={'col-sm-2 col-form-label'}>\r\n          CreationDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.creationDate)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"postId\" className={'col-sm-2 col-form-label'}>\r\n          PostId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.postId)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"score\" className={'col-sm-2 col-form-label'}>\r\n          Score\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.score)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"text\" className={'col-sm-2 col-form-label'}>\r\n          Text\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.text)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"userId\" className={'col-sm-2 col-form-label'}>\r\n          UserId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.userId)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface CommentDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface CommentDetailComponentState {\r\n  model?: CommentViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class CommentDetailComponent extends React.Component<\r\n  CommentDetailComponentProps,\r\n  CommentDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Comments +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.CommentClientResponseModel;\r\n\r\n          let mapper = new CommentMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <CommentDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0cdb0ba22d152e101f888f0b6a5f720d</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport CommentViewModel from './commentViewModel';\r\nimport CommentMapper from './commentMapper';\r\n\r\ninterface Props {\r\n    model?:CommentViewModel\r\n}\r\n\r\n  const CommentEditDisplay = (props: FormikProps<CommentViewModel>) => {\r\n\r\n   let status = props.status as UpdateResponse<Api.CommentClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   { \r\n        let response = '';\r\n        if(props.touched[name as keyof CommentViewModel]  && props.errors[name as keyof CommentViewModel]) {\r\n            response += props.errors[name as keyof CommentViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n    \r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (\r\n\r\n          <form onSubmit={props.handleSubmit} role=\"form\">\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"creationDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"creationDate\" className={errorExistForField(\"creationDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"creationDate\") && <small className=\"text-danger\">{errorsForField(\"creationDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"id\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"id\" className={errorExistForField(\"id\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"id\") && <small className=\"text-danger\">{errorsForField(\"id\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"postId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"postId\" className={errorExistForField(\"postId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"postId\") && <small className=\"text-danger\">{errorsForField(\"postId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"score\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Score</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"score\" className={errorExistForField(\"score\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"score\") && <small className=\"text-danger\">{errorsForField(\"score\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"text\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Text</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"text\" className={errorExistForField(\"text\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"text\") && <small className=\"text-danger\">{errorsForField(\"text\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"userId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>UserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"userId\" className={errorExistForField(\"userId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"userId\") && <small className=\"text-danger\">{errorsForField(\"userId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>\r\n  );\r\n}\r\n\r\n\r\nconst CommentEdit = withFormik<Props, CommentViewModel>({\r\n    mapPropsToValues: props => {\r\n        let response = new CommentViewModel();\r\n\t\tresponse.setProperties(props.model!.creationDate,props.model!.id,props.model!.postId,props.model!.score,props.model!.text,props.model!.userId);\t\r\n\t\treturn response;\r\n      },\r\n  \r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors:FormikErrors<CommentViewModel> = { };\r\n\r\n\t  if(values.creationDate == undefined) {\r\n                errors.creationDate = \"Required\"\r\n                    }if(values.id == 0) {\r\n                errors.id = \"Required\"\r\n                    }if(values.postId == 0) {\r\n                errors.postId = \"Required\"\r\n                    }if(values.text == '') {\r\n                errors.text = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n\t\t  \r\n\t    let mapper = new CommentMapper();\r\n\r\n        axios.put(Constants.ApiEndpoint + ApiRoutes.Comments +'/' + values.id,\r\n           \r\n\t    mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as UpdateResponse<Api.CommentClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n        }, \r\n\t\terror => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n        .then(response =>\r\n        {\r\n            // cleanup\r\n        })\r\n    },\r\n  \r\n    displayName: 'CommentEdit', \r\n  })(CommentEditDisplay);\r\n\r\n \r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n\r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n  \r\n  interface CommentEditComponentProps\r\n  {\r\n     match:IMatch;\r\n  }\r\n\r\n  interface CommentEditComponentState\r\n  {\r\n      model?:CommentViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class CommentEditComponent extends React.Component<CommentEditComponentProps, CommentEditComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.Comments + '/' + this.props.match.params.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.CommentClientResponseModel;\r\n            \r\n            console.log(response);\r\n\r\n\t\t\tlet mapper = new CommentMapper();\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, \r\n\t\terror => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n        else if (this.state.errorOccurred) {\r\n\t\t\treturn <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<CommentEdit model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>a9ebd26338175d2a69626fd13105f6bf</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport CommentMapper from './commentMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport ReactTable from \"react-table\";\r\nimport CommentViewModel from './commentViewModel';\r\nimport \"react-table/react-table.css\";\r\n\r\ninterface CommentSearchComponentProps\r\n{\r\n    history:any;\r\n}\r\n\r\ninterface CommentSearchComponentState\r\n{\r\n    records:Array<CommentViewModel>;\r\n    filteredRecords:Array<CommentViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class CommentSearchComponent extends React.Component<CommentSearchComponentProps, CommentSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<CommentViewModel>(), filteredRecords:new Array<CommentViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:Api.CommentClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Comments + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:Api.CommentClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Comments + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.Comments + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.CommentClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.Comments + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Comments + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.CommentClientResponseModel>;\r\n\t\t    let viewModels : Array<CommentViewModel> = [];\r\n\t\t\tlet mapper = new CommentMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<CommentViewModel>(),filteredRecords:new Array<CommentViewModel>(), loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if(this.state.deleteSubmitted){\r\n                if(this.state.deleteSuccess){\r\n                    errorResponse =<div className=\"alert alert-success\">{this.state.deleteResponse}</div>   \r\n                }\r\n                else {\r\n                    errorResponse = <div className=\"alert alert-danger\">{this.state.deleteResponse}</div>   \r\n                }\r\n            }\r\n            return (\r\n            <div>\r\n                { \r\n                    errorResponse\r\n                }\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <input name=\"search\" className=\"form-control\" placeholder={\"Search\"} value={this.state.searchValue} onChange={e => this.handleSearchChanged(e)}/>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <button className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\" onClick={e => this.handleCreateClick(e)}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'Comment',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'CreationDate',\r\n                      accessor: 'creationDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.creationDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'PostId',\r\n                      accessor: 'postId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.postId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Score',\r\n                      accessor: 'score',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.score)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Text',\r\n                      accessor: 'text',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.text)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'UserId',\r\n                      accessor: 'userId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.userId)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div><button className=\"btn btn-sm\" onClick={e => {this.handleDetailClick(e, row.original as Api.CommentClientResponseModel)}} ><i className=\"fas fa-search\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-primary btn-sm\" onClick={e => {this.handleEditClick(e, row.original as Api.CommentClientResponseModel)}} ><i className=\"fas fa-edit\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-danger btn-sm\" onClick={e => {this.handleDeleteClick(e, row.original as Api.CommentClientResponseModel)}} ><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>3eb5d411fe7e0a1e92aa9fdcbba7d883</Hash>\r\n</Codenesium>*/","export default class LinkTypeViewModel {\r\n  id: number;\r\n  type: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.type = '';\r\n  }\r\n\r\n  setProperties(id: number, type: string): void {\r\n    this.id = id;\r\n    this.type = type;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d242c2b2bffe629bd2f6ac5bb20475bd</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport LinkTypeViewModel from './linkTypeViewModel';\r\nexport default class LinkTypeMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.LinkTypeClientResponseModel\r\n  ): LinkTypeViewModel {\r\n    let response = new LinkTypeViewModel();\r\n    response.setProperties(dto.id, dto.type);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: LinkTypeViewModel\r\n  ): Api.LinkTypeClientRequestModel {\r\n    let response = new Api.LinkTypeClientRequestModel();\r\n    response.setProperties(model.id, model.type);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e9abd54fdb6141ee2424649f4ce5aba6</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport LinkTypeMapper from './linkTypeMapper';\r\nimport LinkTypeViewModel from './linkTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: LinkTypeViewModel;\r\n}\r\n\r\nconst LinkTypeCreateDisplay: React.SFC<FormikProps<LinkTypeViewModel>> = (\r\n  props: FormikProps<LinkTypeViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.LinkTypeClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof LinkTypeViewModel] &&\r\n      props.errors[name as keyof LinkTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof LinkTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('type')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Type\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"type\"\r\n            className={\r\n              errorExistForField('type')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('type') && (\r\n            <small className=\"text-danger\">{errorsForField('type')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst LinkTypeCreate = withFormik<Props, LinkTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new LinkTypeViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(props.model!.id, props.model!.type);\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<LinkTypeViewModel> = {};\r\n\r\n    if (values.type == '') {\r\n      errors.type = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new LinkTypeMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.LinkTypes,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.LinkTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'LinkTypeCreate',\r\n})(LinkTypeCreateDisplay);\r\n\r\ninterface LinkTypeCreateComponentProps {}\r\n\r\ninterface LinkTypeCreateComponentState {\r\n  model?: LinkTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class LinkTypeCreateComponent extends React.Component<\r\n  LinkTypeCreateComponentProps,\r\n  LinkTypeCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <LinkTypeCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>56e66d9df380a3b0dd06c3f958f55ae9</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport LinkTypeMapper from './linkTypeMapper';\r\nimport LinkTypeViewModel from './linkTypeViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: LinkTypeViewModel;\r\n}\r\n\r\nconst LinkTypeDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(\r\n            ClientRoutes.LinkTypes + '/edit/' + model.model!.id\r\n          );\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"type\" className={'col-sm-2 col-form-label'}>\r\n          Type\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.type)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface LinkTypeDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface LinkTypeDetailComponentState {\r\n  model?: LinkTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class LinkTypeDetailComponent extends React.Component<\r\n  LinkTypeDetailComponentProps,\r\n  LinkTypeDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.LinkTypes +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.LinkTypeClientResponseModel;\r\n\r\n          let mapper = new LinkTypeMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <LinkTypeDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>d12970deeb821b552fd6d832716dc7ca</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport LinkTypeViewModel from './linkTypeViewModel';\r\nimport LinkTypeMapper from './linkTypeMapper';\r\n\r\ninterface Props {\r\n    model?:LinkTypeViewModel\r\n}\r\n\r\n  const LinkTypeEditDisplay = (props: FormikProps<LinkTypeViewModel>) => {\r\n\r\n   let status = props.status as UpdateResponse<Api.LinkTypeClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   { \r\n        let response = '';\r\n        if(props.touched[name as keyof LinkTypeViewModel]  && props.errors[name as keyof LinkTypeViewModel]) {\r\n            response += props.errors[name as keyof LinkTypeViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n    \r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (\r\n\r\n          <form onSubmit={props.handleSubmit} role=\"form\">\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"id\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"id\" className={errorExistForField(\"id\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"id\") && <small className=\"text-danger\">{errorsForField(\"id\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"type\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Type</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"type\" className={errorExistForField(\"type\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"type\") && <small className=\"text-danger\">{errorsForField(\"type\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>\r\n  );\r\n}\r\n\r\n\r\nconst LinkTypeEdit = withFormik<Props, LinkTypeViewModel>({\r\n    mapPropsToValues: props => {\r\n        let response = new LinkTypeViewModel();\r\n\t\tresponse.setProperties(props.model!.id,props.model!.type);\t\r\n\t\treturn response;\r\n      },\r\n  \r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors:FormikErrors<LinkTypeViewModel> = { };\r\n\r\n\t  if(values.id == 0) {\r\n                errors.id = \"Required\"\r\n                    }if(values.type == '') {\r\n                errors.type = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n\t\t  \r\n\t    let mapper = new LinkTypeMapper();\r\n\r\n        axios.put(Constants.ApiEndpoint + ApiRoutes.LinkTypes +'/' + values.id,\r\n           \r\n\t    mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as UpdateResponse<Api.LinkTypeClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n        }, \r\n\t\terror => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n        .then(response =>\r\n        {\r\n            // cleanup\r\n        })\r\n    },\r\n  \r\n    displayName: 'LinkTypeEdit', \r\n  })(LinkTypeEditDisplay);\r\n\r\n \r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n\r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n  \r\n  interface LinkTypeEditComponentProps\r\n  {\r\n     match:IMatch;\r\n  }\r\n\r\n  interface LinkTypeEditComponentState\r\n  {\r\n      model?:LinkTypeViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class LinkTypeEditComponent extends React.Component<LinkTypeEditComponentProps, LinkTypeEditComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.LinkTypes + '/' + this.props.match.params.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.LinkTypeClientResponseModel;\r\n            \r\n            console.log(response);\r\n\r\n\t\t\tlet mapper = new LinkTypeMapper();\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, \r\n\t\terror => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n        else if (this.state.errorOccurred) {\r\n\t\t\treturn <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<LinkTypeEdit model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>da7c828e5e91848b916b18d5e891e151</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport LinkTypeMapper from './linkTypeMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport ReactTable from \"react-table\";\r\nimport LinkTypeViewModel from './linkTypeViewModel';\r\nimport \"react-table/react-table.css\";\r\n\r\ninterface LinkTypeSearchComponentProps\r\n{\r\n    history:any;\r\n}\r\n\r\ninterface LinkTypeSearchComponentState\r\n{\r\n    records:Array<LinkTypeViewModel>;\r\n    filteredRecords:Array<LinkTypeViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class LinkTypeSearchComponent extends React.Component<LinkTypeSearchComponentProps, LinkTypeSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<LinkTypeViewModel>(), filteredRecords:new Array<LinkTypeViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:Api.LinkTypeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.LinkTypes + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:Api.LinkTypeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.LinkTypes + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.LinkTypes + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.LinkTypeClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.LinkTypes + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.LinkTypes + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.LinkTypeClientResponseModel>;\r\n\t\t    let viewModels : Array<LinkTypeViewModel> = [];\r\n\t\t\tlet mapper = new LinkTypeMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<LinkTypeViewModel>(),filteredRecords:new Array<LinkTypeViewModel>(), loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if(this.state.deleteSubmitted){\r\n                if(this.state.deleteSuccess){\r\n                    errorResponse =<div className=\"alert alert-success\">{this.state.deleteResponse}</div>   \r\n                }\r\n                else {\r\n                    errorResponse = <div className=\"alert alert-danger\">{this.state.deleteResponse}</div>   \r\n                }\r\n            }\r\n            return (\r\n            <div>\r\n                { \r\n                    errorResponse\r\n                }\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <input name=\"search\" className=\"form-control\" placeholder={\"Search\"} value={this.state.searchValue} onChange={e => this.handleSearchChanged(e)}/>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <button className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\" onClick={e => this.handleCreateClick(e)}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'LinkType',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Type',\r\n                      accessor: 'type',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.type)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div><button className=\"btn btn-sm\" onClick={e => {this.handleDetailClick(e, row.original as Api.LinkTypeClientResponseModel)}} ><i className=\"fas fa-search\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-primary btn-sm\" onClick={e => {this.handleEditClick(e, row.original as Api.LinkTypeClientResponseModel)}} ><i className=\"fas fa-edit\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-danger btn-sm\" onClick={e => {this.handleDeleteClick(e, row.original as Api.LinkTypeClientResponseModel)}} ><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>8bad0f1863dc57de29b4527d450a6157</Hash>\r\n</Codenesium>*/","export default class PostHistoryViewModel {\r\n    comment:string;\r\ncreationDate:any;\r\nid:number;\r\npostHistoryTypeId:number;\r\npostId:number;\r\nrevisionGUID:string;\r\ntext:string;\r\nuserDisplayName:string;\r\nuserId:any;\r\n\r\n    constructor() {\r\n\t\tthis.comment = '';\r\nthis.creationDate = undefined;\r\nthis.id = 0;\r\nthis.postHistoryTypeId = 0;\r\nthis.postId = 0;\r\nthis.revisionGUID = '';\r\nthis.text = '';\r\nthis.userDisplayName = '';\r\nthis.userId = undefined;\r\n\r\n    }\r\n\r\n\tsetProperties(comment : string,creationDate : any,id : number,postHistoryTypeId : number,postId : number,revisionGUID : string,text : string,userDisplayName : string,userId : any) : void\r\n\t{\r\n\t\tthis.comment = comment;\r\nthis.creationDate = creationDate;\r\nthis.id = id;\r\nthis.postHistoryTypeId = postHistoryTypeId;\r\nthis.postId = postId;\r\nthis.revisionGUID = revisionGUID;\r\nthis.text = text;\r\nthis.userDisplayName = userDisplayName;\r\nthis.userId = userId;\r\n\r\n\t}\r\n\r\n\ttoDisplay() : string\r\n\t{\r\n\t\treturn String();\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>c00850f8998bd494e7af5b92853a4f69</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PostHistoryViewModel from  './postHistoryViewModel';\r\nexport default class PostHistoryMapper {\r\n    \r\n\tmapApiResponseToViewModel(dto: Api.PostHistoryClientResponseModel) : PostHistoryViewModel \r\n\t{\r\n\t\tlet response = new PostHistoryViewModel();\r\n\t\tresponse.setProperties(dto.comment,dto.creationDate,dto.id,dto.postHistoryTypeId,dto.postId,dto.revisionGUID,dto.text,dto.userDisplayName,dto.userId);\r\n\t\t\r\n\t\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tmapViewModelToApiRequest(model: PostHistoryViewModel) : Api.PostHistoryClientRequestModel\r\n\t{\r\n\t\tlet response = new Api.PostHistoryClientRequestModel();\r\n\t\tresponse.setProperties(model.comment,model.creationDate,model.id,model.postHistoryTypeId,model.postId,model.revisionGUID,model.text,model.userDisplayName,model.userId);\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>34d9c7260dbf6a0e1839eb6d27ac6458</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects'\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport PostHistoryMapper from './postHistoryMapper';\r\nimport PostHistoryViewModel from './postHistoryViewModel';\r\n\r\ninterface Props {\r\n    model?:PostHistoryViewModel\r\n}\r\n\r\n   const PostHistoryCreateDisplay: React.SFC<FormikProps<PostHistoryViewModel>> = (props: FormikProps<PostHistoryViewModel>) => {\r\n\r\n   let status = props.status as CreateResponse<Api.PostHistoryClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   {\r\n        let response = '';\r\n        if(props.touched[name as keyof PostHistoryViewModel]  && props.errors[name as keyof PostHistoryViewModel]) {\r\n            response += props.errors[name as keyof PostHistoryViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (<form onSubmit={props.handleSubmit} role=\"form\">            \r\n            \t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"comment\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Comment</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"comment\" className={errorExistForField(\"comment\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"comment\") && <small className=\"text-danger\">{errorsForField(\"comment\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"creationDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"creationDate\" className={errorExistForField(\"creationDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"creationDate\") && <small className=\"text-danger\">{errorsForField(\"creationDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"postHistoryTypeId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PostHistoryTypeId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"postHistoryTypeId\" className={errorExistForField(\"postHistoryTypeId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"postHistoryTypeId\") && <small className=\"text-danger\">{errorsForField(\"postHistoryTypeId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"postId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"postId\" className={errorExistForField(\"postId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"postId\") && <small className=\"text-danger\">{errorsForField(\"postId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"revisionGUID\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>RevisionGUID</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"revisionGUID\" className={errorExistForField(\"revisionGUID\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"revisionGUID\") && <small className=\"text-danger\">{errorsForField(\"revisionGUID\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"text\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Text</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"text\" className={errorExistForField(\"text\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"text\") && <small className=\"text-danger\">{errorsForField(\"text\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"userDisplayName\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>UserDisplayName</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"userDisplayName\" className={errorExistForField(\"userDisplayName\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"userDisplayName\") && <small className=\"text-danger\">{errorsForField(\"userDisplayName\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"userId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>UserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"userId\" className={errorExistForField(\"userId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"userId\") && <small className=\"text-danger\">{errorsForField(\"userId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>);\r\n}\r\n\r\n\r\nconst PostHistoryCreate = withFormik<Props, PostHistoryViewModel>({\r\n    mapPropsToValues: props => {\r\n                \r\n\t\tlet response = new PostHistoryViewModel();\r\n\t\tif (props.model != undefined)\r\n\t\t{\r\n\t\t\tresponse.setProperties(props.model!.comment,props.model!.creationDate,props.model!.id,props.model!.postHistoryTypeId,props.model!.postId,props.model!.revisionGUID,props.model!.text,props.model!.userDisplayName,props.model!.userId);\t\r\n\t\t}\r\n\t\treturn response;\r\n      },\r\n  \r\n    validate: values => {\r\n      let errors:FormikErrors<PostHistoryViewModel> = { };\r\n\r\n\t  if(values.creationDate == undefined) {\r\n                errors.creationDate = \"Required\"\r\n                    }if(values.postHistoryTypeId == 0) {\r\n                errors.postHistoryTypeId = \"Required\"\r\n                    }if(values.postId == 0) {\r\n                errors.postId = \"Required\"\r\n                    }if(values.revisionGUID == '') {\r\n                errors.revisionGUID = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n  \r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n        let mapper = new PostHistoryMapper();\r\n\r\n        axios.post(Constants.ApiEndpoint + ApiRoutes.PostHistories,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as CreateResponse<Api.PostHistoryClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n    \r\n        }, error => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n    },\r\n    displayName: 'PostHistoryCreate', \r\n  })(PostHistoryCreateDisplay);\r\n\r\n  interface PostHistoryCreateComponentProps\r\n  {\r\n  }\r\n\r\n  interface PostHistoryCreateComponentState\r\n  {\r\n      model?:PostHistoryViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class PostHistoryCreateComponent extends React.Component<PostHistoryCreateComponentProps, PostHistoryCreateComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t    else if (this.state.errorOccurred) {\r\n             return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PostHistoryCreate model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>2cf6158cdfe624fe109e1282c2a3fcd8</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport PostHistoryMapper from './postHistoryMapper';\r\nimport PostHistoryViewModel from './postHistoryViewModel';\r\n\r\ninterface Props {\r\n\thistory:any;\r\n    model?:PostHistoryViewModel\r\n}\r\n\r\nconst PostHistoryDetailDisplay = (model:Props) => {\r\n\r\n   return (\r\n          <form  role=\"form\">\r\n\t\t\t\t<button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n                  onClick={(e) => { model.history.push(ClientRoutes.PostHistories + '/edit/' + model.model!.id)}}\r\n                >\r\n                  <i className=\"fas fa-edit\" />\r\n                </button>\r\n\t\t\t \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"comment\" className={\"col-sm-2 col-form-label\"}>Comment</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.comment)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"creationDate\" className={\"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.creationDate)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"id\" className={\"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.id)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"postHistoryTypeId\" className={\"col-sm-2 col-form-label\"}>PostHistoryTypeId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.postHistoryTypeId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"postId\" className={\"col-sm-2 col-form-label\"}>PostId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.postId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"revisionGUID\" className={\"col-sm-2 col-form-label\"}>RevisionGUID</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.revisionGUID)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"text\" className={\"col-sm-2 col-form-label\"}>Text</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.text)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"userDisplayName\" className={\"col-sm-2 col-form-label\"}>UserDisplayName</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.userDisplayName)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"userId\" className={\"col-sm-2 col-form-label\"}>UserId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.userId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t             </form>\r\n  );\r\n}\r\n\r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n  \r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n\r\n  interface PostHistoryDetailComponentProps\r\n  {\r\n     match:IMatch;\r\n\t history:any;\r\n  }\r\n\r\n  interface PostHistoryDetailComponentState\r\n  {\r\n      model?:PostHistoryViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n\r\n  export default class PostHistoryDetailComponent extends React.Component<PostHistoryDetailComponentProps, PostHistoryDetailComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.PostHistories + '/' + this.props.match.params.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.PostHistoryClientResponseModel;\r\n            \r\n\t\t\tlet mapper = new PostHistoryMapper();\r\n\r\n            console.log(response);\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if (this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PostHistoryDetailDisplay history={this.props.history} model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>641fc4d7c8403c872fa20d069b375ae6</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PostHistoryViewModel from './postHistoryViewModel';\r\nimport PostHistoryMapper from './postHistoryMapper';\r\n\r\ninterface Props {\r\n  model?: PostHistoryViewModel;\r\n}\r\n\r\nconst PostHistoryEditDisplay = (props: FormikProps<PostHistoryViewModel>) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.PostHistoryClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PostHistoryViewModel] &&\r\n      props.errors[name as keyof PostHistoryViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PostHistoryViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('comment')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Comment\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"comment\"\r\n            className={\r\n              errorExistForField('comment')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('comment') && (\r\n            <small className=\"text-danger\">{errorsForField('comment')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creationDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreationDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creationDate\"\r\n            className={\r\n              errorExistForField('creationDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creationDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creationDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('id')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"id\"\r\n            className={\r\n              errorExistForField('id')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('id') && (\r\n            <small className=\"text-danger\">{errorsForField('id')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('postHistoryTypeId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PostHistoryTypeId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"postHistoryTypeId\"\r\n            className={\r\n              errorExistForField('postHistoryTypeId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('postHistoryTypeId') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('postHistoryTypeId')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('postId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PostId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"postId\"\r\n            className={\r\n              errorExistForField('postId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('postId') && (\r\n            <small className=\"text-danger\">{errorsForField('postId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('revisionGUID')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          RevisionGUID\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"revisionGUID\"\r\n            className={\r\n              errorExistForField('revisionGUID')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('revisionGUID') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('revisionGUID')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('text')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Text\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"text\"\r\n            className={\r\n              errorExistForField('text')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('text') && (\r\n            <small className=\"text-danger\">{errorsForField('text')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('userDisplayName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          UserDisplayName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"userDisplayName\"\r\n            className={\r\n              errorExistForField('userDisplayName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('userDisplayName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('userDisplayName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('userId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          UserId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"userId\"\r\n            className={\r\n              errorExistForField('userId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('userId') && (\r\n            <small className=\"text-danger\">{errorsForField('userId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostHistoryEdit = withFormik<Props, PostHistoryViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PostHistoryViewModel();\r\n    response.setProperties(\r\n      props.model!.comment,\r\n      props.model!.creationDate,\r\n      props.model!.id,\r\n      props.model!.postHistoryTypeId,\r\n      props.model!.postId,\r\n      props.model!.revisionGUID,\r\n      props.model!.text,\r\n      props.model!.userDisplayName,\r\n      props.model!.userId\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<PostHistoryViewModel> = {};\r\n\r\n    if (values.creationDate == undefined) {\r\n      errors.creationDate = 'Required';\r\n    }\r\n    if (values.id == 0) {\r\n      errors.id = 'Required';\r\n    }\r\n    if (values.postHistoryTypeId == 0) {\r\n      errors.postHistoryTypeId = 'Required';\r\n    }\r\n    if (values.postId == 0) {\r\n      errors.postId = 'Required';\r\n    }\r\n    if (values.revisionGUID == '') {\r\n      errors.revisionGUID = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new PostHistoryMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.PostHistories + '/' + values.id,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.PostHistoryClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'PostHistoryEdit',\r\n})(PostHistoryEditDisplay);\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PostHistoryEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PostHistoryEditComponentState {\r\n  model?: PostHistoryViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PostHistoryEditComponent extends React.Component<\r\n  PostHistoryEditComponentProps,\r\n  PostHistoryEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PostHistories +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PostHistoryClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PostHistoryMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <PostHistoryEdit model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0e904a34a942f5c84bea2afba5a5b28f</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PostHistoryMapper from './postHistoryMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport ReactTable from 'react-table';\r\nimport PostHistoryViewModel from './postHistoryViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface PostHistorySearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface PostHistorySearchComponentState {\r\n  records: Array<PostHistoryViewModel>;\r\n  filteredRecords: Array<PostHistoryViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PostHistorySearchComponent extends React.Component<\r\n  PostHistorySearchComponentProps,\r\n  PostHistorySearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<PostHistoryViewModel>(),\r\n    filteredRecords: new Array<PostHistoryViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.PostHistoryClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.PostHistories + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.PostHistoryClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.PostHistories + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.PostHistories + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PostHistoryClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.PostHistories + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.PostHistories + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PostHistoryClientResponseModel>;\r\n          let viewModels: Array<PostHistoryViewModel> = [];\r\n          let mapper = new PostHistoryMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PostHistoryViewModel>(),\r\n            filteredRecords: new Array<PostHistoryViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'PostHistory',\r\n                columns: [\r\n                  {\r\n                    Header: 'Comment',\r\n                    accessor: 'comment',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.comment)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'CreationDate',\r\n                    accessor: 'creationDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.creationDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PostHistoryTypeId',\r\n                    accessor: 'postHistoryTypeId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.postHistoryTypeId)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PostId',\r\n                    accessor: 'postId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.postId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'RevisionGUID',\r\n                    accessor: 'revisionGUID',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.revisionGUID)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Text',\r\n                    accessor: 'text',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.text)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'UserDisplayName',\r\n                    accessor: 'userDisplayName',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.userDisplayName)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'UserId',\r\n                    accessor: 'userId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.userId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.PostHistoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.PostHistoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.PostHistoryClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>73932b61665a009a29ae79486ac62e6e</Hash>\r\n</Codenesium>*/","export default class PostHistoryTypeViewModel {\r\n  id: number;\r\n  type: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.type = '';\r\n  }\r\n\r\n  setProperties(id: number, type: string): void {\r\n    this.id = id;\r\n    this.type = type;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>355c49415da296060d774ca6c18fb468</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PostHistoryTypeViewModel from './postHistoryTypeViewModel';\r\nexport default class PostHistoryTypeMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PostHistoryTypeClientResponseModel\r\n  ): PostHistoryTypeViewModel {\r\n    let response = new PostHistoryTypeViewModel();\r\n    response.setProperties(dto.id, dto.type);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PostHistoryTypeViewModel\r\n  ): Api.PostHistoryTypeClientRequestModel {\r\n    let response = new Api.PostHistoryTypeClientRequestModel();\r\n    response.setProperties(model.id, model.type);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>533694d81d9dbc9862672bcecad01372</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport PostHistoryTypeMapper from './postHistoryTypeMapper';\r\nimport PostHistoryTypeViewModel from './postHistoryTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: PostHistoryTypeViewModel;\r\n}\r\n\r\nconst PostHistoryTypeCreateDisplay: React.SFC<\r\n  FormikProps<PostHistoryTypeViewModel>\r\n> = (props: FormikProps<PostHistoryTypeViewModel>) => {\r\n  let status = props.status as CreateResponse<\r\n    Api.PostHistoryTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PostHistoryTypeViewModel] &&\r\n      props.errors[name as keyof PostHistoryTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PostHistoryTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('type')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Type\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"type\"\r\n            className={\r\n              errorExistForField('type')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('type') && (\r\n            <small className=\"text-danger\">{errorsForField('type')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostHistoryTypeCreate = withFormik<Props, PostHistoryTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PostHistoryTypeViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(props.model!.id, props.model!.type);\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<PostHistoryTypeViewModel> = {};\r\n\r\n    if (values.type == '') {\r\n      errors.type = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new PostHistoryTypeMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.PostHistoryTypes,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PostHistoryTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'PostHistoryTypeCreate',\r\n})(PostHistoryTypeCreateDisplay);\r\n\r\ninterface PostHistoryTypeCreateComponentProps {}\r\n\r\ninterface PostHistoryTypeCreateComponentState {\r\n  model?: PostHistoryTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PostHistoryTypeCreateComponent extends React.Component<\r\n  PostHistoryTypeCreateComponentProps,\r\n  PostHistoryTypeCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <PostHistoryTypeCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>b9364dd807cced7a1c5104d1084ad8e9</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PostHistoryTypeMapper from './postHistoryTypeMapper';\r\nimport PostHistoryTypeViewModel from './postHistoryTypeViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: PostHistoryTypeViewModel;\r\n}\r\n\r\nconst PostHistoryTypeDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(\r\n            ClientRoutes.PostHistoryTypes + '/edit/' + model.model!.id\r\n          );\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"type\" className={'col-sm-2 col-form-label'}>\r\n          Type\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.type)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PostHistoryTypeDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface PostHistoryTypeDetailComponentState {\r\n  model?: PostHistoryTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PostHistoryTypeDetailComponent extends React.Component<\r\n  PostHistoryTypeDetailComponentProps,\r\n  PostHistoryTypeDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PostHistoryTypes +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PostHistoryTypeClientResponseModel;\r\n\r\n          let mapper = new PostHistoryTypeMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <PostHistoryTypeDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c483e3fc646492286ea9f8eef0cd8819</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PostHistoryTypeViewModel from './postHistoryTypeViewModel';\r\nimport PostHistoryTypeMapper from './postHistoryTypeMapper';\r\n\r\ninterface Props {\r\n  model?: PostHistoryTypeViewModel;\r\n}\r\n\r\nconst PostHistoryTypeEditDisplay = (\r\n  props: FormikProps<PostHistoryTypeViewModel>\r\n) => {\r\n  let status = props.status as UpdateResponse<\r\n    Api.PostHistoryTypeClientRequestModel\r\n  >;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PostHistoryTypeViewModel] &&\r\n      props.errors[name as keyof PostHistoryTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PostHistoryTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('id')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"id\"\r\n            className={\r\n              errorExistForField('id')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('id') && (\r\n            <small className=\"text-danger\">{errorsForField('id')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('type')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Type\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"type\"\r\n            className={\r\n              errorExistForField('type')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('type') && (\r\n            <small className=\"text-danger\">{errorsForField('type')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostHistoryTypeEdit = withFormik<Props, PostHistoryTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PostHistoryTypeViewModel();\r\n    response.setProperties(props.model!.id, props.model!.type);\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<PostHistoryTypeViewModel> = {};\r\n\r\n    if (values.id == 0) {\r\n      errors.id = 'Required';\r\n    }\r\n    if (values.type == '') {\r\n      errors.type = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new PostHistoryTypeMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.PostHistoryTypes + '/' + values.id,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.PostHistoryTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'PostHistoryTypeEdit',\r\n})(PostHistoryTypeEditDisplay);\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PostHistoryTypeEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface PostHistoryTypeEditComponentState {\r\n  model?: PostHistoryTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PostHistoryTypeEditComponent extends React.Component<\r\n  PostHistoryTypeEditComponentProps,\r\n  PostHistoryTypeEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PostHistoryTypes +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PostHistoryTypeClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new PostHistoryTypeMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <PostHistoryTypeEdit model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f53c06cb15fdef830b490fd18003c7dc</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PostHistoryTypeMapper from './postHistoryTypeMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport ReactTable from \"react-table\";\r\nimport PostHistoryTypeViewModel from './postHistoryTypeViewModel';\r\nimport \"react-table/react-table.css\";\r\n\r\ninterface PostHistoryTypeSearchComponentProps\r\n{\r\n    history:any;\r\n}\r\n\r\ninterface PostHistoryTypeSearchComponentState\r\n{\r\n    records:Array<PostHistoryTypeViewModel>;\r\n    filteredRecords:Array<PostHistoryTypeViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class PostHistoryTypeSearchComponent extends React.Component<PostHistoryTypeSearchComponentProps, PostHistoryTypeSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<PostHistoryTypeViewModel>(), filteredRecords:new Array<PostHistoryTypeViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:Api.PostHistoryTypeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.PostHistoryTypes + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:Api.PostHistoryTypeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.PostHistoryTypes + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.PostHistoryTypes + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.PostHistoryTypeClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.PostHistoryTypes + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.PostHistoryTypes + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.PostHistoryTypeClientResponseModel>;\r\n\t\t    let viewModels : Array<PostHistoryTypeViewModel> = [];\r\n\t\t\tlet mapper = new PostHistoryTypeMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<PostHistoryTypeViewModel>(),filteredRecords:new Array<PostHistoryTypeViewModel>(), loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if(this.state.deleteSubmitted){\r\n                if(this.state.deleteSuccess){\r\n                    errorResponse =<div className=\"alert alert-success\">{this.state.deleteResponse}</div>   \r\n                }\r\n                else {\r\n                    errorResponse = <div className=\"alert alert-danger\">{this.state.deleteResponse}</div>   \r\n                }\r\n            }\r\n            return (\r\n            <div>\r\n                { \r\n                    errorResponse\r\n                }\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <input name=\"search\" className=\"form-control\" placeholder={\"Search\"} value={this.state.searchValue} onChange={e => this.handleSearchChanged(e)}/>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <button className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\" onClick={e => this.handleCreateClick(e)}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'PostHistoryType',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Type',\r\n                      accessor: 'type',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.type)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div><button className=\"btn btn-sm\" onClick={e => {this.handleDetailClick(e, row.original as Api.PostHistoryTypeClientResponseModel)}} ><i className=\"fas fa-search\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-primary btn-sm\" onClick={e => {this.handleEditClick(e, row.original as Api.PostHistoryTypeClientResponseModel)}} ><i className=\"fas fa-edit\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-danger btn-sm\" onClick={e => {this.handleDeleteClick(e, row.original as Api.PostHistoryTypeClientResponseModel)}} ><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>3cb55723779453ee325de4616c0e171f</Hash>\r\n</Codenesium>*/","export default class PostLinkViewModel {\r\n  creationDate: any;\r\n  id: number;\r\n  linkTypeId: number;\r\n  postId: number;\r\n  relatedPostId: number;\r\n\r\n  constructor() {\r\n    this.creationDate = undefined;\r\n    this.id = 0;\r\n    this.linkTypeId = 0;\r\n    this.postId = 0;\r\n    this.relatedPostId = 0;\r\n  }\r\n\r\n  setProperties(\r\n    creationDate: any,\r\n    id: number,\r\n    linkTypeId: number,\r\n    postId: number,\r\n    relatedPostId: number\r\n  ): void {\r\n    this.creationDate = creationDate;\r\n    this.id = id;\r\n    this.linkTypeId = linkTypeId;\r\n    this.postId = postId;\r\n    this.relatedPostId = relatedPostId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>e6d5ff0fd5f3fa7b12439f7ab86870ae</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PostLinkViewModel from './postLinkViewModel';\r\nexport default class PostLinkMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.PostLinkClientResponseModel\r\n  ): PostLinkViewModel {\r\n    let response = new PostLinkViewModel();\r\n    response.setProperties(\r\n      dto.creationDate,\r\n      dto.id,\r\n      dto.linkTypeId,\r\n      dto.postId,\r\n      dto.relatedPostId\r\n    );\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: PostLinkViewModel\r\n  ): Api.PostLinkClientRequestModel {\r\n    let response = new Api.PostLinkClientRequestModel();\r\n    response.setProperties(\r\n      model.creationDate,\r\n      model.id,\r\n      model.linkTypeId,\r\n      model.postId,\r\n      model.relatedPostId\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>db8b985da65f431788ce2bc1a885d5e8</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects'\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport PostLinkMapper from './postLinkMapper';\r\nimport PostLinkViewModel from './postLinkViewModel';\r\n\r\ninterface Props {\r\n    model?:PostLinkViewModel\r\n}\r\n\r\n   const PostLinkCreateDisplay: React.SFC<FormikProps<PostLinkViewModel>> = (props: FormikProps<PostLinkViewModel>) => {\r\n\r\n   let status = props.status as CreateResponse<Api.PostLinkClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   {\r\n        let response = '';\r\n        if(props.touched[name as keyof PostLinkViewModel]  && props.errors[name as keyof PostLinkViewModel]) {\r\n            response += props.errors[name as keyof PostLinkViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (<form onSubmit={props.handleSubmit} role=\"form\">            \r\n            \t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"creationDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"creationDate\" className={errorExistForField(\"creationDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"creationDate\") && <small className=\"text-danger\">{errorsForField(\"creationDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"linkTypeId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LinkTypeId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"linkTypeId\" className={errorExistForField(\"linkTypeId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"linkTypeId\") && <small className=\"text-danger\">{errorsForField(\"linkTypeId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"postId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"postId\" className={errorExistForField(\"postId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"postId\") && <small className=\"text-danger\">{errorsForField(\"postId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"relatedPostId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>RelatedPostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"relatedPostId\" className={errorExistForField(\"relatedPostId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"relatedPostId\") && <small className=\"text-danger\">{errorsForField(\"relatedPostId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>);\r\n}\r\n\r\n\r\nconst PostLinkCreate = withFormik<Props, PostLinkViewModel>({\r\n    mapPropsToValues: props => {\r\n                \r\n\t\tlet response = new PostLinkViewModel();\r\n\t\tif (props.model != undefined)\r\n\t\t{\r\n\t\t\tresponse.setProperties(props.model!.creationDate,props.model!.id,props.model!.linkTypeId,props.model!.postId,props.model!.relatedPostId);\t\r\n\t\t}\r\n\t\treturn response;\r\n      },\r\n  \r\n    validate: values => {\r\n      let errors:FormikErrors<PostLinkViewModel> = { };\r\n\r\n\t  if(values.creationDate == undefined) {\r\n                errors.creationDate = \"Required\"\r\n                    }if(values.linkTypeId == 0) {\r\n                errors.linkTypeId = \"Required\"\r\n                    }if(values.postId == 0) {\r\n                errors.postId = \"Required\"\r\n                    }if(values.relatedPostId == 0) {\r\n                errors.relatedPostId = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n  \r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n        let mapper = new PostLinkMapper();\r\n\r\n        axios.post(Constants.ApiEndpoint + ApiRoutes.PostLinks,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as CreateResponse<Api.PostLinkClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n    \r\n        }, error => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n    },\r\n    displayName: 'PostLinkCreate', \r\n  })(PostLinkCreateDisplay);\r\n\r\n  interface PostLinkCreateComponentProps\r\n  {\r\n  }\r\n\r\n  interface PostLinkCreateComponentState\r\n  {\r\n      model?:PostLinkViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class PostLinkCreateComponent extends React.Component<PostLinkCreateComponentProps, PostLinkCreateComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t    else if (this.state.errorOccurred) {\r\n             return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PostLinkCreate model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>2cbc71b7059d97a264333e86e94a231a</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport PostLinkMapper from './postLinkMapper';\r\nimport PostLinkViewModel from './postLinkViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: PostLinkViewModel;\r\n}\r\n\r\nconst PostLinkDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(\r\n            ClientRoutes.PostLinks + '/edit/' + model.model!.id\r\n          );\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"creationDate\" className={'col-sm-2 col-form-label'}>\r\n          CreationDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.creationDate)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"linkTypeId\" className={'col-sm-2 col-form-label'}>\r\n          LinkTypeId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.linkTypeId)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"postId\" className={'col-sm-2 col-form-label'}>\r\n          PostId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.postId)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"relatedPostId\" className={'col-sm-2 col-form-label'}>\r\n          RelatedPostId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.relatedPostId)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface PostLinkDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface PostLinkDetailComponentState {\r\n  model?: PostLinkViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PostLinkDetailComponent extends React.Component<\r\n  PostLinkDetailComponentProps,\r\n  PostLinkDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.PostLinks +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.PostLinkClientResponseModel;\r\n\r\n          let mapper = new PostLinkMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <PostLinkDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>497de60bd26a324f4cc1a6d393aba139</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport PostLinkViewModel from './postLinkViewModel';\r\nimport PostLinkMapper from './postLinkMapper';\r\n\r\ninterface Props {\r\n    model?:PostLinkViewModel\r\n}\r\n\r\n  const PostLinkEditDisplay = (props: FormikProps<PostLinkViewModel>) => {\r\n\r\n   let status = props.status as UpdateResponse<Api.PostLinkClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   { \r\n        let response = '';\r\n        if(props.touched[name as keyof PostLinkViewModel]  && props.errors[name as keyof PostLinkViewModel]) {\r\n            response += props.errors[name as keyof PostLinkViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n    \r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (\r\n\r\n          <form onSubmit={props.handleSubmit} role=\"form\">\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"creationDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"creationDate\" className={errorExistForField(\"creationDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"creationDate\") && <small className=\"text-danger\">{errorsForField(\"creationDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"id\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"id\" className={errorExistForField(\"id\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"id\") && <small className=\"text-danger\">{errorsForField(\"id\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"linkTypeId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LinkTypeId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"linkTypeId\" className={errorExistForField(\"linkTypeId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"linkTypeId\") && <small className=\"text-danger\">{errorsForField(\"linkTypeId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"postId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"postId\" className={errorExistForField(\"postId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"postId\") && <small className=\"text-danger\">{errorsForField(\"postId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"relatedPostId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>RelatedPostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"relatedPostId\" className={errorExistForField(\"relatedPostId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"relatedPostId\") && <small className=\"text-danger\">{errorsForField(\"relatedPostId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>\r\n  );\r\n}\r\n\r\n\r\nconst PostLinkEdit = withFormik<Props, PostLinkViewModel>({\r\n    mapPropsToValues: props => {\r\n        let response = new PostLinkViewModel();\r\n\t\tresponse.setProperties(props.model!.creationDate,props.model!.id,props.model!.linkTypeId,props.model!.postId,props.model!.relatedPostId);\t\r\n\t\treturn response;\r\n      },\r\n  \r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors:FormikErrors<PostLinkViewModel> = { };\r\n\r\n\t  if(values.creationDate == undefined) {\r\n                errors.creationDate = \"Required\"\r\n                    }if(values.id == 0) {\r\n                errors.id = \"Required\"\r\n                    }if(values.linkTypeId == 0) {\r\n                errors.linkTypeId = \"Required\"\r\n                    }if(values.postId == 0) {\r\n                errors.postId = \"Required\"\r\n                    }if(values.relatedPostId == 0) {\r\n                errors.relatedPostId = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n\t\t  \r\n\t    let mapper = new PostLinkMapper();\r\n\r\n        axios.put(Constants.ApiEndpoint + ApiRoutes.PostLinks +'/' + values.id,\r\n           \r\n\t    mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as UpdateResponse<Api.PostLinkClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n        }, \r\n\t\terror => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n        .then(response =>\r\n        {\r\n            // cleanup\r\n        })\r\n    },\r\n  \r\n    displayName: 'PostLinkEdit', \r\n  })(PostLinkEditDisplay);\r\n\r\n \r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n\r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n  \r\n  interface PostLinkEditComponentProps\r\n  {\r\n     match:IMatch;\r\n  }\r\n\r\n  interface PostLinkEditComponentState\r\n  {\r\n      model?:PostLinkViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class PostLinkEditComponent extends React.Component<PostLinkEditComponentProps, PostLinkEditComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.PostLinks + '/' + this.props.match.params.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.PostLinkClientResponseModel;\r\n            \r\n            console.log(response);\r\n\r\n\t\t\tlet mapper = new PostLinkMapper();\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, \r\n\t\terror => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n        else if (this.state.errorOccurred) {\r\n\t\t\treturn <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PostLinkEdit model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>179f146454c0bfab096a8a9f770df7cd</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PostLinkMapper from './postLinkMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport ReactTable from 'react-table';\r\nimport PostLinkViewModel from './postLinkViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface PostLinkSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface PostLinkSearchComponentState {\r\n  records: Array<PostLinkViewModel>;\r\n  filteredRecords: Array<PostLinkViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class PostLinkSearchComponent extends React.Component<\r\n  PostLinkSearchComponentProps,\r\n  PostLinkSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<PostLinkViewModel>(),\r\n    filteredRecords: new Array<PostLinkViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.PostLinkClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.PostLinks + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.PostLinkClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.PostLinks + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.PostLinks + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.PostLinkClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.PostLinks + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint =\r\n      Constants.ApiEndpoint + ApiRoutes.PostLinks + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.PostLinkClientResponseModel>;\r\n          let viewModels: Array<PostLinkViewModel> = [];\r\n          let mapper = new PostLinkMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<PostLinkViewModel>(),\r\n            filteredRecords: new Array<PostLinkViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'PostLink',\r\n                columns: [\r\n                  {\r\n                    Header: 'CreationDate',\r\n                    accessor: 'creationDate',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.creationDate)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'LinkTypeId',\r\n                    accessor: 'linkTypeId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.linkTypeId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'PostId',\r\n                    accessor: 'postId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.postId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'RelatedPostId',\r\n                    accessor: 'relatedPostId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.relatedPostId)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.PostLinkClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.PostLinkClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.PostLinkClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>c661f7d04eed9cbfe98dbb6b8fa098b8</Hash>\r\n</Codenesium>*/","export default class PostViewModel {\r\n    acceptedAnswerId:any;\r\nanswerCount:any;\r\nbody:string;\r\nclosedDate:any;\r\ncommentCount:any;\r\ncommunityOwnedDate:any;\r\ncreationDate:any;\r\nfavoriteCount:any;\r\nid:number;\r\nlastActivityDate:any;\r\nlastEditDate:any;\r\nlastEditorDisplayName:string;\r\nlastEditorUserId:any;\r\nownerUserId:any;\r\nparentId:any;\r\npostTypeId:number;\r\nscore:number;\r\ntag:string;\r\ntitle:string;\r\nviewCount:number;\r\n\r\n    constructor() {\r\n\t\tthis.acceptedAnswerId = undefined;\r\nthis.answerCount = undefined;\r\nthis.body = '';\r\nthis.closedDate = undefined;\r\nthis.commentCount = undefined;\r\nthis.communityOwnedDate = undefined;\r\nthis.creationDate = undefined;\r\nthis.favoriteCount = undefined;\r\nthis.id = 0;\r\nthis.lastActivityDate = undefined;\r\nthis.lastEditDate = undefined;\r\nthis.lastEditorDisplayName = '';\r\nthis.lastEditorUserId = undefined;\r\nthis.ownerUserId = undefined;\r\nthis.parentId = undefined;\r\nthis.postTypeId = 0;\r\nthis.score = 0;\r\nthis.tag = '';\r\nthis.title = '';\r\nthis.viewCount = 0;\r\n\r\n    }\r\n\r\n\tsetProperties(acceptedAnswerId : any,answerCount : any,body : string,closedDate : any,commentCount : any,communityOwnedDate : any,creationDate : any,favoriteCount : any,id : number,lastActivityDate : any,lastEditDate : any,lastEditorDisplayName : string,lastEditorUserId : any,ownerUserId : any,parentId : any,postTypeId : number,score : number,tag : string,title : string,viewCount : number) : void\r\n\t{\r\n\t\tthis.acceptedAnswerId = acceptedAnswerId;\r\nthis.answerCount = answerCount;\r\nthis.body = body;\r\nthis.closedDate = closedDate;\r\nthis.commentCount = commentCount;\r\nthis.communityOwnedDate = communityOwnedDate;\r\nthis.creationDate = creationDate;\r\nthis.favoriteCount = favoriteCount;\r\nthis.id = id;\r\nthis.lastActivityDate = lastActivityDate;\r\nthis.lastEditDate = lastEditDate;\r\nthis.lastEditorDisplayName = lastEditorDisplayName;\r\nthis.lastEditorUserId = lastEditorUserId;\r\nthis.ownerUserId = ownerUserId;\r\nthis.parentId = parentId;\r\nthis.postTypeId = postTypeId;\r\nthis.score = score;\r\nthis.tag = tag;\r\nthis.title = title;\r\nthis.viewCount = viewCount;\r\n\r\n\t}\r\n\r\n\ttoDisplay() : string\r\n\t{\r\n\t\treturn String();\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>b080c0911b930490be4d4f9caf2a8c9b</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PostViewModel from  './postViewModel';\r\nexport default class PostMapper {\r\n    \r\n\tmapApiResponseToViewModel(dto: Api.PostClientResponseModel) : PostViewModel \r\n\t{\r\n\t\tlet response = new PostViewModel();\r\n\t\tresponse.setProperties(dto.acceptedAnswerId,dto.answerCount,dto.body,dto.closedDate,dto.commentCount,dto.communityOwnedDate,dto.creationDate,dto.favoriteCount,dto.id,dto.lastActivityDate,dto.lastEditDate,dto.lastEditorDisplayName,dto.lastEditorUserId,dto.ownerUserId,dto.parentId,dto.postTypeId,dto.score,dto.tag,dto.title,dto.viewCount);\r\n\t\t\r\n\t\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tmapViewModelToApiRequest(model: PostViewModel) : Api.PostClientRequestModel\r\n\t{\r\n\t\tlet response = new Api.PostClientRequestModel();\r\n\t\tresponse.setProperties(model.acceptedAnswerId,model.answerCount,model.body,model.closedDate,model.commentCount,model.communityOwnedDate,model.creationDate,model.favoriteCount,model.id,model.lastActivityDate,model.lastEditDate,model.lastEditorDisplayName,model.lastEditorUserId,model.ownerUserId,model.parentId,model.postTypeId,model.score,model.tag,model.title,model.viewCount);\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>0ef3915c6564087a1b9d3045df3ce319</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects'\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport PostMapper from './postMapper';\r\nimport PostViewModel from './postViewModel';\r\n\r\ninterface Props {\r\n    model?:PostViewModel\r\n}\r\n\r\n   const PostCreateDisplay: React.SFC<FormikProps<PostViewModel>> = (props: FormikProps<PostViewModel>) => {\r\n\r\n   let status = props.status as CreateResponse<Api.PostClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   {\r\n        let response = '';\r\n        if(props.touched[name as keyof PostViewModel]  && props.errors[name as keyof PostViewModel]) {\r\n            response += props.errors[name as keyof PostViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (<form onSubmit={props.handleSubmit} role=\"form\">            \r\n            \t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"acceptedAnswerId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>AcceptedAnswerId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"acceptedAnswerId\" className={errorExistForField(\"acceptedAnswerId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"acceptedAnswerId\") && <small className=\"text-danger\">{errorsForField(\"acceptedAnswerId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"answerCount\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>AnswerCount</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"answerCount\" className={errorExistForField(\"answerCount\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"answerCount\") && <small className=\"text-danger\">{errorsForField(\"answerCount\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"body\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Body</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"body\" className={errorExistForField(\"body\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"body\") && <small className=\"text-danger\">{errorsForField(\"body\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"closedDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>ClosedDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"closedDate\" className={errorExistForField(\"closedDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"closedDate\") && <small className=\"text-danger\">{errorsForField(\"closedDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"commentCount\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CommentCount</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"commentCount\" className={errorExistForField(\"commentCount\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"commentCount\") && <small className=\"text-danger\">{errorsForField(\"commentCount\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"communityOwnedDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CommunityOwnedDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"communityOwnedDate\" className={errorExistForField(\"communityOwnedDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"communityOwnedDate\") && <small className=\"text-danger\">{errorsForField(\"communityOwnedDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"creationDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"creationDate\" className={errorExistForField(\"creationDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"creationDate\") && <small className=\"text-danger\">{errorsForField(\"creationDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"favoriteCount\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>FavoriteCount</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"favoriteCount\" className={errorExistForField(\"favoriteCount\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"favoriteCount\") && <small className=\"text-danger\">{errorsForField(\"favoriteCount\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"lastActivityDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LastActivityDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"lastActivityDate\" className={errorExistForField(\"lastActivityDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"lastActivityDate\") && <small className=\"text-danger\">{errorsForField(\"lastActivityDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"lastEditDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LastEditDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"lastEditDate\" className={errorExistForField(\"lastEditDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"lastEditDate\") && <small className=\"text-danger\">{errorsForField(\"lastEditDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"lastEditorDisplayName\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LastEditorDisplayName</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"lastEditorDisplayName\" className={errorExistForField(\"lastEditorDisplayName\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"lastEditorDisplayName\") && <small className=\"text-danger\">{errorsForField(\"lastEditorDisplayName\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"lastEditorUserId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LastEditorUserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"lastEditorUserId\" className={errorExistForField(\"lastEditorUserId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"lastEditorUserId\") && <small className=\"text-danger\">{errorsForField(\"lastEditorUserId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"ownerUserId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>OwnerUserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"ownerUserId\" className={errorExistForField(\"ownerUserId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"ownerUserId\") && <small className=\"text-danger\">{errorsForField(\"ownerUserId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"parentId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>ParentId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"parentId\" className={errorExistForField(\"parentId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"parentId\") && <small className=\"text-danger\">{errorsForField(\"parentId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"postTypeId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PostTypeId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"postTypeId\" className={errorExistForField(\"postTypeId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"postTypeId\") && <small className=\"text-danger\">{errorsForField(\"postTypeId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"score\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Score</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"score\" className={errorExistForField(\"score\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"score\") && <small className=\"text-danger\">{errorsForField(\"score\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"tag\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Tags</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"tag\" className={errorExistForField(\"tag\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"tag\") && <small className=\"text-danger\">{errorsForField(\"tag\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"title\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Title</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"title\" className={errorExistForField(\"title\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"title\") && <small className=\"text-danger\">{errorsForField(\"title\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"viewCount\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>ViewCount</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"viewCount\" className={errorExistForField(\"viewCount\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"viewCount\") && <small className=\"text-danger\">{errorsForField(\"viewCount\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>);\r\n}\r\n\r\n\r\nconst PostCreate = withFormik<Props, PostViewModel>({\r\n    mapPropsToValues: props => {\r\n                \r\n\t\tlet response = new PostViewModel();\r\n\t\tif (props.model != undefined)\r\n\t\t{\r\n\t\t\tresponse.setProperties(props.model!.acceptedAnswerId,props.model!.answerCount,props.model!.body,props.model!.closedDate,props.model!.commentCount,props.model!.communityOwnedDate,props.model!.creationDate,props.model!.favoriteCount,props.model!.id,props.model!.lastActivityDate,props.model!.lastEditDate,props.model!.lastEditorDisplayName,props.model!.lastEditorUserId,props.model!.ownerUserId,props.model!.parentId,props.model!.postTypeId,props.model!.score,props.model!.tag,props.model!.title,props.model!.viewCount);\t\r\n\t\t}\r\n\t\treturn response;\r\n      },\r\n  \r\n    validate: values => {\r\n      let errors:FormikErrors<PostViewModel> = { };\r\n\r\n\t  if(values.body == '') {\r\n                errors.body = \"Required\"\r\n                    }if(values.creationDate == undefined) {\r\n                errors.creationDate = \"Required\"\r\n                    }if(values.lastActivityDate == undefined) {\r\n                errors.lastActivityDate = \"Required\"\r\n                    }if(values.postTypeId == 0) {\r\n                errors.postTypeId = \"Required\"\r\n                    }if(values.score == 0) {\r\n                errors.score = \"Required\"\r\n                    }if(values.viewCount == 0) {\r\n                errors.viewCount = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n  \r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n        let mapper = new PostMapper();\r\n\r\n        axios.post(Constants.ApiEndpoint + ApiRoutes.Posts,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as CreateResponse<Api.PostClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n    \r\n        }, error => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n    },\r\n    displayName: 'PostCreate', \r\n  })(PostCreateDisplay);\r\n\r\n  interface PostCreateComponentProps\r\n  {\r\n  }\r\n\r\n  interface PostCreateComponentState\r\n  {\r\n      model?:PostViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class PostCreateComponent extends React.Component<PostCreateComponentProps, PostCreateComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t    else if (this.state.errorOccurred) {\r\n             return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PostCreate model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>6b2dc1ee258ef6bf58f06a502f471748</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport PostMapper from './postMapper';\r\nimport PostViewModel from './postViewModel';\r\n\r\ninterface Props {\r\n\thistory:any;\r\n    model?:PostViewModel\r\n}\r\n\r\nconst PostDetailDisplay = (model:Props) => {\r\n\r\n   return (\r\n          <form  role=\"form\">\r\n\t\t\t\t<button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n                  onClick={(e) => { model.history.push(ClientRoutes.Posts + '/edit/' + model.model!.id)}}\r\n                >\r\n                  <i className=\"fas fa-edit\" />\r\n                </button>\r\n\t\t\t \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"acceptedAnswerId\" className={\"col-sm-2 col-form-label\"}>AcceptedAnswerId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.acceptedAnswerId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"answerCount\" className={\"col-sm-2 col-form-label\"}>AnswerCount</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.answerCount)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"body\" className={\"col-sm-2 col-form-label\"}>Body</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.body)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"closedDate\" className={\"col-sm-2 col-form-label\"}>ClosedDate</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.closedDate)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"commentCount\" className={\"col-sm-2 col-form-label\"}>CommentCount</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.commentCount)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"communityOwnedDate\" className={\"col-sm-2 col-form-label\"}>CommunityOwnedDate</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.communityOwnedDate)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"creationDate\" className={\"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.creationDate)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"favoriteCount\" className={\"col-sm-2 col-form-label\"}>FavoriteCount</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.favoriteCount)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"id\" className={\"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.id)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"lastActivityDate\" className={\"col-sm-2 col-form-label\"}>LastActivityDate</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.lastActivityDate)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"lastEditDate\" className={\"col-sm-2 col-form-label\"}>LastEditDate</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.lastEditDate)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"lastEditorDisplayName\" className={\"col-sm-2 col-form-label\"}>LastEditorDisplayName</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.lastEditorDisplayName)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"lastEditorUserId\" className={\"col-sm-2 col-form-label\"}>LastEditorUserId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.lastEditorUserId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"ownerUserId\" className={\"col-sm-2 col-form-label\"}>OwnerUserId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.ownerUserId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"parentId\" className={\"col-sm-2 col-form-label\"}>ParentId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.parentId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"postTypeId\" className={\"col-sm-2 col-form-label\"}>PostTypeId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.postTypeId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"score\" className={\"col-sm-2 col-form-label\"}>Score</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.score)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"tag\" className={\"col-sm-2 col-form-label\"}>Tags</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.tag)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"title\" className={\"col-sm-2 col-form-label\"}>Title</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.title)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"viewCount\" className={\"col-sm-2 col-form-label\"}>ViewCount</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.viewCount)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t             </form>\r\n  );\r\n}\r\n\r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n  \r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n\r\n  interface PostDetailComponentProps\r\n  {\r\n     match:IMatch;\r\n\t history:any;\r\n  }\r\n\r\n  interface PostDetailComponentState\r\n  {\r\n      model?:PostViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n\r\n  export default class PostDetailComponent extends React.Component<PostDetailComponentProps, PostDetailComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.Posts + '/' + this.props.match.params.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.PostClientResponseModel;\r\n            \r\n\t\t\tlet mapper = new PostMapper();\r\n\r\n            console.log(response);\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if (this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PostDetailDisplay history={this.props.history} model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>d6ce331721f2809a27731eb80344b57c</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport PostViewModel from './postViewModel';\r\nimport PostMapper from './postMapper';\r\n\r\ninterface Props {\r\n    model?:PostViewModel\r\n}\r\n\r\n  const PostEditDisplay = (props: FormikProps<PostViewModel>) => {\r\n\r\n   let status = props.status as UpdateResponse<Api.PostClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   { \r\n        let response = '';\r\n        if(props.touched[name as keyof PostViewModel]  && props.errors[name as keyof PostViewModel]) {\r\n            response += props.errors[name as keyof PostViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n    \r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (\r\n\r\n          <form onSubmit={props.handleSubmit} role=\"form\">\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"acceptedAnswerId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>AcceptedAnswerId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"acceptedAnswerId\" className={errorExistForField(\"acceptedAnswerId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"acceptedAnswerId\") && <small className=\"text-danger\">{errorsForField(\"acceptedAnswerId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"answerCount\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>AnswerCount</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"answerCount\" className={errorExistForField(\"answerCount\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"answerCount\") && <small className=\"text-danger\">{errorsForField(\"answerCount\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"body\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Body</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"body\" className={errorExistForField(\"body\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"body\") && <small className=\"text-danger\">{errorsForField(\"body\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"closedDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>ClosedDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"closedDate\" className={errorExistForField(\"closedDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"closedDate\") && <small className=\"text-danger\">{errorsForField(\"closedDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"commentCount\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CommentCount</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"commentCount\" className={errorExistForField(\"commentCount\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"commentCount\") && <small className=\"text-danger\">{errorsForField(\"commentCount\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"communityOwnedDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CommunityOwnedDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"communityOwnedDate\" className={errorExistForField(\"communityOwnedDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"communityOwnedDate\") && <small className=\"text-danger\">{errorsForField(\"communityOwnedDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"creationDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"creationDate\" className={errorExistForField(\"creationDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"creationDate\") && <small className=\"text-danger\">{errorsForField(\"creationDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"favoriteCount\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>FavoriteCount</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"favoriteCount\" className={errorExistForField(\"favoriteCount\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"favoriteCount\") && <small className=\"text-danger\">{errorsForField(\"favoriteCount\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"id\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"id\" className={errorExistForField(\"id\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"id\") && <small className=\"text-danger\">{errorsForField(\"id\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"lastActivityDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LastActivityDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"lastActivityDate\" className={errorExistForField(\"lastActivityDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"lastActivityDate\") && <small className=\"text-danger\">{errorsForField(\"lastActivityDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"lastEditDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LastEditDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"lastEditDate\" className={errorExistForField(\"lastEditDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"lastEditDate\") && <small className=\"text-danger\">{errorsForField(\"lastEditDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"lastEditorDisplayName\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LastEditorDisplayName</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"lastEditorDisplayName\" className={errorExistForField(\"lastEditorDisplayName\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"lastEditorDisplayName\") && <small className=\"text-danger\">{errorsForField(\"lastEditorDisplayName\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"lastEditorUserId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LastEditorUserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"lastEditorUserId\" className={errorExistForField(\"lastEditorUserId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"lastEditorUserId\") && <small className=\"text-danger\">{errorsForField(\"lastEditorUserId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"ownerUserId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>OwnerUserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"ownerUserId\" className={errorExistForField(\"ownerUserId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"ownerUserId\") && <small className=\"text-danger\">{errorsForField(\"ownerUserId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"parentId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>ParentId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"parentId\" className={errorExistForField(\"parentId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"parentId\") && <small className=\"text-danger\">{errorsForField(\"parentId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"postTypeId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PostTypeId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"postTypeId\" className={errorExistForField(\"postTypeId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"postTypeId\") && <small className=\"text-danger\">{errorsForField(\"postTypeId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"score\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Score</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"score\" className={errorExistForField(\"score\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"score\") && <small className=\"text-danger\">{errorsForField(\"score\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"tag\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Tags</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"tag\" className={errorExistForField(\"tag\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"tag\") && <small className=\"text-danger\">{errorsForField(\"tag\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"title\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Title</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"title\" className={errorExistForField(\"title\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"title\") && <small className=\"text-danger\">{errorsForField(\"title\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"viewCount\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>ViewCount</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"viewCount\" className={errorExistForField(\"viewCount\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"viewCount\") && <small className=\"text-danger\">{errorsForField(\"viewCount\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>\r\n  );\r\n}\r\n\r\n\r\nconst PostEdit = withFormik<Props, PostViewModel>({\r\n    mapPropsToValues: props => {\r\n        let response = new PostViewModel();\r\n\t\tresponse.setProperties(props.model!.acceptedAnswerId,props.model!.answerCount,props.model!.body,props.model!.closedDate,props.model!.commentCount,props.model!.communityOwnedDate,props.model!.creationDate,props.model!.favoriteCount,props.model!.id,props.model!.lastActivityDate,props.model!.lastEditDate,props.model!.lastEditorDisplayName,props.model!.lastEditorUserId,props.model!.ownerUserId,props.model!.parentId,props.model!.postTypeId,props.model!.score,props.model!.tag,props.model!.title,props.model!.viewCount);\t\r\n\t\treturn response;\r\n      },\r\n  \r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors:FormikErrors<PostViewModel> = { };\r\n\r\n\t  if(values.body == '') {\r\n                errors.body = \"Required\"\r\n                    }if(values.creationDate == undefined) {\r\n                errors.creationDate = \"Required\"\r\n                    }if(values.id == 0) {\r\n                errors.id = \"Required\"\r\n                    }if(values.lastActivityDate == undefined) {\r\n                errors.lastActivityDate = \"Required\"\r\n                    }if(values.postTypeId == 0) {\r\n                errors.postTypeId = \"Required\"\r\n                    }if(values.score == 0) {\r\n                errors.score = \"Required\"\r\n                    }if(values.viewCount == 0) {\r\n                errors.viewCount = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n\t\t  \r\n\t    let mapper = new PostMapper();\r\n\r\n        axios.put(Constants.ApiEndpoint + ApiRoutes.Posts +'/' + values.id,\r\n           \r\n\t    mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as UpdateResponse<Api.PostClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n        }, \r\n\t\terror => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n        .then(response =>\r\n        {\r\n            // cleanup\r\n        })\r\n    },\r\n  \r\n    displayName: 'PostEdit', \r\n  })(PostEditDisplay);\r\n\r\n \r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n\r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n  \r\n  interface PostEditComponentProps\r\n  {\r\n     match:IMatch;\r\n  }\r\n\r\n  interface PostEditComponentState\r\n  {\r\n      model?:PostViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class PostEditComponent extends React.Component<PostEditComponentProps, PostEditComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.Posts + '/' + this.props.match.params.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.PostClientResponseModel;\r\n            \r\n            console.log(response);\r\n\r\n\t\t\tlet mapper = new PostMapper();\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, \r\n\t\terror => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n        else if (this.state.errorOccurred) {\r\n\t\t\treturn <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PostEdit model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>1f53e7b019423171824acbe10b3c0b8b</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PostMapper from './postMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport ReactTable from \"react-table\";\r\nimport PostViewModel from './postViewModel';\r\nimport \"react-table/react-table.css\";\r\n\r\ninterface PostSearchComponentProps\r\n{\r\n    history:any;\r\n}\r\n\r\ninterface PostSearchComponentState\r\n{\r\n    records:Array<PostViewModel>;\r\n    filteredRecords:Array<PostViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class PostSearchComponent extends React.Component<PostSearchComponentProps, PostSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<PostViewModel>(), filteredRecords:new Array<PostViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:Api.PostClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Posts + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:Api.PostClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Posts + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.Posts + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.PostClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.Posts + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Posts + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.PostClientResponseModel>;\r\n\t\t    let viewModels : Array<PostViewModel> = [];\r\n\t\t\tlet mapper = new PostMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<PostViewModel>(),filteredRecords:new Array<PostViewModel>(), loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if(this.state.deleteSubmitted){\r\n                if(this.state.deleteSuccess){\r\n                    errorResponse =<div className=\"alert alert-success\">{this.state.deleteResponse}</div>   \r\n                }\r\n                else {\r\n                    errorResponse = <div className=\"alert alert-danger\">{this.state.deleteResponse}</div>   \r\n                }\r\n            }\r\n            return (\r\n            <div>\r\n                { \r\n                    errorResponse\r\n                }\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <input name=\"search\" className=\"form-control\" placeholder={\"Search\"} value={this.state.searchValue} onChange={e => this.handleSearchChanged(e)}/>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <button className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\" onClick={e => this.handleCreateClick(e)}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'Post',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'AcceptedAnswerId',\r\n                      accessor: 'acceptedAnswerId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.acceptedAnswerId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'AnswerCount',\r\n                      accessor: 'answerCount',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.answerCount)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Body',\r\n                      accessor: 'body',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.body)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'ClosedDate',\r\n                      accessor: 'closedDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.closedDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'CommentCount',\r\n                      accessor: 'commentCount',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.commentCount)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'CommunityOwnedDate',\r\n                      accessor: 'communityOwnedDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.communityOwnedDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'CreationDate',\r\n                      accessor: 'creationDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.creationDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'FavoriteCount',\r\n                      accessor: 'favoriteCount',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.favoriteCount)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'LastActivityDate',\r\n                      accessor: 'lastActivityDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.lastActivityDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'LastEditDate',\r\n                      accessor: 'lastEditDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.lastEditDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'LastEditorDisplayName',\r\n                      accessor: 'lastEditorDisplayName',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.lastEditorDisplayName)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'LastEditorUserId',\r\n                      accessor: 'lastEditorUserId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.lastEditorUserId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'OwnerUserId',\r\n                      accessor: 'ownerUserId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.ownerUserId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'ParentId',\r\n                      accessor: 'parentId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.parentId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'PostTypeId',\r\n                      accessor: 'postTypeId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.postTypeId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Score',\r\n                      accessor: 'score',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.score)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Tags',\r\n                      accessor: 'tag',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.tag)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Title',\r\n                      accessor: 'title',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.title)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'ViewCount',\r\n                      accessor: 'viewCount',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.viewCount)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div><button className=\"btn btn-sm\" onClick={e => {this.handleDetailClick(e, row.original as Api.PostClientResponseModel)}} ><i className=\"fas fa-search\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-primary btn-sm\" onClick={e => {this.handleEditClick(e, row.original as Api.PostClientResponseModel)}} ><i className=\"fas fa-edit\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-danger btn-sm\" onClick={e => {this.handleDeleteClick(e, row.original as Api.PostClientResponseModel)}} ><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>7b1b7c1430fda439411947f13f8a3245</Hash>\r\n</Codenesium>*/","export default class PostTypeViewModel {\r\n  id: number;\r\n  type: string;\r\n\r\n  constructor() {\r\n    this.id = 0;\r\n    this.type = '';\r\n  }\r\n\r\n  setProperties(id: number, type: string): void {\r\n    this.id = id;\r\n    this.type = type;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6aa071792fa320d4a932c28a028d91dd</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport PostTypeViewModel from  './postTypeViewModel';\r\nexport default class PostTypeMapper {\r\n    \r\n\tmapApiResponseToViewModel(dto: Api.PostTypeClientResponseModel) : PostTypeViewModel \r\n\t{\r\n\t\tlet response = new PostTypeViewModel();\r\n\t\tresponse.setProperties(dto.id,dto.type);\r\n\t\t\r\n\t\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tmapViewModelToApiRequest(model: PostTypeViewModel) : Api.PostTypeClientRequestModel\r\n\t{\r\n\t\tlet response = new Api.PostTypeClientRequestModel();\r\n\t\tresponse.setProperties(model.id,model.type);\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>f2595900801698f9ee21fa4ac778a995</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport PostTypeMapper from './postTypeMapper';\r\nimport PostTypeViewModel from './postTypeViewModel';\r\n\r\ninterface Props {\r\n  model?: PostTypeViewModel;\r\n}\r\n\r\nconst PostTypeCreateDisplay: React.SFC<FormikProps<PostTypeViewModel>> = (\r\n  props: FormikProps<PostTypeViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.PostTypeClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof PostTypeViewModel] &&\r\n      props.errors[name as keyof PostTypeViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof PostTypeViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('type')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Type\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"type\"\r\n            className={\r\n              errorExistForField('type')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('type') && (\r\n            <small className=\"text-danger\">{errorsForField('type')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostTypeCreate = withFormik<Props, PostTypeViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new PostTypeViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(props.model!.id, props.model!.type);\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<PostTypeViewModel> = {};\r\n\r\n    if (values.type == '') {\r\n      errors.type = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new PostTypeMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.PostTypes,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.PostTypeClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'PostTypeCreate',\r\n})(PostTypeCreateDisplay);\r\n\r\ninterface PostTypeCreateComponentProps {}\r\n\r\ninterface PostTypeCreateComponentState {\r\n  model?: PostTypeViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class PostTypeCreateComponent extends React.Component<\r\n  PostTypeCreateComponentProps,\r\n  PostTypeCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <PostTypeCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>f1d97f10fc66d27df3afdac9e271b096</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport PostTypeMapper from './postTypeMapper';\r\nimport PostTypeViewModel from './postTypeViewModel';\r\n\r\ninterface Props {\r\n\thistory:any;\r\n    model?:PostTypeViewModel\r\n}\r\n\r\nconst PostTypeDetailDisplay = (model:Props) => {\r\n\r\n   return (\r\n          <form  role=\"form\">\r\n\t\t\t\t<button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n                  onClick={(e) => { model.history.push(ClientRoutes.PostTypes + '/edit/' + model.model!.id)}}\r\n                >\r\n                  <i className=\"fas fa-edit\" />\r\n                </button>\r\n\t\t\t \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"id\" className={\"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.id)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"type\" className={\"col-sm-2 col-form-label\"}>Type</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.type)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t             </form>\r\n  );\r\n}\r\n\r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n  \r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n\r\n  interface PostTypeDetailComponentProps\r\n  {\r\n     match:IMatch;\r\n\t history:any;\r\n  }\r\n\r\n  interface PostTypeDetailComponentState\r\n  {\r\n      model?:PostTypeViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n\r\n  export default class PostTypeDetailComponent extends React.Component<PostTypeDetailComponentProps, PostTypeDetailComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.PostTypes + '/' + this.props.match.params.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.PostTypeClientResponseModel;\r\n            \r\n\t\t\tlet mapper = new PostTypeMapper();\r\n\r\n            console.log(response);\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if (this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PostTypeDetailDisplay history={this.props.history} model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>0e9c02cd9382b872cf1acbd260643526</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport PostTypeViewModel from './postTypeViewModel';\r\nimport PostTypeMapper from './postTypeMapper';\r\n\r\ninterface Props {\r\n    model?:PostTypeViewModel\r\n}\r\n\r\n  const PostTypeEditDisplay = (props: FormikProps<PostTypeViewModel>) => {\r\n\r\n   let status = props.status as UpdateResponse<Api.PostTypeClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   { \r\n        let response = '';\r\n        if(props.touched[name as keyof PostTypeViewModel]  && props.errors[name as keyof PostTypeViewModel]) {\r\n            response += props.errors[name as keyof PostTypeViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n    \r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (\r\n\r\n          <form onSubmit={props.handleSubmit} role=\"form\">\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"id\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"id\" className={errorExistForField(\"id\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"id\") && <small className=\"text-danger\">{errorsForField(\"id\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"type\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Type</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"type\" className={errorExistForField(\"type\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"type\") && <small className=\"text-danger\">{errorsForField(\"type\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>\r\n  );\r\n}\r\n\r\n\r\nconst PostTypeEdit = withFormik<Props, PostTypeViewModel>({\r\n    mapPropsToValues: props => {\r\n        let response = new PostTypeViewModel();\r\n\t\tresponse.setProperties(props.model!.id,props.model!.type);\t\r\n\t\treturn response;\r\n      },\r\n  \r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors:FormikErrors<PostTypeViewModel> = { };\r\n\r\n\t  if(values.id == 0) {\r\n                errors.id = \"Required\"\r\n                    }if(values.type == '') {\r\n                errors.type = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n\t\t  \r\n\t    let mapper = new PostTypeMapper();\r\n\r\n        axios.put(Constants.ApiEndpoint + ApiRoutes.PostTypes +'/' + values.id,\r\n           \r\n\t    mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as UpdateResponse<Api.PostTypeClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n        }, \r\n\t\terror => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n        .then(response =>\r\n        {\r\n            // cleanup\r\n        })\r\n    },\r\n  \r\n    displayName: 'PostTypeEdit', \r\n  })(PostTypeEditDisplay);\r\n\r\n \r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n\r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n  \r\n  interface PostTypeEditComponentProps\r\n  {\r\n     match:IMatch;\r\n  }\r\n\r\n  interface PostTypeEditComponentState\r\n  {\r\n      model?:PostTypeViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class PostTypeEditComponent extends React.Component<PostTypeEditComponentProps, PostTypeEditComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.PostTypes + '/' + this.props.match.params.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.PostTypeClientResponseModel;\r\n            \r\n            console.log(response);\r\n\r\n\t\t\tlet mapper = new PostTypeMapper();\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, \r\n\t\terror => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n        else if (this.state.errorOccurred) {\r\n\t\t\treturn <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<PostTypeEdit model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>c9148d2844baa7bd64b85a22d0aae7b5</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport PostTypeMapper from './postTypeMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport ReactTable from \"react-table\";\r\nimport PostTypeViewModel from './postTypeViewModel';\r\nimport \"react-table/react-table.css\";\r\n\r\ninterface PostTypeSearchComponentProps\r\n{\r\n    history:any;\r\n}\r\n\r\ninterface PostTypeSearchComponentState\r\n{\r\n    records:Array<PostTypeViewModel>;\r\n    filteredRecords:Array<PostTypeViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class PostTypeSearchComponent extends React.Component<PostTypeSearchComponentProps, PostTypeSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<PostTypeViewModel>(), filteredRecords:new Array<PostTypeViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:Api.PostTypeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.PostTypes + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:Api.PostTypeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.PostTypes + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.PostTypes + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.PostTypeClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.PostTypes + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.PostTypes + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.PostTypeClientResponseModel>;\r\n\t\t    let viewModels : Array<PostTypeViewModel> = [];\r\n\t\t\tlet mapper = new PostTypeMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<PostTypeViewModel>(),filteredRecords:new Array<PostTypeViewModel>(), loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if(this.state.deleteSubmitted){\r\n                if(this.state.deleteSuccess){\r\n                    errorResponse =<div className=\"alert alert-success\">{this.state.deleteResponse}</div>   \r\n                }\r\n                else {\r\n                    errorResponse = <div className=\"alert alert-danger\">{this.state.deleteResponse}</div>   \r\n                }\r\n            }\r\n            return (\r\n            <div>\r\n                { \r\n                    errorResponse\r\n                }\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <input name=\"search\" className=\"form-control\" placeholder={\"Search\"} value={this.state.searchValue} onChange={e => this.handleSearchChanged(e)}/>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <button className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\" onClick={e => this.handleCreateClick(e)}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'PostType',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Type',\r\n                      accessor: 'type',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.type)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div><button className=\"btn btn-sm\" onClick={e => {this.handleDetailClick(e, row.original as Api.PostTypeClientResponseModel)}} ><i className=\"fas fa-search\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-primary btn-sm\" onClick={e => {this.handleEditClick(e, row.original as Api.PostTypeClientResponseModel)}} ><i className=\"fas fa-edit\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-danger btn-sm\" onClick={e => {this.handleDeleteClick(e, row.original as Api.PostTypeClientResponseModel)}} ><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>ffba6c8a0255436ac50a8ccc1fbca3d0</Hash>\r\n</Codenesium>*/","export default class TagViewModel {\r\n  count: number;\r\n  excerptPostId: number;\r\n  id: number;\r\n  tagName: string;\r\n  wikiPostId: number;\r\n\r\n  constructor() {\r\n    this.count = 0;\r\n    this.excerptPostId = 0;\r\n    this.id = 0;\r\n    this.tagName = '';\r\n    this.wikiPostId = 0;\r\n  }\r\n\r\n  setProperties(\r\n    count: number,\r\n    excerptPostId: number,\r\n    id: number,\r\n    tagName: string,\r\n    wikiPostId: number\r\n  ): void {\r\n    this.count = count;\r\n    this.excerptPostId = excerptPostId;\r\n    this.id = id;\r\n    this.tagName = tagName;\r\n    this.wikiPostId = wikiPostId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>6c41374e06f4dc2b9b81ed9151064b93</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport TagViewModel from './tagViewModel';\r\nexport default class TagMapper {\r\n  mapApiResponseToViewModel(dto: Api.TagClientResponseModel): TagViewModel {\r\n    let response = new TagViewModel();\r\n    response.setProperties(\r\n      dto.count,\r\n      dto.excerptPostId,\r\n      dto.id,\r\n      dto.tagName,\r\n      dto.wikiPostId\r\n    );\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: TagViewModel): Api.TagClientRequestModel {\r\n    let response = new Api.TagClientRequestModel();\r\n    response.setProperties(\r\n      model.count,\r\n      model.excerptPostId,\r\n      model.id,\r\n      model.tagName,\r\n      model.wikiPostId\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>a4089f23c8cc60c159d8a548f17a5a49</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport TagMapper from './tagMapper';\r\nimport TagViewModel from './tagViewModel';\r\n\r\ninterface Props {\r\n  model?: TagViewModel;\r\n}\r\n\r\nconst TagCreateDisplay: React.SFC<FormikProps<TagViewModel>> = (\r\n  props: FormikProps<TagViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.TagClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof TagViewModel] &&\r\n      props.errors[name as keyof TagViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof TagViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('count')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Count\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"count\"\r\n            className={\r\n              errorExistForField('count')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('count') && (\r\n            <small className=\"text-danger\">{errorsForField('count')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('excerptPostId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          ExcerptPostId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"excerptPostId\"\r\n            className={\r\n              errorExistForField('excerptPostId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('excerptPostId') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('excerptPostId')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('tagName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          TagName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"tagName\"\r\n            className={\r\n              errorExistForField('tagName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('tagName') && (\r\n            <small className=\"text-danger\">{errorsForField('tagName')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('wikiPostId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          WikiPostId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"wikiPostId\"\r\n            className={\r\n              errorExistForField('wikiPostId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('wikiPostId') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('wikiPostId')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst TagCreate = withFormik<Props, TagViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new TagViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.count,\r\n        props.model!.excerptPostId,\r\n        props.model!.id,\r\n        props.model!.tagName,\r\n        props.model!.wikiPostId\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<TagViewModel> = {};\r\n\r\n    if (values.count == 0) {\r\n      errors.count = 'Required';\r\n    }\r\n    if (values.excerptPostId == 0) {\r\n      errors.excerptPostId = 'Required';\r\n    }\r\n    if (values.tagName == '') {\r\n      errors.tagName = 'Required';\r\n    }\r\n    if (values.wikiPostId == 0) {\r\n      errors.wikiPostId = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new TagMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Tags,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<Api.TagClientRequestModel>;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'TagCreate',\r\n})(TagCreateDisplay);\r\n\r\ninterface TagCreateComponentProps {}\r\n\r\ninterface TagCreateComponentState {\r\n  model?: TagViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class TagCreateComponent extends React.Component<\r\n  TagCreateComponentProps,\r\n  TagCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <TagCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>133c5dcaa9a78d4b07568f712139a890</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport TagMapper from './tagMapper';\r\nimport TagViewModel from './tagViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: TagViewModel;\r\n}\r\n\r\nconst TagDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(ClientRoutes.Tags + '/edit/' + model.model!.id);\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"count\" className={'col-sm-2 col-form-label'}>\r\n          Count\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.count)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"excerptPostId\" className={'col-sm-2 col-form-label'}>\r\n          ExcerptPostId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.excerptPostId)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"tagName\" className={'col-sm-2 col-form-label'}>\r\n          TagName\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.tagName)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"wikiPostId\" className={'col-sm-2 col-form-label'}>\r\n          WikiPostId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.wikiPostId)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface TagDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface TagDetailComponentState {\r\n  model?: TagViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class TagDetailComponent extends React.Component<\r\n  TagDetailComponentProps,\r\n  TagDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Tags +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.TagClientResponseModel;\r\n\r\n          let mapper = new TagMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <TagDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>98e789102e8f32a72626535da934524a</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport TagViewModel from './tagViewModel';\r\nimport TagMapper from './tagMapper';\r\n\r\ninterface Props {\r\n    model?:TagViewModel\r\n}\r\n\r\n  const TagEditDisplay = (props: FormikProps<TagViewModel>) => {\r\n\r\n   let status = props.status as UpdateResponse<Api.TagClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   { \r\n        let response = '';\r\n        if(props.touched[name as keyof TagViewModel]  && props.errors[name as keyof TagViewModel]) {\r\n            response += props.errors[name as keyof TagViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n    \r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (\r\n\r\n          <form onSubmit={props.handleSubmit} role=\"form\">\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"count\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Count</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"count\" className={errorExistForField(\"count\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"count\") && <small className=\"text-danger\">{errorsForField(\"count\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"excerptPostId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>ExcerptPostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"excerptPostId\" className={errorExistForField(\"excerptPostId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"excerptPostId\") && <small className=\"text-danger\">{errorsForField(\"excerptPostId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"id\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"id\" className={errorExistForField(\"id\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"id\") && <small className=\"text-danger\">{errorsForField(\"id\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"tagName\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>TagName</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"tagName\" className={errorExistForField(\"tagName\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"tagName\") && <small className=\"text-danger\">{errorsForField(\"tagName\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"wikiPostId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>WikiPostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"wikiPostId\" className={errorExistForField(\"wikiPostId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"wikiPostId\") && <small className=\"text-danger\">{errorsForField(\"wikiPostId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>\r\n  );\r\n}\r\n\r\n\r\nconst TagEdit = withFormik<Props, TagViewModel>({\r\n    mapPropsToValues: props => {\r\n        let response = new TagViewModel();\r\n\t\tresponse.setProperties(props.model!.count,props.model!.excerptPostId,props.model!.id,props.model!.tagName,props.model!.wikiPostId);\t\r\n\t\treturn response;\r\n      },\r\n  \r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors:FormikErrors<TagViewModel> = { };\r\n\r\n\t  if(values.count == 0) {\r\n                errors.count = \"Required\"\r\n                    }if(values.excerptPostId == 0) {\r\n                errors.excerptPostId = \"Required\"\r\n                    }if(values.id == 0) {\r\n                errors.id = \"Required\"\r\n                    }if(values.tagName == '') {\r\n                errors.tagName = \"Required\"\r\n                    }if(values.wikiPostId == 0) {\r\n                errors.wikiPostId = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n\t\t  \r\n\t    let mapper = new TagMapper();\r\n\r\n        axios.put(Constants.ApiEndpoint + ApiRoutes.Tags +'/' + values.id,\r\n           \r\n\t    mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as UpdateResponse<Api.TagClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n        }, \r\n\t\terror => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n        .then(response =>\r\n        {\r\n            // cleanup\r\n        })\r\n    },\r\n  \r\n    displayName: 'TagEdit', \r\n  })(TagEditDisplay);\r\n\r\n \r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n\r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n  \r\n  interface TagEditComponentProps\r\n  {\r\n     match:IMatch;\r\n  }\r\n\r\n  interface TagEditComponentState\r\n  {\r\n      model?:TagViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class TagEditComponent extends React.Component<TagEditComponentProps, TagEditComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.Tags + '/' + this.props.match.params.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.TagClientResponseModel;\r\n            \r\n            console.log(response);\r\n\r\n\t\t\tlet mapper = new TagMapper();\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, \r\n\t\terror => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n        else if (this.state.errorOccurred) {\r\n\t\t\treturn <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<TagEdit model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>8eca0c563ce71590bc4ac4dfd9d49dde</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport TagMapper from './tagMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport ReactTable from 'react-table';\r\nimport TagViewModel from './tagViewModel';\r\nimport 'react-table/react-table.css';\r\n\r\ninterface TagSearchComponentProps {\r\n  history: any;\r\n}\r\n\r\ninterface TagSearchComponentState {\r\n  records: Array<TagViewModel>;\r\n  filteredRecords: Array<TagViewModel>;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n  searchValue: string;\r\n  deleteSubmitted: boolean;\r\n  deleteSuccess: boolean;\r\n  deleteResponse: string;\r\n}\r\n\r\nexport default class TagSearchComponent extends React.Component<\r\n  TagSearchComponentProps,\r\n  TagSearchComponentState\r\n> {\r\n  state = {\r\n    deleteSubmitted: false,\r\n    deleteSuccess: false,\r\n    deleteResponse: '',\r\n    records: new Array<TagViewModel>(),\r\n    filteredRecords: new Array<TagViewModel>(),\r\n    searchValue: '',\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.loadRecords();\r\n  }\r\n\r\n  handleEditClick(e: any, row: Api.TagClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Tags + '/edit/' + row.id);\r\n  }\r\n\r\n  handleDetailClick(e: any, row: Api.TagClientResponseModel) {\r\n    this.props.history.push(ClientRoutes.Tags + '/' + row.id);\r\n  }\r\n\r\n  handleCreateClick(e: any) {\r\n    this.props.history.push(ClientRoutes.Tags + '/create');\r\n  }\r\n\r\n  handleDeleteClick(e: any, row: Api.TagClientResponseModel) {\r\n    axios\r\n      .delete(Constants.ApiEndpoint + ApiRoutes.Tags + '/' + row.id, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Record deleted',\r\n            deleteSuccess: true,\r\n            deleteSubmitted: true,\r\n          });\r\n          this.loadRecords(this.state.searchValue);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            ...this.state,\r\n            deleteResponse: 'Error deleting record',\r\n            deleteSuccess: false,\r\n            deleteSubmitted: true,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  handleSearchChanged(e: React.FormEvent<HTMLInputElement>) {\r\n    this.loadRecords(e.currentTarget.value);\r\n  }\r\n\r\n  loadRecords(query: string = '') {\r\n    this.setState({ ...this.state, searchValue: query });\r\n    let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Tags + '?limit=100';\r\n\r\n    if (query) {\r\n      searchEndpoint += '&query=' + query;\r\n    }\r\n\r\n    axios\r\n      .get(searchEndpoint, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Array<Api.TagClientResponseModel>;\r\n          let viewModels: Array<TagViewModel> = [];\r\n          let mapper = new TagMapper();\r\n\r\n          response.forEach(x => {\r\n            viewModels.push(mapper.mapApiResponseToViewModel(x));\r\n          });\r\n\r\n          this.setState({\r\n            records: viewModels,\r\n            filteredRecords: viewModels,\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            records: new Array<TagViewModel>(),\r\n            filteredRecords: new Array<TagViewModel>(),\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  filterGrid() {}\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      let errorResponse: JSX.Element = <span />;\r\n\r\n      if (this.state.deleteSubmitted) {\r\n        if (this.state.deleteSuccess) {\r\n          errorResponse = (\r\n            <div className=\"alert alert-success\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        } else {\r\n          errorResponse = (\r\n            <div className=\"alert alert-danger\">\r\n              {this.state.deleteResponse}\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {errorResponse}\r\n          <form>\r\n            <div className=\"form-group row\">\r\n              <div className=\"col-sm-4\" />\r\n              <div className=\"col-sm-4\">\r\n                <input\r\n                  name=\"search\"\r\n                  className=\"form-control\"\r\n                  placeholder={'Search'}\r\n                  value={this.state.searchValue}\r\n                  onChange={e => this.handleSearchChanged(e)}\r\n                />\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\"\r\n                  onClick={e => this.handleCreateClick(e)}\r\n                >\r\n                  <i className=\"fas fa-plus\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n          <ReactTable\r\n            data={this.state.filteredRecords}\r\n            columns={[\r\n              {\r\n                Header: 'Tag',\r\n                columns: [\r\n                  {\r\n                    Header: 'Count',\r\n                    accessor: 'count',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.count)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'ExcerptPostId',\r\n                    accessor: 'excerptPostId',\r\n                    Cell: props => {\r\n                      return (\r\n                        <span>{String(props.original.excerptPostId)}</span>\r\n                      );\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Id',\r\n                    accessor: 'id',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'TagName',\r\n                    accessor: 'tagName',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.tagName)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'WikiPostId',\r\n                    accessor: 'wikiPostId',\r\n                    Cell: props => {\r\n                      return <span>{String(props.original.wikiPostId)}</span>;\r\n                    },\r\n                  },\r\n                  {\r\n                    Header: 'Actions',\r\n                    Cell: row => (\r\n                      <div>\r\n                        <button\r\n                          className=\"btn btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDetailClick(\r\n                              e,\r\n                              row.original as Api.TagClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-search\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleEditClick(\r\n                              e,\r\n                              row.original as Api.TagClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"fas fa-edit\" />\r\n                        </button>\r\n                        &nbsp;\r\n                        <button\r\n                          className=\"btn btn-danger btn-sm\"\r\n                          onClick={e => {\r\n                            this.handleDeleteClick(\r\n                              e,\r\n                              row.original as Api.TagClientResponseModel\r\n                            );\r\n                          }}\r\n                        >\r\n                          <i className=\"far fa-trash-alt\" />\r\n                        </button>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>7af3f19b78430f3f3db0650bd0a6c383</Hash>\r\n</Codenesium>*/","export default class UserViewModel {\r\n  aboutMe: string;\r\n  accountId: any;\r\n  age: any;\r\n  creationDate: any;\r\n  displayName: string;\r\n  downVote: number;\r\n  emailHash: string;\r\n  id: number;\r\n  lastAccessDate: any;\r\n  location: string;\r\n  reputation: number;\r\n  upVote: number;\r\n  view: number;\r\n  websiteUrl: string;\r\n\r\n  constructor() {\r\n    this.aboutMe = '';\r\n    this.accountId = undefined;\r\n    this.age = undefined;\r\n    this.creationDate = undefined;\r\n    this.displayName = '';\r\n    this.downVote = 0;\r\n    this.emailHash = '';\r\n    this.id = 0;\r\n    this.lastAccessDate = undefined;\r\n    this.location = '';\r\n    this.reputation = 0;\r\n    this.upVote = 0;\r\n    this.view = 0;\r\n    this.websiteUrl = '';\r\n  }\r\n\r\n  setProperties(\r\n    aboutMe: string,\r\n    accountId: any,\r\n    age: any,\r\n    creationDate: any,\r\n    displayName: string,\r\n    downVote: number,\r\n    emailHash: string,\r\n    id: number,\r\n    lastAccessDate: any,\r\n    location: string,\r\n    reputation: number,\r\n    upVote: number,\r\n    view: number,\r\n    websiteUrl: string\r\n  ): void {\r\n    this.aboutMe = aboutMe;\r\n    this.accountId = accountId;\r\n    this.age = age;\r\n    this.creationDate = creationDate;\r\n    this.displayName = displayName;\r\n    this.downVote = downVote;\r\n    this.emailHash = emailHash;\r\n    this.id = id;\r\n    this.lastAccessDate = lastAccessDate;\r\n    this.location = location;\r\n    this.reputation = reputation;\r\n    this.upVote = upVote;\r\n    this.view = view;\r\n    this.websiteUrl = websiteUrl;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>3737d3a2fd123b6d1b9cde8b252d25e9</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport UserViewModel from  './userViewModel';\r\nexport default class UserMapper {\r\n    \r\n\tmapApiResponseToViewModel(dto: Api.UserClientResponseModel) : UserViewModel \r\n\t{\r\n\t\tlet response = new UserViewModel();\r\n\t\tresponse.setProperties(dto.aboutMe,dto.accountId,dto.age,dto.creationDate,dto.displayName,dto.downVote,dto.emailHash,dto.id,dto.lastAccessDate,dto.location,dto.reputation,dto.upVote,dto.view,dto.websiteUrl);\r\n\t\t\r\n\t\t\t\t\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn response;\r\n\t}\r\n\r\n\tmapViewModelToApiRequest(model: UserViewModel) : Api.UserClientRequestModel\r\n\t{\r\n\t\tlet response = new Api.UserClientRequestModel();\r\n\t\tresponse.setProperties(model.aboutMe,model.accountId,model.age,model.creationDate,model.displayName,model.downVote,model.emailHash,model.id,model.lastAccessDate,model.location,model.reputation,model.upVote,model.view,model.websiteUrl);\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>569c0386369caafee1bdd0c4de2e993c</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects'\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport UserMapper from './userMapper';\r\nimport UserViewModel from './userViewModel';\r\n\r\ninterface Props {\r\n    model?:UserViewModel\r\n}\r\n\r\n   const UserCreateDisplay: React.SFC<FormikProps<UserViewModel>> = (props: FormikProps<UserViewModel>) => {\r\n\r\n   let status = props.status as CreateResponse<Api.UserClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   {\r\n        let response = '';\r\n        if(props.touched[name as keyof UserViewModel]  && props.errors[name as keyof UserViewModel]) {\r\n            response += props.errors[name as keyof UserViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (<form onSubmit={props.handleSubmit} role=\"form\">            \r\n            \t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"aboutMe\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>AboutMe</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"aboutMe\" className={errorExistForField(\"aboutMe\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"aboutMe\") && <small className=\"text-danger\">{errorsForField(\"aboutMe\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"accountId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>AccountId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"accountId\" className={errorExistForField(\"accountId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"accountId\") && <small className=\"text-danger\">{errorsForField(\"accountId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"age\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Age</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"age\" className={errorExistForField(\"age\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"age\") && <small className=\"text-danger\">{errorsForField(\"age\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"creationDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"creationDate\" className={errorExistForField(\"creationDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"creationDate\") && <small className=\"text-danger\">{errorsForField(\"creationDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"displayName\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>DisplayName</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"displayName\" className={errorExistForField(\"displayName\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"displayName\") && <small className=\"text-danger\">{errorsForField(\"displayName\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"downVote\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>DownVotes</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"downVote\" className={errorExistForField(\"downVote\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"downVote\") && <small className=\"text-danger\">{errorsForField(\"downVote\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"emailHash\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>EmailHash</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"emailHash\" className={errorExistForField(\"emailHash\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"emailHash\") && <small className=\"text-danger\">{errorsForField(\"emailHash\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"lastAccessDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>LastAccessDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"lastAccessDate\" className={errorExistForField(\"lastAccessDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"lastAccessDate\") && <small className=\"text-danger\">{errorsForField(\"lastAccessDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"location\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Location</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"location\" className={errorExistForField(\"location\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"location\") && <small className=\"text-danger\">{errorsForField(\"location\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"reputation\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Reputation</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"reputation\" className={errorExistForField(\"reputation\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"reputation\") && <small className=\"text-danger\">{errorsForField(\"reputation\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"upVote\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>UpVotes</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"upVote\" className={errorExistForField(\"upVote\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"upVote\") && <small className=\"text-danger\">{errorsForField(\"upVote\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"view\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Views</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"view\" className={errorExistForField(\"view\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"view\") && <small className=\"text-danger\">{errorsForField(\"view\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"websiteUrl\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>WebsiteUrl</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"websiteUrl\" className={errorExistForField(\"websiteUrl\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"websiteUrl\") && <small className=\"text-danger\">{errorsForField(\"websiteUrl\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>);\r\n}\r\n\r\n\r\nconst UserCreate = withFormik<Props, UserViewModel>({\r\n    mapPropsToValues: props => {\r\n                \r\n\t\tlet response = new UserViewModel();\r\n\t\tif (props.model != undefined)\r\n\t\t{\r\n\t\t\tresponse.setProperties(props.model!.aboutMe,props.model!.accountId,props.model!.age,props.model!.creationDate,props.model!.displayName,props.model!.downVote,props.model!.emailHash,props.model!.id,props.model!.lastAccessDate,props.model!.location,props.model!.reputation,props.model!.upVote,props.model!.view,props.model!.websiteUrl);\t\r\n\t\t}\r\n\t\treturn response;\r\n      },\r\n  \r\n    validate: values => {\r\n      let errors:FormikErrors<UserViewModel> = { };\r\n\r\n\t  if(values.creationDate == undefined) {\r\n                errors.creationDate = \"Required\"\r\n                    }if(values.displayName == '') {\r\n                errors.displayName = \"Required\"\r\n                    }if(values.downVote == 0) {\r\n                errors.downVote = \"Required\"\r\n                    }if(values.lastAccessDate == undefined) {\r\n                errors.lastAccessDate = \"Required\"\r\n                    }if(values.reputation == 0) {\r\n                errors.reputation = \"Required\"\r\n                    }if(values.upVote == 0) {\r\n                errors.upVote = \"Required\"\r\n                    }if(values.view == 0) {\r\n                errors.view = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n  \r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n        let mapper = new UserMapper();\r\n\r\n        axios.post(Constants.ApiEndpoint + ApiRoutes.Users,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as CreateResponse<Api.UserClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n    \r\n        }, error => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n    },\r\n    displayName: 'UserCreate', \r\n  })(UserCreateDisplay);\r\n\r\n  interface UserCreateComponentProps\r\n  {\r\n  }\r\n\r\n  interface UserCreateComponentState\r\n  {\r\n      model?:UserViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class UserCreateComponent extends React.Component<UserCreateComponentProps, UserCreateComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t    else if (this.state.errorOccurred) {\r\n             return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<UserCreate model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>c11f89da124c2ea7e3f7bcadbba2c17f</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport UserMapper from './userMapper';\r\nimport UserViewModel from './userViewModel';\r\n\r\ninterface Props {\r\n\thistory:any;\r\n    model?:UserViewModel\r\n}\r\n\r\nconst UserDetailDisplay = (model:Props) => {\r\n\r\n   return (\r\n          <form  role=\"form\">\r\n\t\t\t\t<button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n                  onClick={(e) => { model.history.push(ClientRoutes.Users + '/edit/' + model.model!.id)}}\r\n                >\r\n                  <i className=\"fas fa-edit\" />\r\n                </button>\r\n\t\t\t \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"aboutMe\" className={\"col-sm-2 col-form-label\"}>AboutMe</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.aboutMe)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"accountId\" className={\"col-sm-2 col-form-label\"}>AccountId</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.accountId)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"age\" className={\"col-sm-2 col-form-label\"}>Age</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.age)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"creationDate\" className={\"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.creationDate)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"displayName\" className={\"col-sm-2 col-form-label\"}>DisplayName</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.displayName)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"downVote\" className={\"col-sm-2 col-form-label\"}>DownVotes</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.downVote)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"emailHash\" className={\"col-sm-2 col-form-label\"}>EmailHash</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.emailHash)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"id\" className={\"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.id)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"lastAccessDate\" className={\"col-sm-2 col-form-label\"}>LastAccessDate</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.lastAccessDate)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"location\" className={\"col-sm-2 col-form-label\"}>Location</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.location)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"reputation\" className={\"col-sm-2 col-form-label\"}>Reputation</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.reputation)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"upVote\" className={\"col-sm-2 col-form-label\"}>UpVotes</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.upVote)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"view\" className={\"col-sm-2 col-form-label\"}>Views</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.view)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"websiteUrl\" className={\"col-sm-2 col-form-label\"}>WebsiteUrl</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.websiteUrl)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t             </form>\r\n  );\r\n}\r\n\r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n  \r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n\r\n  interface UserDetailComponentProps\r\n  {\r\n     match:IMatch;\r\n\t history:any;\r\n  }\r\n\r\n  interface UserDetailComponentState\r\n  {\r\n      model?:UserViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n\r\n  export default class UserDetailComponent extends React.Component<UserDetailComponentProps, UserDetailComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.Users + '/' + this.props.match.params.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.UserClientResponseModel;\r\n            \r\n\t\t\tlet mapper = new UserMapper();\r\n\r\n            console.log(response);\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if (this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<UserDetailDisplay history={this.props.history} model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>3e935229197b807414852558d0c9d74e</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport UserViewModel from './userViewModel';\r\nimport UserMapper from './userMapper';\r\n\r\ninterface Props {\r\n  model?: UserViewModel;\r\n}\r\n\r\nconst UserEditDisplay = (props: FormikProps<UserViewModel>) => {\r\n  let status = props.status as UpdateResponse<Api.UserClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof UserViewModel] &&\r\n      props.errors[name as keyof UserViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof UserViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('aboutMe')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AboutMe\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"aboutMe\"\r\n            className={\r\n              errorExistForField('aboutMe')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('aboutMe') && (\r\n            <small className=\"text-danger\">{errorsForField('aboutMe')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('accountId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          AccountId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"accountId\"\r\n            className={\r\n              errorExistForField('accountId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('accountId') && (\r\n            <small className=\"text-danger\">{errorsForField('accountId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('age')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Age\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"age\"\r\n            className={\r\n              errorExistForField('age')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('age') && (\r\n            <small className=\"text-danger\">{errorsForField('age')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creationDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreationDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creationDate\"\r\n            className={\r\n              errorExistForField('creationDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creationDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creationDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('displayName')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DisplayName\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"displayName\"\r\n            className={\r\n              errorExistForField('displayName')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('displayName') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('displayName')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('downVote')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          DownVotes\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"downVote\"\r\n            className={\r\n              errorExistForField('downVote')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('downVote') && (\r\n            <small className=\"text-danger\">{errorsForField('downVote')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('emailHash')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          EmailHash\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"emailHash\"\r\n            className={\r\n              errorExistForField('emailHash')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('emailHash') && (\r\n            <small className=\"text-danger\">{errorsForField('emailHash')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('id')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"id\"\r\n            className={\r\n              errorExistForField('id')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('id') && (\r\n            <small className=\"text-danger\">{errorsForField('id')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('lastAccessDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          LastAccessDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"lastAccessDate\"\r\n            className={\r\n              errorExistForField('lastAccessDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('lastAccessDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('lastAccessDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('location')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Location\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"location\"\r\n            className={\r\n              errorExistForField('location')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('location') && (\r\n            <small className=\"text-danger\">{errorsForField('location')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('reputation')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Reputation\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"reputation\"\r\n            className={\r\n              errorExistForField('reputation')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('reputation') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('reputation')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('upVote')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          UpVotes\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"upVote\"\r\n            className={\r\n              errorExistForField('upVote')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('upVote') && (\r\n            <small className=\"text-danger\">{errorsForField('upVote')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('view')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          Views\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"view\"\r\n            className={\r\n              errorExistForField('view')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('view') && (\r\n            <small className=\"text-danger\">{errorsForField('view')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('websiteUrl')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          WebsiteUrl\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"websiteUrl\"\r\n            className={\r\n              errorExistForField('websiteUrl')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('websiteUrl') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('websiteUrl')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst UserEdit = withFormik<Props, UserViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new UserViewModel();\r\n    response.setProperties(\r\n      props.model!.aboutMe,\r\n      props.model!.accountId,\r\n      props.model!.age,\r\n      props.model!.creationDate,\r\n      props.model!.displayName,\r\n      props.model!.downVote,\r\n      props.model!.emailHash,\r\n      props.model!.id,\r\n      props.model!.lastAccessDate,\r\n      props.model!.location,\r\n      props.model!.reputation,\r\n      props.model!.upVote,\r\n      props.model!.view,\r\n      props.model!.websiteUrl\r\n    );\r\n    return response;\r\n  },\r\n\r\n  // Custom sync validation\r\n  validate: values => {\r\n    let errors: FormikErrors<UserViewModel> = {};\r\n\r\n    if (values.creationDate == undefined) {\r\n      errors.creationDate = 'Required';\r\n    }\r\n    if (values.displayName == '') {\r\n      errors.displayName = 'Required';\r\n    }\r\n    if (values.downVote == 0) {\r\n      errors.downVote = 'Required';\r\n    }\r\n    if (values.id == 0) {\r\n      errors.id = 'Required';\r\n    }\r\n    if (values.lastAccessDate == undefined) {\r\n      errors.lastAccessDate = 'Required';\r\n    }\r\n    if (values.reputation == 0) {\r\n      errors.reputation = 'Required';\r\n    }\r\n    if (values.upVote == 0) {\r\n      errors.upVote = 'Required';\r\n    }\r\n    if (values.view == 0) {\r\n      errors.view = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n\r\n    let mapper = new UserMapper();\r\n\r\n    axios\r\n      .put(\r\n        Constants.ApiEndpoint + ApiRoutes.Users + '/' + values.id,\r\n\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as UpdateResponse<\r\n            Api.UserClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      )\r\n      .then(response => {\r\n        // cleanup\r\n      });\r\n  },\r\n\r\n  displayName: 'UserEdit',\r\n})(UserEditDisplay);\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface UserEditComponentProps {\r\n  match: IMatch;\r\n}\r\n\r\ninterface UserEditComponentState {\r\n  model?: UserViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class UserEditComponent extends React.Component<\r\n  UserEditComponentProps,\r\n  UserEditComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Users +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.UserClientResponseModel;\r\n\r\n          console.log(response);\r\n\r\n          let mapper = new UserMapper();\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <UserEdit model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>494104f026fa6b64cbb7becf3e9bea3f</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport UserMapper from './userMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport ReactTable from \"react-table\";\r\nimport UserViewModel from './userViewModel';\r\nimport \"react-table/react-table.css\";\r\n\r\ninterface UserSearchComponentProps\r\n{\r\n    history:any;\r\n}\r\n\r\ninterface UserSearchComponentState\r\n{\r\n    records:Array<UserViewModel>;\r\n    filteredRecords:Array<UserViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class UserSearchComponent extends React.Component<UserSearchComponentProps, UserSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<UserViewModel>(), filteredRecords:new Array<UserViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:Api.UserClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Users + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:Api.UserClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Users + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.Users + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.UserClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.Users + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Users + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.UserClientResponseModel>;\r\n\t\t    let viewModels : Array<UserViewModel> = [];\r\n\t\t\tlet mapper = new UserMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<UserViewModel>(),filteredRecords:new Array<UserViewModel>(), loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if(this.state.deleteSubmitted){\r\n                if(this.state.deleteSuccess){\r\n                    errorResponse =<div className=\"alert alert-success\">{this.state.deleteResponse}</div>   \r\n                }\r\n                else {\r\n                    errorResponse = <div className=\"alert alert-danger\">{this.state.deleteResponse}</div>   \r\n                }\r\n            }\r\n            return (\r\n            <div>\r\n                { \r\n                    errorResponse\r\n                }\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <input name=\"search\" className=\"form-control\" placeholder={\"Search\"} value={this.state.searchValue} onChange={e => this.handleSearchChanged(e)}/>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <button className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\" onClick={e => this.handleCreateClick(e)}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'User',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'AboutMe',\r\n                      accessor: 'aboutMe',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.aboutMe)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'AccountId',\r\n                      accessor: 'accountId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.accountId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Age',\r\n                      accessor: 'age',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.age)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'CreationDate',\r\n                      accessor: 'creationDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.creationDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'DisplayName',\r\n                      accessor: 'displayName',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.displayName)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'DownVotes',\r\n                      accessor: 'downVote',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.downVote)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'EmailHash',\r\n                      accessor: 'emailHash',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.emailHash)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'LastAccessDate',\r\n                      accessor: 'lastAccessDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.lastAccessDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Location',\r\n                      accessor: 'location',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.location)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Reputation',\r\n                      accessor: 'reputation',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.reputation)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'UpVotes',\r\n                      accessor: 'upVote',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.upVote)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Views',\r\n                      accessor: 'view',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.view)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'WebsiteUrl',\r\n                      accessor: 'websiteUrl',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.websiteUrl)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div><button className=\"btn btn-sm\" onClick={e => {this.handleDetailClick(e, row.original as Api.UserClientResponseModel)}} ><i className=\"fas fa-search\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-primary btn-sm\" onClick={e => {this.handleEditClick(e, row.original as Api.UserClientResponseModel)}} ><i className=\"fas fa-edit\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-danger btn-sm\" onClick={e => {this.handleDeleteClick(e, row.original as Api.UserClientResponseModel)}} ><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>11df9a8dc23f1d0d13cee2845c1c788f</Hash>\r\n</Codenesium>*/","export default class VoteViewModel {\r\n  bountyAmount: any;\r\n  creationDate: any;\r\n  id: number;\r\n  postId: number;\r\n  userId: any;\r\n  voteTypeId: number;\r\n\r\n  constructor() {\r\n    this.bountyAmount = undefined;\r\n    this.creationDate = undefined;\r\n    this.id = 0;\r\n    this.postId = 0;\r\n    this.userId = undefined;\r\n    this.voteTypeId = 0;\r\n  }\r\n\r\n  setProperties(\r\n    bountyAmount: any,\r\n    creationDate: any,\r\n    id: number,\r\n    postId: number,\r\n    userId: any,\r\n    voteTypeId: number\r\n  ): void {\r\n    this.bountyAmount = bountyAmount;\r\n    this.creationDate = creationDate;\r\n    this.id = id;\r\n    this.postId = postId;\r\n    this.userId = userId;\r\n    this.voteTypeId = voteTypeId;\r\n  }\r\n\r\n  toDisplay(): string {\r\n    return String();\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>03d49d3461ea474355405bfcd66820b7</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport VoteViewModel from './voteViewModel';\r\nexport default class VoteMapper {\r\n  mapApiResponseToViewModel(dto: Api.VoteClientResponseModel): VoteViewModel {\r\n    let response = new VoteViewModel();\r\n    response.setProperties(\r\n      dto.bountyAmount,\r\n      dto.creationDate,\r\n      dto.id,\r\n      dto.postId,\r\n      dto.userId,\r\n      dto.voteTypeId\r\n    );\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(model: VoteViewModel): Api.VoteClientRequestModel {\r\n    let response = new Api.VoteClientRequestModel();\r\n    response.setProperties(\r\n      model.bountyAmount,\r\n      model.creationDate,\r\n      model.id,\r\n      model.postId,\r\n      model.userId,\r\n      model.voteTypeId\r\n    );\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>bd0296ac3ddd4a4bf6042f495cc0236b</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport VoteMapper from './voteMapper';\r\nimport VoteViewModel from './voteViewModel';\r\n\r\ninterface Props {\r\n  model?: VoteViewModel;\r\n}\r\n\r\nconst VoteCreateDisplay: React.SFC<FormikProps<VoteViewModel>> = (\r\n  props: FormikProps<VoteViewModel>\r\n) => {\r\n  let status = props.status as CreateResponse<Api.VoteClientRequestModel>;\r\n\r\n  let errorsForField = (name: string): string => {\r\n    let response = '';\r\n    if (\r\n      props.touched[name as keyof VoteViewModel] &&\r\n      props.errors[name as keyof VoteViewModel]\r\n    ) {\r\n      response += props.errors[name as keyof VoteViewModel];\r\n    }\r\n\r\n    if (\r\n      status &&\r\n      status.validationErrors &&\r\n      status.validationErrors.find(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )\r\n    ) {\r\n      response += status.validationErrors.filter(\r\n        f => f.propertyName.toLowerCase() == name.toLowerCase()\r\n      )[0].errorMessage;\r\n    }\r\n\r\n    return response;\r\n  };\r\n\r\n  let errorExistForField = (name: string): boolean => {\r\n    return errorsForField(name) != '';\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit} role=\"form\">\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('bountyAmount')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          BountyAmount\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"bountyAmount\"\r\n            className={\r\n              errorExistForField('bountyAmount')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('bountyAmount') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('bountyAmount')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('creationDate')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          CreationDate\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"creationDate\"\r\n            className={\r\n              errorExistForField('creationDate')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('creationDate') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('creationDate')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('postId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          PostId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"postId\"\r\n            className={\r\n              errorExistForField('postId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('postId') && (\r\n            <small className=\"text-danger\">{errorsForField('postId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('userId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          UserId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"userId\"\r\n            className={\r\n              errorExistForField('userId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('userId') && (\r\n            <small className=\"text-danger\">{errorsForField('userId')}</small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"form-group row\">\r\n        <label\r\n          htmlFor=\"name\"\r\n          className={\r\n            errorExistForField('voteTypeId')\r\n              ? 'col-sm-2 col-form-label is-invalid'\r\n              : 'col-sm-2 col-form-label'\r\n          }\r\n        >\r\n          VoteTypeId\r\n        </label>\r\n        <div className=\"col-sm-12\">\r\n          <Field\r\n            type=\"datetime-local\"\r\n            name=\"voteTypeId\"\r\n            className={\r\n              errorExistForField('voteTypeId')\r\n                ? 'form-control is-invalid'\r\n                : 'form-control'\r\n            }\r\n          />\r\n          {errorExistForField('voteTypeId') && (\r\n            <small className=\"text-danger\">\r\n              {errorsForField('voteTypeId')}\r\n            </small>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n        Submit\r\n      </button>\r\n      <br />\r\n      <br />\r\n      {status && status.success ? (\r\n        <div className=\"alert alert-success\">Success</div>\r\n      ) : null}\r\n\r\n      {status && !status.success ? (\r\n        <div className=\"alert alert-danger\">Error occurred</div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst VoteCreate = withFormik<Props, VoteViewModel>({\r\n  mapPropsToValues: props => {\r\n    let response = new VoteViewModel();\r\n    if (props.model != undefined) {\r\n      response.setProperties(\r\n        props.model!.bountyAmount,\r\n        props.model!.creationDate,\r\n        props.model!.id,\r\n        props.model!.postId,\r\n        props.model!.userId,\r\n        props.model!.voteTypeId\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n\r\n  validate: values => {\r\n    let errors: FormikErrors<VoteViewModel> = {};\r\n\r\n    if (values.creationDate == undefined) {\r\n      errors.creationDate = 'Required';\r\n    }\r\n    if (values.postId == 0) {\r\n      errors.postId = 'Required';\r\n    }\r\n    if (values.voteTypeId == 0) {\r\n      errors.voteTypeId = 'Required';\r\n    }\r\n\r\n    return errors;\r\n  },\r\n\r\n  handleSubmit: (values, actions) => {\r\n    actions.setStatus(undefined);\r\n    let mapper = new VoteMapper();\r\n\r\n    axios\r\n      .post(\r\n        Constants.ApiEndpoint + ApiRoutes.Votes,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as CreateResponse<\r\n            Api.VoteClientRequestModel\r\n          >;\r\n          actions.setStatus(response);\r\n          console.log(response);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          actions.setStatus('Error from API');\r\n        }\r\n      );\r\n  },\r\n  displayName: 'VoteCreate',\r\n})(VoteCreateDisplay);\r\n\r\ninterface VoteCreateComponentProps {}\r\n\r\ninterface VoteCreateComponentState {\r\n  model?: VoteViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class VoteCreateComponent extends React.Component<\r\n  VoteCreateComponentProps,\r\n  VoteCreateComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: true,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return <VoteCreate model={this.state.model} />;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>765d1e13611ccf16143d1e774780a5e6</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm';\r\nimport { ErrorForm } from '../../lib/components/errorForm';\r\nimport VoteMapper from './voteMapper';\r\nimport VoteViewModel from './voteViewModel';\r\n\r\ninterface Props {\r\n  history: any;\r\n  model?: VoteViewModel;\r\n}\r\n\r\nconst VoteDetailDisplay = (model: Props) => {\r\n  return (\r\n    <form role=\"form\">\r\n      <button\r\n        className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n        onClick={e => {\r\n          model.history.push(ClientRoutes.Votes + '/edit/' + model.model!.id);\r\n        }}\r\n      >\r\n        <i className=\"fas fa-edit\" />\r\n      </button>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"bountyAmount\" className={'col-sm-2 col-form-label'}>\r\n          BountyAmount\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.bountyAmount)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"creationDate\" className={'col-sm-2 col-form-label'}>\r\n          CreationDate\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.creationDate)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"id\" className={'col-sm-2 col-form-label'}>\r\n          Id\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.id)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"postId\" className={'col-sm-2 col-form-label'}>\r\n          PostId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.postId)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"userId\" className={'col-sm-2 col-form-label'}>\r\n          UserId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.userId)}</div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"voteTypeId\" className={'col-sm-2 col-form-label'}>\r\n          VoteTypeId\r\n        </label>\r\n        <div className=\"col-sm-12\">{String(model.model!.voteTypeId)}</div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\ninterface IParams {\r\n  id: number;\r\n}\r\n\r\ninterface IMatch {\r\n  params: IParams;\r\n}\r\n\r\ninterface VoteDetailComponentProps {\r\n  match: IMatch;\r\n  history: any;\r\n}\r\n\r\ninterface VoteDetailComponentState {\r\n  model?: VoteViewModel;\r\n  loading: boolean;\r\n  loaded: boolean;\r\n  errorOccurred: boolean;\r\n  errorMessage: string;\r\n}\r\n\r\nexport default class VoteDetailComponent extends React.Component<\r\n  VoteDetailComponentProps,\r\n  VoteDetailComponentState\r\n> {\r\n  state = {\r\n    model: undefined,\r\n    loading: false,\r\n    loaded: false,\r\n    errorOccurred: false,\r\n    errorMessage: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ ...this.state, loading: true });\r\n\r\n    axios\r\n      .get(\r\n        Constants.ApiEndpoint +\r\n          ApiRoutes.Votes +\r\n          '/' +\r\n          this.props.match.params.id,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      )\r\n      .then(\r\n        resp => {\r\n          let response = resp.data as Api.VoteClientResponseModel;\r\n\r\n          let mapper = new VoteMapper();\r\n\r\n          console.log(response);\r\n\r\n          this.setState({\r\n            model: mapper.mapApiResponseToViewModel(response),\r\n            loading: false,\r\n            loaded: true,\r\n            errorOccurred: false,\r\n            errorMessage: '',\r\n          });\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.setState({\r\n            model: undefined,\r\n            loading: false,\r\n            loaded: false,\r\n            errorOccurred: true,\r\n            errorMessage: 'Error from API',\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <LoadingForm />;\r\n    } else if (this.state.errorOccurred) {\r\n      return <ErrorForm message={this.state.errorMessage} />;\r\n    } else if (this.state.loaded) {\r\n      return (\r\n        <VoteDetailDisplay\r\n          history={this.props.history}\r\n          model={this.state.model}\r\n        />\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>475f8aad7c59405b05d283282785ea65</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport VoteViewModel from './voteViewModel';\r\nimport VoteMapper from './voteMapper';\r\n\r\ninterface Props {\r\n    model?:VoteViewModel\r\n}\r\n\r\n  const VoteEditDisplay = (props: FormikProps<VoteViewModel>) => {\r\n\r\n   let status = props.status as UpdateResponse<Api.VoteClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   { \r\n        let response = '';\r\n        if(props.touched[name as keyof VoteViewModel]  && props.errors[name as keyof VoteViewModel]) {\r\n            response += props.errors[name as keyof VoteViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n    \r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (\r\n\r\n          <form onSubmit={props.handleSubmit} role=\"form\">\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"bountyAmount\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>BountyAmount</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"bountyAmount\" className={errorExistForField(\"bountyAmount\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"bountyAmount\") && <small className=\"text-danger\">{errorsForField(\"bountyAmount\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"creationDate\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>CreationDate</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"creationDate\" className={errorExistForField(\"creationDate\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"creationDate\") && <small className=\"text-danger\">{errorsForField(\"creationDate\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"id\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"id\" className={errorExistForField(\"id\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"id\") && <small className=\"text-danger\">{errorsForField(\"id\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"postId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>PostId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"postId\" className={errorExistForField(\"postId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"postId\") && <small className=\"text-danger\">{errorsForField(\"postId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"userId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>UserId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"userId\" className={errorExistForField(\"userId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"userId\") && <small className=\"text-danger\">{errorsForField(\"userId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"voteTypeId\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>VoteTypeId</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"voteTypeId\" className={errorExistForField(\"voteTypeId\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"voteTypeId\") && <small className=\"text-danger\">{errorsForField(\"voteTypeId\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>\r\n  );\r\n}\r\n\r\n\r\nconst VoteEdit = withFormik<Props, VoteViewModel>({\r\n    mapPropsToValues: props => {\r\n        let response = new VoteViewModel();\r\n\t\tresponse.setProperties(props.model!.bountyAmount,props.model!.creationDate,props.model!.id,props.model!.postId,props.model!.userId,props.model!.voteTypeId);\t\r\n\t\treturn response;\r\n      },\r\n  \r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors:FormikErrors<VoteViewModel> = { };\r\n\r\n\t  if(values.creationDate == undefined) {\r\n                errors.creationDate = \"Required\"\r\n                    }if(values.id == 0) {\r\n                errors.id = \"Required\"\r\n                    }if(values.postId == 0) {\r\n                errors.postId = \"Required\"\r\n                    }if(values.voteTypeId == 0) {\r\n                errors.voteTypeId = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n\t\t  \r\n\t    let mapper = new VoteMapper();\r\n\r\n        axios.put(Constants.ApiEndpoint + ApiRoutes.Votes +'/' + values.id,\r\n           \r\n\t    mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as UpdateResponse<Api.VoteClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n        }, \r\n\t\terror => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n        .then(response =>\r\n        {\r\n            // cleanup\r\n        })\r\n    },\r\n  \r\n    displayName: 'VoteEdit', \r\n  })(VoteEditDisplay);\r\n\r\n \r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n\r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n  \r\n  interface VoteEditComponentProps\r\n  {\r\n     match:IMatch;\r\n  }\r\n\r\n  interface VoteEditComponentState\r\n  {\r\n      model?:VoteViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class VoteEditComponent extends React.Component<VoteEditComponentProps, VoteEditComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.Votes + '/' + this.props.match.params.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.VoteClientResponseModel;\r\n            \r\n            console.log(response);\r\n\r\n\t\t\tlet mapper = new VoteMapper();\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, \r\n\t\terror => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n        else if (this.state.errorOccurred) {\r\n\t\t\treturn <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<VoteEdit model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>e91f66d0b7520b0636431df2c5c8e439</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport VoteMapper from './voteMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport ReactTable from \"react-table\";\r\nimport VoteViewModel from './voteViewModel';\r\nimport \"react-table/react-table.css\";\r\n\r\ninterface VoteSearchComponentProps\r\n{\r\n    history:any;\r\n}\r\n\r\ninterface VoteSearchComponentState\r\n{\r\n    records:Array<VoteViewModel>;\r\n    filteredRecords:Array<VoteViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class VoteSearchComponent extends React.Component<VoteSearchComponentProps, VoteSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<VoteViewModel>(), filteredRecords:new Array<VoteViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:Api.VoteClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Votes + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:Api.VoteClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.Votes + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.Votes + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.VoteClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.Votes + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.Votes + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.VoteClientResponseModel>;\r\n\t\t    let viewModels : Array<VoteViewModel> = [];\r\n\t\t\tlet mapper = new VoteMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<VoteViewModel>(),filteredRecords:new Array<VoteViewModel>(), loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if(this.state.deleteSubmitted){\r\n                if(this.state.deleteSuccess){\r\n                    errorResponse =<div className=\"alert alert-success\">{this.state.deleteResponse}</div>   \r\n                }\r\n                else {\r\n                    errorResponse = <div className=\"alert alert-danger\">{this.state.deleteResponse}</div>   \r\n                }\r\n            }\r\n            return (\r\n            <div>\r\n                { \r\n                    errorResponse\r\n                }\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <input name=\"search\" className=\"form-control\" placeholder={\"Search\"} value={this.state.searchValue} onChange={e => this.handleSearchChanged(e)}/>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <button className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\" onClick={e => this.handleCreateClick(e)}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'Vote',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'BountyAmount',\r\n                      accessor: 'bountyAmount',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.bountyAmount)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'CreationDate',\r\n                      accessor: 'creationDate',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.creationDate)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'PostId',\r\n                      accessor: 'postId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.postId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'UserId',\r\n                      accessor: 'userId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.userId)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'VoteTypeId',\r\n                      accessor: 'voteTypeId',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.voteTypeId)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div><button className=\"btn btn-sm\" onClick={e => {this.handleDetailClick(e, row.original as Api.VoteClientResponseModel)}} ><i className=\"fas fa-search\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-primary btn-sm\" onClick={e => {this.handleEditClick(e, row.original as Api.VoteClientResponseModel)}} ><i className=\"fas fa-edit\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-danger btn-sm\" onClick={e => {this.handleDeleteClick(e, row.original as Api.VoteClientResponseModel)}} ><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>fce71310a3e7dc5c1bc6792ddf467a31</Hash>\r\n</Codenesium>*/","export default class VoteTypeViewModel {\r\n    id:number;\r\nname:string;\r\n\r\n    constructor() {\r\n\t\tthis.id = 0;\r\nthis.name = '';\r\n\r\n    }\r\n\r\n\tsetProperties(id : number,name : string) : void\r\n\t{\r\n\t\tthis.id = id;\r\nthis.name = name;\r\n\r\n\t}\r\n\r\n\ttoDisplay() : string\r\n\t{\r\n\t\treturn String();\r\n\t}\r\n};\r\n\r\n/*<Codenesium>\r\n    <Hash>9a0c354aed057f2f055627cd2cf301d2</Hash>\r\n</Codenesium>*/","import * as Api from '../../api/models';\r\nimport VoteTypeViewModel from './voteTypeViewModel';\r\nexport default class VoteTypeMapper {\r\n  mapApiResponseToViewModel(\r\n    dto: Api.VoteTypeClientResponseModel\r\n  ): VoteTypeViewModel {\r\n    let response = new VoteTypeViewModel();\r\n    response.setProperties(dto.id, dto.name);\r\n\r\n    return response;\r\n  }\r\n\r\n  mapViewModelToApiRequest(\r\n    model: VoteTypeViewModel\r\n  ): Api.VoteTypeClientRequestModel {\r\n    let response = new Api.VoteTypeClientRequestModel();\r\n    response.setProperties(model.id, model.name);\r\n    return response;\r\n  }\r\n}\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>0986e3d527db7fe1dfd50e0e866a9030</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { CreateResponse } from '../../api/ApiObjects'\r\nimport { FormikProps, FormikErrors, Field, withFormik } from 'formik';\r\nimport * as Yup from 'yup'\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport * as Api from '../../api/models';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport VoteTypeMapper from './voteTypeMapper';\r\nimport VoteTypeViewModel from './voteTypeViewModel';\r\n\r\ninterface Props {\r\n    model?:VoteTypeViewModel\r\n}\r\n\r\n   const VoteTypeCreateDisplay: React.SFC<FormikProps<VoteTypeViewModel>> = (props: FormikProps<VoteTypeViewModel>) => {\r\n\r\n   let status = props.status as CreateResponse<Api.VoteTypeClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   {\r\n        let response = '';\r\n        if(props.touched[name as keyof VoteTypeViewModel]  && props.errors[name as keyof VoteTypeViewModel]) {\r\n            response += props.errors[name as keyof VoteTypeViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (<form onSubmit={props.handleSubmit} role=\"form\">            \r\n            \t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"name\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Name</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"name\" className={errorExistForField(\"name\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"name\") && <small className=\"text-danger\">{errorsForField(\"name\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>);\r\n}\r\n\r\n\r\nconst VoteTypeCreate = withFormik<Props, VoteTypeViewModel>({\r\n    mapPropsToValues: props => {\r\n                \r\n\t\tlet response = new VoteTypeViewModel();\r\n\t\tif (props.model != undefined)\r\n\t\t{\r\n\t\t\tresponse.setProperties(props.model!.id,props.model!.name);\t\r\n\t\t}\r\n\t\treturn response;\r\n      },\r\n  \r\n    validate: values => {\r\n      let errors:FormikErrors<VoteTypeViewModel> = { };\r\n\r\n\t  if(values.name == '') {\r\n                errors.name = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n  \r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n        let mapper = new VoteTypeMapper();\r\n\r\n        axios.post(Constants.ApiEndpoint + ApiRoutes.VoteTypes,\r\n        mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as CreateResponse<Api.VoteTypeClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n    \r\n        }, error => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n    },\r\n    displayName: 'VoteTypeCreate', \r\n  })(VoteTypeCreateDisplay);\r\n\r\n  interface VoteTypeCreateComponentProps\r\n  {\r\n  }\r\n\r\n  interface VoteTypeCreateComponentState\r\n  {\r\n      model?:VoteTypeViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class VoteTypeCreateComponent extends React.Component<VoteTypeCreateComponentProps, VoteTypeCreateComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t    else if (this.state.errorOccurred) {\r\n             return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<VoteTypeCreate model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>6682ff24aee2eb83d89a91a210aaae55</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport VoteTypeMapper from './voteTypeMapper';\r\nimport VoteTypeViewModel from './voteTypeViewModel';\r\n\r\ninterface Props {\r\n\thistory:any;\r\n    model?:VoteTypeViewModel\r\n}\r\n\r\nconst VoteTypeDetailDisplay = (model:Props) => {\r\n\r\n   return (\r\n          <form  role=\"form\">\r\n\t\t\t\t<button\r\n                  className=\"btn btn-primary btn-sm align-middle float-right vertically-center\"\r\n                  onClick={(e) => { model.history.push(ClientRoutes.VoteTypes + '/edit/' + model.model!.id)}}\r\n                >\r\n                  <i className=\"fas fa-edit\" />\r\n                </button>\r\n\t\t\t \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"id\" className={\"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.id)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t   \t\t\t\t\t\t <div className=\"form-group row\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"name\" className={\"col-sm-2 col-form-label\"}>Name</label>\r\n\t\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t\t{String(model.model!.name)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t             </form>\r\n  );\r\n}\r\n\r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n  \r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n\r\n  interface VoteTypeDetailComponentProps\r\n  {\r\n     match:IMatch;\r\n\t history:any;\r\n  }\r\n\r\n  interface VoteTypeDetailComponentState\r\n  {\r\n      model?:VoteTypeViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n\r\n  export default class VoteTypeDetailComponent extends React.Component<VoteTypeDetailComponentProps, VoteTypeDetailComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.VoteTypes + '/' + this.props.match.params.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.VoteTypeClientResponseModel;\r\n            \r\n\t\t\tlet mapper = new VoteTypeMapper();\r\n\r\n            console.log(response);\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if (this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<VoteTypeDetailDisplay history={this.props.history} model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>bd5b8bb0f456f726da2fcea535515f6c</Hash>\r\n</Codenesium>*/","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport * as Api from '../../api/models';\r\nimport { UpdateResponse } from '../../api/ApiObjects'\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { FormikProps,FormikErrors, Field, withFormik } from 'formik';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport VoteTypeViewModel from './voteTypeViewModel';\r\nimport VoteTypeMapper from './voteTypeMapper';\r\n\r\ninterface Props {\r\n    model?:VoteTypeViewModel\r\n}\r\n\r\n  const VoteTypeEditDisplay = (props: FormikProps<VoteTypeViewModel>) => {\r\n\r\n   let status = props.status as UpdateResponse<Api.VoteTypeClientRequestModel>;\r\n   \r\n   let errorsForField = (name:string) : string =>\r\n   { \r\n        let response = '';\r\n        if(props.touched[name as keyof VoteTypeViewModel]  && props.errors[name as keyof VoteTypeViewModel]) {\r\n            response += props.errors[name as keyof VoteTypeViewModel];\r\n        }\r\n\r\n        if(status && status.validationErrors && status.validationErrors.find(f => f.propertyName.toLowerCase() == name.toLowerCase())) {\r\n            response += status.validationErrors.filter(f => f.propertyName.toLowerCase() == name.toLowerCase())[0].errorMessage;\r\n        }\r\n\r\n        return response;\r\n   }\r\n\r\n    \r\n   let errorExistForField = (name:string) : boolean =>\r\n   {\r\n        return errorsForField(name) != '';\r\n   }\r\n\r\n   return (\r\n\r\n          <form onSubmit={props.handleSubmit} role=\"form\">\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"id\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Id</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"id\" className={errorExistForField(\"id\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"id\") && <small className=\"text-danger\">{errorsForField(\"id\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\t\t\t\t<div className=\"form-group row\">\r\n                        <label htmlFor=\"name\" className={errorExistForField(\"name\") ? (\"col-sm-2 col-form-label is-invalid\") : \"col-sm-2 col-form-label\"}>Name</label>\r\n\t\t\t\t\t    <div className=\"col-sm-12\">\r\n                             <Field type=\"datetime-local\" name=\"name\" className={errorExistForField(\"name\") ? \"form-control is-invalid\" : \"form-control\"} />\r\n                            {errorExistForField(\"name\") && <small className=\"text-danger\">{errorsForField(\"name\")}</small>}\r\n                        </div>\r\n                    </div>\r\n\t\t\t\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={false}>\r\n                Submit\r\n            </button>\r\n            <br />\r\n            <br />\r\n            { \r\n                status && status.success ? (<div className=\"alert alert-success\">Success</div>): (null)\r\n            }\r\n                        \r\n            { \r\n                status && !status.success ? (<div className=\"alert alert-danger\">Error occurred</div>): (null)\r\n            }\r\n          </form>\r\n  );\r\n}\r\n\r\n\r\nconst VoteTypeEdit = withFormik<Props, VoteTypeViewModel>({\r\n    mapPropsToValues: props => {\r\n        let response = new VoteTypeViewModel();\r\n\t\tresponse.setProperties(props.model!.id,props.model!.name);\t\r\n\t\treturn response;\r\n      },\r\n  \r\n    // Custom sync validation\r\n    validate: values => {\r\n      let errors:FormikErrors<VoteTypeViewModel> = { };\r\n\r\n\t  if(values.id == 0) {\r\n                errors.id = \"Required\"\r\n                    }if(values.name == '') {\r\n                errors.name = \"Required\"\r\n                    }\r\n\r\n      return errors;\r\n    },\r\n    handleSubmit: (values, actions) => {\r\n        actions.setStatus(undefined);\r\n\t\t  \r\n\t    let mapper = new VoteTypeMapper();\r\n\r\n        axios.put(Constants.ApiEndpoint + ApiRoutes.VoteTypes +'/' + values.id,\r\n           \r\n\t    mapper.mapViewModelToApiRequest(values),\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as UpdateResponse<Api.VoteTypeClientRequestModel>;\r\n            actions.setStatus(response);\r\n            console.log(response);\r\n        }, \r\n\t\terror => {\r\n\t\t    console.log(error);\r\n            actions.setStatus('Error from API');\r\n        })\r\n        .then(response =>\r\n        {\r\n            // cleanup\r\n        })\r\n    },\r\n  \r\n    displayName: 'VoteTypeEdit', \r\n  })(VoteTypeEditDisplay);\r\n\r\n \r\n  interface IParams \r\n  {\r\n     id:number;\r\n  }\r\n\r\n  interface IMatch\r\n  {\r\n     params: IParams;\r\n  }\r\n  \r\n  interface VoteTypeEditComponentProps\r\n  {\r\n     match:IMatch;\r\n  }\r\n\r\n  interface VoteTypeEditComponentState\r\n  {\r\n      model?:VoteTypeViewModel;\r\n      loading:boolean;\r\n      loaded:boolean;\r\n      errorOccurred:boolean;\r\n      errorMessage:string;\r\n  }\r\n\r\n  export default class VoteTypeEditComponent extends React.Component<VoteTypeEditComponentProps, VoteTypeEditComponentState> {\r\n\r\n    state = ({model:undefined, loading:false, loaded:false, errorOccurred:false, errorMessage:''});\r\n\r\n    componentDidMount () {\r\n        this.setState({...this.state,loading:true});\r\n\r\n        axios.get(Constants.ApiEndpoint + ApiRoutes.VoteTypes + '/' + this.props.match.params.id, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            let response = resp.data as Api.VoteTypeClientResponseModel;\r\n            \r\n            console.log(response);\r\n\r\n\t\t\tlet mapper = new VoteTypeMapper();\r\n\r\n            this.setState({model:mapper.mapApiResponseToViewModel(response), loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n        }, \r\n\t\terror => {\r\n            console.log(error);\r\n            this.setState({model:undefined, loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n        })\r\n    }\r\n    render () {\r\n\r\n        if (this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n        else if (this.state.errorOccurred) {\r\n\t\t\treturn <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if (this.state.loaded) {\r\n            return (<VoteTypeEdit model={this.state.model} />);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>1d53901f03d36522f6eb66313225045a</Hash>\r\n</Codenesium>*/","import React, { Component, ReactElement, ReactHTMLElement } from 'react';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as Api from '../../api/models';\r\nimport VoteTypeMapper from './voteTypeMapper';\r\nimport { Constants, ApiRoutes, ClientRoutes } from '../../constants';\r\nimport { LoadingForm } from '../../lib/components/loadingForm'\r\nimport { ErrorForm } from '../../lib/components/errorForm'\r\nimport ReactTable from \"react-table\";\r\nimport VoteTypeViewModel from './voteTypeViewModel';\r\nimport \"react-table/react-table.css\";\r\n\r\ninterface VoteTypeSearchComponentProps\r\n{\r\n    history:any;\r\n}\r\n\r\ninterface VoteTypeSearchComponentState\r\n{\r\n    records:Array<VoteTypeViewModel>;\r\n    filteredRecords:Array<VoteTypeViewModel>;\r\n    loading:boolean;\r\n    loaded:boolean;\r\n    errorOccurred:boolean;\r\n    errorMessage:string;\r\n    searchValue:string;\r\n    deleteSubmitted:boolean;\r\n    deleteSuccess:boolean;\r\n    deleteResponse:string;\r\n}\r\n\r\nexport default class VoteTypeSearchComponent extends React.Component<VoteTypeSearchComponentProps, VoteTypeSearchComponentState> {\r\n\r\n    state = ({deleteSubmitted:false, deleteSuccess:false, deleteResponse:'', records:new Array<VoteTypeViewModel>(), filteredRecords:new Array<VoteTypeViewModel>(), searchValue:'', loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n    \r\n    componentDidMount () {\r\n        this.loadRecords();\r\n    }\r\n\r\n    handleEditClick(e:any, row:Api.VoteTypeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.VoteTypes + '/edit/' + row.id);\r\n    }\r\n\r\n    handleDetailClick(e:any, row:Api.VoteTypeClientResponseModel) {\r\n         this.props.history.push(ClientRoutes.VoteTypes + '/' + row.id);\r\n    }\r\n\r\n    handleCreateClick(e:any) {\r\n        this.props.history.push(ClientRoutes.VoteTypes + '/create');\r\n    }\r\n\r\n    handleDeleteClick(e:any, row:Api.VoteTypeClientResponseModel) {\r\n        axios.delete(Constants.ApiEndpoint + ApiRoutes.VoteTypes + '/' + row.id,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(resp => {\r\n            this.setState({...this.state, deleteResponse:'Record deleted', deleteSuccess:true, deleteSubmitted:true});\r\n            this.loadRecords(this.state.searchValue);\r\n        }, error => {\r\n            console.log(error);\r\n            this.setState({...this.state, deleteResponse:'Error deleting record', deleteSuccess:false, deleteSubmitted:true});\r\n        })\r\n    }\r\n\r\n   handleSearchChanged(e:React.FormEvent<HTMLInputElement>) {\r\n\t\tthis.loadRecords(e.currentTarget.value);\r\n   }\r\n   \r\n   loadRecords(query:string = '') {\r\n\t   this.setState({...this.state, searchValue:query});\r\n\t   let searchEndpoint = Constants.ApiEndpoint + ApiRoutes.VoteTypes + '?limit=100';\r\n\r\n\t   if(query)\r\n\t   {\r\n\t\t   searchEndpoint += '&query=' +  query;\r\n\t   }\r\n\r\n\t   axios.get(searchEndpoint,\r\n\t   {\r\n\t\t   headers: {\r\n\t\t\t   'Content-Type': 'application/json',\r\n\t\t   }\r\n\t   })\r\n\t   .then(resp => {\r\n\t\t    let response = resp.data as Array<Api.VoteTypeClientResponseModel>;\r\n\t\t    let viewModels : Array<VoteTypeViewModel> = [];\r\n\t\t\tlet mapper = new VoteTypeMapper();\r\n\r\n\t\t\tresponse.forEach(x =>\r\n\t\t\t{\r\n\t\t\t\tviewModels.push(mapper.mapApiResponseToViewModel(x));\r\n\t\t\t})\r\n\r\n            this.setState({records:viewModels, filteredRecords:viewModels, loading:false, loaded:true, errorOccurred:false, errorMessage:''});\r\n\r\n\t   }, error => {\r\n\t\t   console.log(error);\r\n\t\t   this.setState({records:new Array<VoteTypeViewModel>(),filteredRecords:new Array<VoteTypeViewModel>(), loading:false, loaded:false, errorOccurred:true, errorMessage:'Error from API'});\r\n\t   })\r\n    }\r\n\r\n    filterGrid() {\r\n\r\n    }\r\n    \r\n    render () {\r\n        if(this.state.loading) {\r\n            return <LoadingForm />;\r\n        } \r\n\t\telse if(this.state.errorOccurred) {\r\n            return <ErrorForm message={this.state.errorMessage} />;\r\n        }\r\n        else if(this.state.loaded) {\r\n\r\n            let errorResponse:JSX.Element = <span></span>;\r\n\r\n            if(this.state.deleteSubmitted){\r\n                if(this.state.deleteSuccess){\r\n                    errorResponse =<div className=\"alert alert-success\">{this.state.deleteResponse}</div>   \r\n                }\r\n                else {\r\n                    errorResponse = <div className=\"alert alert-danger\">{this.state.deleteResponse}</div>   \r\n                }\r\n            }\r\n            return (\r\n            <div>\r\n                { \r\n                    errorResponse\r\n                }\r\n            <form>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-4\">\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <input name=\"search\" className=\"form-control\" placeholder={\"Search\"} value={this.state.searchValue} onChange={e => this.handleSearchChanged(e)}/>\r\n                    </div>\r\n                    <div className=\"col-sm-4\">\r\n                        <button className=\"btn btn-primary btn-sm align-middle float-right vertically-center search-create-button\" onClick={e => this.handleCreateClick(e)}><i className=\"fas fa-plus\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <ReactTable \r\n                data={this.state.filteredRecords}\r\n                columns={[{\r\n                    Header: 'VoteType',\r\n                    columns: [\r\n\t\t\t\t\t  {\r\n                      Header: 'Id',\r\n                      accessor: 'id',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.id)}</span>;\r\n                      }           \r\n                    },  {\r\n                      Header: 'Name',\r\n                      accessor: 'name',\r\n                      Cell: (props) => {\r\n                      return <span>{String(props.original.name)}</span>;\r\n                      }           \r\n                    },\r\n                    {\r\n                        Header: 'Actions',\r\n                        Cell: row => (<div><button className=\"btn btn-sm\" onClick={e => {this.handleDetailClick(e, row.original as Api.VoteTypeClientResponseModel)}} ><i className=\"fas fa-search\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-primary btn-sm\" onClick={e => {this.handleEditClick(e, row.original as Api.VoteTypeClientResponseModel)}} ><i className=\"fas fa-edit\"></i></button>\r\n                        &nbsp;<button className=\"btn btn-danger btn-sm\" onClick={e => {this.handleDeleteClick(e, row.original as Api.VoteTypeClientResponseModel)}} ><i className=\"far fa-trash-alt\"></i></button>\r\n                        </div>)\r\n                    }],\r\n                    \r\n                  }]} />\r\n                  </div>);\r\n        } \r\n\t\telse {\r\n\t\t  return null;\r\n\t\t}\r\n    }\r\n}\r\n\r\n/*<Codenesium>\r\n    <Hash>2caccf2c090aa0515839f56a793214a5</Hash>\r\n</Codenesium>*/","import * as React from 'react';\r\nimport { Route, Switch, match, BrowserRouter } from 'react-router-dom';\r\nimport { App } from './app';\r\nimport Dashboard from './components/dashboard';\r\nimport { Security, ImplicitCallback, SecureRoute } from '@okta/okta-react';\r\nimport BadgeCreateComponent from './components/badge/badgeCreateForm';\r\nimport BadgeDetailComponent from './components/badge/badgeDetailForm';\r\nimport BadgeEditComponent from './components/badge/badgeEditForm';\r\nimport BadgeSearchComponent from './components/badge/badgeSearchForm';\r\nimport CommentCreateComponent from './components/comment/commentCreateForm';\r\nimport CommentDetailComponent from './components/comment/commentDetailForm';\r\nimport CommentEditComponent from './components/comment/commentEditForm';\r\nimport CommentSearchComponent from './components/comment/commentSearchForm';\r\nimport LinkTypeCreateComponent from './components/linkType/linkTypeCreateForm';\r\nimport LinkTypeDetailComponent from './components/linkType/linkTypeDetailForm';\r\nimport LinkTypeEditComponent from './components/linkType/linkTypeEditForm';\r\nimport LinkTypeSearchComponent from './components/linkType/linkTypeSearchForm';\r\nimport PostHistoryCreateComponent from './components/postHistory/postHistoryCreateForm';\r\nimport PostHistoryDetailComponent from './components/postHistory/postHistoryDetailForm';\r\nimport PostHistoryEditComponent from './components/postHistory/postHistoryEditForm';\r\nimport PostHistorySearchComponent from './components/postHistory/postHistorySearchForm';\r\nimport PostHistoryTypeCreateComponent from './components/postHistoryType/postHistoryTypeCreateForm';\r\nimport PostHistoryTypeDetailComponent from './components/postHistoryType/postHistoryTypeDetailForm';\r\nimport PostHistoryTypeEditComponent from './components/postHistoryType/postHistoryTypeEditForm';\r\nimport PostHistoryTypeSearchComponent from './components/postHistoryType/postHistoryTypeSearchForm';\r\nimport PostLinkCreateComponent from './components/postLink/postLinkCreateForm';\r\nimport PostLinkDetailComponent from './components/postLink/postLinkDetailForm';\r\nimport PostLinkEditComponent from './components/postLink/postLinkEditForm';\r\nimport PostLinkSearchComponent from './components/postLink/postLinkSearchForm';\r\nimport PostCreateComponent from './components/post/postCreateForm';\r\nimport PostDetailComponent from './components/post/postDetailForm';\r\nimport PostEditComponent from './components/post/postEditForm';\r\nimport PostSearchComponent from './components/post/postSearchForm';\r\nimport PostTypeCreateComponent from './components/postType/postTypeCreateForm';\r\nimport PostTypeDetailComponent from './components/postType/postTypeDetailForm';\r\nimport PostTypeEditComponent from './components/postType/postTypeEditForm';\r\nimport PostTypeSearchComponent from './components/postType/postTypeSearchForm';\r\nimport TagCreateComponent from './components/tag/tagCreateForm';\r\nimport TagDetailComponent from './components/tag/tagDetailForm';\r\nimport TagEditComponent from './components/tag/tagEditForm';\r\nimport TagSearchComponent from './components/tag/tagSearchForm';\r\nimport UserCreateComponent from './components/user/userCreateForm';\r\nimport UserDetailComponent from './components/user/userDetailForm';\r\nimport UserEditComponent from './components/user/userEditForm';\r\nimport UserSearchComponent from './components/user/userSearchForm';\r\nimport VoteCreateComponent from './components/vote/voteCreateForm';\r\nimport VoteDetailComponent from './components/vote/voteDetailForm';\r\nimport VoteEditComponent from './components/vote/voteEditForm';\r\nimport VoteSearchComponent from './components/vote/voteSearchForm';\r\nimport VoteTypeCreateComponent from './components/voteType/voteTypeCreateForm';\r\nimport VoteTypeDetailComponent from './components/voteType/voteTypeDetailForm';\r\nimport VoteTypeEditComponent from './components/voteType/voteTypeEditForm';\r\nimport VoteTypeSearchComponent from './components/voteType/voteTypeSearchForm';\r\n\r\nconst config = {\r\n  oidc: {\r\n    clientId: '<okta_client_id>',\r\n    issuer: 'https://<okta_application_url>/oauth2/default',\r\n    redirectUri: 'https://<your_public_webserver>/implicit/callback',\r\n    scope: 'openid profile email',\r\n  },\r\n};\r\n\r\nexport const AppRouter: React.StatelessComponent<{}> = () => {\r\n  const query = new URLSearchParams(location.search);\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Security\r\n        issuer={config.oidc.issuer}\r\n        client_id={config.oidc.clientId}\r\n        redirect_uri={config.oidc.redirectUri}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <Route component={App} />\r\n          <SecureRoute\r\n            path=\"/protected\"\r\n            component={() => '<div>secure route</div>'}\r\n          />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/badges/create\" component={BadgeCreateComponent} />\r\n            <Route path=\"/badges/edit/:id\" component={BadgeEditComponent} />\r\n            <Route path=\"/badges/:id\" component={BadgeDetailComponent} />\r\n            <Route path=\"/badges\" component={BadgeSearchComponent} />\r\n            <Route path=\"/comments/create\" component={CommentCreateComponent} />\r\n            <Route path=\"/comments/edit/:id\" component={CommentEditComponent} />\r\n            <Route path=\"/comments/:id\" component={CommentDetailComponent} />\r\n            <Route path=\"/comments\" component={CommentSearchComponent} />\r\n            <Route\r\n              path=\"/linktypes/create\"\r\n              component={LinkTypeCreateComponent}\r\n            />\r\n            <Route\r\n              path=\"/linktypes/edit/:id\"\r\n              component={LinkTypeEditComponent}\r\n            />\r\n            <Route path=\"/linktypes/:id\" component={LinkTypeDetailComponent} />\r\n            <Route path=\"/linktypes\" component={LinkTypeSearchComponent} />\r\n            <Route\r\n              path=\"/posthistories/create\"\r\n              component={PostHistoryCreateComponent}\r\n            />\r\n            <Route\r\n              path=\"/posthistories/edit/:id\"\r\n              component={PostHistoryEditComponent}\r\n            />\r\n            <Route\r\n              path=\"/posthistories/:id\"\r\n              component={PostHistoryDetailComponent}\r\n            />\r\n            <Route\r\n              path=\"/posthistories\"\r\n              component={PostHistorySearchComponent}\r\n            />\r\n            <Route\r\n              path=\"/posthistorytypes/create\"\r\n              component={PostHistoryTypeCreateComponent}\r\n            />\r\n            <Route\r\n              path=\"/posthistorytypes/edit/:id\"\r\n              component={PostHistoryTypeEditComponent}\r\n            />\r\n            <Route\r\n              path=\"/posthistorytypes/:id\"\r\n              component={PostHistoryTypeDetailComponent}\r\n            />\r\n            <Route\r\n              path=\"/posthistorytypes\"\r\n              component={PostHistoryTypeSearchComponent}\r\n            />\r\n            <Route\r\n              path=\"/postlinks/create\"\r\n              component={PostLinkCreateComponent}\r\n            />\r\n            <Route\r\n              path=\"/postlinks/edit/:id\"\r\n              component={PostLinkEditComponent}\r\n            />\r\n            <Route path=\"/postlinks/:id\" component={PostLinkDetailComponent} />\r\n            <Route path=\"/postlinks\" component={PostLinkSearchComponent} />\r\n            <Route path=\"/posts/create\" component={PostCreateComponent} />\r\n            <Route path=\"/posts/edit/:id\" component={PostEditComponent} />\r\n            <Route path=\"/posts/:id\" component={PostDetailComponent} />\r\n            <Route path=\"/posts\" component={PostSearchComponent} />\r\n            <Route\r\n              path=\"/posttypes/create\"\r\n              component={PostTypeCreateComponent}\r\n            />\r\n            <Route\r\n              path=\"/posttypes/edit/:id\"\r\n              component={PostTypeEditComponent}\r\n            />\r\n            <Route path=\"/posttypes/:id\" component={PostTypeDetailComponent} />\r\n            <Route path=\"/posttypes\" component={PostTypeSearchComponent} />\r\n            <Route path=\"/tags/create\" component={TagCreateComponent} />\r\n            <Route path=\"/tags/edit/:id\" component={TagEditComponent} />\r\n            <Route path=\"/tags/:id\" component={TagDetailComponent} />\r\n            <Route path=\"/tags\" component={TagSearchComponent} />\r\n            <Route path=\"/users/create\" component={UserCreateComponent} />\r\n            <Route path=\"/users/edit/:id\" component={UserEditComponent} />\r\n            <Route path=\"/users/:id\" component={UserDetailComponent} />\r\n            <Route path=\"/users\" component={UserSearchComponent} />\r\n            <Route path=\"/votes/create\" component={VoteCreateComponent} />\r\n            <Route path=\"/votes/edit/:id\" component={VoteEditComponent} />\r\n            <Route path=\"/votes/:id\" component={VoteDetailComponent} />\r\n            <Route path=\"/votes\" component={VoteSearchComponent} />\r\n            <Route\r\n              path=\"/votetypes/create\"\r\n              component={VoteTypeCreateComponent}\r\n            />\r\n            <Route\r\n              path=\"/votetypes/edit/:id\"\r\n              component={VoteTypeEditComponent}\r\n            />\r\n            <Route path=\"/votetypes/:id\" component={VoteTypeDetailComponent} />\r\n            <Route path=\"/votetypes\" component={VoteTypeSearchComponent} />\r\n          </Switch>\r\n        </div>\r\n      </Security>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\n\r\n/*<Codenesium>\r\n    <Hash>2037f9b4143b2ad8c1cb45d1056f86f0</Hash>\r\n</Codenesium>*/","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {AppRouter} from './router'\r\n\r\n\r\nReactDOM.render(\r\n       <AppRouter />\r\n, document.getElementById('root'));"],"sourceRoot":""}